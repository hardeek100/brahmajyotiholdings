{"version":3,"file":"static/js/main.0a9e6a87.js","mappings":";wCAYa,IAAIA,EAAGC,EAAQ,IAASC,EAAGD,EAAQ,KAAa,SAASE,EAAEC,GAAG,IAAI,IAAIC,EAAE,yDAAyDD,EAAEE,EAAE,EAAEA,EAAEC,UAAUC,OAAOF,IAAID,GAAG,WAAWI,mBAAmBF,UAAUD,IAAI,MAAM,yBAAyBF,EAAE,WAAWC,EAAE,gHAAgH,CAAC,IAAIK,EAAG,IAAIC,IAAIC,EAAG,CAAC,EAAE,SAASC,EAAGT,EAAEC,GAAGS,EAAGV,EAAEC,GAAGS,EAAGV,EAAE,UAAUC,EAAE,CACxb,SAASS,EAAGV,EAAEC,GAAW,IAARO,EAAGR,GAAGC,EAAMD,EAAE,EAAEA,EAAEC,EAAEG,OAAOJ,IAAIM,EAAGK,IAAIV,EAAED,GAAG,CAC5D,IAAIY,IAAK,qBAAqBC,QAAQ,qBAAqBA,OAAOC,UAAU,qBAAqBD,OAAOC,SAASC,eAAeC,EAAGC,OAAOC,UAAUC,eAAeC,EAAG,8VAA8VC,EACpgB,CAAC,EAAEC,EAAG,CAAC,EACiN,SAASC,EAAEvB,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,GAAGC,KAAKC,gBAAgB,IAAI5B,GAAG,IAAIA,GAAG,IAAIA,EAAE2B,KAAKE,cAAcN,EAAEI,KAAKG,mBAAmBN,EAAEG,KAAKI,gBAAgB9B,EAAE0B,KAAKK,aAAajC,EAAE4B,KAAKM,KAAKjC,EAAE2B,KAAKO,YAAYT,EAAEE,KAAKQ,kBAAkBT,CAAC,CAAC,IAAIU,EAAE,CAAC,EACpb,uIAAuIC,MAAM,KAAKC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,CAAC,gBAAgB,kBAAkB,CAAC,YAAY,SAAS,CAAC,UAAU,OAAO,CAAC,YAAY,eAAeuC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAE,GAAGqC,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,GAAG,MAAK,GAAG,EAAG,IAAG,CAAC,kBAAkB,YAAY,aAAa,SAASuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IAC1e,CAAC,cAAc,4BAA4B,YAAY,iBAAiBD,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,8OAA8OsC,MAAM,KAAKC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IACxb,CAAC,UAAU,WAAW,QAAQ,YAAYD,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,UAAU,YAAYuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,OAAO,OAAO,OAAO,QAAQuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,UAAU,SAASuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IAAG,IAAIC,EAAG,gBAAgB,SAASC,EAAG1C,GAAG,OAAOA,EAAE,GAAG2C,aAAa,CAIxZ,SAASC,EAAG5C,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEY,EAAElB,eAAelB,GAAGoC,EAAEpC,GAAG,MAAQ,OAAOwB,EAAE,IAAIA,EAAES,KAAKV,KAAK,EAAEvB,EAAEG,SAAS,MAAMH,EAAE,IAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,MAP9I,SAAYD,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,OAAOvB,GAAG,qBAAqBA,GADqE,SAAYD,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,OAAOtB,GAAG,IAAIA,EAAEgC,KAAK,OAAM,EAAG,cAAcjC,GAAG,IAAK,WAAW,IAAK,SAAS,OAAM,EAAG,IAAK,UAAU,OAAGuB,IAAc,OAAOtB,GAASA,EAAE2B,gBAAmD,WAAnC7B,EAAEA,EAAEwC,cAAcK,MAAM,EAAE,KAAsB,UAAU7C,GAAE,QAAQ,OAAM,EAAG,CAC/T8C,CAAG9C,EAAEC,EAAEC,EAAEsB,GAAG,OAAM,EAAG,GAAGA,EAAE,OAAM,EAAG,GAAG,OAAOtB,EAAE,OAAOA,EAAEgC,MAAM,KAAK,EAAE,OAAOjC,EAAE,KAAK,EAAE,OAAM,IAAKA,EAAE,KAAK,EAAE,OAAO8C,MAAM9C,GAAG,KAAK,EAAE,OAAO8C,MAAM9C,IAAI,EAAEA,EAAE,OAAM,CAAE,CAOtE+C,CAAG/C,EAAEC,EAAEuB,EAAED,KAAKtB,EAAE,MAAMsB,GAAG,OAAOC,EARxK,SAAYzB,GAAG,QAAGgB,EAAGiC,KAAK3B,EAAGtB,KAAegB,EAAGiC,KAAK5B,EAAGrB,KAAeoB,EAAG8B,KAAKlD,GAAUsB,EAAGtB,IAAG,GAAGqB,EAAGrB,IAAG,GAAS,GAAE,CAQwDmD,CAAGlD,KAAK,OAAOC,EAAEF,EAAEoD,gBAAgBnD,GAAGD,EAAEqD,aAAapD,EAAE,GAAGC,IAAIuB,EAAEO,gBAAgBhC,EAAEyB,EAAEQ,cAAc,OAAO/B,EAAE,IAAIuB,EAAES,MAAQ,GAAGhC,GAAGD,EAAEwB,EAAEK,cAAcN,EAAEC,EAAEM,mBAAmB,OAAO7B,EAAEF,EAAEoD,gBAAgBnD,IAAaC,EAAE,KAAXuB,EAAEA,EAAES,OAAc,IAAIT,IAAG,IAAKvB,EAAE,GAAG,GAAGA,EAAEsB,EAAExB,EAAEsD,eAAe9B,EAAEvB,EAAEC,GAAGF,EAAEqD,aAAapD,EAAEC,KAAI,CAHjd,0jCAA0jCoC,MAAM,KAAKC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAEuD,QAAQd,EACzmCC,GAAIL,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,MAAK,GAAG,EAAG,IAAG,2EAA2EsC,MAAM,KAAKC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAEuD,QAAQd,EAAGC,GAAIL,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,gCAA+B,GAAG,EAAG,IAAG,CAAC,WAAW,WAAW,aAAauC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAEuD,QAAQd,EAAGC,GAAIL,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,wCAAuC,GAAG,EAAG,IAAG,CAAC,WAAW,eAAeuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IACldH,EAAEmB,UAAU,IAAIjC,EAAE,YAAY,GAAE,EAAG,aAAa,gCAA+B,GAAG,GAAI,CAAC,MAAM,OAAO,SAAS,cAAcgB,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IAE5L,IAAIiB,EAAG7D,EAAG8D,mDAAmDC,EAAGC,OAAOC,IAAI,iBAAiBC,EAAGF,OAAOC,IAAI,gBAAgBE,EAAGH,OAAOC,IAAI,kBAAkBG,EAAGJ,OAAOC,IAAI,qBAAqBI,EAAGL,OAAOC,IAAI,kBAAkBK,EAAGN,OAAOC,IAAI,kBAAkBM,EAAGP,OAAOC,IAAI,iBAAiBO,EAAGR,OAAOC,IAAI,qBAAqBQ,EAAGT,OAAOC,IAAI,kBAAkBS,EAAGV,OAAOC,IAAI,uBAAuBU,EAAGX,OAAOC,IAAI,cAAcW,EAAGZ,OAAOC,IAAI,cAAcD,OAAOC,IAAI,eAAeD,OAAOC,IAAI,0BACje,IAAIY,EAAGb,OAAOC,IAAI,mBAAmBD,OAAOC,IAAI,uBAAuBD,OAAOC,IAAI,eAAeD,OAAOC,IAAI,wBAAwB,IAAIa,EAAGd,OAAOe,SAAS,SAASC,EAAG5E,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAwC,oBAAnCA,EAAE0E,GAAI1E,EAAE0E,IAAK1E,EAAE,eAA0CA,EAAE,IAAI,CAAC,IAAoB6E,EAAhBC,EAAE7D,OAAO8D,OAAU,SAASC,EAAGhF,GAAG,QAAG,IAAS6E,EAAG,IAAI,MAAMI,OAAQ,CAAC,MAAM/E,GAAG,IAAID,EAAEC,EAAEgF,MAAMC,OAAOC,MAAM,gBAAgBP,EAAG5E,GAAGA,EAAE,IAAI,EAAE,CAAC,MAAM,KAAK4E,EAAG7E,CAAC,CAAC,IAAIqF,GAAG,EACzb,SAASC,EAAGtF,EAAEC,GAAG,IAAID,GAAGqF,EAAG,MAAM,GAAGA,GAAG,EAAG,IAAInF,EAAE+E,MAAMM,kBAAkBN,MAAMM,uBAAkB,EAAO,IAAI,GAAGtF,EAAE,GAAGA,EAAE,WAAW,MAAMgF,OAAQ,EAAEhE,OAAOuE,eAAevF,EAAEiB,UAAU,QAAQ,CAACuE,IAAI,WAAW,MAAMR,OAAQ,IAAI,kBAAkBS,SAASA,QAAQC,UAAU,CAAC,IAAID,QAAQC,UAAU1F,EAAE,GAAG,CAAC,MAAM2F,GAAG,IAAIpE,EAAEoE,CAAC,CAACF,QAAQC,UAAU3F,EAAE,GAAGC,EAAE,KAAK,CAAC,IAAIA,EAAEgD,MAAM,CAAC,MAAM2C,GAAGpE,EAAEoE,CAAC,CAAC5F,EAAEiD,KAAKhD,EAAEiB,UAAU,KAAK,CAAC,IAAI,MAAM+D,OAAQ,CAAC,MAAMW,GAAGpE,EAAEoE,CAAC,CAAC5F,GAAG,CAAC,CAAC,MAAM4F,GAAG,GAAGA,GAAGpE,GAAG,kBAAkBoE,EAAEV,MAAM,CAAC,IAAI,IAAIzD,EAAEmE,EAAEV,MAAM5C,MAAM,MACnfZ,EAAEF,EAAE0D,MAAM5C,MAAM,MAAMX,EAAEF,EAAErB,OAAO,EAAEyF,EAAEnE,EAAEtB,OAAO,EAAE,GAAGuB,GAAG,GAAGkE,GAAGpE,EAAEE,KAAKD,EAAEmE,IAAIA,IAAI,KAAK,GAAGlE,GAAG,GAAGkE,EAAElE,IAAIkE,IAAI,GAAGpE,EAAEE,KAAKD,EAAEmE,GAAG,CAAC,GAAG,IAAIlE,GAAG,IAAIkE,EAAG,MAAMlE,IAAQ,IAAJkE,GAASpE,EAAEE,KAAKD,EAAEmE,GAAG,CAAC,IAAIC,EAAE,KAAKrE,EAAEE,GAAG4B,QAAQ,WAAW,QAA6F,OAArFvD,EAAE+F,aAAaD,EAAEE,SAAS,iBAAiBF,EAAEA,EAAEvC,QAAQ,cAAcvD,EAAE+F,cAAqBD,CAAC,QAAO,GAAGnE,GAAG,GAAGkE,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQR,GAAG,EAAGJ,MAAMM,kBAAkBrF,CAAC,CAAC,OAAOF,EAAEA,EAAEA,EAAE+F,aAAa/F,EAAEiG,KAAK,IAAIjB,EAAGhF,GAAG,EAAE,CAC9Z,SAASkG,EAAGlG,GAAG,OAAOA,EAAEmG,KAAK,KAAK,EAAE,OAAOnB,EAAGhF,EAAEkC,MAAM,KAAK,GAAG,OAAO8C,EAAG,QAAQ,KAAK,GAAG,OAAOA,EAAG,YAAY,KAAK,GAAG,OAAOA,EAAG,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,OAAOhF,EAAEsF,EAAGtF,EAAEkC,MAAK,GAAM,KAAK,GAAG,OAAOlC,EAAEsF,EAAGtF,EAAEkC,KAAKkE,QAAO,GAAM,KAAK,EAAE,OAAOpG,EAAEsF,EAAGtF,EAAEkC,MAAK,GAAM,QAAQ,MAAM,GAAG,CACxR,SAASmE,EAAGrG,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,oBAAoBA,EAAE,OAAOA,EAAE+F,aAAa/F,EAAEiG,MAAM,KAAK,GAAG,kBAAkBjG,EAAE,OAAOA,EAAE,OAAOA,GAAG,KAAK+D,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,SAAS,KAAKG,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,aAAa,KAAKK,EAAG,MAAM,WAAW,KAAKC,EAAG,MAAM,eAAe,GAAG,kBAAkBtE,EAAE,OAAOA,EAAEsG,UAAU,KAAKnC,EAAG,OAAOnE,EAAE+F,aAAa,WAAW,YAAY,KAAK7B,EAAG,OAAOlE,EAAEuG,SAASR,aAAa,WAAW,YAAY,KAAK3B,EAAG,IAAInE,EAAED,EAAEoG,OAC7Z,OADoapG,EAAEA,EAAE+F,eACnd/F,EAAE,MADieA,EAAEC,EAAE8F,aAClf9F,EAAEgG,MAAM,IAAY,cAAcjG,EAAE,IAAI,cAAqBA,EAAE,KAAKuE,EAAG,OAA6B,QAAtBtE,EAAED,EAAE+F,aAAa,MAAc9F,EAAEoG,EAAGrG,EAAEkC,OAAO,OAAO,KAAKsC,EAAGvE,EAAED,EAAEwG,SAASxG,EAAEA,EAAEyG,MAAM,IAAI,OAAOJ,EAAGrG,EAAEC,GAAG,CAAC,MAAMC,GAAG,EAAE,OAAO,IAAI,CAC3M,SAASwG,EAAG1G,GAAG,IAAIC,EAAED,EAAEkC,KAAK,OAAOlC,EAAEmG,KAAK,KAAK,GAAG,MAAM,QAAQ,KAAK,EAAE,OAAOlG,EAAE8F,aAAa,WAAW,YAAY,KAAK,GAAG,OAAO9F,EAAEsG,SAASR,aAAa,WAAW,YAAY,KAAK,GAAG,MAAM,qBAAqB,KAAK,GAAG,OAAkB/F,GAAXA,EAAEC,EAAEmG,QAAWL,aAAa/F,EAAEiG,MAAM,GAAGhG,EAAE8F,cAAc,KAAK/F,EAAE,cAAcA,EAAE,IAAI,cAAc,KAAK,EAAE,MAAM,WAAW,KAAK,EAAE,OAAOC,EAAE,KAAK,EAAE,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,KAAK,EAAE,MAAM,OAAO,KAAK,GAAG,OAAOoG,EAAGpG,GAAG,KAAK,EAAE,OAAOA,IAAI+D,EAAG,aAAa,OAAO,KAAK,GAAG,MAAM,YACtf,KAAK,GAAG,MAAM,WAAW,KAAK,GAAG,MAAM,QAAQ,KAAK,GAAG,MAAM,WAAW,KAAK,GAAG,MAAM,eAAe,KAAK,GAAG,MAAM,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,GAAG,oBAAoB/D,EAAE,OAAOA,EAAE8F,aAAa9F,EAAEgG,MAAM,KAAK,GAAG,kBAAkBhG,EAAE,OAAOA,EAAE,OAAO,IAAI,CAAC,SAAS0G,EAAG3G,GAAG,cAAcA,GAAG,IAAK,UAAU,IAAK,SAAS,IAAK,SAAS,IAAK,YAAqB,IAAK,SAAS,OAAOA,EAAE,QAAQ,MAAM,GAAG,CACra,SAAS4G,EAAG5G,GAAG,IAAIC,EAAED,EAAEkC,KAAK,OAAOlC,EAAEA,EAAE6G,WAAW,UAAU7G,EAAEwC,gBAAgB,aAAavC,GAAG,UAAUA,EAAE,CAEtF,SAAS6G,EAAG9G,GAAGA,EAAE+G,gBAAgB/G,EAAE+G,cADvD,SAAY/G,GAAG,IAAIC,EAAE2G,EAAG5G,GAAG,UAAU,QAAQE,EAAEe,OAAO+F,yBAAyBhH,EAAEiH,YAAY/F,UAAUjB,GAAGuB,EAAE,GAAGxB,EAAEC,GAAG,IAAID,EAAEmB,eAAelB,IAAI,qBAAqBC,GAAG,oBAAoBA,EAAEgH,KAAK,oBAAoBhH,EAAEuF,IAAI,CAAC,IAAIhE,EAAEvB,EAAEgH,IAAIxF,EAAExB,EAAEuF,IAAiL,OAA7KxE,OAAOuE,eAAexF,EAAEC,EAAE,CAACkH,cAAa,EAAGD,IAAI,WAAW,OAAOzF,EAAEwB,KAAKrB,KAAK,EAAE6D,IAAI,SAASzF,GAAGwB,EAAE,GAAGxB,EAAE0B,EAAEuB,KAAKrB,KAAK5B,EAAE,IAAIiB,OAAOuE,eAAexF,EAAEC,EAAE,CAACmH,WAAWlH,EAAEkH,aAAmB,CAACC,SAAS,WAAW,OAAO7F,CAAC,EAAE8F,SAAS,SAAStH,GAAGwB,EAAE,GAAGxB,CAAC,EAAEuH,aAAa,WAAWvH,EAAE+G,cACxf,YAAY/G,EAAEC,EAAE,EAAE,CAAC,CAAkDuH,CAAGxH,GAAG,CAAC,SAASyH,EAAGzH,GAAG,IAAIA,EAAE,OAAM,EAAG,IAAIC,EAAED,EAAE+G,cAAc,IAAI9G,EAAE,OAAM,EAAG,IAAIC,EAAED,EAAEoH,WAAe7F,EAAE,GAAqD,OAAlDxB,IAAIwB,EAAEoF,EAAG5G,GAAGA,EAAE0H,QAAQ,OAAO,QAAQ1H,EAAE2H,QAAO3H,EAAEwB,KAAatB,IAAGD,EAAEqH,SAAStH,IAAG,EAAM,CAAC,SAAS4H,EAAG5H,GAAwD,GAAG,qBAAxDA,EAAEA,IAAI,qBAAqBc,SAASA,cAAS,IAAkC,OAAO,KAAK,IAAI,OAAOd,EAAE6H,eAAe7H,EAAE8H,IAAI,CAAC,MAAM7H,GAAG,OAAOD,EAAE8H,IAAI,CAAC,CACpa,SAASC,EAAG/H,EAAEC,GAAG,IAAIC,EAAED,EAAEyH,QAAQ,OAAO5C,EAAE,CAAC,EAAE7E,EAAE,CAAC+H,oBAAe,EAAOC,kBAAa,EAAON,WAAM,EAAOD,QAAQ,MAAMxH,EAAEA,EAAEF,EAAEkI,cAAcC,gBAAgB,CAAC,SAASC,EAAGpI,EAAEC,GAAG,IAAIC,EAAE,MAAMD,EAAEgI,aAAa,GAAGhI,EAAEgI,aAAazG,EAAE,MAAMvB,EAAEyH,QAAQzH,EAAEyH,QAAQzH,EAAE+H,eAAe9H,EAAEyG,EAAG,MAAM1G,EAAE0H,MAAM1H,EAAE0H,MAAMzH,GAAGF,EAAEkI,cAAc,CAACC,eAAe3G,EAAE6G,aAAanI,EAAEoI,WAAW,aAAarI,EAAEiC,MAAM,UAAUjC,EAAEiC,KAAK,MAAMjC,EAAEyH,QAAQ,MAAMzH,EAAE0H,MAAM,CAAC,SAASY,EAAGvI,EAAEC,GAAe,OAAZA,EAAEA,EAAEyH,UAAiB9E,EAAG5C,EAAE,UAAUC,GAAE,EAAG,CAC9d,SAASuI,EAAGxI,EAAEC,GAAGsI,EAAGvI,EAAEC,GAAG,IAAIC,EAAEyG,EAAG1G,EAAE0H,OAAOnG,EAAEvB,EAAEiC,KAAK,GAAG,MAAMhC,EAAK,WAAWsB,GAAM,IAAItB,GAAG,KAAKF,EAAE2H,OAAO3H,EAAE2H,OAAOzH,KAAEF,EAAE2H,MAAM,GAAGzH,GAAOF,EAAE2H,QAAQ,GAAGzH,IAAIF,EAAE2H,MAAM,GAAGzH,QAAQ,GAAG,WAAWsB,GAAG,UAAUA,EAA8B,YAA3BxB,EAAEoD,gBAAgB,SAAgBnD,EAAEkB,eAAe,SAASsH,GAAGzI,EAAEC,EAAEiC,KAAKhC,GAAGD,EAAEkB,eAAe,iBAAiBsH,GAAGzI,EAAEC,EAAEiC,KAAKyE,EAAG1G,EAAEgI,eAAe,MAAMhI,EAAEyH,SAAS,MAAMzH,EAAE+H,iBAAiBhI,EAAEgI,iBAAiB/H,EAAE+H,eAAe,CACla,SAASU,EAAG1I,EAAEC,EAAEC,GAAG,GAAGD,EAAEkB,eAAe,UAAUlB,EAAEkB,eAAe,gBAAgB,CAAC,IAAIK,EAAEvB,EAAEiC,KAAK,KAAK,WAAWV,GAAG,UAAUA,QAAG,IAASvB,EAAE0H,OAAO,OAAO1H,EAAE0H,OAAO,OAAO1H,EAAE,GAAGD,EAAEkI,cAAcG,aAAanI,GAAGD,IAAID,EAAE2H,QAAQ3H,EAAE2H,MAAM1H,GAAGD,EAAEiI,aAAahI,CAAC,CAAU,MAATC,EAAEF,EAAEiG,QAAcjG,EAAEiG,KAAK,IAAIjG,EAAEgI,iBAAiBhI,EAAEkI,cAAcC,eAAe,KAAKjI,IAAIF,EAAEiG,KAAK/F,EAAE,CACzV,SAASuI,GAAGzI,EAAEC,EAAEC,GAAM,WAAWD,GAAG2H,EAAG5H,EAAE2I,iBAAiB3I,IAAE,MAAME,EAAEF,EAAEiI,aAAa,GAAGjI,EAAEkI,cAAcG,aAAarI,EAAEiI,eAAe,GAAG/H,IAAIF,EAAEiI,aAAa,GAAG/H,GAAE,CAAC,IAAI0I,GAAGC,MAAMC,QAC7K,SAASC,GAAG/I,EAAEC,EAAEC,EAAEsB,GAAe,GAAZxB,EAAEA,EAAEgJ,QAAW/I,EAAE,CAACA,EAAE,CAAC,EAAE,IAAI,IAAIwB,EAAE,EAAEA,EAAEvB,EAAEE,OAAOqB,IAAIxB,EAAE,IAAIC,EAAEuB,KAAI,EAAG,IAAIvB,EAAE,EAAEA,EAAEF,EAAEI,OAAOF,IAAIuB,EAAExB,EAAEkB,eAAe,IAAInB,EAAEE,GAAGyH,OAAO3H,EAAEE,GAAG+I,WAAWxH,IAAIzB,EAAEE,GAAG+I,SAASxH,GAAGA,GAAGD,IAAIxB,EAAEE,GAAGgJ,iBAAgB,EAAG,KAAK,CAAmB,IAAlBhJ,EAAE,GAAGyG,EAAGzG,GAAGD,EAAE,KAASwB,EAAE,EAAEA,EAAEzB,EAAEI,OAAOqB,IAAI,CAAC,GAAGzB,EAAEyB,GAAGkG,QAAQzH,EAAiD,OAA9CF,EAAEyB,GAAGwH,UAAS,OAAGzH,IAAIxB,EAAEyB,GAAGyH,iBAAgB,IAAW,OAAOjJ,GAAGD,EAAEyB,GAAG0H,WAAWlJ,EAAED,EAAEyB,GAAG,CAAC,OAAOxB,IAAIA,EAAEgJ,UAAS,EAAG,CAAC,CACxY,SAASG,GAAGpJ,EAAEC,GAAG,GAAG,MAAMA,EAAEoJ,wBAAwB,MAAMpE,MAAMlF,EAAE,KAAK,OAAO+E,EAAE,CAAC,EAAE7E,EAAE,CAAC0H,WAAM,EAAOM,kBAAa,EAAOqB,SAAS,GAAGtJ,EAAEkI,cAAcG,cAAc,CAAC,SAASkB,GAAGvJ,EAAEC,GAAG,IAAIC,EAAED,EAAE0H,MAAM,GAAG,MAAMzH,EAAE,CAA+B,GAA9BA,EAAED,EAAEqJ,SAASrJ,EAAEA,EAAEgI,aAAgB,MAAM/H,EAAE,CAAC,GAAG,MAAMD,EAAE,MAAMgF,MAAMlF,EAAE,KAAK,GAAG6I,GAAG1I,GAAG,CAAC,GAAG,EAAEA,EAAEE,OAAO,MAAM6E,MAAMlF,EAAE,KAAKG,EAAEA,EAAE,EAAE,CAACD,EAAEC,CAAC,CAAC,MAAMD,IAAIA,EAAE,IAAIC,EAAED,CAAC,CAACD,EAAEkI,cAAc,CAACG,aAAa1B,EAAGzG,GAAG,CACnY,SAASsJ,GAAGxJ,EAAEC,GAAG,IAAIC,EAAEyG,EAAG1G,EAAE0H,OAAOnG,EAAEmF,EAAG1G,EAAEgI,cAAc,MAAM/H,KAAIA,EAAE,GAAGA,KAAMF,EAAE2H,QAAQ3H,EAAE2H,MAAMzH,GAAG,MAAMD,EAAEgI,cAAcjI,EAAEiI,eAAe/H,IAAIF,EAAEiI,aAAa/H,IAAI,MAAMsB,IAAIxB,EAAEiI,aAAa,GAAGzG,EAAE,CAAC,SAASiI,GAAGzJ,GAAG,IAAIC,EAAED,EAAE0J,YAAYzJ,IAAID,EAAEkI,cAAcG,cAAc,KAAKpI,GAAG,OAAOA,IAAID,EAAE2H,MAAM1H,EAAE,CAAC,SAAS0J,GAAG3J,GAAG,OAAOA,GAAG,IAAK,MAAM,MAAM,6BAA6B,IAAK,OAAO,MAAM,qCAAqC,QAAQ,MAAM,+BAA+B,CAC7c,SAAS4J,GAAG5J,EAAEC,GAAG,OAAO,MAAMD,GAAG,iCAAiCA,EAAE2J,GAAG1J,GAAG,+BAA+BD,GAAG,kBAAkBC,EAAE,+BAA+BD,CAAC,CAChK,IAAI6J,GAAe7J,GAAZ8J,IAAY9J,GAAsJ,SAASA,EAAEC,GAAG,GAAG,+BAA+BD,EAAE+J,cAAc,cAAc/J,EAAEA,EAAEgK,UAAU/J,MAAM,CAA2F,KAA1F4J,GAAGA,IAAI/I,SAASC,cAAc,QAAUiJ,UAAU,QAAQ/J,EAAEgK,UAAUC,WAAW,SAAajK,EAAE4J,GAAGM,WAAWnK,EAAEmK,YAAYnK,EAAEoK,YAAYpK,EAAEmK,YAAY,KAAKlK,EAAEkK,YAAYnK,EAAEqK,YAAYpK,EAAEkK,WAAW,CAAC,EAAvb,qBAAqBG,OAAOA,MAAMC,wBAAwB,SAAStK,EAAEC,EAAEsB,EAAEC,GAAG6I,MAAMC,yBAAwB,WAAW,OAAOvK,GAAEC,EAAEC,EAAM,GAAE,EAAEF,IACtK,SAASwK,GAAGxK,EAAEC,GAAG,GAAGA,EAAE,CAAC,IAAIC,EAAEF,EAAEmK,WAAW,GAAGjK,GAAGA,IAAIF,EAAEyK,WAAW,IAAIvK,EAAEwK,SAAwB,YAAdxK,EAAEyK,UAAU1K,EAAS,CAACD,EAAE0J,YAAYzJ,CAAC,CACtH,IAAI2K,GAAG,CAACC,yBAAwB,EAAGC,aAAY,EAAGC,mBAAkB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,SAAQ,EAAGC,cAAa,EAAGC,iBAAgB,EAAGC,aAAY,EAAGC,SAAQ,EAAGC,MAAK,EAAGC,UAAS,EAAGC,cAAa,EAAGC,YAAW,EAAGC,cAAa,EAAGC,WAAU,EAAGC,UAAS,EAAGC,SAAQ,EAAGC,YAAW,EAAGC,aAAY,EAAGC,cAAa,EAAGC,YAAW,EAAGC,eAAc,EAAGC,gBAAe,EAAGC,iBAAgB,EAAGC,YAAW,EAAGC,WAAU,EAAGC,YAAW,EAAGC,SAAQ,EAAGC,OAAM,EAAGC,SAAQ,EAAGC,SAAQ,EAAGC,QAAO,EAAGC,QAAO,EAClfC,MAAK,EAAGC,aAAY,EAAGC,cAAa,EAAGC,aAAY,EAAGC,iBAAgB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,eAAc,EAAGC,aAAY,GAAIC,GAAG,CAAC,SAAS,KAAK,MAAM,KAA6H,SAASC,GAAGzN,EAAEC,EAAEC,GAAG,OAAO,MAAMD,GAAG,mBAAmBA,GAAG,KAAKA,EAAE,GAAGC,GAAG,kBAAkBD,GAAG,IAAIA,GAAG2K,GAAGzJ,eAAenB,IAAI4K,GAAG5K,IAAI,GAAGC,GAAGkF,OAAOlF,EAAE,IAAI,CACzb,SAASyN,GAAG1N,EAAEC,GAAa,IAAI,IAAIC,KAAlBF,EAAEA,EAAE2N,MAAmB1N,EAAE,GAAGA,EAAEkB,eAAejB,GAAG,CAAC,IAAIsB,EAAE,IAAItB,EAAE0N,QAAQ,MAAMnM,EAAEgM,GAAGvN,EAAED,EAAEC,GAAGsB,GAAG,UAAUtB,IAAIA,EAAE,YAAYsB,EAAExB,EAAE6N,YAAY3N,EAAEuB,GAAGzB,EAAEE,GAAGuB,CAAC,CAAC,CADYR,OAAO6M,KAAKlD,IAAIrI,SAAQ,SAASvC,GAAGwN,GAAGjL,SAAQ,SAAStC,GAAGA,EAAEA,EAAED,EAAE+N,OAAO,GAAGpL,cAAc3C,EAAEgO,UAAU,GAAGpD,GAAG3K,GAAG2K,GAAG5K,EAAE,GAAE,IAChI,IAAIiO,GAAGnJ,EAAE,CAACoJ,UAAS,GAAI,CAACC,MAAK,EAAGC,MAAK,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,QAAO,EAAGC,MAAK,EAAGC,MAAK,EAAGC,OAAM,EAAGC,QAAO,EAAGC,OAAM,EAAGC,KAAI,IAClT,SAASC,GAAGlP,EAAEC,GAAG,GAAGA,EAAE,CAAC,GAAGgO,GAAGjO,KAAK,MAAMC,EAAEqJ,UAAU,MAAMrJ,EAAEoJ,yBAAyB,MAAMpE,MAAMlF,EAAE,IAAIC,IAAI,GAAG,MAAMC,EAAEoJ,wBAAwB,CAAC,GAAG,MAAMpJ,EAAEqJ,SAAS,MAAMrE,MAAMlF,EAAE,KAAK,GAAG,kBAAkBE,EAAEoJ,2BAA2B,WAAWpJ,EAAEoJ,yBAAyB,MAAMpE,MAAMlF,EAAE,IAAK,CAAC,GAAG,MAAME,EAAE0N,OAAO,kBAAkB1N,EAAE0N,MAAM,MAAM1I,MAAMlF,EAAE,IAAK,CAAC,CAClW,SAASoP,GAAGnP,EAAEC,GAAG,IAAI,IAAID,EAAE4N,QAAQ,KAAK,MAAM,kBAAkB3N,EAAEmP,GAAG,OAAOpP,GAAG,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,YAAY,IAAK,gBAAgB,IAAK,gBAAgB,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,gBAAgB,OAAM,EAAG,QAAQ,OAAM,EAAG,CAAC,IAAIqP,GAAG,KAAK,SAASC,GAAGtP,GAA6F,OAA1FA,EAAEA,EAAEuP,QAAQvP,EAAEwP,YAAY3O,QAAS4O,0BAA0BzP,EAAEA,EAAEyP,yBAAgC,IAAIzP,EAAE0K,SAAS1K,EAAE0P,WAAW1P,CAAC,CAAC,IAAI2P,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACpc,SAASC,GAAG9P,GAAG,GAAGA,EAAE+P,GAAG/P,GAAG,CAAC,GAAG,oBAAoB2P,GAAG,MAAM1K,MAAMlF,EAAE,MAAM,IAAIE,EAAED,EAAEgQ,UAAU/P,IAAIA,EAAEgQ,GAAGhQ,GAAG0P,GAAG3P,EAAEgQ,UAAUhQ,EAAEkC,KAAKjC,GAAG,CAAC,CAAC,SAASiQ,GAAGlQ,GAAG4P,GAAGC,GAAGA,GAAGM,KAAKnQ,GAAG6P,GAAG,CAAC7P,GAAG4P,GAAG5P,CAAC,CAAC,SAASoQ,KAAK,GAAGR,GAAG,CAAC,IAAI5P,EAAE4P,GAAG3P,EAAE4P,GAAoB,GAAjBA,GAAGD,GAAG,KAAKE,GAAG9P,GAAMC,EAAE,IAAID,EAAE,EAAEA,EAAEC,EAAEG,OAAOJ,IAAI8P,GAAG7P,EAAED,GAAG,CAAC,CAAC,SAASqQ,GAAGrQ,EAAEC,GAAG,OAAOD,EAAEC,EAAE,CAAC,SAASqQ,KAAK,CAAC,IAAIC,IAAG,EAAG,SAASC,GAAGxQ,EAAEC,EAAEC,GAAG,GAAGqQ,GAAG,OAAOvQ,EAAEC,EAAEC,GAAGqQ,IAAG,EAAG,IAAI,OAAOF,GAAGrQ,EAAEC,EAAEC,EAAE,CAAC,QAAWqQ,IAAG,GAAG,OAAOX,IAAI,OAAOC,MAAGS,KAAKF,KAAI,CAAC,CAChb,SAASK,GAAGzQ,EAAEC,GAAG,IAAIC,EAAEF,EAAEgQ,UAAU,GAAG,OAAO9P,EAAE,OAAO,KAAK,IAAIsB,EAAEyO,GAAG/P,GAAG,GAAG,OAAOsB,EAAE,OAAO,KAAKtB,EAAEsB,EAAEvB,GAAGD,EAAE,OAAOC,GAAG,IAAK,UAAU,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,uBAAuB,IAAK,cAAc,IAAK,qBAAqB,IAAK,cAAc,IAAK,qBAAqB,IAAK,YAAY,IAAK,mBAAmB,IAAK,gBAAgBuB,GAAGA,EAAE2H,YAAqB3H,IAAI,YAAbxB,EAAEA,EAAEkC,OAAuB,UAAUlC,GAAG,WAAWA,GAAG,aAAaA,IAAIA,GAAGwB,EAAE,MAAMxB,EAAE,QAAQA,GAAE,EAAG,GAAGA,EAAE,OAAO,KAAK,GAAGE,GAAG,oBACleA,EAAE,MAAM+E,MAAMlF,EAAE,IAAIE,SAASC,IAAI,OAAOA,CAAC,CAAC,IAAIwQ,IAAG,EAAG,GAAG9P,EAAG,IAAI,IAAI+P,GAAG,CAAC,EAAE1P,OAAOuE,eAAemL,GAAG,UAAU,CAACzJ,IAAI,WAAWwJ,IAAG,CAAE,IAAI7P,OAAO+P,iBAAiB,OAAOD,GAAGA,IAAI9P,OAAOgQ,oBAAoB,OAAOF,GAAGA,GAAG,CAAC,MAAM3Q,IAAG0Q,IAAG,CAAE,CAAC,SAASI,GAAG9Q,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAG,IAAIF,EAAEiD,MAAM3H,UAAU2B,MAAMI,KAAK9C,UAAU,GAAG,IAAIF,EAAE8Q,MAAM7Q,EAAE0F,EAAE,CAAC,MAAMoL,GAAGpP,KAAKqP,QAAQD,EAAE,CAAC,CAAC,IAAIE,IAAG,EAAGC,GAAG,KAAKC,IAAG,EAAGC,GAAG,KAAKC,GAAG,CAACL,QAAQ,SAASjR,GAAGkR,IAAG,EAAGC,GAAGnR,CAAC,GAAG,SAASuR,GAAGvR,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAGoL,IAAG,EAAGC,GAAG,KAAKL,GAAGC,MAAMO,GAAGnR,UAAU,CACjW,SAASqR,GAAGxR,GAAG,IAAIC,EAAED,EAAEE,EAAEF,EAAE,GAAGA,EAAEyR,UAAU,KAAKxR,EAAEyR,QAAQzR,EAAEA,EAAEyR,WAAW,CAAC1R,EAAEC,EAAE,GAAO,KAAa,MAAjBA,EAAED,GAAS2R,SAAczR,EAAED,EAAEyR,QAAQ1R,EAAEC,EAAEyR,aAAa1R,EAAE,CAAC,OAAO,IAAIC,EAAEkG,IAAIjG,EAAE,IAAI,CAAC,SAAS0R,GAAG5R,GAAG,GAAG,KAAKA,EAAEmG,IAAI,CAAC,IAAIlG,EAAED,EAAE6R,cAAsE,GAAxD,OAAO5R,IAAkB,QAAdD,EAAEA,EAAEyR,aAAqBxR,EAAED,EAAE6R,gBAAmB,OAAO5R,EAAE,OAAOA,EAAE6R,UAAU,CAAC,OAAO,IAAI,CAAC,SAASC,GAAG/R,GAAG,GAAGwR,GAAGxR,KAAKA,EAAE,MAAMiF,MAAMlF,EAAE,KAAM,CAE1S,SAASiS,GAAGhS,GAAW,OAAO,QAAfA,EADtN,SAAYA,GAAG,IAAIC,EAAED,EAAEyR,UAAU,IAAIxR,EAAE,CAAS,GAAG,QAAXA,EAAEuR,GAAGxR,IAAe,MAAMiF,MAAMlF,EAAE,MAAM,OAAOE,IAAID,EAAE,KAAKA,CAAC,CAAC,IAAI,IAAIE,EAAEF,EAAEwB,EAAEvB,IAAI,CAAC,IAAIwB,EAAEvB,EAAEwR,OAAO,GAAG,OAAOjQ,EAAE,MAAM,IAAIC,EAAED,EAAEgQ,UAAU,GAAG,OAAO/P,EAAE,CAAY,GAAG,QAAdF,EAAEC,EAAEiQ,QAAmB,CAACxR,EAAEsB,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAGC,EAAEwQ,QAAQvQ,EAAEuQ,MAAM,CAAC,IAAIvQ,EAAED,EAAEwQ,MAAMvQ,GAAG,CAAC,GAAGA,IAAIxB,EAAE,OAAO6R,GAAGtQ,GAAGzB,EAAE,GAAG0B,IAAIF,EAAE,OAAOuQ,GAAGtQ,GAAGxB,EAAEyB,EAAEA,EAAEwQ,OAAO,CAAC,MAAMjN,MAAMlF,EAAE,KAAM,CAAC,GAAGG,EAAEwR,SAASlQ,EAAEkQ,OAAOxR,EAAEuB,EAAED,EAAEE,MAAM,CAAC,IAAI,IAAIC,GAAE,EAAGkE,EAAEpE,EAAEwQ,MAAMpM,GAAG,CAAC,GAAGA,IAAI3F,EAAE,CAACyB,GAAE,EAAGzB,EAAEuB,EAAED,EAAEE,EAAE,KAAK,CAAC,GAAGmE,IAAIrE,EAAE,CAACG,GAAE,EAAGH,EAAEC,EAAEvB,EAAEwB,EAAE,KAAK,CAACmE,EAAEA,EAAEqM,OAAO,CAAC,IAAIvQ,EAAE,CAAC,IAAIkE,EAAEnE,EAAEuQ,MAAMpM,GAAG,CAAC,GAAGA,IAC5f3F,EAAE,CAACyB,GAAE,EAAGzB,EAAEwB,EAAEF,EAAEC,EAAE,KAAK,CAAC,GAAGoE,IAAIrE,EAAE,CAACG,GAAE,EAAGH,EAAEE,EAAExB,EAAEuB,EAAE,KAAK,CAACoE,EAAEA,EAAEqM,OAAO,CAAC,IAAIvQ,EAAE,MAAMsD,MAAMlF,EAAE,KAAM,CAAC,CAAC,GAAGG,EAAEuR,YAAYjQ,EAAE,MAAMyD,MAAMlF,EAAE,KAAM,CAAC,GAAG,IAAIG,EAAEiG,IAAI,MAAMlB,MAAMlF,EAAE,MAAM,OAAOG,EAAE8P,UAAUmC,UAAUjS,EAAEF,EAAEC,CAAC,CAAkBmS,CAAGpS,IAAmBqS,GAAGrS,GAAG,IAAI,CAAC,SAASqS,GAAGrS,GAAG,GAAG,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,IAAI,OAAOnG,EAAE,IAAIA,EAAEA,EAAEiS,MAAM,OAAOjS,GAAG,CAAC,IAAIC,EAAEoS,GAAGrS,GAAG,GAAG,OAAOC,EAAE,OAAOA,EAAED,EAAEA,EAAEkS,OAAO,CAAC,OAAO,IAAI,CAC1X,IAAII,GAAGxS,EAAGyS,0BAA0BC,GAAG1S,EAAG2S,wBAAwBC,GAAG5S,EAAG6S,qBAAqBC,GAAG9S,EAAG+S,sBAAsBC,GAAEhT,EAAGiT,aAAaC,GAAGlT,EAAGmT,iCAAiCC,GAAGpT,EAAGqT,2BAA2BC,GAAGtT,EAAGuT,8BAA8BC,GAAGxT,EAAGyT,wBAAwBC,GAAG1T,EAAG2T,qBAAqBC,GAAG5T,EAAG6T,sBAAsBC,GAAG,KAAKC,GAAG,KACvV,IAAIC,GAAGC,KAAKC,MAAMD,KAAKC,MAAiC,SAAYhU,GAAU,OAAPA,KAAK,EAAS,IAAIA,EAAE,GAAG,IAAIiU,GAAGjU,GAAGkU,GAAG,GAAG,CAAC,EAA/ED,GAAGF,KAAKI,IAAID,GAAGH,KAAKK,IAA4D,IAAIC,GAAG,GAAGC,GAAG,QAC7H,SAASC,GAAGvU,GAAG,OAAOA,GAAGA,GAAG,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAS,QAAFA,EAAU,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,OAAS,UAAFA,EAAY,KAAK,UAAU,OAAO,UAAU,KAAK,UAAU,OAAO,UAAU,KAAK,UAAU,OAAO,UAAU,KAAK,WAAW,OAAO,WACzgB,QAAQ,OAAOA,EAAE,CAAC,SAASwU,GAAGxU,EAAEC,GAAG,IAAIC,EAAEF,EAAEyU,aAAa,GAAG,IAAIvU,EAAE,OAAO,EAAE,IAAIsB,EAAE,EAAEC,EAAEzB,EAAE0U,eAAehT,EAAE1B,EAAE2U,YAAYhT,EAAI,UAAFzB,EAAY,GAAG,IAAIyB,EAAE,CAAC,IAAIkE,EAAElE,GAAGF,EAAE,IAAIoE,EAAErE,EAAE+S,GAAG1O,GAAS,KAALnE,GAAGC,KAAUH,EAAE+S,GAAG7S,GAAI,MAAa,KAAPC,EAAEzB,GAAGuB,GAAQD,EAAE+S,GAAG5S,GAAG,IAAID,IAAIF,EAAE+S,GAAG7S,IAAI,GAAG,IAAIF,EAAE,OAAO,EAAE,GAAG,IAAIvB,GAAGA,IAAIuB,GAAG,KAAKvB,EAAEwB,MAAKA,EAAED,GAAGA,KAAEE,EAAEzB,GAAGA,IAAQ,KAAKwB,GAAG,KAAO,QAAFC,IAAY,OAAOzB,EAA0C,GAAxC,KAAO,EAAFuB,KAAOA,GAAK,GAAFtB,GAA4B,KAAtBD,EAAED,EAAE4U,gBAAwB,IAAI5U,EAAEA,EAAE6U,cAAc5U,GAAGuB,EAAE,EAAEvB,GAAcwB,EAAE,IAAbvB,EAAE,GAAG4T,GAAG7T,IAAUuB,GAAGxB,EAAEE,GAAGD,IAAIwB,EAAE,OAAOD,CAAC,CACvc,SAASsT,GAAG9U,EAAEC,GAAG,OAAOD,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAOC,EAAE,IAAI,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAOA,EAAE,IAAuJ,QAAQ,OAAO,EAAE,CACrN,SAAS8U,GAAG/U,GAAgC,OAAO,KAApCA,GAAkB,WAAhBA,EAAEyU,cAAsCzU,EAAI,WAAFA,EAAa,WAAW,CAAC,CAAC,SAASgV,KAAK,IAAIhV,EAAEqU,GAAoC,OAA1B,KAAQ,SAAfA,KAAK,MAAqBA,GAAG,IAAWrU,CAAC,CAAC,SAASiV,GAAGjV,GAAG,IAAI,IAAIC,EAAE,GAAGC,EAAE,EAAE,GAAGA,EAAEA,IAAID,EAAEkQ,KAAKnQ,GAAG,OAAOC,CAAC,CAC3a,SAASiV,GAAGlV,EAAEC,EAAEC,GAAGF,EAAEyU,cAAcxU,EAAE,YAAYA,IAAID,EAAE0U,eAAe,EAAE1U,EAAE2U,YAAY,IAAG3U,EAAEA,EAAEmV,YAAWlV,EAAE,GAAG6T,GAAG7T,IAAQC,CAAC,CACzH,SAASkV,GAAGpV,EAAEC,GAAG,IAAIC,EAAEF,EAAE4U,gBAAgB3U,EAAE,IAAID,EAAEA,EAAE6U,cAAc3U,GAAG,CAAC,IAAIsB,EAAE,GAAGsS,GAAG5T,GAAGuB,EAAE,GAAGD,EAAEC,EAAExB,EAAED,EAAEwB,GAAGvB,IAAID,EAAEwB,IAAIvB,GAAGC,IAAIuB,CAAC,CAAC,CAAC,IAAI4T,GAAE,EAAE,SAASC,GAAGtV,GAAS,OAAO,GAAbA,IAAIA,GAAa,EAAEA,EAAE,KAAO,UAAFA,GAAa,GAAG,UAAU,EAAE,CAAC,CAAC,IAAIuV,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,IAAG,EAAGC,GAAG,GAAGC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,IAAIC,GAAG,IAAID,IAAIE,GAAG,GAAGC,GAAG,6PAA6P/T,MAAM,KAChiB,SAASgU,GAAGtW,EAAEC,GAAG,OAAOD,GAAG,IAAK,UAAU,IAAK,WAAW8V,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,YAAYC,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,WAAWC,GAAG,KAAK,MAAM,IAAK,cAAc,IAAK,aAAaC,GAAGM,OAAOtW,EAAEuW,WAAW,MAAM,IAAK,oBAAoB,IAAK,qBAAqBL,GAAGI,OAAOtW,EAAEuW,WAAW,CACnT,SAASC,GAAGzW,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAG,OAAG,OAAO1B,GAAGA,EAAE0W,cAAchV,GAAS1B,EAAE,CAAC2W,UAAU1W,EAAE2W,aAAa1W,EAAE2W,iBAAiBrV,EAAEkV,YAAYhV,EAAEoV,iBAAiB,CAACrV,IAAI,OAAOxB,IAAY,QAARA,EAAE8P,GAAG9P,KAAauV,GAAGvV,IAAID,IAAEA,EAAE6W,kBAAkBrV,EAAEvB,EAAED,EAAE8W,iBAAiB,OAAOrV,IAAI,IAAIxB,EAAE2N,QAAQnM,IAAIxB,EAAEkQ,KAAK1O,GAAUzB,EAAC,CAEpR,SAAS+W,GAAG/W,GAAG,IAAIC,EAAE+W,GAAGhX,EAAEuP,QAAQ,GAAG,OAAOtP,EAAE,CAAC,IAAIC,EAAEsR,GAAGvR,GAAG,GAAG,OAAOC,EAAE,GAAW,MAARD,EAAEC,EAAEiG,MAAY,GAAW,QAARlG,EAAE2R,GAAG1R,IAA4D,OAA/CF,EAAE2W,UAAU1W,OAAE0V,GAAG3V,EAAEiX,UAAS,WAAWxB,GAAGvV,EAAE,SAAgB,GAAG,IAAID,GAAGC,EAAE8P,UAAUmC,QAAQN,cAAcqF,aAAmE,YAArDlX,EAAE2W,UAAU,IAAIzW,EAAEiG,IAAIjG,EAAE8P,UAAUmH,cAAc,KAAY,CAACnX,EAAE2W,UAAU,IAAI,CAClT,SAASS,GAAGpX,GAAG,GAAG,OAAOA,EAAE2W,UAAU,OAAM,EAAG,IAAI,IAAI1W,EAAED,EAAE8W,iBAAiB,EAAE7W,EAAEG,QAAQ,CAAC,IAAIF,EAAEmX,GAAGrX,EAAE4W,aAAa5W,EAAE6W,iBAAiB5W,EAAE,GAAGD,EAAE0W,aAAa,GAAG,OAAOxW,EAAiG,OAAe,QAARD,EAAE8P,GAAG7P,KAAasV,GAAGvV,GAAGD,EAAE2W,UAAUzW,GAAE,EAA3H,IAAIsB,EAAE,IAAtBtB,EAAEF,EAAE0W,aAAwBzP,YAAY/G,EAAEgC,KAAKhC,GAAGmP,GAAG7N,EAAEtB,EAAEqP,OAAO+H,cAAc9V,GAAG6N,GAAG,KAA0DpP,EAAEsX,OAAO,CAAC,OAAM,CAAE,CAAC,SAASC,GAAGxX,EAAEC,EAAEC,GAAGkX,GAAGpX,IAAIE,EAAEqW,OAAOtW,EAAE,CAAC,SAASwX,KAAK7B,IAAG,EAAG,OAAOE,IAAIsB,GAAGtB,MAAMA,GAAG,MAAM,OAAOC,IAAIqB,GAAGrB,MAAMA,GAAG,MAAM,OAAOC,IAAIoB,GAAGpB,MAAMA,GAAG,MAAMC,GAAG1T,QAAQiV,IAAIrB,GAAG5T,QAAQiV,GAAG,CACnf,SAASE,GAAG1X,EAAEC,GAAGD,EAAE2W,YAAY1W,IAAID,EAAE2W,UAAU,KAAKf,KAAKA,IAAG,EAAG9V,EAAGyS,0BAA0BzS,EAAGyT,wBAAwBkE,KAAK,CAC5H,SAASE,GAAG3X,GAAG,SAASC,EAAEA,GAAG,OAAOyX,GAAGzX,EAAED,EAAE,CAAC,GAAG,EAAE6V,GAAGzV,OAAO,CAACsX,GAAG7B,GAAG,GAAG7V,GAAG,IAAI,IAAIE,EAAE,EAAEA,EAAE2V,GAAGzV,OAAOF,IAAI,CAAC,IAAIsB,EAAEqU,GAAG3V,GAAGsB,EAAEmV,YAAY3W,IAAIwB,EAAEmV,UAAU,KAAK,CAAC,CAAyF,IAAxF,OAAOb,IAAI4B,GAAG5B,GAAG9V,GAAG,OAAO+V,IAAI2B,GAAG3B,GAAG/V,GAAG,OAAOgW,IAAI0B,GAAG1B,GAAGhW,GAAGiW,GAAG1T,QAAQtC,GAAGkW,GAAG5T,QAAQtC,GAAOC,EAAE,EAAEA,EAAEkW,GAAGhW,OAAOF,KAAIsB,EAAE4U,GAAGlW,IAAKyW,YAAY3W,IAAIwB,EAAEmV,UAAU,MAAM,KAAK,EAAEP,GAAGhW,QAAiB,QAARF,EAAEkW,GAAG,IAAYO,WAAYI,GAAG7W,GAAG,OAAOA,EAAEyW,WAAWP,GAAGmB,OAAO,CAAC,IAAIK,GAAGnU,EAAGoU,wBAAwBC,IAAG,EAC5a,SAASC,GAAG/X,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE4T,GAAE3T,EAAEkW,GAAGI,WAAWJ,GAAGI,WAAW,KAAK,IAAI3C,GAAE,EAAE4C,GAAGjY,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,QAAQ6T,GAAE5T,EAAEmW,GAAGI,WAAWtW,CAAC,CAAC,CAAC,SAASwW,GAAGlY,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE4T,GAAE3T,EAAEkW,GAAGI,WAAWJ,GAAGI,WAAW,KAAK,IAAI3C,GAAE,EAAE4C,GAAGjY,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,QAAQ6T,GAAE5T,EAAEmW,GAAGI,WAAWtW,CAAC,CAAC,CACjO,SAASuW,GAAGjY,EAAEC,EAAEC,EAAEsB,GAAG,GAAGsW,GAAG,CAAC,IAAIrW,EAAE4V,GAAGrX,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,OAAOC,EAAE0W,GAAGnY,EAAEC,EAAEuB,EAAE4W,GAAGlY,GAAGoW,GAAGtW,EAAEwB,QAAQ,GANtF,SAAYxB,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,OAAOxB,GAAG,IAAK,UAAU,OAAO6V,GAAGW,GAAGX,GAAG9V,EAAEC,EAAEC,EAAEsB,EAAEC,IAAG,EAAG,IAAK,YAAY,OAAOsU,GAAGU,GAAGV,GAAG/V,EAAEC,EAAEC,EAAEsB,EAAEC,IAAG,EAAG,IAAK,YAAY,OAAOuU,GAAGS,GAAGT,GAAGhW,EAAEC,EAAEC,EAAEsB,EAAEC,IAAG,EAAG,IAAK,cAAc,IAAIC,EAAED,EAAE+U,UAAkD,OAAxCP,GAAGxQ,IAAI/D,EAAE+U,GAAGR,GAAG/O,IAAIxF,IAAI,KAAK1B,EAAEC,EAAEC,EAAEsB,EAAEC,KAAU,EAAG,IAAK,oBAAoB,OAAOC,EAAED,EAAE+U,UAAUL,GAAG1Q,IAAI/D,EAAE+U,GAAGN,GAAGjP,IAAIxF,IAAI,KAAK1B,EAAEC,EAAEC,EAAEsB,EAAEC,KAAI,EAAG,OAAM,CAAE,CAM1Q4W,CAAG5W,EAAEzB,EAAEC,EAAEC,EAAEsB,GAAGA,EAAE8W,uBAAuB,GAAGhC,GAAGtW,EAAEwB,GAAK,EAAFvB,IAAM,EAAEoW,GAAGzI,QAAQ5N,GAAG,CAAC,KAAK,OAAOyB,GAAG,CAAC,IAAIC,EAAEqO,GAAGtO,GAA0D,GAAvD,OAAOC,GAAG6T,GAAG7T,GAAiB,QAAdA,EAAE2V,GAAGrX,EAAEC,EAAEC,EAAEsB,KAAa2W,GAAGnY,EAAEC,EAAEuB,EAAE4W,GAAGlY,GAAMwB,IAAID,EAAE,MAAMA,EAAEC,CAAC,CAAC,OAAOD,GAAGD,EAAE8W,iBAAiB,MAAMH,GAAGnY,EAAEC,EAAEuB,EAAE,KAAKtB,EAAE,CAAC,CAAC,IAAIkY,GAAG,KACpU,SAASf,GAAGrX,EAAEC,EAAEC,EAAEsB,GAA2B,GAAxB4W,GAAG,KAAwB,QAAXpY,EAAEgX,GAAVhX,EAAEsP,GAAG9N,KAAuB,GAAW,QAARvB,EAAEuR,GAAGxR,IAAYA,EAAE,UAAU,GAAW,MAARE,EAAED,EAAEkG,KAAW,CAAS,GAAG,QAAXnG,EAAE4R,GAAG3R,IAAe,OAAOD,EAAEA,EAAE,IAAI,MAAM,GAAG,IAAIE,EAAE,CAAC,GAAGD,EAAE+P,UAAUmC,QAAQN,cAAcqF,aAAa,OAAO,IAAIjX,EAAEkG,IAAIlG,EAAE+P,UAAUmH,cAAc,KAAKnX,EAAE,IAAI,MAAMC,IAAID,IAAIA,EAAE,MAAW,OAALoY,GAAGpY,EAAS,IAAI,CAC7S,SAASuY,GAAGvY,GAAG,OAAOA,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,QAAQ,IAAK,cAAc,IAAK,OAAO,IAAK,MAAM,IAAK,WAAW,IAAK,WAAW,IAAK,UAAU,IAAK,YAAY,IAAK,OAAO,IAAK,UAAU,IAAK,WAAW,IAAK,QAAQ,IAAK,UAAU,IAAK,UAAU,IAAK,WAAW,IAAK,QAAQ,IAAK,YAAY,IAAK,UAAU,IAAK,QAAQ,IAAK,QAAQ,IAAK,OAAO,IAAK,gBAAgB,IAAK,cAAc,IAAK,YAAY,IAAK,aAAa,IAAK,QAAQ,IAAK,SAAS,IAAK,SAAS,IAAK,SAAS,IAAK,cAAc,IAAK,WAAW,IAAK,aAAa,IAAK,eAAe,IAAK,SAAS,IAAK,kBAAkB,IAAK,YAAY,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,oBAAoB,IAAK,aAAa,IAAK,YAAY,IAAK,cAAc,IAAK,OAAO,IAAK,mBAAmB,IAAK,QAAQ,IAAK,aAAa,IAAK,WAAW,IAAK,SAAS,IAAK,cAAc,OAAO,EAAE,IAAK,OAAO,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,SAAS,IAAK,SAAS,IAAK,YAAY,IAAK,QAAQ,IAAK,aAAa,IAAK,aAAa,IAAK,eAAe,IAAK,eAAe,OAAO,EACpqC,IAAK,UAAU,OAAOgT,MAAM,KAAKE,GAAG,OAAO,EAAE,KAAKE,GAAG,OAAO,EAAE,KAAKE,GAAG,KAAKE,GAAG,OAAO,GAAG,KAAKE,GAAG,OAAO,UAAU,QAAQ,OAAO,GAAG,QAAQ,OAAO,GAAG,CAAC,IAAI8E,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAK,GAAGD,GAAG,OAAOA,GAAG,IAAI1Y,EAAkBwB,EAAhBvB,EAAEwY,GAAGvY,EAAED,EAAEG,OAASqB,EAAE,UAAU+W,GAAGA,GAAG7Q,MAAM6Q,GAAG9O,YAAYhI,EAAED,EAAErB,OAAO,IAAIJ,EAAE,EAAEA,EAAEE,GAAGD,EAAED,KAAKyB,EAAEzB,GAAGA,KAAK,IAAI2B,EAAEzB,EAAEF,EAAE,IAAIwB,EAAE,EAAEA,GAAGG,GAAG1B,EAAEC,EAAEsB,KAAKC,EAAEC,EAAEF,GAAGA,KAAK,OAAOkX,GAAGjX,EAAEoB,MAAM7C,EAAE,EAAEwB,EAAE,EAAEA,OAAE,EAAO,CACxY,SAASoX,GAAG5Y,GAAG,IAAIC,EAAED,EAAE6Y,QAA+E,MAAvE,aAAa7Y,EAAgB,KAAbA,EAAEA,EAAE8Y,WAAgB,KAAK7Y,IAAID,EAAE,IAAKA,EAAEC,EAAE,KAAKD,IAAIA,EAAE,IAAW,IAAIA,GAAG,KAAKA,EAAEA,EAAE,CAAC,CAAC,SAAS+Y,KAAK,OAAM,CAAE,CAAC,SAASC,KAAK,OAAM,CAAE,CAC5K,SAASC,GAAGjZ,GAAG,SAASC,EAAEA,EAAEuB,EAAEC,EAAEC,EAAEC,GAA6G,IAAI,IAAIzB,KAAlH0B,KAAKsX,WAAWjZ,EAAE2B,KAAKuX,YAAY1X,EAAEG,KAAKM,KAAKV,EAAEI,KAAK8U,YAAYhV,EAAEE,KAAK2N,OAAO5N,EAAEC,KAAKwX,cAAc,KAAkBpZ,EAAEA,EAAEmB,eAAejB,KAAKD,EAAED,EAAEE,GAAG0B,KAAK1B,GAAGD,EAAEA,EAAEyB,GAAGA,EAAExB,IAAgI,OAA5H0B,KAAKyX,oBAAoB,MAAM3X,EAAE4X,iBAAiB5X,EAAE4X,kBAAiB,IAAK5X,EAAE6X,aAAaR,GAAGC,GAAGpX,KAAK4X,qBAAqBR,GAAUpX,IAAI,CAC9E,OAD+EkD,EAAE7E,EAAEiB,UAAU,CAACuY,eAAe,WAAW7X,KAAK0X,kBAAiB,EAAG,IAAItZ,EAAE4B,KAAK8U,YAAY1W,IAAIA,EAAEyZ,eAAezZ,EAAEyZ,iBAAiB,mBAAmBzZ,EAAEuZ,cAC7evZ,EAAEuZ,aAAY,GAAI3X,KAAKyX,mBAAmBN,GAAG,EAAET,gBAAgB,WAAW,IAAItY,EAAE4B,KAAK8U,YAAY1W,IAAIA,EAAEsY,gBAAgBtY,EAAEsY,kBAAkB,mBAAmBtY,EAAE0Z,eAAe1Z,EAAE0Z,cAAa,GAAI9X,KAAK4X,qBAAqBT,GAAG,EAAEY,QAAQ,WAAW,EAAEC,aAAab,KAAY9Y,CAAC,CACjR,IAAoL4Z,GAAGC,GAAGC,GAAtLC,GAAG,CAACC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,SAASpa,GAAG,OAAOA,EAAEoa,WAAWC,KAAKC,KAAK,EAAEhB,iBAAiB,EAAEiB,UAAU,GAAGC,GAAGvB,GAAGe,IAAIS,GAAG3V,EAAE,CAAC,EAAEkV,GAAG,CAACU,KAAK,EAAEC,OAAO,IAAIC,GAAG3B,GAAGwB,IAAaI,GAAG/V,EAAE,CAAC,EAAE2V,GAAG,CAACK,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,iBAAiBC,GAAGC,OAAO,EAAEC,QAAQ,EAAEC,cAAc,SAAS5b,GAAG,YAAO,IAASA,EAAE4b,cAAc5b,EAAE6b,cAAc7b,EAAEwP,WAAWxP,EAAE8b,UAAU9b,EAAE6b,YAAY7b,EAAE4b,aAAa,EAAEG,UAAU,SAAS/b,GAAG,MAAG,cAC3eA,EAASA,EAAE+b,WAAU/b,IAAI+Z,KAAKA,IAAI,cAAc/Z,EAAEkC,MAAM2X,GAAG7Z,EAAE8a,QAAQf,GAAGe,QAAQhB,GAAG9Z,EAAE+a,QAAQhB,GAAGgB,SAASjB,GAAGD,GAAG,EAAEE,GAAG/Z,GAAU6Z,GAAE,EAAEmC,UAAU,SAAShc,GAAG,MAAM,cAAcA,EAAEA,EAAEgc,UAAUlC,EAAE,IAAImC,GAAGhD,GAAG4B,IAAiCqB,GAAGjD,GAA7BnU,EAAE,CAAC,EAAE+V,GAAG,CAACsB,aAAa,KAA4CC,GAAGnD,GAA9BnU,EAAE,CAAC,EAAE2V,GAAG,CAACmB,cAAc,KAA0ES,GAAGpD,GAA5DnU,EAAE,CAAC,EAAEkV,GAAG,CAACsC,cAAc,EAAEC,YAAY,EAAEC,cAAc,KAAcC,GAAG3X,EAAE,CAAC,EAAEkV,GAAG,CAAC0C,cAAc,SAAS1c,GAAG,MAAM,kBAAkBA,EAAEA,EAAE0c,cAAc7b,OAAO6b,aAAa,IAAIC,GAAG1D,GAAGwD,IAAyBG,GAAG3D,GAArBnU,EAAE,CAAC,EAAEkV,GAAG,CAAC6C,KAAK,KAAcC,GAAG,CAACC,IAAI,SACxfC,SAAS,IAAIC,KAAK,YAAYC,GAAG,UAAUC,MAAM,aAAaC,KAAK,YAAYC,IAAI,SAASC,IAAI,KAAKC,KAAK,cAAcC,KAAK,cAAcC,OAAO,aAAaC,gBAAgB,gBAAgBC,GAAG,CAAC,EAAE,YAAY,EAAE,MAAM,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,UAAU,GAAG,MAAM,GAAG,QAAQ,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI,GAAG,SAAS,GAAG,WAAW,GAAG,MAAM,GAAG,OAAO,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,YAAY,GAAG,SAAS,GAAG,SAAS,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KACtf,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,UAAU,IAAI,aAAa,IAAI,QAAQC,GAAG,CAACC,IAAI,SAASC,QAAQ,UAAUC,KAAK,UAAUC,MAAM,YAAY,SAASC,GAAGje,GAAG,IAAIC,EAAE2B,KAAK8U,YAAY,OAAOzW,EAAEub,iBAAiBvb,EAAEub,iBAAiBxb,MAAIA,EAAE4d,GAAG5d,OAAMC,EAAED,EAAK,CAAC,SAASyb,KAAK,OAAOwC,EAAE,CAChS,IAAIC,GAAGpZ,EAAE,CAAC,EAAE2V,GAAG,CAAC0D,IAAI,SAASne,GAAG,GAAGA,EAAEme,IAAI,CAAC,IAAIle,EAAE6c,GAAG9c,EAAEme,MAAMne,EAAEme,IAAI,GAAG,iBAAiBle,EAAE,OAAOA,CAAC,CAAC,MAAM,aAAaD,EAAEkC,KAAc,MAARlC,EAAE4Y,GAAG5Y,IAAU,QAAQoe,OAAOC,aAAare,GAAI,YAAYA,EAAEkC,MAAM,UAAUlC,EAAEkC,KAAKyb,GAAG3d,EAAE6Y,UAAU,eAAe,EAAE,EAAEyF,KAAK,EAAEC,SAAS,EAAEnD,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEiD,OAAO,EAAEC,OAAO,EAAEjD,iBAAiBC,GAAG3C,SAAS,SAAS9Y,GAAG,MAAM,aAAaA,EAAEkC,KAAK0W,GAAG5Y,GAAG,CAAC,EAAE6Y,QAAQ,SAAS7Y,GAAG,MAAM,YAAYA,EAAEkC,MAAM,UAAUlC,EAAEkC,KAAKlC,EAAE6Y,QAAQ,CAAC,EAAE6F,MAAM,SAAS1e,GAAG,MAAM,aAC7eA,EAAEkC,KAAK0W,GAAG5Y,GAAG,YAAYA,EAAEkC,MAAM,UAAUlC,EAAEkC,KAAKlC,EAAE6Y,QAAQ,CAAC,IAAI8F,GAAG1F,GAAGiF,IAAiIU,GAAG3F,GAA7HnU,EAAE,CAAC,EAAE+V,GAAG,CAACrE,UAAU,EAAEqI,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,YAAY,EAAEC,UAAU,KAAmIC,GAAGrG,GAArHnU,EAAE,CAAC,EAAE2V,GAAG,CAAC8E,QAAQ,EAAEC,cAAc,EAAEC,eAAe,EAAEnE,OAAO,EAAEC,QAAQ,EAAEH,QAAQ,EAAEC,SAAS,EAAEG,iBAAiBC,MAA0EiE,GAAGzG,GAA3DnU,EAAE,CAAC,EAAEkV,GAAG,CAAC/X,aAAa,EAAEsa,YAAY,EAAEC,cAAc,KAAcmD,GAAG7a,EAAE,CAAC,EAAE+V,GAAG,CAAC+E,OAAO,SAAS5f,GAAG,MAAM,WAAWA,EAAEA,EAAE4f,OAAO,gBAAgB5f,GAAGA,EAAE6f,YAAY,CAAC,EACnfC,OAAO,SAAS9f,GAAG,MAAM,WAAWA,EAAEA,EAAE8f,OAAO,gBAAgB9f,GAAGA,EAAE+f,YAAY,eAAe/f,GAAGA,EAAEggB,WAAW,CAAC,EAAEC,OAAO,EAAEC,UAAU,IAAIC,GAAGlH,GAAG0G,IAAIS,GAAG,CAAC,EAAE,GAAG,GAAG,IAAIC,GAAGzf,GAAI,qBAAqBC,OAAOyf,GAAG,KAAK1f,GAAI,iBAAiBE,WAAWwf,GAAGxf,SAASyf,cAAc,IAAIC,GAAG5f,GAAI,cAAcC,SAASyf,GAAGG,GAAG7f,KAAMyf,IAAIC,IAAI,EAAEA,IAAI,IAAIA,IAAII,GAAGtC,OAAOC,aAAa,IAAIsC,IAAG,EAC1W,SAASC,GAAG5gB,EAAEC,GAAG,OAAOD,GAAG,IAAK,QAAQ,OAAO,IAAIogB,GAAGxS,QAAQ3N,EAAE4Y,SAAS,IAAK,UAAU,OAAO,MAAM5Y,EAAE4Y,QAAQ,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,OAAM,EAAG,QAAQ,OAAM,EAAG,CAAC,SAASgI,GAAG7gB,GAAc,MAAM,kBAAjBA,EAAEA,EAAE2a,SAAkC,SAAS3a,EAAEA,EAAE6c,KAAK,IAAI,CAAC,IAAIiE,IAAG,EAE9Q,IAAIC,GAAG,CAACC,OAAM,EAAGC,MAAK,EAAGC,UAAS,EAAG,kBAAiB,EAAGC,OAAM,EAAGC,OAAM,EAAGC,QAAO,EAAGC,UAAS,EAAGC,OAAM,EAAGC,QAAO,EAAGC,KAAI,EAAGC,MAAK,EAAGC,MAAK,EAAGC,KAAI,EAAGC,MAAK,GAAI,SAASC,GAAG9hB,GAAG,IAAIC,EAAED,GAAGA,EAAE6G,UAAU7G,EAAE6G,SAASrE,cAAc,MAAM,UAAUvC,IAAI8gB,GAAG/gB,EAAEkC,MAAM,aAAajC,CAAO,CAAC,SAAS8hB,GAAG/hB,EAAEC,EAAEC,EAAEsB,GAAG0O,GAAG1O,GAAsB,GAAnBvB,EAAE+hB,GAAG/hB,EAAE,aAAgBG,SAASF,EAAE,IAAIsa,GAAG,WAAW,SAAS,KAAKta,EAAEsB,GAAGxB,EAAEmQ,KAAK,CAAC8R,MAAM/hB,EAAEgiB,UAAUjiB,IAAI,CAAC,IAAIkiB,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAGriB,GAAGsiB,GAAGtiB,EAAE,EAAE,CAAC,SAASuiB,GAAGviB,GAAe,GAAGyH,EAAT+a,GAAGxiB,IAAY,OAAOA,CAAC,CACpe,SAASyiB,GAAGziB,EAAEC,GAAG,GAAG,WAAWD,EAAE,OAAOC,CAAC,CAAC,IAAIyiB,IAAG,EAAG,GAAG9hB,EAAG,CAAC,IAAI+hB,GAAG,GAAG/hB,EAAG,CAAC,IAAIgiB,GAAG,YAAY9hB,SAAS,IAAI8hB,GAAG,CAAC,IAAIC,GAAG/hB,SAASC,cAAc,OAAO8hB,GAAGxf,aAAa,UAAU,WAAWuf,GAAG,oBAAoBC,GAAGC,OAAO,CAACH,GAAGC,EAAE,MAAMD,IAAG,EAAGD,GAAGC,MAAM7hB,SAASyf,cAAc,EAAEzf,SAASyf,aAAa,CAAC,SAASwC,KAAKZ,KAAKA,GAAGa,YAAY,mBAAmBC,IAAIb,GAAGD,GAAG,KAAK,CAAC,SAASc,GAAGjjB,GAAG,GAAG,UAAUA,EAAEiC,cAAcsgB,GAAGH,IAAI,CAAC,IAAIniB,EAAE,GAAG8hB,GAAG9hB,EAAEmiB,GAAGpiB,EAAEsP,GAAGtP,IAAIwQ,GAAG6R,GAAGpiB,EAAE,CAAC,CAC/b,SAASijB,GAAGljB,EAAEC,EAAEC,GAAG,YAAYF,GAAG+iB,KAAUX,GAAGliB,GAARiiB,GAAGliB,GAAUkjB,YAAY,mBAAmBF,KAAK,aAAajjB,GAAG+iB,IAAI,CAAC,SAASK,GAAGpjB,GAAG,GAAG,oBAAoBA,GAAG,UAAUA,GAAG,YAAYA,EAAE,OAAOuiB,GAAGH,GAAG,CAAC,SAASiB,GAAGrjB,EAAEC,GAAG,GAAG,UAAUD,EAAE,OAAOuiB,GAAGtiB,EAAE,CAAC,SAASqjB,GAAGtjB,EAAEC,GAAG,GAAG,UAAUD,GAAG,WAAWA,EAAE,OAAOuiB,GAAGtiB,EAAE,CAAiE,IAAIsjB,GAAG,oBAAoBtiB,OAAOmO,GAAGnO,OAAOmO,GAA5G,SAAYpP,EAAEC,GAAG,OAAOD,IAAIC,IAAI,IAAID,GAAG,EAAEA,IAAI,EAAEC,IAAID,IAAIA,GAAGC,IAAIA,CAAC,EACtW,SAASujB,GAAGxjB,EAAEC,GAAG,GAAGsjB,GAAGvjB,EAAEC,GAAG,OAAM,EAAG,GAAG,kBAAkBD,GAAG,OAAOA,GAAG,kBAAkBC,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAIC,EAAEe,OAAO6M,KAAK9N,GAAGwB,EAAEP,OAAO6M,KAAK7N,GAAG,GAAGC,EAAEE,SAASoB,EAAEpB,OAAO,OAAM,EAAG,IAAIoB,EAAE,EAAEA,EAAEtB,EAAEE,OAAOoB,IAAI,CAAC,IAAIC,EAAEvB,EAAEsB,GAAG,IAAIR,EAAGiC,KAAKhD,EAAEwB,KAAK8hB,GAAGvjB,EAAEyB,GAAGxB,EAAEwB,IAAI,OAAM,CAAE,CAAC,OAAM,CAAE,CAAC,SAASgiB,GAAGzjB,GAAG,KAAKA,GAAGA,EAAEmK,YAAYnK,EAAEA,EAAEmK,WAAW,OAAOnK,CAAC,CACtU,SAAS0jB,GAAG1jB,EAAEC,GAAG,IAAwBuB,EAApBtB,EAAEujB,GAAGzjB,GAAO,IAAJA,EAAE,EAAYE,GAAG,CAAC,GAAG,IAAIA,EAAEwK,SAAS,CAA0B,GAAzBlJ,EAAExB,EAAEE,EAAEwJ,YAAYtJ,OAAUJ,GAAGC,GAAGuB,GAAGvB,EAAE,MAAM,CAAC0jB,KAAKzjB,EAAE0jB,OAAO3jB,EAAED,GAAGA,EAAEwB,CAAC,CAACxB,EAAE,CAAC,KAAKE,GAAG,CAAC,GAAGA,EAAE2jB,YAAY,CAAC3jB,EAAEA,EAAE2jB,YAAY,MAAM7jB,CAAC,CAACE,EAAEA,EAAEwP,UAAU,CAACxP,OAAE,CAAM,CAACA,EAAEujB,GAAGvjB,EAAE,CAAC,CAAC,SAAS4jB,GAAG9jB,EAAEC,GAAG,SAAOD,IAAGC,KAAED,IAAIC,KAAKD,GAAG,IAAIA,EAAE0K,YAAYzK,GAAG,IAAIA,EAAEyK,SAASoZ,GAAG9jB,EAAEC,EAAEyP,YAAY,aAAa1P,EAAEA,EAAE+jB,SAAS9jB,KAAGD,EAAEgkB,4BAAwD,GAA7BhkB,EAAEgkB,wBAAwB/jB,KAAY,CAC9Z,SAASgkB,KAAK,IAAI,IAAIjkB,EAAEa,OAAOZ,EAAE2H,IAAK3H,aAAaD,EAAEkkB,mBAAmB,CAAC,IAAI,IAAIhkB,EAAE,kBAAkBD,EAAEkkB,cAAc5F,SAAS6F,IAAI,CAAC,MAAM5iB,GAAGtB,GAAE,CAAE,CAAC,IAAGA,EAAyB,MAAMD,EAAE2H,GAA/B5H,EAAEC,EAAEkkB,eAAgCrjB,SAAS,CAAC,OAAOb,CAAC,CAAC,SAASokB,GAAGrkB,GAAG,IAAIC,EAAED,GAAGA,EAAE6G,UAAU7G,EAAE6G,SAASrE,cAAc,OAAOvC,IAAI,UAAUA,IAAI,SAASD,EAAEkC,MAAM,WAAWlC,EAAEkC,MAAM,QAAQlC,EAAEkC,MAAM,QAAQlC,EAAEkC,MAAM,aAAalC,EAAEkC,OAAO,aAAajC,GAAG,SAASD,EAAEskB,gBAAgB,CACxa,SAASC,GAAGvkB,GAAG,IAAIC,EAAEgkB,KAAK/jB,EAAEF,EAAEwkB,YAAYhjB,EAAExB,EAAEykB,eAAe,GAAGxkB,IAAIC,GAAGA,GAAGA,EAAEyI,eAAemb,GAAG5jB,EAAEyI,cAAc+b,gBAAgBxkB,GAAG,CAAC,GAAG,OAAOsB,GAAG6iB,GAAGnkB,GAAG,GAAGD,EAAEuB,EAAEmjB,WAAc,KAAR3kB,EAAEwB,EAAEojB,OAAiB5kB,EAAEC,GAAG,mBAAmBC,EAAEA,EAAE2kB,eAAe5kB,EAAEC,EAAE4kB,aAAa/Q,KAAKgR,IAAI/kB,EAAEE,EAAEyH,MAAMvH,aAAa,IAAGJ,GAAGC,EAAEC,EAAEyI,eAAe7H,WAAWb,EAAE+kB,aAAankB,QAASokB,aAAa,CAACjlB,EAAEA,EAAEilB,eAAe,IAAIxjB,EAAEvB,EAAEwJ,YAAYtJ,OAAOsB,EAAEqS,KAAKgR,IAAIvjB,EAAEmjB,MAAMljB,GAAGD,OAAE,IAASA,EAAEojB,IAAIljB,EAAEqS,KAAKgR,IAAIvjB,EAAEojB,IAAInjB,IAAIzB,EAAEklB,QAAQxjB,EAAEF,IAAIC,EAAED,EAAEA,EAAEE,EAAEA,EAAED,GAAGA,EAAEiiB,GAAGxjB,EAAEwB,GAAG,IAAIC,EAAE+hB,GAAGxjB,EACvfsB,GAAGC,GAAGE,IAAI,IAAI3B,EAAEmlB,YAAYnlB,EAAEolB,aAAa3jB,EAAEkiB,MAAM3jB,EAAEqlB,eAAe5jB,EAAEmiB,QAAQ5jB,EAAEslB,YAAY3jB,EAAEgiB,MAAM3jB,EAAEulB,cAAc5jB,EAAEiiB,WAAU3jB,EAAEA,EAAEulB,eAAgBC,SAAShkB,EAAEkiB,KAAKliB,EAAEmiB,QAAQ5jB,EAAE0lB,kBAAkBhkB,EAAEF,GAAGxB,EAAE2lB,SAAS1lB,GAAGD,EAAEklB,OAAOvjB,EAAEgiB,KAAKhiB,EAAEiiB,UAAU3jB,EAAE2lB,OAAOjkB,EAAEgiB,KAAKhiB,EAAEiiB,QAAQ5jB,EAAE2lB,SAAS1lB,IAAI,CAAM,IAALA,EAAE,GAAOD,EAAEE,EAAEF,EAAEA,EAAE0P,YAAY,IAAI1P,EAAE0K,UAAUzK,EAAEkQ,KAAK,CAAC0V,QAAQ7lB,EAAE8lB,KAAK9lB,EAAE+lB,WAAWC,IAAIhmB,EAAEimB,YAAmD,IAAvC,oBAAoB/lB,EAAEgmB,OAAOhmB,EAAEgmB,QAAYhmB,EAAE,EAAEA,EAAED,EAAEG,OAAOF,KAAIF,EAAEC,EAAEC,IAAK2lB,QAAQE,WAAW/lB,EAAE8lB,KAAK9lB,EAAE6lB,QAAQI,UAAUjmB,EAAEgmB,GAAG,CAAC,CACzf,IAAIG,GAAGvlB,GAAI,iBAAiBE,UAAU,IAAIA,SAASyf,aAAa6F,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,IAAG,EAC3F,SAASC,GAAGxmB,EAAEC,EAAEC,GAAG,IAAIsB,EAAEtB,EAAEW,SAASX,EAAEA,EAAEY,SAAS,IAAIZ,EAAEwK,SAASxK,EAAEA,EAAEyI,cAAc4d,IAAI,MAAMH,IAAIA,KAAKxe,EAAGpG,KAAU,mBAALA,EAAE4kB,KAAyB/B,GAAG7iB,GAAGA,EAAE,CAACmjB,MAAMnjB,EAAEqjB,eAAeD,IAAIpjB,EAAEsjB,cAAuFtjB,EAAE,CAAC4jB,YAA3E5jB,GAAGA,EAAEmH,eAAenH,EAAEmH,cAAcqc,aAAankB,QAAQokB,gBAA+BG,WAAWC,aAAa7jB,EAAE6jB,aAAaC,UAAU9jB,EAAE8jB,UAAUC,YAAY/jB,EAAE+jB,aAAce,IAAI9C,GAAG8C,GAAG9kB,KAAK8kB,GAAG9kB,EAAsB,GAApBA,EAAEwgB,GAAGqE,GAAG,aAAgBjmB,SAASH,EAAE,IAAIua,GAAG,WAAW,SAAS,KAAKva,EAAEC,GAAGF,EAAEmQ,KAAK,CAAC8R,MAAMhiB,EAAEiiB,UAAU1gB,IAAIvB,EAAEsP,OAAO6W,KAAK,CACtf,SAASK,GAAGzmB,EAAEC,GAAG,IAAIC,EAAE,CAAC,EAAiF,OAA/EA,EAAEF,EAAEwC,eAAevC,EAAEuC,cAActC,EAAE,SAASF,GAAG,SAASC,EAAEC,EAAE,MAAMF,GAAG,MAAMC,EAASC,CAAC,CAAC,IAAIwmB,GAAG,CAACC,aAAaF,GAAG,YAAY,gBAAgBG,mBAAmBH,GAAG,YAAY,sBAAsBI,eAAeJ,GAAG,YAAY,kBAAkBK,cAAcL,GAAG,aAAa,kBAAkBM,GAAG,CAAC,EAAEC,GAAG,CAAC,EACpF,SAASC,GAAGjnB,GAAG,GAAG+mB,GAAG/mB,GAAG,OAAO+mB,GAAG/mB,GAAG,IAAI0mB,GAAG1mB,GAAG,OAAOA,EAAE,IAAYE,EAARD,EAAEymB,GAAG1mB,GAAK,IAAIE,KAAKD,EAAE,GAAGA,EAAEkB,eAAejB,IAAIA,KAAK8mB,GAAG,OAAOD,GAAG/mB,GAAGC,EAAEC,GAAG,OAAOF,CAAC,CAA/XY,IAAKomB,GAAGlmB,SAASC,cAAc,OAAO4M,MAAM,mBAAmB9M,gBAAgB6lB,GAAGC,aAAaO,iBAAiBR,GAAGE,mBAAmBM,iBAAiBR,GAAGG,eAAeK,WAAW,oBAAoBrmB,eAAe6lB,GAAGI,cAAc9O,YAAwJ,IAAImP,GAAGF,GAAG,gBAAgBG,GAAGH,GAAG,sBAAsBI,GAAGJ,GAAG,kBAAkBK,GAAGL,GAAG,iBAAiBM,GAAG,IAAIrR,IAAIsR,GAAG,smBAAsmBllB,MAAM,KAC/lC,SAASmlB,GAAGznB,EAAEC,GAAGsnB,GAAG9hB,IAAIzF,EAAEC,GAAGQ,EAAGR,EAAE,CAACD,GAAG,CAAC,IAAI,IAAI0nB,GAAG,EAAEA,GAAGF,GAAGpnB,OAAOsnB,KAAK,CAAC,IAAIC,GAAGH,GAAGE,IAA2DD,GAApDE,GAAGnlB,cAAuD,MAAtCmlB,GAAG,GAAGhlB,cAAcglB,GAAG9kB,MAAM,IAAiB,CAAC4kB,GAAGN,GAAG,kBAAkBM,GAAGL,GAAG,wBAAwBK,GAAGJ,GAAG,oBAAoBI,GAAG,WAAW,iBAAiBA,GAAG,UAAU,WAAWA,GAAG,WAAW,UAAUA,GAAGH,GAAG,mBAAmB5mB,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,iBAAiB,CAAC,aAAa,gBAC7cA,EAAG,iBAAiB,CAAC,aAAa,gBAAgBD,EAAG,WAAW,oEAAoE6B,MAAM,MAAM7B,EAAG,WAAW,uFAAuF6B,MAAM,MAAM7B,EAAG,gBAAgB,CAAC,iBAAiB,WAAW,YAAY,UAAUA,EAAG,mBAAmB,2DAA2D6B,MAAM,MAAM7B,EAAG,qBAAqB,6DAA6D6B,MAAM,MAC/f7B,EAAG,sBAAsB,8DAA8D6B,MAAM,MAAM,IAAIslB,GAAG,6NAA6NtlB,MAAM,KAAKulB,GAAG,IAAItnB,IAAI,0CAA0C+B,MAAM,KAAKwlB,OAAOF,KACzZ,SAASG,GAAG/nB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEkC,MAAM,gBAAgBlC,EAAEoZ,cAAclZ,EAlDjE,SAAYF,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAA4B,GAAzByL,GAAGR,MAAMnP,KAAKzB,WAAc+Q,GAAG,CAAC,IAAGA,GAAgC,MAAMjM,MAAMlF,EAAE,MAA1C,IAAI6F,EAAEuL,GAAGD,IAAG,EAAGC,GAAG,KAA8BC,KAAKA,IAAG,EAAGC,GAAGzL,EAAE,CAAC,CAkDpEoiB,CAAGxmB,EAAEvB,OAAE,EAAOD,GAAGA,EAAEoZ,cAAc,IAAI,CACxG,SAASkJ,GAAGtiB,EAAEC,GAAGA,EAAE,KAAO,EAAFA,GAAK,IAAI,IAAIC,EAAE,EAAEA,EAAEF,EAAEI,OAAOF,IAAI,CAAC,IAAIsB,EAAExB,EAAEE,GAAGuB,EAAED,EAAEygB,MAAMzgB,EAAEA,EAAE0gB,UAAUliB,EAAE,CAAC,IAAI0B,OAAE,EAAO,GAAGzB,EAAE,IAAI,IAAI0B,EAAEH,EAAEpB,OAAO,EAAE,GAAGuB,EAAEA,IAAI,CAAC,IAAIkE,EAAErE,EAAEG,GAAGmE,EAAED,EAAEoiB,SAASriB,EAAEC,EAAEuT,cAA2B,GAAbvT,EAAEA,EAAEqiB,SAAYpiB,IAAIpE,GAAGD,EAAE+X,uBAAuB,MAAMxZ,EAAE+nB,GAAGtmB,EAAEoE,EAAED,GAAGlE,EAAEoE,CAAC,MAAM,IAAInE,EAAE,EAAEA,EAAEH,EAAEpB,OAAOuB,IAAI,CAAoD,GAA5CmE,GAAPD,EAAErE,EAAEG,IAAOsmB,SAASriB,EAAEC,EAAEuT,cAAcvT,EAAEA,EAAEqiB,SAAYpiB,IAAIpE,GAAGD,EAAE+X,uBAAuB,MAAMxZ,EAAE+nB,GAAGtmB,EAAEoE,EAAED,GAAGlE,EAAEoE,CAAC,CAAC,CAAC,CAAC,GAAGsL,GAAG,MAAMpR,EAAEqR,GAAGD,IAAG,EAAGC,GAAG,KAAKrR,CAAE,CAC5a,SAASmoB,GAAEnoB,EAAEC,GAAG,IAAIC,EAAED,EAAEmoB,SAAI,IAASloB,IAAIA,EAAED,EAAEmoB,IAAI,IAAI7nB,KAAK,IAAIiB,EAAExB,EAAE,WAAWE,EAAEmoB,IAAI7mB,KAAK8mB,GAAGroB,EAAED,EAAE,GAAE,GAAIE,EAAES,IAAIa,GAAG,CAAC,SAAS+mB,GAAGvoB,EAAEC,EAAEC,GAAG,IAAIsB,EAAE,EAAEvB,IAAIuB,GAAG,GAAG8mB,GAAGpoB,EAAEF,EAAEwB,EAAEvB,EAAE,CAAC,IAAIuoB,GAAG,kBAAkBzU,KAAK0U,SAASve,SAAS,IAAIrH,MAAM,GAAG,SAAS6lB,GAAG1oB,GAAG,IAAIA,EAAEwoB,IAAI,CAACxoB,EAAEwoB,KAAI,EAAGloB,EAAGiC,SAAQ,SAAStC,GAAG,oBAAoBA,IAAI4nB,GAAGQ,IAAIpoB,IAAIsoB,GAAGtoB,GAAE,EAAGD,GAAGuoB,GAAGtoB,GAAE,EAAGD,GAAG,IAAG,IAAIC,EAAE,IAAID,EAAE0K,SAAS1K,EAAEA,EAAE2I,cAAc,OAAO1I,GAAGA,EAAEuoB,MAAMvoB,EAAEuoB,KAAI,EAAGD,GAAG,mBAAkB,EAAGtoB,GAAG,CAAC,CACjb,SAASqoB,GAAGtoB,EAAEC,EAAEC,EAAEsB,GAAG,OAAO+W,GAAGtY,IAAI,KAAK,EAAE,IAAIwB,EAAEsW,GAAG,MAAM,KAAK,EAAEtW,EAAEyW,GAAG,MAAM,QAAQzW,EAAEwW,GAAG/X,EAAEuB,EAAEknB,KAAK,KAAK1oB,EAAEC,EAAEF,GAAGyB,OAAE,GAAQiP,IAAI,eAAezQ,GAAG,cAAcA,GAAG,UAAUA,IAAIwB,GAAE,GAAID,OAAE,IAASC,EAAEzB,EAAE4Q,iBAAiB3Q,EAAEC,EAAE,CAAC0oB,SAAQ,EAAGC,QAAQpnB,IAAIzB,EAAE4Q,iBAAiB3Q,EAAEC,GAAE,QAAI,IAASuB,EAAEzB,EAAE4Q,iBAAiB3Q,EAAEC,EAAE,CAAC2oB,QAAQpnB,IAAIzB,EAAE4Q,iBAAiB3Q,EAAEC,GAAE,EAAG,CAClV,SAASiY,GAAGnY,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAEF,EAAE,GAAG,KAAO,EAAFvB,IAAM,KAAO,EAAFA,IAAM,OAAOuB,EAAExB,EAAE,OAAO,CAAC,GAAG,OAAOwB,EAAE,OAAO,IAAIG,EAAEH,EAAE2E,IAAI,GAAG,IAAIxE,GAAG,IAAIA,EAAE,CAAC,IAAIkE,EAAErE,EAAEwO,UAAUmH,cAAc,GAAGtR,IAAIpE,GAAG,IAAIoE,EAAE6E,UAAU7E,EAAE6J,aAAajO,EAAE,MAAM,GAAG,IAAIE,EAAE,IAAIA,EAAEH,EAAEkQ,OAAO,OAAO/P,GAAG,CAAC,IAAImE,EAAEnE,EAAEwE,IAAI,IAAG,IAAIL,GAAG,IAAIA,MAAKA,EAAEnE,EAAEqO,UAAUmH,iBAAkB1V,GAAG,IAAIqE,EAAE4E,UAAU5E,EAAE4J,aAAajO,GAAE,OAAOE,EAAEA,EAAE+P,MAAM,CAAC,KAAK,OAAO7L,GAAG,CAAS,GAAG,QAAXlE,EAAEqV,GAAGnR,IAAe,OAAe,GAAG,KAAXC,EAAEnE,EAAEwE,MAAc,IAAIL,EAAE,CAACtE,EAAEE,EAAEC,EAAE,SAAS3B,CAAC,CAAC6F,EAAEA,EAAE6J,UAAU,CAAC,CAAClO,EAAEA,EAAEkQ,MAAM,CAAClB,IAAG,WAAW,IAAIhP,EAAEE,EAAED,EAAE6N,GAAGpP,GAAGyB,EAAE,GACpf3B,EAAE,CAAC,IAAI6F,EAAE0hB,GAAGrgB,IAAIlH,GAAG,QAAG,IAAS6F,EAAE,CAAC,IAAIC,EAAE0U,GAAGsO,EAAE9oB,EAAE,OAAOA,GAAG,IAAK,WAAW,GAAG,IAAI4Y,GAAG1Y,GAAG,MAAMF,EAAE,IAAK,UAAU,IAAK,QAAQ8F,EAAE6Y,GAAG,MAAM,IAAK,UAAUmK,EAAE,QAAQhjB,EAAEsW,GAAG,MAAM,IAAK,WAAW0M,EAAE,OAAOhjB,EAAEsW,GAAG,MAAM,IAAK,aAAa,IAAK,YAAYtW,EAAEsW,GAAG,MAAM,IAAK,QAAQ,GAAG,IAAIlc,EAAEwb,OAAO,MAAM1b,EAAE,IAAK,WAAW,IAAK,WAAW,IAAK,YAAY,IAAK,YAAY,IAAK,UAAU,IAAK,WAAW,IAAK,YAAY,IAAK,cAAc8F,EAAEmW,GAAG,MAAM,IAAK,OAAO,IAAK,UAAU,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,OAAOnW,EAC1iBoW,GAAG,MAAM,IAAK,cAAc,IAAK,WAAW,IAAK,YAAY,IAAK,aAAapW,EAAEwZ,GAAG,MAAM,KAAK6H,GAAG,KAAKC,GAAG,KAAKC,GAAGvhB,EAAEuW,GAAG,MAAM,KAAKiL,GAAGxhB,EAAE4Z,GAAG,MAAM,IAAK,SAAS5Z,EAAE8U,GAAG,MAAM,IAAK,QAAQ9U,EAAEqa,GAAG,MAAM,IAAK,OAAO,IAAK,MAAM,IAAK,QAAQra,EAAE6W,GAAG,MAAM,IAAK,oBAAoB,IAAK,qBAAqB,IAAK,gBAAgB,IAAK,cAAc,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,YAAY7W,EAAE8Y,GAAG,IAAImK,EAAE,KAAO,EAAF9oB,GAAK+oB,GAAGD,GAAG,WAAW/oB,EAAEipB,EAAEF,EAAE,OAAOljB,EAAEA,EAAE,UAAU,KAAKA,EAAEkjB,EAAE,GAAG,IAAI,IAAQG,EAAJC,EAAE3nB,EAAI,OAC/e2nB,GAAG,CAAK,IAAIC,GAARF,EAAEC,GAAUnZ,UAAsF,GAA5E,IAAIkZ,EAAE/iB,KAAK,OAAOijB,IAAIF,EAAEE,EAAE,OAAOH,IAAc,OAAVG,EAAE3Y,GAAG0Y,EAAEF,KAAYF,EAAE5Y,KAAKkZ,GAAGF,EAAEC,EAAEF,MAASF,EAAE,MAAMG,EAAEA,EAAEzX,MAAM,CAAC,EAAEqX,EAAE3oB,SAASyF,EAAE,IAAIC,EAAED,EAAEijB,EAAE,KAAK5oB,EAAEuB,GAAGE,EAAEwO,KAAK,CAAC8R,MAAMpc,EAAEqc,UAAU6G,IAAI,CAAC,CAAC,GAAG,KAAO,EAAF9oB,GAAK,CAA4E,GAAnC6F,EAAE,aAAa9F,GAAG,eAAeA,KAAtE6F,EAAE,cAAc7F,GAAG,gBAAgBA,IAA2CE,IAAImP,MAAKyZ,EAAE5oB,EAAE0b,eAAe1b,EAAE2b,eAAe7E,GAAG8R,KAAIA,EAAEQ,OAAgBxjB,GAAGD,KAAGA,EAAEpE,EAAEZ,SAASY,EAAEA,GAAGoE,EAAEpE,EAAEkH,eAAe9C,EAAEmf,aAAanf,EAAE0jB,aAAa1oB,OAAUiF,GAAqCA,EAAEtE,EAAiB,QAAfsnB,GAAnCA,EAAE5oB,EAAE0b,eAAe1b,EAAE4b,WAAkB9E,GAAG8R,GAAG,QAC9dA,KAARE,EAAExX,GAAGsX,KAAU,IAAIA,EAAE3iB,KAAK,IAAI2iB,EAAE3iB,OAAK2iB,EAAE,QAAUhjB,EAAE,KAAKgjB,EAAEtnB,GAAKsE,IAAIgjB,GAAE,CAAgU,GAA/TC,EAAE9M,GAAGmN,EAAE,eAAeH,EAAE,eAAeE,EAAE,QAAW,eAAenpB,GAAG,gBAAgBA,IAAE+oB,EAAEnK,GAAGwK,EAAE,iBAAiBH,EAAE,iBAAiBE,EAAE,WAAUH,EAAE,MAAMljB,EAAED,EAAE2c,GAAG1c,GAAGojB,EAAE,MAAMJ,EAAEjjB,EAAE2c,GAAGsG,IAAGjjB,EAAE,IAAIkjB,EAAEK,EAAED,EAAE,QAAQrjB,EAAE5F,EAAEuB,IAAK8N,OAAOyZ,EAAEnjB,EAAE+V,cAAcsN,EAAEE,EAAE,KAAKpS,GAAGvV,KAAKD,KAAIunB,EAAE,IAAIA,EAAEE,EAAEE,EAAE,QAAQL,EAAE5oB,EAAEuB,IAAK8N,OAAO2Z,EAAEH,EAAEnN,cAAcoN,EAAEI,EAAEL,GAAGC,EAAEI,EAAKtjB,GAAGgjB,EAAE7oB,EAAE,CAAa,IAARgpB,EAAEH,EAAEK,EAAE,EAAMD,EAAhBH,EAAEjjB,EAAkBojB,EAAEA,EAAEM,GAAGN,GAAGC,IAAQ,IAAJD,EAAE,EAAME,EAAEH,EAAEG,EAAEA,EAAEI,GAAGJ,GAAGF,IAAI,KAAK,EAAEC,EAAED,GAAGH,EAAES,GAAGT,GAAGI,IAAI,KAAK,EAAED,EAAEC,GAAGF,EACpfO,GAAGP,GAAGC,IAAI,KAAKC,KAAK,CAAC,GAAGJ,IAAIE,GAAG,OAAOA,GAAGF,IAAIE,EAAExX,UAAU,MAAMxR,EAAE8oB,EAAES,GAAGT,GAAGE,EAAEO,GAAGP,EAAE,CAACF,EAAE,IAAI,MAAMA,EAAE,KAAK,OAAOjjB,GAAG2jB,GAAG9nB,EAAEkE,EAAEC,EAAEijB,GAAE,GAAI,OAAOD,GAAG,OAAOE,GAAGS,GAAG9nB,EAAEqnB,EAAEF,EAAEC,GAAE,EAAG,CAA8D,GAAG,YAA1CjjB,GAAjBD,EAAErE,EAAEghB,GAAGhhB,GAAGX,QAAWgG,UAAUhB,EAAEgB,SAASrE,gBAA+B,UAAUsD,GAAG,SAASD,EAAE3D,KAAK,IAAIwnB,EAAGjH,QAAQ,GAAGX,GAAGjc,GAAG,GAAG6c,GAAGgH,EAAGpG,OAAO,CAACoG,EAAGtG,GAAG,IAAIuG,EAAGzG,EAAE,MAAMpd,EAAED,EAAEgB,WAAW,UAAUf,EAAEtD,gBAAgB,aAAaqD,EAAE3D,MAAM,UAAU2D,EAAE3D,QAAQwnB,EAAGrG,IACrV,OAD4VqG,IAAKA,EAAGA,EAAG1pB,EAAEwB,IAAKugB,GAAGpgB,EAAE+nB,EAAGxpB,EAAEuB,IAAWkoB,GAAIA,EAAG3pB,EAAE6F,EAAErE,GAAG,aAAaxB,IAAI2pB,EAAG9jB,EAAEqC,gBAClfyhB,EAAGrhB,YAAY,WAAWzC,EAAE3D,MAAMuG,GAAG5C,EAAE,SAASA,EAAE8B,QAAOgiB,EAAGnoB,EAAEghB,GAAGhhB,GAAGX,OAAcb,GAAG,IAAK,WAAa8hB,GAAG6H,IAAK,SAASA,EAAGrF,mBAAgB8B,GAAGuD,EAAGtD,GAAG7kB,EAAE8kB,GAAG,MAAK,MAAM,IAAK,WAAWA,GAAGD,GAAGD,GAAG,KAAK,MAAM,IAAK,YAAYG,IAAG,EAAG,MAAM,IAAK,cAAc,IAAK,UAAU,IAAK,UAAUA,IAAG,EAAGC,GAAG7kB,EAAEzB,EAAEuB,GAAG,MAAM,IAAK,kBAAkB,GAAG0kB,GAAG,MAAM,IAAK,UAAU,IAAK,QAAQK,GAAG7kB,EAAEzB,EAAEuB,GAAG,IAAImoB,EAAG,GAAGvJ,GAAGpgB,EAAE,CAAC,OAAOD,GAAG,IAAK,mBAAmB,IAAI6pB,EAAG,qBAAqB,MAAM5pB,EAAE,IAAK,iBAAiB4pB,EAAG,mBACpe,MAAM5pB,EAAE,IAAK,oBAAoB4pB,EAAG,sBAAsB,MAAM5pB,EAAE4pB,OAAG,CAAM,MAAM/I,GAAGF,GAAG5gB,EAAEE,KAAK2pB,EAAG,oBAAoB,YAAY7pB,GAAG,MAAME,EAAE2Y,UAAUgR,EAAG,sBAAsBA,IAAKpJ,IAAI,OAAOvgB,EAAEue,SAASqC,IAAI,uBAAuB+I,EAAG,qBAAqBA,GAAI/I,KAAK8I,EAAGjR,OAAYF,GAAG,UAARD,GAAG/W,GAAkB+W,GAAG7Q,MAAM6Q,GAAG9O,YAAYoX,IAAG,IAAiB,GAAZ6I,EAAG3H,GAAGxgB,EAAEqoB,IAASzpB,SAASypB,EAAG,IAAIjN,GAAGiN,EAAG7pB,EAAE,KAAKE,EAAEuB,GAAGE,EAAEwO,KAAK,CAAC8R,MAAM4H,EAAG3H,UAAUyH,IAAKC,EAAGC,EAAGhN,KAAK+M,EAAa,QAATA,EAAG/I,GAAG3gB,MAAe2pB,EAAGhN,KAAK+M,MAAUA,EAAGpJ,GA5BhM,SAAYxgB,EAAEC,GAAG,OAAOD,GAAG,IAAK,iBAAiB,OAAO6gB,GAAG5gB,GAAG,IAAK,WAAW,OAAG,KAAKA,EAAEye,MAAa,MAAKiC,IAAG,EAAUD,IAAG,IAAK,YAAY,OAAO1gB,EAAEC,EAAE4c,QAAS6D,IAAIC,GAAG,KAAK3gB,EAAE,QAAQ,OAAO,KAAK,CA4BE8pB,CAAG9pB,EAAEE,GA3Bzd,SAAYF,EAAEC,GAAG,GAAG6gB,GAAG,MAAM,mBAAmB9gB,IAAIqgB,IAAIO,GAAG5gB,EAAEC,IAAID,EAAE2Y,KAAKD,GAAGD,GAAGD,GAAG,KAAKsI,IAAG,EAAG9gB,GAAG,KAAK,OAAOA,GAAG,IAAK,QAAgQ,QAAQ,OAAO,KAA3P,IAAK,WAAW,KAAKC,EAAEmb,SAASnb,EAAEqb,QAAQrb,EAAEsb,UAAUtb,EAAEmb,SAASnb,EAAEqb,OAAO,CAAC,GAAGrb,EAAE8pB,MAAM,EAAE9pB,EAAE8pB,KAAK3pB,OAAO,OAAOH,EAAE8pB,KAAK,GAAG9pB,EAAEye,MAAM,OAAON,OAAOC,aAAape,EAAEye,MAAM,CAAC,OAAO,KAAK,IAAK,iBAAiB,OAAO+B,IAAI,OAAOxgB,EAAEwe,OAAO,KAAKxe,EAAE4c,KAAyB,CA2BqFmN,CAAGhqB,EAAEE,MACje,GADoesB,EAAEwgB,GAAGxgB,EAAE,kBACvepB,SAASqB,EAAE,IAAImb,GAAG,gBAAgB,cAAc,KAAK1c,EAAEuB,GAAGE,EAAEwO,KAAK,CAAC8R,MAAMxgB,EAAEygB,UAAU1gB,IAAIC,EAAEob,KAAK+M,GAAG,CAACtH,GAAG3gB,EAAE1B,EAAE,GAAE,CAAC,SAASopB,GAAGrpB,EAAEC,EAAEC,GAAG,MAAM,CAAC+nB,SAASjoB,EAAEkoB,SAASjoB,EAAEmZ,cAAclZ,EAAE,CAAC,SAAS8hB,GAAGhiB,EAAEC,GAAG,IAAI,IAAIC,EAAED,EAAE,UAAUuB,EAAE,GAAG,OAAOxB,GAAG,CAAC,IAAIyB,EAAEzB,EAAE0B,EAAED,EAAEuO,UAAU,IAAIvO,EAAE0E,KAAK,OAAOzE,IAAID,EAAEC,EAAY,OAAVA,EAAE+O,GAAGzQ,EAAEE,KAAYsB,EAAEyoB,QAAQZ,GAAGrpB,EAAE0B,EAAED,IAAc,OAAVC,EAAE+O,GAAGzQ,EAAEC,KAAYuB,EAAE2O,KAAKkZ,GAAGrpB,EAAE0B,EAAED,KAAKzB,EAAEA,EAAE0R,MAAM,CAAC,OAAOlQ,CAAC,CAAC,SAASgoB,GAAGxpB,GAAG,GAAG,OAAOA,EAAE,OAAO,KAAK,GAAGA,EAAEA,EAAE0R,aAAa1R,GAAG,IAAIA,EAAEmG,KAAK,OAAOnG,GAAI,IAAI,CACnd,SAASypB,GAAGzpB,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAI,IAAIC,EAAEzB,EAAEiZ,WAAWvX,EAAE,GAAG,OAAOzB,GAAGA,IAAIsB,GAAG,CAAC,IAAIqE,EAAE3F,EAAE4F,EAAED,EAAE4L,UAAU7L,EAAEC,EAAEmK,UAAU,GAAG,OAAOlK,GAAGA,IAAItE,EAAE,MAAM,IAAIqE,EAAEM,KAAK,OAAOP,IAAIC,EAAED,EAAEnE,EAAa,OAAVqE,EAAE2K,GAAGvQ,EAAEwB,KAAYC,EAAEsoB,QAAQZ,GAAGnpB,EAAE4F,EAAED,IAAKpE,GAAc,OAAVqE,EAAE2K,GAAGvQ,EAAEwB,KAAYC,EAAEwO,KAAKkZ,GAAGnpB,EAAE4F,EAAED,KAAM3F,EAAEA,EAAEwR,MAAM,CAAC,IAAI/P,EAAEvB,QAAQJ,EAAEmQ,KAAK,CAAC8R,MAAMhiB,EAAEiiB,UAAUvgB,GAAG,CAAC,IAAIuoB,GAAG,SAASC,GAAG,iBAAiB,SAASC,GAAGpqB,GAAG,OAAO,kBAAkBA,EAAEA,EAAE,GAAGA,GAAGuD,QAAQ2mB,GAAG,MAAM3mB,QAAQ4mB,GAAG,GAAG,CAAC,SAASE,GAAGrqB,EAAEC,EAAEC,GAAW,GAARD,EAAEmqB,GAAGnqB,GAAMmqB,GAAGpqB,KAAKC,GAAGC,EAAE,MAAM+E,MAAMlF,EAAE,KAAM,CAAC,SAASuqB,KAAK,CAC9e,IAAIC,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAGzqB,EAAEC,GAAG,MAAM,aAAaD,GAAG,aAAaA,GAAG,kBAAkBC,EAAEqJ,UAAU,kBAAkBrJ,EAAEqJ,UAAU,kBAAkBrJ,EAAEoJ,yBAAyB,OAAOpJ,EAAEoJ,yBAAyB,MAAMpJ,EAAEoJ,wBAAwBqhB,MAAM,CAC5P,IAAIC,GAAG,oBAAoBC,WAAWA,gBAAW,EAAOC,GAAG,oBAAoBC,aAAaA,kBAAa,EAAOC,GAAG,oBAAoBC,QAAQA,aAAQ,EAAOC,GAAG,oBAAoBC,eAAeA,eAAe,qBAAqBH,GAAG,SAAS/qB,GAAG,OAAO+qB,GAAGI,QAAQ,MAAMC,KAAKprB,GAAGqrB,MAAMC,GAAG,EAAEX,GAAG,SAASW,GAAGtrB,GAAG4qB,YAAW,WAAW,MAAM5qB,CAAE,GAAE,CACpV,SAASurB,GAAGvrB,EAAEC,GAAG,IAAIC,EAAED,EAAEuB,EAAE,EAAE,EAAE,CAAC,IAAIC,EAAEvB,EAAE2jB,YAA6B,GAAjB7jB,EAAEoK,YAAYlK,GAAMuB,GAAG,IAAIA,EAAEiJ,SAAS,GAAY,QAATxK,EAAEuB,EAAEob,MAAc,CAAC,GAAG,IAAIrb,EAA0B,OAAvBxB,EAAEoK,YAAY3I,QAAGkW,GAAG1X,GAAUuB,GAAG,KAAK,MAAMtB,GAAG,OAAOA,GAAG,OAAOA,GAAGsB,IAAItB,EAAEuB,CAAC,OAAOvB,GAAGyX,GAAG1X,EAAE,CAAC,SAASurB,GAAGxrB,GAAG,KAAK,MAAMA,EAAEA,EAAEA,EAAE6jB,YAAY,CAAC,IAAI5jB,EAAED,EAAE0K,SAAS,GAAG,IAAIzK,GAAG,IAAIA,EAAE,MAAM,GAAG,IAAIA,EAAE,CAAU,GAAG,OAAZA,EAAED,EAAE6c,OAAiB,OAAO5c,GAAG,OAAOA,EAAE,MAAM,GAAG,OAAOA,EAAE,OAAO,IAAI,CAAC,CAAC,OAAOD,CAAC,CACjY,SAASyrB,GAAGzrB,GAAGA,EAAEA,EAAE0rB,gBAAgB,IAAI,IAAIzrB,EAAE,EAAED,GAAG,CAAC,GAAG,IAAIA,EAAE0K,SAAS,CAAC,IAAIxK,EAAEF,EAAE6c,KAAK,GAAG,MAAM3c,GAAG,OAAOA,GAAG,OAAOA,EAAE,CAAC,GAAG,IAAID,EAAE,OAAOD,EAAEC,GAAG,KAAK,OAAOC,GAAGD,GAAG,CAACD,EAAEA,EAAE0rB,eAAe,CAAC,OAAO,IAAI,CAAC,IAAIC,GAAG5X,KAAK0U,SAASve,SAAS,IAAIrH,MAAM,GAAG+oB,GAAG,gBAAgBD,GAAGE,GAAG,gBAAgBF,GAAGrC,GAAG,oBAAoBqC,GAAGvD,GAAG,iBAAiBuD,GAAGG,GAAG,oBAAoBH,GAAGI,GAAG,kBAAkBJ,GAClX,SAAS3U,GAAGhX,GAAG,IAAIC,EAAED,EAAE4rB,IAAI,GAAG3rB,EAAE,OAAOA,EAAE,IAAI,IAAIC,EAAEF,EAAE0P,WAAWxP,GAAG,CAAC,GAAGD,EAAEC,EAAEopB,KAAKppB,EAAE0rB,IAAI,CAAe,GAAd1rB,EAAED,EAAEwR,UAAa,OAAOxR,EAAEgS,OAAO,OAAO/R,GAAG,OAAOA,EAAE+R,MAAM,IAAIjS,EAAEyrB,GAAGzrB,GAAG,OAAOA,GAAG,CAAC,GAAGE,EAAEF,EAAE4rB,IAAI,OAAO1rB,EAAEF,EAAEyrB,GAAGzrB,EAAE,CAAC,OAAOC,CAAC,CAAKC,GAAJF,EAAEE,GAAMwP,UAAU,CAAC,OAAO,IAAI,CAAC,SAASK,GAAG/P,GAAkB,QAAfA,EAAEA,EAAE4rB,KAAK5rB,EAAEspB,MAAc,IAAItpB,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,KAAKnG,EAAEmG,KAAK,IAAInG,EAAEmG,IAAI,KAAKnG,CAAC,CAAC,SAASwiB,GAAGxiB,GAAG,GAAG,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,IAAI,OAAOnG,EAAEgQ,UAAU,MAAM/K,MAAMlF,EAAE,IAAK,CAAC,SAASkQ,GAAGjQ,GAAG,OAAOA,EAAE6rB,KAAK,IAAI,CAAC,IAAIG,GAAG,GAAGC,IAAI,EAAE,SAASC,GAAGlsB,GAAG,MAAM,CAACmS,QAAQnS,EAAE,CACve,SAASmsB,GAAEnsB,GAAG,EAAEisB,KAAKjsB,EAAEmS,QAAQ6Z,GAAGC,IAAID,GAAGC,IAAI,KAAKA,KAAK,CAAC,SAASG,GAAEpsB,EAAEC,GAAGgsB,KAAKD,GAAGC,IAAIjsB,EAAEmS,QAAQnS,EAAEmS,QAAQlS,CAAC,CAAC,IAAIosB,GAAG,CAAC,EAAEC,GAAEJ,GAAGG,IAAIE,GAAGL,IAAG,GAAIM,GAAGH,GAAG,SAASI,GAAGzsB,EAAEC,GAAG,IAAIC,EAAEF,EAAEkC,KAAKwqB,aAAa,IAAIxsB,EAAE,OAAOmsB,GAAG,IAAI7qB,EAAExB,EAAEgQ,UAAU,GAAGxO,GAAGA,EAAEmrB,8CAA8C1sB,EAAE,OAAOuB,EAAEorB,0CAA0C,IAASlrB,EAALD,EAAE,CAAC,EAAI,IAAIC,KAAKxB,EAAEuB,EAAEC,GAAGzB,EAAEyB,GAAoH,OAAjHF,KAAIxB,EAAEA,EAAEgQ,WAAY2c,4CAA4C1sB,EAAED,EAAE4sB,0CAA0CnrB,GAAUA,CAAC,CAC9d,SAASorB,GAAG7sB,GAAyB,OAAO,QAA7BA,EAAEA,EAAE8sB,yBAAmC,IAAS9sB,CAAC,CAAC,SAAS+sB,KAAKZ,GAAEI,IAAIJ,GAAEG,GAAE,CAAC,SAASU,GAAGhtB,EAAEC,EAAEC,GAAG,GAAGosB,GAAEna,UAAUka,GAAG,MAAMpnB,MAAMlF,EAAE,MAAMqsB,GAAEE,GAAErsB,GAAGmsB,GAAEG,GAAGrsB,EAAE,CAAC,SAAS+sB,GAAGjtB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEgQ,UAAgC,GAAtB/P,EAAEA,EAAE6sB,kBAAqB,oBAAoBtrB,EAAE0rB,gBAAgB,OAAOhtB,EAAwB,IAAI,IAAIuB,KAA9BD,EAAEA,EAAE0rB,kBAAiC,KAAKzrB,KAAKxB,GAAG,MAAMgF,MAAMlF,EAAE,IAAI2G,EAAG1G,IAAI,UAAUyB,IAAI,OAAOqD,EAAE,CAAC,EAAE5E,EAAEsB,EAAE,CACxX,SAAS2rB,GAAGntB,GAA2G,OAAxGA,GAAGA,EAAEA,EAAEgQ,YAAYhQ,EAAEotB,2CAA2Cf,GAAGG,GAAGF,GAAEna,QAAQia,GAAEE,GAAEtsB,GAAGosB,GAAEG,GAAGA,GAAGpa,UAAe,CAAE,CAAC,SAASkb,GAAGrtB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEgQ,UAAU,IAAIxO,EAAE,MAAMyD,MAAMlF,EAAE,MAAMG,GAAGF,EAAEitB,GAAGjtB,EAAEC,EAAEusB,IAAIhrB,EAAE4rB,0CAA0CptB,EAAEmsB,GAAEI,IAAIJ,GAAEG,IAAGF,GAAEE,GAAEtsB,IAAImsB,GAAEI,IAAIH,GAAEG,GAAGrsB,EAAE,CAAC,IAAIotB,GAAG,KAAKC,IAAG,EAAGC,IAAG,EAAG,SAASC,GAAGztB,GAAG,OAAOstB,GAAGA,GAAG,CAACttB,GAAGstB,GAAGnd,KAAKnQ,EAAE,CAChW,SAAS0tB,KAAK,IAAIF,IAAI,OAAOF,GAAG,CAACE,IAAG,EAAG,IAAIxtB,EAAE,EAAEC,EAAEoV,GAAE,IAAI,IAAInV,EAAEotB,GAAG,IAAIjY,GAAE,EAAErV,EAAEE,EAAEE,OAAOJ,IAAI,CAAC,IAAIwB,EAAEtB,EAAEF,GAAG,GAAGwB,EAAEA,GAAE,SAAU,OAAOA,EAAE,CAAC8rB,GAAG,KAAKC,IAAG,CAAE,CAAC,MAAM9rB,GAAG,MAAM,OAAO6rB,KAAKA,GAAGA,GAAGzqB,MAAM7C,EAAE,IAAIsS,GAAGY,GAAGwa,IAAIjsB,CAAE,CAAC,QAAQ4T,GAAEpV,EAAEutB,IAAG,CAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAIG,GAAG,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,EAAEC,GAAG,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,EAAEC,GAAG,GAAG,SAASC,GAAGpuB,EAAEC,GAAG0tB,GAAGC,MAAME,GAAGH,GAAGC,MAAMC,GAAGA,GAAG7tB,EAAE8tB,GAAG7tB,CAAC,CACjV,SAASouB,GAAGruB,EAAEC,EAAEC,GAAG6tB,GAAGC,MAAME,GAAGH,GAAGC,MAAMG,GAAGJ,GAAGC,MAAMC,GAAGA,GAAGjuB,EAAE,IAAIwB,EAAE0sB,GAAGluB,EAAEmuB,GAAG,IAAI1sB,EAAE,GAAGqS,GAAGtS,GAAG,EAAEA,KAAK,GAAGC,GAAGvB,GAAG,EAAE,IAAIwB,EAAE,GAAGoS,GAAG7T,GAAGwB,EAAE,GAAG,GAAGC,EAAE,CAAC,IAAIC,EAAEF,EAAEA,EAAE,EAAEC,GAAGF,GAAG,GAAGG,GAAG,GAAGuI,SAAS,IAAI1I,IAAIG,EAAEF,GAAGE,EAAEusB,GAAG,GAAG,GAAGpa,GAAG7T,GAAGwB,EAAEvB,GAAGuB,EAAED,EAAE2sB,GAAGzsB,EAAE1B,CAAC,MAAMkuB,GAAG,GAAGxsB,EAAExB,GAAGuB,EAAED,EAAE2sB,GAAGnuB,CAAC,CAAC,SAASsuB,GAAGtuB,GAAG,OAAOA,EAAE0R,SAAS0c,GAAGpuB,EAAE,GAAGquB,GAAGruB,EAAE,EAAE,GAAG,CAAC,SAASuuB,GAAGvuB,GAAG,KAAKA,IAAI6tB,IAAIA,GAAGF,KAAKC,IAAID,GAAGC,IAAI,KAAKE,GAAGH,KAAKC,IAAID,GAAGC,IAAI,KAAK,KAAK5tB,IAAIiuB,IAAIA,GAAGF,KAAKC,IAAID,GAAGC,IAAI,KAAKG,GAAGJ,KAAKC,IAAID,GAAGC,IAAI,KAAKE,GAAGH,KAAKC,IAAID,GAAGC,IAAI,IAAI,CAAC,IAAIQ,GAAG,KAAKC,GAAG,KAAKC,IAAE,EAAGC,GAAG,KACje,SAASC,GAAG5uB,EAAEC,GAAG,IAAIC,EAAE2uB,GAAG,EAAE,KAAK,KAAK,GAAG3uB,EAAE4uB,YAAY,UAAU5uB,EAAE8P,UAAU/P,EAAEC,EAAEwR,OAAO1R,EAAgB,QAAdC,EAAED,EAAE+uB,YAAoB/uB,EAAE+uB,UAAU,CAAC7uB,GAAGF,EAAE2R,OAAO,IAAI1R,EAAEkQ,KAAKjQ,EAAE,CACxJ,SAAS8uB,GAAGhvB,EAAEC,GAAG,OAAOD,EAAEmG,KAAK,KAAK,EAAE,IAAIjG,EAAEF,EAAEkC,KAAyE,OAAO,QAA3EjC,EAAE,IAAIA,EAAEyK,UAAUxK,EAAEsC,gBAAgBvC,EAAE4G,SAASrE,cAAc,KAAKvC,KAAmBD,EAAEgQ,UAAU/P,EAAEuuB,GAAGxuB,EAAEyuB,GAAGjD,GAAGvrB,EAAEkK,aAAY,GAAO,KAAK,EAAE,OAAoD,QAA7ClK,EAAE,KAAKD,EAAEivB,cAAc,IAAIhvB,EAAEyK,SAAS,KAAKzK,KAAYD,EAAEgQ,UAAU/P,EAAEuuB,GAAGxuB,EAAEyuB,GAAG,MAAK,GAAO,KAAK,GAAG,OAA+B,QAAxBxuB,EAAE,IAAIA,EAAEyK,SAAS,KAAKzK,KAAYC,EAAE,OAAO+tB,GAAG,CAAC7V,GAAG8V,GAAGgB,SAASf,IAAI,KAAKnuB,EAAE6R,cAAc,CAACC,WAAW7R,EAAEkvB,YAAYjvB,EAAEkvB,UAAU,aAAYlvB,EAAE2uB,GAAG,GAAG,KAAK,KAAK,IAAK7e,UAAU/P,EAAEC,EAAEwR,OAAO1R,EAAEA,EAAEiS,MAAM/R,EAAEsuB,GAAGxuB,EAAEyuB,GAClf,MAAK,GAAO,QAAQ,OAAM,EAAG,CAAC,SAASY,GAAGrvB,GAAG,OAAO,KAAY,EAAPA,EAAEsvB,OAAS,KAAa,IAARtvB,EAAE2R,MAAU,CAAC,SAAS4d,GAAGvvB,GAAG,GAAG0uB,GAAE,CAAC,IAAIzuB,EAAEwuB,GAAG,GAAGxuB,EAAE,CAAC,IAAIC,EAAED,EAAE,IAAI+uB,GAAGhvB,EAAEC,GAAG,CAAC,GAAGovB,GAAGrvB,GAAG,MAAMiF,MAAMlF,EAAE,MAAME,EAAEurB,GAAGtrB,EAAE2jB,aAAa,IAAIriB,EAAEgtB,GAAGvuB,GAAG+uB,GAAGhvB,EAAEC,GAAG2uB,GAAGptB,EAAEtB,IAAIF,EAAE2R,OAAe,KAAT3R,EAAE2R,MAAY,EAAE+c,IAAE,EAAGF,GAAGxuB,EAAE,CAAC,KAAK,CAAC,GAAGqvB,GAAGrvB,GAAG,MAAMiF,MAAMlF,EAAE,MAAMC,EAAE2R,OAAe,KAAT3R,EAAE2R,MAAY,EAAE+c,IAAE,EAAGF,GAAGxuB,CAAC,CAAC,CAAC,CAAC,SAASwvB,GAAGxvB,GAAG,IAAIA,EAAEA,EAAE0R,OAAO,OAAO1R,GAAG,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,KAAKnG,EAAEmG,KAAKnG,EAAEA,EAAE0R,OAAO8c,GAAGxuB,CAAC,CACha,SAASyvB,GAAGzvB,GAAG,GAAGA,IAAIwuB,GAAG,OAAM,EAAG,IAAIE,GAAE,OAAOc,GAAGxvB,GAAG0uB,IAAE,GAAG,EAAG,IAAIzuB,EAAkG,IAA/FA,EAAE,IAAID,EAAEmG,QAAQlG,EAAE,IAAID,EAAEmG,OAAgBlG,EAAE,UAAXA,EAAED,EAAEkC,OAAmB,SAASjC,IAAIwqB,GAAGzqB,EAAEkC,KAAKlC,EAAE0vB,gBAAmBzvB,IAAIA,EAAEwuB,IAAI,CAAC,GAAGY,GAAGrvB,GAAG,MAAM2vB,KAAK1qB,MAAMlF,EAAE,MAAM,KAAKE,GAAG2uB,GAAG5uB,EAAEC,GAAGA,EAAEurB,GAAGvrB,EAAE4jB,YAAY,CAAO,GAAN2L,GAAGxvB,GAAM,KAAKA,EAAEmG,IAAI,CAAgD,KAA7BnG,EAAE,QAApBA,EAAEA,EAAE6R,eAAyB7R,EAAE8R,WAAW,MAAW,MAAM7M,MAAMlF,EAAE,MAAMC,EAAE,CAAiB,IAAhBA,EAAEA,EAAE6jB,YAAgB5jB,EAAE,EAAED,GAAG,CAAC,GAAG,IAAIA,EAAE0K,SAAS,CAAC,IAAIxK,EAAEF,EAAE6c,KAAK,GAAG,OAAO3c,EAAE,CAAC,GAAG,IAAID,EAAE,CAACwuB,GAAGjD,GAAGxrB,EAAE6jB,aAAa,MAAM7jB,CAAC,CAACC,GAAG,KAAK,MAAMC,GAAG,OAAOA,GAAG,OAAOA,GAAGD,GAAG,CAACD,EAAEA,EAAE6jB,WAAW,CAAC4K,GACjgB,IAAI,CAAC,MAAMA,GAAGD,GAAGhD,GAAGxrB,EAAEgQ,UAAU6T,aAAa,KAAK,OAAM,CAAE,CAAC,SAAS8L,KAAK,IAAI,IAAI3vB,EAAEyuB,GAAGzuB,GAAGA,EAAEwrB,GAAGxrB,EAAE6jB,YAAY,CAAC,SAAS+L,KAAKnB,GAAGD,GAAG,KAAKE,IAAE,CAAE,CAAC,SAASmB,GAAG7vB,GAAG,OAAO2uB,GAAGA,GAAG,CAAC3uB,GAAG2uB,GAAGxe,KAAKnQ,EAAE,CAAC,IAAI8vB,GAAGrsB,EAAGoU,wBAChM,SAASkY,GAAG/vB,EAAEC,EAAEC,GAAW,GAAG,QAAXF,EAAEE,EAAE8vB,MAAiB,oBAAoBhwB,GAAG,kBAAkBA,EAAE,CAAC,GAAGE,EAAE+vB,OAAO,CAAY,GAAX/vB,EAAEA,EAAE+vB,OAAY,CAAC,GAAG,IAAI/vB,EAAEiG,IAAI,MAAMlB,MAAMlF,EAAE,MAAM,IAAIyB,EAAEtB,EAAE8P,SAAS,CAAC,IAAIxO,EAAE,MAAMyD,MAAMlF,EAAE,IAAIC,IAAI,IAAIyB,EAAED,EAAEE,EAAE,GAAG1B,EAAE,OAAG,OAAOC,GAAG,OAAOA,EAAE+vB,KAAK,oBAAoB/vB,EAAE+vB,KAAK/vB,EAAE+vB,IAAIE,aAAaxuB,EAASzB,EAAE+vB,KAAI/vB,EAAE,SAASD,GAAG,IAAIC,EAAEwB,EAAE0uB,KAAK,OAAOnwB,SAASC,EAAEyB,GAAGzB,EAAEyB,GAAG1B,CAAC,EAAEC,EAAEiwB,WAAWxuB,EAASzB,EAAC,CAAC,GAAG,kBAAkBD,EAAE,MAAMiF,MAAMlF,EAAE,MAAM,IAAIG,EAAE+vB,OAAO,MAAMhrB,MAAMlF,EAAE,IAAIC,GAAI,CAAC,OAAOA,CAAC,CAC/c,SAASowB,GAAGpwB,EAAEC,GAAuC,MAApCD,EAAEiB,OAAOC,UAAUgJ,SAASjH,KAAKhD,GAASgF,MAAMlF,EAAE,GAAG,oBAAoBC,EAAE,qBAAqBiB,OAAO6M,KAAK7N,GAAGowB,KAAK,MAAM,IAAIrwB,GAAI,CAAC,SAASswB,GAAGtwB,GAAiB,OAAOC,EAAfD,EAAEyG,OAAezG,EAAEwG,SAAS,CACrM,SAAS+pB,GAAGvwB,GAAG,SAASC,EAAEA,EAAEC,GAAG,GAAGF,EAAE,CAAC,IAAIwB,EAAEvB,EAAE8uB,UAAU,OAAOvtB,GAAGvB,EAAE8uB,UAAU,CAAC7uB,GAAGD,EAAE0R,OAAO,IAAInQ,EAAE2O,KAAKjQ,EAAE,CAAC,CAAC,SAASA,EAAEA,EAAEsB,GAAG,IAAIxB,EAAE,OAAO,KAAK,KAAK,OAAOwB,GAAGvB,EAAEC,EAAEsB,GAAGA,EAAEA,EAAE0Q,QAAQ,OAAO,IAAI,CAAC,SAAS1Q,EAAExB,EAAEC,GAAG,IAAID,EAAE,IAAIkW,IAAI,OAAOjW,GAAG,OAAOA,EAAEke,IAAIne,EAAEyF,IAAIxF,EAAEke,IAAIle,GAAGD,EAAEyF,IAAIxF,EAAEuwB,MAAMvwB,GAAGA,EAAEA,EAAEiS,QAAQ,OAAOlS,CAAC,CAAC,SAASyB,EAAEzB,EAAEC,GAAsC,OAAnCD,EAAEywB,GAAGzwB,EAAEC,IAAKuwB,MAAM,EAAExwB,EAAEkS,QAAQ,KAAYlS,CAAC,CAAC,SAAS0B,EAAEzB,EAAEC,EAAEsB,GAAa,OAAVvB,EAAEuwB,MAAMhvB,EAAMxB,EAA6C,QAAjBwB,EAAEvB,EAAEwR,YAA6BjQ,EAAEA,EAAEgvB,OAAQtwB,GAAGD,EAAE0R,OAAO,EAAEzR,GAAGsB,GAAEvB,EAAE0R,OAAO,EAASzR,IAArGD,EAAE0R,OAAO,QAAQzR,EAAqF,CAAC,SAASyB,EAAE1B,GACzd,OAD4dD,GAC7f,OAAOC,EAAEwR,YAAYxR,EAAE0R,OAAO,GAAU1R,CAAC,CAAC,SAAS4F,EAAE7F,EAAEC,EAAEC,EAAEsB,GAAG,OAAG,OAAOvB,GAAG,IAAIA,EAAEkG,MAAWlG,EAAEywB,GAAGxwB,EAAEF,EAAEsvB,KAAK9tB,IAAKkQ,OAAO1R,EAAEC,KAAEA,EAAEwB,EAAExB,EAAEC,IAAKwR,OAAO1R,EAASC,EAAC,CAAC,SAAS6F,EAAE9F,EAAEC,EAAEC,EAAEsB,GAAG,IAAIE,EAAExB,EAAEgC,KAAK,OAAGR,IAAIqC,EAAUiN,EAAEhR,EAAEC,EAAEC,EAAEywB,MAAMrnB,SAAS9H,EAAEtB,EAAEie,KAAQ,OAAOle,IAAIA,EAAE6uB,cAAcptB,GAAG,kBAAkBA,GAAG,OAAOA,GAAGA,EAAE4E,WAAW9B,GAAI8rB,GAAG5uB,KAAKzB,EAAEiC,QAAaV,EAAEC,EAAExB,EAAEC,EAAEywB,QAASX,IAAID,GAAG/vB,EAAEC,EAAEC,GAAGsB,EAAEkQ,OAAO1R,EAAEwB,KAAEA,EAAEovB,GAAG1wB,EAAEgC,KAAKhC,EAAEie,IAAIje,EAAEywB,MAAM,KAAK3wB,EAAEsvB,KAAK9tB,IAAKwuB,IAAID,GAAG/vB,EAAEC,EAAEC,GAAGsB,EAAEkQ,OAAO1R,EAASwB,EAAC,CAAC,SAASoE,EAAE5F,EAAEC,EAAEC,EAAEsB,GAAG,OAAG,OAAOvB,GAAG,IAAIA,EAAEkG,KACjflG,EAAE+P,UAAUmH,gBAAgBjX,EAAEiX,eAAelX,EAAE+P,UAAU6gB,iBAAiB3wB,EAAE2wB,iBAAsB5wB,EAAE6wB,GAAG5wB,EAAEF,EAAEsvB,KAAK9tB,IAAKkQ,OAAO1R,EAAEC,KAAEA,EAAEwB,EAAExB,EAAEC,EAAEoJ,UAAU,KAAMoI,OAAO1R,EAASC,EAAC,CAAC,SAAS+Q,EAAEhR,EAAEC,EAAEC,EAAEsB,EAAEE,GAAG,OAAG,OAAOzB,GAAG,IAAIA,EAAEkG,MAAWlG,EAAE8wB,GAAG7wB,EAAEF,EAAEsvB,KAAK9tB,EAAEE,IAAKgQ,OAAO1R,EAAEC,KAAEA,EAAEwB,EAAExB,EAAEC,IAAKwR,OAAO1R,EAASC,EAAC,CAAC,SAAS+wB,EAAEhxB,EAAEC,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAOA,EAAEywB,GAAG,GAAGzwB,EAAED,EAAEsvB,KAAKpvB,IAAKwR,OAAO1R,EAAEC,EAAE,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEqG,UAAU,KAAK3C,EAAG,OAAOzD,EAAE0wB,GAAG3wB,EAAEiC,KAAKjC,EAAEke,IAAIle,EAAE0wB,MAAM,KAAK3wB,EAAEsvB,KAAKpvB,IACjf8vB,IAAID,GAAG/vB,EAAE,KAAKC,GAAGC,EAAEwR,OAAO1R,EAAEE,EAAE,KAAK4D,EAAG,OAAO7D,EAAE6wB,GAAG7wB,EAAED,EAAEsvB,KAAKpvB,IAAKwR,OAAO1R,EAAEC,EAAE,KAAKuE,EAAiB,OAAOwsB,EAAEhxB,GAAEwB,EAAnBvB,EAAEwG,OAAmBxG,EAAEuG,UAAUtG,GAAG,GAAG0I,GAAG3I,IAAI2E,EAAG3E,GAAG,OAAOA,EAAE8wB,GAAG9wB,EAAED,EAAEsvB,KAAKpvB,EAAE,OAAQwR,OAAO1R,EAAEC,EAAEmwB,GAAGpwB,EAAEC,EAAE,CAAC,OAAO,IAAI,CAAC,SAASgxB,EAAEjxB,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE,OAAOxB,EAAEA,EAAEke,IAAI,KAAK,GAAG,kBAAkBje,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAO,OAAOuB,EAAE,KAAKoE,EAAE7F,EAAEC,EAAE,GAAGC,EAAEsB,GAAG,GAAG,kBAAkBtB,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEoG,UAAU,KAAK3C,EAAG,OAAOzD,EAAEie,MAAM1c,EAAEqE,EAAE9F,EAAEC,EAAEC,EAAEsB,GAAG,KAAK,KAAKsC,EAAG,OAAO5D,EAAEie,MAAM1c,EAAEmE,EAAE5F,EAAEC,EAAEC,EAAEsB,GAAG,KAAK,KAAKgD,EAAG,OAAiBysB,EAAEjxB,EACpfC,GADwewB,EAAEvB,EAAEuG,OACxevG,EAAEsG,UAAUhF,GAAG,GAAGoH,GAAG1I,IAAI0E,EAAG1E,GAAG,OAAO,OAAOuB,EAAE,KAAKuP,EAAEhR,EAAEC,EAAEC,EAAEsB,EAAE,MAAM4uB,GAAGpwB,EAAEE,EAAE,CAAC,OAAO,IAAI,CAAC,SAASgxB,EAAElxB,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAwBqE,EAAE5F,EAAnBD,EAAEA,EAAEkH,IAAIhH,IAAI,KAAW,GAAGsB,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAE8E,UAAU,KAAK3C,EAAG,OAA2CmC,EAAE7F,EAAtCD,EAAEA,EAAEkH,IAAI,OAAO1F,EAAE2c,IAAIje,EAAEsB,EAAE2c,MAAM,KAAW3c,EAAEC,GAAG,KAAKqC,EAAG,OAA2C8B,EAAE3F,EAAtCD,EAAEA,EAAEkH,IAAI,OAAO1F,EAAE2c,IAAIje,EAAEsB,EAAE2c,MAAM,KAAW3c,EAAEC,GAAG,KAAK+C,EAAiB,OAAO0sB,EAAElxB,EAAEC,EAAEC,GAAEwB,EAAvBF,EAAEiF,OAAuBjF,EAAEgF,UAAU/E,GAAG,GAAGmH,GAAGpH,IAAIoD,EAAGpD,GAAG,OAAwBwP,EAAE/Q,EAAnBD,EAAEA,EAAEkH,IAAIhH,IAAI,KAAWsB,EAAEC,EAAE,MAAM2uB,GAAGnwB,EAAEuB,EAAE,CAAC,OAAO,IAAI,CAC9f,SAASsnB,EAAErnB,EAAEE,EAAEkE,EAAEC,GAAG,IAAI,IAAIF,EAAE,KAAKoL,EAAE,KAAKkY,EAAEvnB,EAAEwnB,EAAExnB,EAAE,EAAEsnB,EAAE,KAAK,OAAOC,GAAGC,EAAEtjB,EAAEzF,OAAO+oB,IAAI,CAACD,EAAEsH,MAAMrH,GAAGF,EAAEC,EAAEA,EAAE,MAAMD,EAAEC,EAAEhX,QAAQ,IAAI4W,EAAEmI,EAAExvB,EAAEynB,EAAErjB,EAAEsjB,GAAGrjB,GAAG,GAAG,OAAOgjB,EAAE,CAAC,OAAOI,IAAIA,EAAED,GAAG,KAAK,CAACjpB,GAAGkpB,GAAG,OAAOJ,EAAErX,WAAWxR,EAAEwB,EAAEynB,GAAGvnB,EAAED,EAAEonB,EAAEnnB,EAAEwnB,GAAG,OAAOnY,EAAEpL,EAAEkjB,EAAE9X,EAAEkB,QAAQ4W,EAAE9X,EAAE8X,EAAEI,EAAED,CAAC,CAAC,GAAGE,IAAItjB,EAAEzF,OAAO,OAAOF,EAAEuB,EAAEynB,GAAGwF,IAAGN,GAAG3sB,EAAE0nB,GAAGvjB,EAAE,GAAG,OAAOsjB,EAAE,CAAC,KAAKC,EAAEtjB,EAAEzF,OAAO+oB,IAAkB,QAAdD,EAAE8H,EAAEvvB,EAAEoE,EAAEsjB,GAAGrjB,MAAcnE,EAAED,EAAEwnB,EAAEvnB,EAAEwnB,GAAG,OAAOnY,EAAEpL,EAAEsjB,EAAElY,EAAEkB,QAAQgX,EAAElY,EAAEkY,GAAc,OAAXwF,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAAC,IAAIsjB,EAAE1nB,EAAEC,EAAEynB,GAAGC,EAAEtjB,EAAEzF,OAAO+oB,IAAsB,QAAlBF,EAAEiI,EAAEhI,EAAEznB,EAAE0nB,EAAEtjB,EAAEsjB,GAAGrjB,MAAc9F,GAAG,OAAOipB,EAAExX,WAAWyX,EAAE3S,OAAO,OACvf0S,EAAE9K,IAAIgL,EAAEF,EAAE9K,KAAKxc,EAAED,EAAEunB,EAAEtnB,EAAEwnB,GAAG,OAAOnY,EAAEpL,EAAEqjB,EAAEjY,EAAEkB,QAAQ+W,EAAEjY,EAAEiY,GAAuD,OAApDjpB,GAAGkpB,EAAE3mB,SAAQ,SAASvC,GAAG,OAAOC,EAAEwB,EAAEzB,EAAE,IAAG0uB,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAAC,SAASmjB,EAAEtnB,EAAEE,EAAEkE,EAAEC,GAAG,IAAIF,EAAEhB,EAAGiB,GAAG,GAAG,oBAAoBD,EAAE,MAAMX,MAAMlF,EAAE,MAAkB,GAAG,OAAf8F,EAAED,EAAE3C,KAAK4C,IAAc,MAAMZ,MAAMlF,EAAE,MAAM,IAAI,IAAImpB,EAAEtjB,EAAE,KAAKoL,EAAErP,EAAEwnB,EAAExnB,EAAE,EAAEsnB,EAAE,KAAKH,EAAEjjB,EAAEsrB,OAAO,OAAOngB,IAAI8X,EAAEsI,KAAKjI,IAAIL,EAAEjjB,EAAEsrB,OAAO,CAACngB,EAAEwf,MAAMrH,GAAGF,EAAEjY,EAAEA,EAAE,MAAMiY,EAAEjY,EAAEkB,QAAQ,IAAI6W,EAAEkI,EAAExvB,EAAEuP,EAAE8X,EAAEnhB,MAAM7B,GAAG,GAAG,OAAOijB,EAAE,CAAC,OAAO/X,IAAIA,EAAEiY,GAAG,KAAK,CAACjpB,GAAGgR,GAAG,OAAO+X,EAAEtX,WAAWxR,EAAEwB,EAAEuP,GAAGrP,EAAED,EAAEqnB,EAAEpnB,EAAEwnB,GAAG,OAAOD,EAAEtjB,EAAEmjB,EAAEG,EAAEhX,QAAQ6W,EAAEG,EAAEH,EAAE/X,EAAEiY,CAAC,CAAC,GAAGH,EAAEsI,KAAK,OAAOlxB,EAAEuB,EACzfuP,GAAG0d,IAAGN,GAAG3sB,EAAE0nB,GAAGvjB,EAAE,GAAG,OAAOoL,EAAE,CAAC,MAAM8X,EAAEsI,KAAKjI,IAAIL,EAAEjjB,EAAEsrB,OAAwB,QAAjBrI,EAAEkI,EAAEvvB,EAAEqnB,EAAEnhB,MAAM7B,MAAcnE,EAAED,EAAEonB,EAAEnnB,EAAEwnB,GAAG,OAAOD,EAAEtjB,EAAEkjB,EAAEI,EAAEhX,QAAQ4W,EAAEI,EAAEJ,GAAc,OAAX4F,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAAC,IAAIoL,EAAExP,EAAEC,EAAEuP,IAAI8X,EAAEsI,KAAKjI,IAAIL,EAAEjjB,EAAEsrB,OAA4B,QAArBrI,EAAEoI,EAAElgB,EAAEvP,EAAE0nB,EAAEL,EAAEnhB,MAAM7B,MAAc9F,GAAG,OAAO8oB,EAAErX,WAAWT,EAAEuF,OAAO,OAAOuS,EAAE3K,IAAIgL,EAAEL,EAAE3K,KAAKxc,EAAED,EAAEonB,EAAEnnB,EAAEwnB,GAAG,OAAOD,EAAEtjB,EAAEkjB,EAAEI,EAAEhX,QAAQ4W,EAAEI,EAAEJ,GAAuD,OAApD9oB,GAAGgR,EAAEzO,SAAQ,SAASvC,GAAG,OAAOC,EAAEwB,EAAEzB,EAAE,IAAG0uB,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAG3T,OAH4T,SAASojB,EAAEhpB,EAAEwB,EAAEE,EAAEmE,GAAkF,GAA/E,kBAAkBnE,GAAG,OAAOA,GAAGA,EAAEQ,OAAO6B,GAAI,OAAOrC,EAAEyc,MAAMzc,EAAEA,EAAEivB,MAAMrnB,UAAa,kBAAkB5H,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAE4E,UAAU,KAAK3C,EAAG3D,EAAE,CAAC,IAAI,IAAI8F,EAC7hBpE,EAAEyc,IAAIvY,EAAEpE,EAAE,OAAOoE,GAAG,CAAC,GAAGA,EAAEuY,MAAMrY,EAAE,CAAU,IAATA,EAAEpE,EAAEQ,QAAY6B,GAAI,GAAG,IAAI6B,EAAEO,IAAI,CAACjG,EAAEF,EAAE4F,EAAEsM,UAAS1Q,EAAEC,EAAEmE,EAAElE,EAAEivB,MAAMrnB,WAAYoI,OAAO1R,EAAEA,EAAEwB,EAAE,MAAMxB,CAAC,OAAO,GAAG4F,EAAEkpB,cAAchpB,GAAG,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEQ,WAAW9B,GAAI8rB,GAAGxqB,KAAKF,EAAE1D,KAAK,CAAChC,EAAEF,EAAE4F,EAAEsM,UAAS1Q,EAAEC,EAAEmE,EAAElE,EAAEivB,QAASX,IAAID,GAAG/vB,EAAE4F,EAAElE,GAAGF,EAAEkQ,OAAO1R,EAAEA,EAAEwB,EAAE,MAAMxB,CAAC,CAACE,EAAEF,EAAE4F,GAAG,KAAK,CAAM3F,EAAED,EAAE4F,GAAGA,EAAEA,EAAEsM,OAAO,CAACxQ,EAAEQ,OAAO6B,IAAIvC,EAAEuvB,GAAGrvB,EAAEivB,MAAMrnB,SAAStJ,EAAEsvB,KAAKzpB,EAAEnE,EAAEyc,MAAOzM,OAAO1R,EAAEA,EAAEwB,KAAIqE,EAAE+qB,GAAGlvB,EAAEQ,KAAKR,EAAEyc,IAAIzc,EAAEivB,MAAM,KAAK3wB,EAAEsvB,KAAKzpB,IAAKmqB,IAAID,GAAG/vB,EAAEwB,EAAEE,GAAGmE,EAAE6L,OAAO1R,EAAEA,EAAE6F,EAAE,CAAC,OAAOlE,EAAE3B,GAAG,KAAK8D,EAAG9D,EAAE,CAAC,IAAI4F,EAAElE,EAAEyc,IAAI,OACzf3c,GAAG,CAAC,GAAGA,EAAE2c,MAAMvY,EAAC,CAAC,GAAG,IAAIpE,EAAE2E,KAAK3E,EAAEwO,UAAUmH,gBAAgBzV,EAAEyV,eAAe3V,EAAEwO,UAAU6gB,iBAAiBnvB,EAAEmvB,eAAe,CAAC3wB,EAAEF,EAAEwB,EAAE0Q,UAAS1Q,EAAEC,EAAED,EAAEE,EAAE4H,UAAU,KAAMoI,OAAO1R,EAAEA,EAAEwB,EAAE,MAAMxB,CAAC,CAAME,EAAEF,EAAEwB,GAAG,KAAM,CAAKvB,EAAED,EAAEwB,GAAGA,EAAEA,EAAE0Q,OAAO,EAAC1Q,EAAEsvB,GAAGpvB,EAAE1B,EAAEsvB,KAAKzpB,IAAK6L,OAAO1R,EAAEA,EAAEwB,CAAC,CAAC,OAAOG,EAAE3B,GAAG,KAAKwE,EAAG,OAAiBwkB,EAAEhpB,EAAEwB,GAAdoE,EAAElE,EAAE+E,OAAc/E,EAAE8E,UAAUX,GAAG,GAAG+C,GAAGlH,GAAG,OAAOonB,EAAE9oB,EAAEwB,EAAEE,EAAEmE,GAAG,GAAGjB,EAAGlD,GAAG,OAAOqnB,EAAE/oB,EAAEwB,EAAEE,EAAEmE,GAAGuqB,GAAGpwB,EAAE0B,EAAE,CAAC,MAAM,kBAAkBA,GAAG,KAAKA,GAAG,kBAAkBA,GAAGA,EAAE,GAAGA,EAAE,OAAOF,GAAG,IAAIA,EAAE2E,KAAKjG,EAAEF,EAAEwB,EAAE0Q,UAAS1Q,EAAEC,EAAED,EAAEE,IAAKgQ,OAAO1R,EAAEA,EAAEwB,IACnftB,EAAEF,EAAEwB,IAAGA,EAAEkvB,GAAGhvB,EAAE1B,EAAEsvB,KAAKzpB,IAAK6L,OAAO1R,EAAEA,EAAEwB,GAAGG,EAAE3B,IAAIE,EAAEF,EAAEwB,EAAE,CAAS,CAAC,IAAI6vB,GAAGd,IAAG,GAAIe,GAAGf,IAAG,GAAIgB,GAAGrF,GAAG,MAAMsF,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAKD,GAAGD,GAAGD,GAAG,IAAI,CAAC,SAASI,GAAG5xB,GAAG,IAAIC,EAAEsxB,GAAGpf,QAAQga,GAAEoF,IAAIvxB,EAAE6xB,cAAc5xB,CAAC,CAAC,SAAS6xB,GAAG9xB,EAAEC,EAAEC,GAAG,KAAK,OAAOF,GAAG,CAAC,IAAIwB,EAAExB,EAAEyR,UAA+H,IAApHzR,EAAE+xB,WAAW9xB,KAAKA,GAAGD,EAAE+xB,YAAY9xB,EAAE,OAAOuB,IAAIA,EAAEuwB,YAAY9xB,IAAI,OAAOuB,IAAIA,EAAEuwB,WAAW9xB,KAAKA,IAAIuB,EAAEuwB,YAAY9xB,GAAMD,IAAIE,EAAE,MAAMF,EAAEA,EAAE0R,MAAM,CAAC,CACnZ,SAASsgB,GAAGhyB,EAAEC,GAAGuxB,GAAGxxB,EAAE0xB,GAAGD,GAAG,KAAsB,QAAjBzxB,EAAEA,EAAEiyB,eAAuB,OAAOjyB,EAAEkyB,eAAe,KAAKlyB,EAAEmyB,MAAMlyB,KAAKmyB,IAAG,GAAIpyB,EAAEkyB,aAAa,KAAK,CAAC,SAASG,GAAGryB,GAAG,IAAIC,EAAED,EAAE6xB,cAAc,GAAGH,KAAK1xB,EAAE,GAAGA,EAAE,CAACsyB,QAAQtyB,EAAEuyB,cAActyB,EAAEkxB,KAAK,MAAM,OAAOM,GAAG,CAAC,GAAG,OAAOD,GAAG,MAAMvsB,MAAMlF,EAAE,MAAM0xB,GAAGzxB,EAAEwxB,GAAGS,aAAa,CAACE,MAAM,EAAED,aAAalyB,EAAE,MAAMyxB,GAAGA,GAAGN,KAAKnxB,EAAE,OAAOC,CAAC,CAAC,IAAIuyB,GAAG,KAAK,SAASC,GAAGzyB,GAAG,OAAOwyB,GAAGA,GAAG,CAACxyB,GAAGwyB,GAAGriB,KAAKnQ,EAAE,CACvY,SAAS0yB,GAAG1yB,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAExB,EAAE0yB,YAA+E,OAAnE,OAAOlxB,GAAGvB,EAAEixB,KAAKjxB,EAAEuyB,GAAGxyB,KAAKC,EAAEixB,KAAK1vB,EAAE0vB,KAAK1vB,EAAE0vB,KAAKjxB,GAAGD,EAAE0yB,YAAYzyB,EAAS0yB,GAAG5yB,EAAEwB,EAAE,CAAC,SAASoxB,GAAG5yB,EAAEC,GAAGD,EAAEmyB,OAAOlyB,EAAE,IAAIC,EAAEF,EAAEyR,UAAqC,IAA3B,OAAOvR,IAAIA,EAAEiyB,OAAOlyB,GAAGC,EAAEF,EAAMA,EAAEA,EAAE0R,OAAO,OAAO1R,GAAGA,EAAE+xB,YAAY9xB,EAAgB,QAAdC,EAAEF,EAAEyR,aAAqBvR,EAAE6xB,YAAY9xB,GAAGC,EAAEF,EAAEA,EAAEA,EAAE0R,OAAO,OAAO,IAAIxR,EAAEiG,IAAIjG,EAAE8P,UAAU,IAAI,CAAC,IAAI6iB,IAAG,EAAG,SAASC,GAAG9yB,GAAGA,EAAE+yB,YAAY,CAACC,UAAUhzB,EAAE6R,cAAcohB,gBAAgB,KAAKC,eAAe,KAAKC,OAAO,CAACC,QAAQ,KAAKT,YAAY,KAAKR,MAAM,GAAGkB,QAAQ,KAAK,CAC/e,SAASC,GAAGtzB,EAAEC,GAAGD,EAAEA,EAAE+yB,YAAY9yB,EAAE8yB,cAAc/yB,IAAIC,EAAE8yB,YAAY,CAACC,UAAUhzB,EAAEgzB,UAAUC,gBAAgBjzB,EAAEizB,gBAAgBC,eAAelzB,EAAEkzB,eAAeC,OAAOnzB,EAAEmzB,OAAOE,QAAQrzB,EAAEqzB,SAAS,CAAC,SAASE,GAAGvzB,EAAEC,GAAG,MAAM,CAACuzB,UAAUxzB,EAAEyzB,KAAKxzB,EAAEkG,IAAI,EAAEutB,QAAQ,KAAKC,SAAS,KAAKxC,KAAK,KAAK,CACtR,SAASyC,GAAG5zB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAE+yB,YAAY,GAAG,OAAOvxB,EAAE,OAAO,KAAgB,GAAXA,EAAEA,EAAE2xB,OAAU,KAAO,EAAFU,IAAK,CAAC,IAAIpyB,EAAED,EAAE4xB,QAA+D,OAAvD,OAAO3xB,EAAExB,EAAEkxB,KAAKlxB,GAAGA,EAAEkxB,KAAK1vB,EAAE0vB,KAAK1vB,EAAE0vB,KAAKlxB,GAAGuB,EAAE4xB,QAAQnzB,EAAS2yB,GAAG5yB,EAAEE,EAAE,CAAoF,OAAnE,QAAhBuB,EAAED,EAAEmxB,cAAsB1yB,EAAEkxB,KAAKlxB,EAAEwyB,GAAGjxB,KAAKvB,EAAEkxB,KAAK1vB,EAAE0vB,KAAK1vB,EAAE0vB,KAAKlxB,GAAGuB,EAAEmxB,YAAY1yB,EAAS2yB,GAAG5yB,EAAEE,EAAE,CAAC,SAAS4zB,GAAG9zB,EAAEC,EAAEC,GAAmB,GAAG,QAAnBD,EAAEA,EAAE8yB,eAA0B9yB,EAAEA,EAAEkzB,OAAO,KAAO,QAAFjzB,IAAY,CAAC,IAAIsB,EAAEvB,EAAEkyB,MAAwBjyB,GAAlBsB,GAAGxB,EAAEyU,aAAkBxU,EAAEkyB,MAAMjyB,EAAEkV,GAAGpV,EAAEE,EAAE,CAAC,CACrZ,SAAS6zB,GAAG/zB,EAAEC,GAAG,IAAIC,EAAEF,EAAE+yB,YAAYvxB,EAAExB,EAAEyR,UAAU,GAAG,OAAOjQ,GAAoBtB,KAAhBsB,EAAEA,EAAEuxB,aAAmB,CAAC,IAAItxB,EAAE,KAAKC,EAAE,KAAyB,GAAG,QAAvBxB,EAAEA,EAAE+yB,iBAA4B,CAAC,EAAE,CAAC,IAAItxB,EAAE,CAAC6xB,UAAUtzB,EAAEszB,UAAUC,KAAKvzB,EAAEuzB,KAAKttB,IAAIjG,EAAEiG,IAAIutB,QAAQxzB,EAAEwzB,QAAQC,SAASzzB,EAAEyzB,SAASxC,KAAK,MAAM,OAAOzvB,EAAED,EAAEC,EAAEC,EAAED,EAAEA,EAAEyvB,KAAKxvB,EAAEzB,EAAEA,EAAEixB,IAAI,OAAO,OAAOjxB,GAAG,OAAOwB,EAAED,EAAEC,EAAEzB,EAAEyB,EAAEA,EAAEyvB,KAAKlxB,CAAC,MAAMwB,EAAEC,EAAEzB,EAAiH,OAA/GC,EAAE,CAAC8yB,UAAUxxB,EAAEwxB,UAAUC,gBAAgBxxB,EAAEyxB,eAAexxB,EAAEyxB,OAAO3xB,EAAE2xB,OAAOE,QAAQ7xB,EAAE6xB,cAASrzB,EAAE+yB,YAAY7yB,EAAQ,CAAoB,QAAnBF,EAAEE,EAAEgzB,gBAAwBhzB,EAAE+yB,gBAAgBhzB,EAAED,EAAEmxB,KACnflxB,EAAEC,EAAEgzB,eAAejzB,CAAC,CACpB,SAAS+zB,GAAGh0B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEzB,EAAE+yB,YAAYF,IAAG,EAAG,IAAInxB,EAAED,EAAEwxB,gBAAgBtxB,EAAEF,EAAEyxB,eAAertB,EAAEpE,EAAE0xB,OAAOC,QAAQ,GAAG,OAAOvtB,EAAE,CAACpE,EAAE0xB,OAAOC,QAAQ,KAAK,IAAIttB,EAAED,EAAED,EAAEE,EAAEqrB,KAAKrrB,EAAEqrB,KAAK,KAAK,OAAOxvB,EAAED,EAAEkE,EAAEjE,EAAEwvB,KAAKvrB,EAAEjE,EAAEmE,EAAE,IAAIkL,EAAEhR,EAAEyR,UAAU,OAAOT,KAAoBnL,GAAhBmL,EAAEA,EAAE+hB,aAAgBG,kBAAmBvxB,IAAI,OAAOkE,EAAEmL,EAAEiiB,gBAAgBrtB,EAAEC,EAAEsrB,KAAKvrB,EAAEoL,EAAEkiB,eAAeptB,GAAG,CAAC,GAAG,OAAOpE,EAAE,CAAC,IAAIsvB,EAAEvvB,EAAEuxB,UAA6B,IAAnBrxB,EAAE,EAAEqP,EAAEpL,EAAEE,EAAE,KAAKD,EAAEnE,IAAI,CAAC,IAAIuvB,EAAEprB,EAAE4tB,KAAKvC,EAAErrB,EAAE2tB,UAAU,IAAIhyB,EAAEyvB,KAAKA,EAAE,CAAC,OAAOjgB,IAAIA,EAAEA,EAAEmgB,KAAK,CAACqC,UAAUtC,EAAEuC,KAAK,EAAEttB,IAAIN,EAAEM,IAAIutB,QAAQ7tB,EAAE6tB,QAAQC,SAAS9tB,EAAE8tB,SACvfxC,KAAK,OAAOnxB,EAAE,CAAC,IAAI8oB,EAAE9oB,EAAE+oB,EAAEljB,EAAU,OAARorB,EAAEhxB,EAAEixB,EAAEhxB,EAAS6oB,EAAE5iB,KAAK,KAAK,EAAc,GAAG,oBAAf2iB,EAAEC,EAAE2K,SAAiC,CAAC1C,EAAElI,EAAE7lB,KAAKiuB,EAAEF,EAAEC,GAAG,MAAMjxB,CAAC,CAACgxB,EAAElI,EAAE,MAAM9oB,EAAE,KAAK,EAAE8oB,EAAEnX,OAAe,MAATmX,EAAEnX,MAAa,IAAI,KAAK,EAAsD,GAAG,QAA3Csf,EAAE,oBAAdnI,EAAEC,EAAE2K,SAAgC5K,EAAE7lB,KAAKiuB,EAAEF,EAAEC,GAAGnI,SAAe,IAASmI,EAAE,MAAMjxB,EAAEgxB,EAAElsB,EAAE,CAAC,EAAEksB,EAAEC,GAAG,MAAMjxB,EAAE,KAAK,EAAE6yB,IAAG,EAAG,CAAC,OAAOhtB,EAAE8tB,UAAU,IAAI9tB,EAAE4tB,OAAOzzB,EAAE2R,OAAO,GAAe,QAAZsf,EAAExvB,EAAE4xB,SAAiB5xB,EAAE4xB,QAAQ,CAACxtB,GAAGorB,EAAE9gB,KAAKtK,GAAG,MAAMqrB,EAAE,CAACsC,UAAUtC,EAAEuC,KAAKxC,EAAE9qB,IAAIN,EAAEM,IAAIutB,QAAQ7tB,EAAE6tB,QAAQC,SAAS9tB,EAAE8tB,SAASxC,KAAK,MAAM,OAAOngB,GAAGpL,EAAEoL,EAAEkgB,EAAEprB,EAAEkrB,GAAGhgB,EAAEA,EAAEmgB,KAAKD,EAAEvvB,GAAGsvB,EAC3e,GAAG,QAAZprB,EAAEA,EAAEsrB,MAAiB,IAAsB,QAAnBtrB,EAAEpE,EAAE0xB,OAAOC,SAAiB,MAAevtB,GAAJorB,EAAEprB,GAAMsrB,KAAKF,EAAEE,KAAK,KAAK1vB,EAAEyxB,eAAejC,EAAExvB,EAAE0xB,OAAOC,QAAQ,IAAI,EAAsG,GAA5F,OAAOpiB,IAAIlL,EAAEkrB,GAAGvvB,EAAEuxB,UAAUltB,EAAErE,EAAEwxB,gBAAgBrtB,EAAEnE,EAAEyxB,eAAeliB,EAA4B,QAA1B/Q,EAAEwB,EAAE0xB,OAAOR,aAAwB,CAAClxB,EAAExB,EAAE,GAAG0B,GAAGF,EAAEgyB,KAAKhyB,EAAEA,EAAE0vB,WAAW1vB,IAAIxB,EAAE,MAAM,OAAOyB,IAAID,EAAE0xB,OAAOhB,MAAM,GAAG8B,IAAItyB,EAAE3B,EAAEmyB,MAAMxwB,EAAE3B,EAAE6R,cAAcmf,CAAC,CAAC,CAC9V,SAASkD,GAAGl0B,EAAEC,EAAEC,GAA8B,GAA3BF,EAAEC,EAAEozB,QAAQpzB,EAAEozB,QAAQ,KAAQ,OAAOrzB,EAAE,IAAIC,EAAE,EAAEA,EAAED,EAAEI,OAAOH,IAAI,CAAC,IAAIuB,EAAExB,EAAEC,GAAGwB,EAAED,EAAEmyB,SAAS,GAAG,OAAOlyB,EAAE,CAAqB,GAApBD,EAAEmyB,SAAS,KAAKnyB,EAAEtB,EAAK,oBAAoBuB,EAAE,MAAMwD,MAAMlF,EAAE,IAAI0B,IAAIA,EAAEwB,KAAKzB,EAAE,CAAC,CAAC,CAAC,IAAI2yB,GAAG,CAAC,EAAEC,GAAGlI,GAAGiI,IAAIE,GAAGnI,GAAGiI,IAAIG,GAAGpI,GAAGiI,IAAI,SAASI,GAAGv0B,GAAG,GAAGA,IAAIm0B,GAAG,MAAMlvB,MAAMlF,EAAE,MAAM,OAAOC,CAAC,CACnS,SAASw0B,GAAGx0B,EAAEC,GAAyC,OAAtCmsB,GAAEkI,GAAGr0B,GAAGmsB,GAAEiI,GAAGr0B,GAAGosB,GAAEgI,GAAGD,IAAIn0B,EAAEC,EAAEyK,UAAmB,KAAK,EAAE,KAAK,GAAGzK,GAAGA,EAAEA,EAAEykB,iBAAiBzkB,EAAE8J,aAAaH,GAAG,KAAK,IAAI,MAAM,QAAkE3J,EAAE2J,GAArC3J,GAAvBD,EAAE,IAAIA,EAAEC,EAAEyP,WAAWzP,GAAM8J,cAAc,KAAK/J,EAAEA,EAAEy0B,SAAkBtI,GAAEiI,IAAIhI,GAAEgI,GAAGn0B,EAAE,CAAC,SAASy0B,KAAKvI,GAAEiI,IAAIjI,GAAEkI,IAAIlI,GAAEmI,GAAG,CAAC,SAASK,GAAG30B,GAAGu0B,GAAGD,GAAGniB,SAAS,IAAIlS,EAAEs0B,GAAGH,GAAGjiB,SAAajS,EAAE0J,GAAG3J,EAAED,EAAEkC,MAAMjC,IAAIC,IAAIksB,GAAEiI,GAAGr0B,GAAGosB,GAAEgI,GAAGl0B,GAAG,CAAC,SAAS00B,GAAG50B,GAAGq0B,GAAGliB,UAAUnS,IAAImsB,GAAEiI,IAAIjI,GAAEkI,IAAI,CAAC,IAAIQ,GAAE3I,GAAG,GACxZ,SAAS4I,GAAG90B,GAAG,IAAI,IAAIC,EAAED,EAAE,OAAOC,GAAG,CAAC,GAAG,KAAKA,EAAEkG,IAAI,CAAC,IAAIjG,EAAED,EAAE4R,cAAc,GAAG,OAAO3R,IAAmB,QAAfA,EAAEA,EAAE4R,aAAqB,OAAO5R,EAAE2c,MAAM,OAAO3c,EAAE2c,MAAM,OAAO5c,CAAC,MAAM,GAAG,KAAKA,EAAEkG,UAAK,IAASlG,EAAEyvB,cAAcqF,aAAa,GAAG,KAAa,IAAR90B,EAAE0R,OAAW,OAAO1R,OAAO,GAAG,OAAOA,EAAEgS,MAAM,CAAChS,EAAEgS,MAAMP,OAAOzR,EAAEA,EAAEA,EAAEgS,MAAM,QAAQ,CAAC,GAAGhS,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAEiS,SAAS,CAAC,GAAG,OAAOjS,EAAEyR,QAAQzR,EAAEyR,SAAS1R,EAAE,OAAO,KAAKC,EAAEA,EAAEyR,MAAM,CAACzR,EAAEiS,QAAQR,OAAOzR,EAAEyR,OAAOzR,EAAEA,EAAEiS,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI8iB,GAAG,GACrc,SAASC,KAAK,IAAI,IAAIj1B,EAAE,EAAEA,EAAEg1B,GAAG50B,OAAOJ,IAAIg1B,GAAGh1B,GAAGk1B,8BAA8B,KAAKF,GAAG50B,OAAO,CAAC,CAAC,IAAI+0B,GAAG1xB,EAAG2xB,uBAAuBC,GAAG5xB,EAAGoU,wBAAwByd,GAAG,EAAEC,GAAE,KAAKC,GAAE,KAAKC,GAAE,KAAKC,IAAG,EAAGC,IAAG,EAAGC,GAAG,EAAEC,GAAG,EAAE,SAASC,KAAI,MAAM7wB,MAAMlF,EAAE,KAAM,CAAC,SAASg2B,GAAG/1B,EAAEC,GAAG,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEG,QAAQF,EAAEF,EAAEI,OAAOF,IAAI,IAAIqjB,GAAGvjB,EAAEE,GAAGD,EAAEC,IAAI,OAAM,EAAG,OAAM,CAAE,CAChW,SAAS81B,GAAGh2B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAyH,GAAtH4zB,GAAG5zB,EAAE6zB,GAAEt1B,EAAEA,EAAE4R,cAAc,KAAK5R,EAAE8yB,YAAY,KAAK9yB,EAAEkyB,MAAM,EAAEgD,GAAGhjB,QAAQ,OAAOnS,GAAG,OAAOA,EAAE6R,cAAcokB,GAAGC,GAAGl2B,EAAEE,EAAEsB,EAAEC,GAAMk0B,GAAG,CAACj0B,EAAE,EAAE,EAAE,CAAY,GAAXi0B,IAAG,EAAGC,GAAG,EAAK,IAAIl0B,EAAE,MAAMuD,MAAMlF,EAAE,MAAM2B,GAAG,EAAE+zB,GAAED,GAAE,KAAKv1B,EAAE8yB,YAAY,KAAKoC,GAAGhjB,QAAQgkB,GAAGn2B,EAAEE,EAAEsB,EAAEC,EAAE,OAAOk0B,GAAG,CAA+D,GAA9DR,GAAGhjB,QAAQikB,GAAGn2B,EAAE,OAAOu1B,IAAG,OAAOA,GAAErE,KAAKmE,GAAG,EAAEG,GAAED,GAAED,GAAE,KAAKG,IAAG,EAAMz1B,EAAE,MAAMgF,MAAMlF,EAAE,MAAM,OAAOC,CAAC,CAAC,SAASq2B,KAAK,IAAIr2B,EAAE,IAAI41B,GAAQ,OAALA,GAAG,EAAS51B,CAAC,CAC/Y,SAASs2B,KAAK,IAAIt2B,EAAE,CAAC6R,cAAc,KAAKmhB,UAAU,KAAKuD,UAAU,KAAKC,MAAM,KAAKrF,KAAK,MAA8C,OAAxC,OAAOsE,GAAEF,GAAE1jB,cAAc4jB,GAAEz1B,EAAEy1B,GAAEA,GAAEtE,KAAKnxB,EAASy1B,EAAC,CAAC,SAASgB,KAAK,GAAG,OAAOjB,GAAE,CAAC,IAAIx1B,EAAEu1B,GAAE9jB,UAAUzR,EAAE,OAAOA,EAAEA,EAAE6R,cAAc,IAAI,MAAM7R,EAAEw1B,GAAErE,KAAK,IAAIlxB,EAAE,OAAOw1B,GAAEF,GAAE1jB,cAAc4jB,GAAEtE,KAAK,GAAG,OAAOlxB,EAAEw1B,GAAEx1B,EAAEu1B,GAAEx1B,MAAM,CAAC,GAAG,OAAOA,EAAE,MAAMiF,MAAMlF,EAAE,MAAUC,EAAE,CAAC6R,eAAP2jB,GAAEx1B,GAAqB6R,cAAcmhB,UAAUwC,GAAExC,UAAUuD,UAAUf,GAAEe,UAAUC,MAAMhB,GAAEgB,MAAMrF,KAAK,MAAM,OAAOsE,GAAEF,GAAE1jB,cAAc4jB,GAAEz1B,EAAEy1B,GAAEA,GAAEtE,KAAKnxB,CAAC,CAAC,OAAOy1B,EAAC,CACje,SAASiB,GAAG12B,EAAEC,GAAG,MAAM,oBAAoBA,EAAEA,EAAED,GAAGC,CAAC,CACnD,SAAS02B,GAAG32B,GAAG,IAAIC,EAAEw2B,KAAKv2B,EAAED,EAAEu2B,MAAM,GAAG,OAAOt2B,EAAE,MAAM+E,MAAMlF,EAAE,MAAMG,EAAE02B,oBAAoB52B,EAAE,IAAIwB,EAAEg0B,GAAE/zB,EAAED,EAAE+0B,UAAU70B,EAAExB,EAAEkzB,QAAQ,GAAG,OAAO1xB,EAAE,CAAC,GAAG,OAAOD,EAAE,CAAC,IAAIE,EAAEF,EAAE0vB,KAAK1vB,EAAE0vB,KAAKzvB,EAAEyvB,KAAKzvB,EAAEyvB,KAAKxvB,CAAC,CAACH,EAAE+0B,UAAU90B,EAAEC,EAAExB,EAAEkzB,QAAQ,IAAI,CAAC,GAAG,OAAO3xB,EAAE,CAACC,EAAED,EAAE0vB,KAAK3vB,EAAEA,EAAEwxB,UAAU,IAAIntB,EAAElE,EAAE,KAAKmE,EAAE,KAAKF,EAAElE,EAAE,EAAE,CAAC,IAAIsP,EAAEpL,EAAE6tB,KAAK,IAAI6B,GAAGtkB,KAAKA,EAAE,OAAOlL,IAAIA,EAAEA,EAAEqrB,KAAK,CAACsC,KAAK,EAAEoD,OAAOjxB,EAAEixB,OAAOC,cAAclxB,EAAEkxB,cAAcC,WAAWnxB,EAAEmxB,WAAW5F,KAAK,OAAO3vB,EAAEoE,EAAEkxB,cAAclxB,EAAEmxB,WAAW/2B,EAAEwB,EAAEoE,EAAEixB,YAAY,CAAC,IAAI7F,EAAE,CAACyC,KAAKziB,EAAE6lB,OAAOjxB,EAAEixB,OAAOC,cAAclxB,EAAEkxB,cACngBC,WAAWnxB,EAAEmxB,WAAW5F,KAAK,MAAM,OAAOrrB,GAAGD,EAAEC,EAAEkrB,EAAErvB,EAAEH,GAAGsE,EAAEA,EAAEqrB,KAAKH,EAAEuE,GAAEpD,OAAOnhB,EAAEijB,IAAIjjB,CAAC,CAACpL,EAAEA,EAAEurB,IAAI,OAAO,OAAOvrB,GAAGA,IAAIlE,GAAG,OAAOoE,EAAEnE,EAAEH,EAAEsE,EAAEqrB,KAAKtrB,EAAE0d,GAAG/hB,EAAEvB,EAAE4R,iBAAiBugB,IAAG,GAAInyB,EAAE4R,cAAcrQ,EAAEvB,EAAE+yB,UAAUrxB,EAAE1B,EAAEs2B,UAAUzwB,EAAE5F,EAAE82B,kBAAkBx1B,CAAC,CAAiB,GAAG,QAAnBxB,EAAEE,EAAEyyB,aAAwB,CAAClxB,EAAEzB,EAAE,GAAG0B,EAAED,EAAEgyB,KAAK8B,GAAEpD,OAAOzwB,EAAEuyB,IAAIvyB,EAAED,EAAEA,EAAE0vB,WAAW1vB,IAAIzB,EAAE,MAAM,OAAOyB,IAAIvB,EAAEiyB,MAAM,GAAG,MAAM,CAAClyB,EAAE4R,cAAc3R,EAAE+2B,SAAS,CAC9X,SAASC,GAAGl3B,GAAG,IAAIC,EAAEw2B,KAAKv2B,EAAED,EAAEu2B,MAAM,GAAG,OAAOt2B,EAAE,MAAM+E,MAAMlF,EAAE,MAAMG,EAAE02B,oBAAoB52B,EAAE,IAAIwB,EAAEtB,EAAE+2B,SAASx1B,EAAEvB,EAAEkzB,QAAQ1xB,EAAEzB,EAAE4R,cAAc,GAAG,OAAOpQ,EAAE,CAACvB,EAAEkzB,QAAQ,KAAK,IAAIzxB,EAAEF,EAAEA,EAAE0vB,KAAK,GAAGzvB,EAAE1B,EAAE0B,EAAEC,EAAEk1B,QAAQl1B,EAAEA,EAAEwvB,WAAWxvB,IAAIF,GAAG8hB,GAAG7hB,EAAEzB,EAAE4R,iBAAiBugB,IAAG,GAAInyB,EAAE4R,cAAcnQ,EAAE,OAAOzB,EAAEs2B,YAAYt2B,EAAE+yB,UAAUtxB,GAAGxB,EAAE82B,kBAAkBt1B,CAAC,CAAC,MAAM,CAACA,EAAEF,EAAE,CAAC,SAAS21B,KAAK,CACpW,SAASC,GAAGp3B,EAAEC,GAAG,IAAIC,EAAEq1B,GAAE/zB,EAAEi1B,KAAKh1B,EAAExB,IAAIyB,GAAG6hB,GAAG/hB,EAAEqQ,cAAcpQ,GAAsE,GAAnEC,IAAIF,EAAEqQ,cAAcpQ,EAAE2wB,IAAG,GAAI5wB,EAAEA,EAAEg1B,MAAMa,GAAGC,GAAG3O,KAAK,KAAKzoB,EAAEsB,EAAExB,GAAG,CAACA,IAAOwB,EAAE+1B,cAAct3B,GAAGyB,GAAG,OAAO+zB,IAAuB,EAApBA,GAAE5jB,cAAc1L,IAAM,CAAuD,GAAtDjG,EAAEyR,OAAO,KAAK6lB,GAAG,EAAEC,GAAG9O,KAAK,KAAKzoB,EAAEsB,EAAEC,EAAExB,QAAG,EAAO,MAAS,OAAOy3B,GAAE,MAAMzyB,MAAMlF,EAAE,MAAM,KAAQ,GAAHu1B,KAAQqC,GAAGz3B,EAAED,EAAEwB,EAAE,CAAC,OAAOA,CAAC,CAAC,SAASk2B,GAAG33B,EAAEC,EAAEC,GAAGF,EAAE2R,OAAO,MAAM3R,EAAE,CAACu3B,YAAYt3B,EAAE0H,MAAMzH,GAAmB,QAAhBD,EAAEs1B,GAAExC,cAAsB9yB,EAAE,CAAC23B,WAAW,KAAKC,OAAO,MAAMtC,GAAExC,YAAY9yB,EAAEA,EAAE43B,OAAO,CAAC73B,IAAgB,QAAXE,EAAED,EAAE43B,QAAgB53B,EAAE43B,OAAO,CAAC73B,GAAGE,EAAEiQ,KAAKnQ,EAAG,CAClf,SAASy3B,GAAGz3B,EAAEC,EAAEC,EAAEsB,GAAGvB,EAAE0H,MAAMzH,EAAED,EAAEs3B,YAAY/1B,EAAEs2B,GAAG73B,IAAI83B,GAAG/3B,EAAE,CAAC,SAASs3B,GAAGt3B,EAAEC,EAAEC,GAAG,OAAOA,GAAE,WAAW43B,GAAG73B,IAAI83B,GAAG/3B,EAAE,GAAE,CAAC,SAAS83B,GAAG93B,GAAG,IAAIC,EAAED,EAAEu3B,YAAYv3B,EAAEA,EAAE2H,MAAM,IAAI,IAAIzH,EAAED,IAAI,OAAOsjB,GAAGvjB,EAAEE,EAAE,CAAC,MAAMsB,GAAG,OAAM,CAAE,CAAC,CAAC,SAASu2B,GAAG/3B,GAAG,IAAIC,EAAE2yB,GAAG5yB,EAAE,GAAG,OAAOC,GAAG+3B,GAAG/3B,EAAED,EAAE,GAAG,EAAE,CAClQ,SAASi4B,GAAGj4B,GAAG,IAAIC,EAAEq2B,KAA8M,MAAzM,oBAAoBt2B,IAAIA,EAAEA,KAAKC,EAAE4R,cAAc5R,EAAE+yB,UAAUhzB,EAAEA,EAAE,CAACozB,QAAQ,KAAKT,YAAY,KAAKR,MAAM,EAAE8E,SAAS,KAAKL,oBAAoBF,GAAGM,kBAAkBh3B,GAAGC,EAAEu2B,MAAMx2B,EAAEA,EAAEA,EAAEi3B,SAASiB,GAAGvP,KAAK,KAAK4M,GAAEv1B,GAAS,CAACC,EAAE4R,cAAc7R,EAAE,CAC5P,SAASw3B,GAAGx3B,EAAEC,EAAEC,EAAEsB,GAA8O,OAA3OxB,EAAE,CAACmG,IAAInG,EAAEm4B,OAAOl4B,EAAEm4B,QAAQl4B,EAAEm4B,KAAK72B,EAAE2vB,KAAK,MAAsB,QAAhBlxB,EAAEs1B,GAAExC,cAAsB9yB,EAAE,CAAC23B,WAAW,KAAKC,OAAO,MAAMtC,GAAExC,YAAY9yB,EAAEA,EAAE23B,WAAW53B,EAAEmxB,KAAKnxB,GAAmB,QAAfE,EAAED,EAAE23B,YAAoB33B,EAAE23B,WAAW53B,EAAEmxB,KAAKnxB,GAAGwB,EAAEtB,EAAEixB,KAAKjxB,EAAEixB,KAAKnxB,EAAEA,EAAEmxB,KAAK3vB,EAAEvB,EAAE23B,WAAW53B,GAAWA,CAAC,CAAC,SAASs4B,KAAK,OAAO7B,KAAK5kB,aAAa,CAAC,SAAS0mB,GAAGv4B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE60B,KAAKf,GAAE5jB,OAAO3R,EAAEyB,EAAEoQ,cAAc2lB,GAAG,EAAEv3B,EAAEC,OAAE,OAAO,IAASsB,EAAE,KAAKA,EAAE,CAC9Y,SAASg3B,GAAGx4B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEg1B,KAAKj1B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIE,OAAE,EAAO,GAAG,OAAO8zB,GAAE,CAAC,IAAI7zB,EAAE6zB,GAAE3jB,cAA0B,GAAZnQ,EAAEC,EAAEy2B,QAAW,OAAO52B,GAAGu0B,GAAGv0B,EAAEG,EAAE02B,MAAmC,YAA5B52B,EAAEoQ,cAAc2lB,GAAGv3B,EAAEC,EAAEwB,EAAEF,GAAU,CAAC+zB,GAAE5jB,OAAO3R,EAAEyB,EAAEoQ,cAAc2lB,GAAG,EAAEv3B,EAAEC,EAAEwB,EAAEF,EAAE,CAAC,SAASi3B,GAAGz4B,EAAEC,GAAG,OAAOs4B,GAAG,QAAQ,EAAEv4B,EAAEC,EAAE,CAAC,SAASo3B,GAAGr3B,EAAEC,GAAG,OAAOu4B,GAAG,KAAK,EAAEx4B,EAAEC,EAAE,CAAC,SAASy4B,GAAG14B,EAAEC,GAAG,OAAOu4B,GAAG,EAAE,EAAEx4B,EAAEC,EAAE,CAAC,SAAS04B,GAAG34B,EAAEC,GAAG,OAAOu4B,GAAG,EAAE,EAAEx4B,EAAEC,EAAE,CAChX,SAAS24B,GAAG54B,EAAEC,GAAG,MAAG,oBAAoBA,GAASD,EAAEA,IAAIC,EAAED,GAAG,WAAWC,EAAE,KAAK,GAAK,OAAOA,QAAG,IAASA,GAASD,EAAEA,IAAIC,EAAEkS,QAAQnS,EAAE,WAAWC,EAAEkS,QAAQ,IAAI,QAA1E,CAA2E,CAAC,SAAS0mB,GAAG74B,EAAEC,EAAEC,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAE4nB,OAAO,CAAC9nB,IAAI,KAAYw4B,GAAG,EAAE,EAAEI,GAAGjQ,KAAK,KAAK1oB,EAAED,GAAGE,EAAE,CAAC,SAAS44B,KAAK,CAAC,SAASC,GAAG/4B,EAAEC,GAAG,IAAIC,EAAEu2B,KAAKx2B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIuB,EAAEtB,EAAE2R,cAAc,OAAG,OAAOrQ,GAAG,OAAOvB,GAAG81B,GAAG91B,EAAEuB,EAAE,IAAWA,EAAE,IAAGtB,EAAE2R,cAAc,CAAC7R,EAAEC,GAAUD,EAAC,CAC7Z,SAASg5B,GAAGh5B,EAAEC,GAAG,IAAIC,EAAEu2B,KAAKx2B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIuB,EAAEtB,EAAE2R,cAAc,OAAG,OAAOrQ,GAAG,OAAOvB,GAAG81B,GAAG91B,EAAEuB,EAAE,IAAWA,EAAE,IAAGxB,EAAEA,IAAIE,EAAE2R,cAAc,CAAC7R,EAAEC,GAAUD,EAAC,CAAC,SAASi5B,GAAGj5B,EAAEC,EAAEC,GAAG,OAAG,KAAQ,GAAHo1B,KAAct1B,EAAEgzB,YAAYhzB,EAAEgzB,WAAU,EAAGZ,IAAG,GAAIpyB,EAAE6R,cAAc3R,IAAEqjB,GAAGrjB,EAAED,KAAKC,EAAE8U,KAAKugB,GAAEpD,OAAOjyB,EAAE+zB,IAAI/zB,EAAEF,EAAEgzB,WAAU,GAAW/yB,EAAC,CAAC,SAASi5B,GAAGl5B,EAAEC,GAAG,IAAIC,EAAEmV,GAAEA,GAAE,IAAInV,GAAG,EAAEA,EAAEA,EAAE,EAAEF,GAAE,GAAI,IAAIwB,EAAE6zB,GAAGrd,WAAWqd,GAAGrd,WAAW,CAAC,EAAE,IAAIhY,GAAE,GAAIC,GAAG,CAAC,QAAQoV,GAAEnV,EAAEm1B,GAAGrd,WAAWxW,CAAC,CAAC,CAAC,SAAS23B,KAAK,OAAO1C,KAAK5kB,aAAa,CAC1d,SAASunB,GAAGp5B,EAAEC,EAAEC,GAAG,IAAIsB,EAAE63B,GAAGr5B,GAAkE,GAA/DE,EAAE,CAACuzB,KAAKjyB,EAAEq1B,OAAO32B,EAAE42B,eAAc,EAAGC,WAAW,KAAK5F,KAAK,MAASmI,GAAGt5B,GAAGu5B,GAAGt5B,EAAEC,QAAQ,GAAiB,QAAdA,EAAEwyB,GAAG1yB,EAAEC,EAAEC,EAAEsB,IAAY,CAAWw2B,GAAG93B,EAAEF,EAAEwB,EAAXg4B,MAAgBC,GAAGv5B,EAAED,EAAEuB,EAAE,CAAC,CAC/K,SAAS02B,GAAGl4B,EAAEC,EAAEC,GAAG,IAAIsB,EAAE63B,GAAGr5B,GAAGyB,EAAE,CAACgyB,KAAKjyB,EAAEq1B,OAAO32B,EAAE42B,eAAc,EAAGC,WAAW,KAAK5F,KAAK,MAAM,GAAGmI,GAAGt5B,GAAGu5B,GAAGt5B,EAAEwB,OAAO,CAAC,IAAIC,EAAE1B,EAAEyR,UAAU,GAAG,IAAIzR,EAAEmyB,QAAQ,OAAOzwB,GAAG,IAAIA,EAAEywB,QAAiC,QAAxBzwB,EAAEzB,EAAE22B,qBAA8B,IAAI,IAAIj1B,EAAE1B,EAAE+2B,kBAAkBnxB,EAAEnE,EAAEC,EAAEzB,GAAqC,GAAlCuB,EAAEq1B,eAAc,EAAGr1B,EAAEs1B,WAAWlxB,EAAK0d,GAAG1d,EAAElE,GAAG,CAAC,IAAImE,EAAE7F,EAAE0yB,YAA+E,OAAnE,OAAO7sB,GAAGrE,EAAE0vB,KAAK1vB,EAAEgxB,GAAGxyB,KAAKwB,EAAE0vB,KAAKrrB,EAAEqrB,KAAKrrB,EAAEqrB,KAAK1vB,QAAGxB,EAAE0yB,YAAYlxB,EAAQ,CAAC,CAAC,MAAMmE,GAAG,CAAwB,QAAd1F,EAAEwyB,GAAG1yB,EAAEC,EAAEwB,EAAED,MAAoBw2B,GAAG93B,EAAEF,EAAEwB,EAAbC,EAAE+3B,MAAgBC,GAAGv5B,EAAED,EAAEuB,GAAG,CAAC,CAC/c,SAAS83B,GAAGt5B,GAAG,IAAIC,EAAED,EAAEyR,UAAU,OAAOzR,IAAIu1B,IAAG,OAAOt1B,GAAGA,IAAIs1B,EAAC,CAAC,SAASgE,GAAGv5B,EAAEC,GAAG01B,GAAGD,IAAG,EAAG,IAAIx1B,EAAEF,EAAEozB,QAAQ,OAAOlzB,EAAED,EAAEkxB,KAAKlxB,GAAGA,EAAEkxB,KAAKjxB,EAAEixB,KAAKjxB,EAAEixB,KAAKlxB,GAAGD,EAAEozB,QAAQnzB,CAAC,CAAC,SAASw5B,GAAGz5B,EAAEC,EAAEC,GAAG,GAAG,KAAO,QAAFA,GAAW,CAAC,IAAIsB,EAAEvB,EAAEkyB,MAAwBjyB,GAAlBsB,GAAGxB,EAAEyU,aAAkBxU,EAAEkyB,MAAMjyB,EAAEkV,GAAGpV,EAAEE,EAAE,CAAC,CAC9P,IAAIk2B,GAAG,CAACsD,YAAYrH,GAAGsH,YAAY7D,GAAE8D,WAAW9D,GAAE+D,UAAU/D,GAAEgE,oBAAoBhE,GAAEiE,mBAAmBjE,GAAEkE,gBAAgBlE,GAAEmE,QAAQnE,GAAEoE,WAAWpE,GAAEqE,OAAOrE,GAAEsE,SAAStE,GAAEuE,cAAcvE,GAAEwE,iBAAiBxE,GAAEyE,cAAczE,GAAE0E,iBAAiB1E,GAAE2E,qBAAqB3E,GAAE4E,MAAM5E,GAAE6E,0BAAyB,GAAI1E,GAAG,CAACyD,YAAYrH,GAAGsH,YAAY,SAAS35B,EAAEC,GAA4C,OAAzCq2B,KAAKzkB,cAAc,CAAC7R,OAAE,IAASC,EAAE,KAAKA,GAAUD,CAAC,EAAE45B,WAAWvH,GAAGwH,UAAUpB,GAAGqB,oBAAoB,SAAS95B,EAAEC,EAAEC,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAE4nB,OAAO,CAAC9nB,IAAI,KAAYu4B,GAAG,QAC3f,EAAEK,GAAGjQ,KAAK,KAAK1oB,EAAED,GAAGE,EAAE,EAAE85B,gBAAgB,SAASh6B,EAAEC,GAAG,OAAOs4B,GAAG,QAAQ,EAAEv4B,EAAEC,EAAE,EAAE85B,mBAAmB,SAAS/5B,EAAEC,GAAG,OAAOs4B,GAAG,EAAE,EAAEv4B,EAAEC,EAAE,EAAEg6B,QAAQ,SAASj6B,EAAEC,GAAG,IAAIC,EAAEo2B,KAAqD,OAAhDr2B,OAAE,IAASA,EAAE,KAAKA,EAAED,EAAEA,IAAIE,EAAE2R,cAAc,CAAC7R,EAAEC,GAAUD,CAAC,EAAEk6B,WAAW,SAASl6B,EAAEC,EAAEC,GAAG,IAAIsB,EAAE80B,KAAkM,OAA7Lr2B,OAAE,IAASC,EAAEA,EAAED,GAAGA,EAAEuB,EAAEqQ,cAAcrQ,EAAEwxB,UAAU/yB,EAAED,EAAE,CAACozB,QAAQ,KAAKT,YAAY,KAAKR,MAAM,EAAE8E,SAAS,KAAKL,oBAAoB52B,EAAEg3B,kBAAkB/2B,GAAGuB,EAAEg1B,MAAMx2B,EAAEA,EAAEA,EAAEi3B,SAASmC,GAAGzQ,KAAK,KAAK4M,GAAEv1B,GAAS,CAACwB,EAAEqQ,cAAc7R,EAAE,EAAEm6B,OAAO,SAASn6B,GAC3d,OAAdA,EAAE,CAACmS,QAAQnS,GAAhBs2B,KAA4BzkB,cAAc7R,CAAC,EAAEo6B,SAASnC,GAAGoC,cAAcvB,GAAGwB,iBAAiB,SAASt6B,GAAG,OAAOs2B,KAAKzkB,cAAc7R,CAAC,EAAEu6B,cAAc,WAAW,IAAIv6B,EAAEi4B,IAAG,GAAIh4B,EAAED,EAAE,GAA6C,OAA1CA,EAAEk5B,GAAGvQ,KAAK,KAAK3oB,EAAE,IAAIs2B,KAAKzkB,cAAc7R,EAAQ,CAACC,EAAED,EAAE,EAAEw6B,iBAAiB,WAAW,EAAEC,qBAAqB,SAASz6B,EAAEC,EAAEC,GAAG,IAAIsB,EAAE+zB,GAAE9zB,EAAE60B,KAAK,GAAG5H,GAAE,CAAC,QAAG,IAASxuB,EAAE,MAAM+E,MAAMlF,EAAE,MAAMG,EAAEA,GAAG,KAAK,CAAO,GAANA,EAAED,IAAO,OAAOy3B,GAAE,MAAMzyB,MAAMlF,EAAE,MAAM,KAAQ,GAAHu1B,KAAQqC,GAAGn2B,EAAEvB,EAAEC,EAAE,CAACuB,EAAEoQ,cAAc3R,EAAE,IAAIwB,EAAE,CAACiG,MAAMzH,EAAEq3B,YAAYt3B,GACvZ,OAD0ZwB,EAAE+0B,MAAM90B,EAAE+2B,GAAGnB,GAAG3O,KAAK,KAAKnnB,EACpfE,EAAE1B,GAAG,CAACA,IAAIwB,EAAEmQ,OAAO,KAAK6lB,GAAG,EAAEC,GAAG9O,KAAK,KAAKnnB,EAAEE,EAAExB,EAAED,QAAG,EAAO,MAAaC,CAAC,EAAEw6B,MAAM,WAAW,IAAI16B,EAAEs2B,KAAKr2B,EAAEy3B,GAAEkD,iBAAiB,GAAGlM,GAAE,CAAC,IAAIxuB,EAAEiuB,GAAkDluB,EAAE,IAAIA,EAAE,KAA9CC,GAAHguB,KAAU,GAAG,GAAGpa,GAAhBoa,IAAsB,IAAIhkB,SAAS,IAAIhK,GAAuB,GAAPA,EAAE01B,QAAW31B,GAAG,IAAIC,EAAEgK,SAAS,KAAKjK,GAAG,GAAG,MAAaA,EAAE,IAAIA,EAAE,KAAfC,EAAE21B,MAAmB3rB,SAAS,IAAI,IAAI,OAAOlK,EAAE6R,cAAc5R,CAAC,EAAE06B,0BAAyB,GAAIzE,GAAG,CAACwD,YAAYrH,GAAGsH,YAAYZ,GAAGa,WAAWvH,GAAGwH,UAAUxC,GAAGyC,oBAAoBjB,GAAGkB,mBAAmBrB,GAAGsB,gBAAgBrB,GAAGsB,QAAQjB,GAAGkB,WAAWvD,GAAGwD,OAAO7B,GAAG8B,SAAS,WAAW,OAAOzD,GAAGD,GAAG,EACrhB2D,cAAcvB,GAAGwB,iBAAiB,SAASt6B,GAAc,OAAOi5B,GAAZxC,KAAiBjB,GAAE3jB,cAAc7R,EAAE,EAAEu6B,cAAc,WAAgD,MAAM,CAArC5D,GAAGD,IAAI,GAAKD,KAAK5kB,cAAyB,EAAE2oB,iBAAiBrD,GAAGsD,qBAAqBrD,GAAGsD,MAAMvB,GAAGwB,0BAAyB,GAAIxE,GAAG,CAACuD,YAAYrH,GAAGsH,YAAYZ,GAAGa,WAAWvH,GAAGwH,UAAUxC,GAAGyC,oBAAoBjB,GAAGkB,mBAAmBrB,GAAGsB,gBAAgBrB,GAAGsB,QAAQjB,GAAGkB,WAAWhD,GAAGiD,OAAO7B,GAAG8B,SAAS,WAAW,OAAOlD,GAAGR,GAAG,EAAE2D,cAAcvB,GAAGwB,iBAAiB,SAASt6B,GAAG,IAAIC,EAAEw2B,KAAK,OAAO,OACzfjB,GAAEv1B,EAAE4R,cAAc7R,EAAEi5B,GAAGh5B,EAAEu1B,GAAE3jB,cAAc7R,EAAE,EAAEu6B,cAAc,WAAgD,MAAM,CAArCrD,GAAGR,IAAI,GAAKD,KAAK5kB,cAAyB,EAAE2oB,iBAAiBrD,GAAGsD,qBAAqBrD,GAAGsD,MAAMvB,GAAGwB,0BAAyB,GAAI,SAASE,GAAG76B,EAAEC,GAAG,GAAGD,GAAGA,EAAE86B,aAAa,CAA4B,IAAI,IAAI56B,KAAnCD,EAAE6E,EAAE,CAAC,EAAE7E,GAAGD,EAAEA,EAAE86B,kBAA4B,IAAS76B,EAAEC,KAAKD,EAAEC,GAAGF,EAAEE,IAAI,OAAOD,CAAC,CAAC,OAAOA,CAAC,CAAC,SAAS86B,GAAG/6B,EAAEC,EAAEC,EAAEsB,GAA8BtB,EAAE,QAAXA,EAAEA,EAAEsB,EAAtBvB,EAAED,EAAE6R,sBAAmC,IAAS3R,EAAED,EAAE6E,EAAE,CAAC,EAAE7E,EAAEC,GAAGF,EAAE6R,cAAc3R,EAAE,IAAIF,EAAEmyB,QAAQnyB,EAAE+yB,YAAYC,UAAU9yB,EAAE,CACrd,IAAI86B,GAAG,CAACC,UAAU,SAASj7B,GAAG,SAAOA,EAAEA,EAAEk7B,kBAAiB1pB,GAAGxR,KAAKA,CAAI,EAAEm7B,gBAAgB,SAASn7B,EAAEC,EAAEC,GAAGF,EAAEA,EAAEk7B,gBAAgB,IAAI15B,EAAEg4B,KAAI/3B,EAAE43B,GAAGr5B,GAAG0B,EAAE6xB,GAAG/xB,EAAEC,GAAGC,EAAEgyB,QAAQzzB,OAAE,IAASC,GAAG,OAAOA,IAAIwB,EAAEiyB,SAASzzB,GAAe,QAAZD,EAAE2zB,GAAG5zB,EAAE0B,EAAED,MAAcu2B,GAAG/3B,EAAED,EAAEyB,EAAED,GAAGsyB,GAAG7zB,EAAED,EAAEyB,GAAG,EAAE25B,oBAAoB,SAASp7B,EAAEC,EAAEC,GAAGF,EAAEA,EAAEk7B,gBAAgB,IAAI15B,EAAEg4B,KAAI/3B,EAAE43B,GAAGr5B,GAAG0B,EAAE6xB,GAAG/xB,EAAEC,GAAGC,EAAEyE,IAAI,EAAEzE,EAAEgyB,QAAQzzB,OAAE,IAASC,GAAG,OAAOA,IAAIwB,EAAEiyB,SAASzzB,GAAe,QAAZD,EAAE2zB,GAAG5zB,EAAE0B,EAAED,MAAcu2B,GAAG/3B,EAAED,EAAEyB,EAAED,GAAGsyB,GAAG7zB,EAAED,EAAEyB,GAAG,EAAE45B,mBAAmB,SAASr7B,EAAEC,GAAGD,EAAEA,EAAEk7B,gBAAgB,IAAIh7B,EAAEs5B,KAAIh4B,EACnf63B,GAAGr5B,GAAGyB,EAAE8xB,GAAGrzB,EAAEsB,GAAGC,EAAE0E,IAAI,OAAE,IAASlG,GAAG,OAAOA,IAAIwB,EAAEkyB,SAAS1zB,GAAe,QAAZA,EAAE2zB,GAAG5zB,EAAEyB,EAAED,MAAcw2B,GAAG/3B,EAAED,EAAEwB,EAAEtB,GAAG4zB,GAAG7zB,EAAED,EAAEwB,GAAG,GAAG,SAAS85B,GAAGt7B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,GAAiB,MAAM,oBAApB3B,EAAEA,EAAEgQ,WAAsCurB,sBAAsBv7B,EAAEu7B,sBAAsB/5B,EAAEE,EAAEC,IAAG1B,EAAEiB,YAAWjB,EAAEiB,UAAUs6B,wBAAsBhY,GAAGtjB,EAAEsB,KAAKgiB,GAAG/hB,EAAEC,GAAK,CAC1S,SAAS+5B,GAAGz7B,EAAEC,EAAEC,GAAG,IAAIsB,GAAE,EAAGC,EAAE4qB,GAAO3qB,EAAEzB,EAAEy7B,YAA2W,MAA/V,kBAAkBh6B,GAAG,OAAOA,EAAEA,EAAE2wB,GAAG3wB,IAAID,EAAEorB,GAAG5sB,GAAGusB,GAAGF,GAAEna,QAAyBzQ,GAAGF,EAAE,QAAtBA,EAAEvB,EAAEysB,oBAA4B,IAASlrB,GAAGirB,GAAGzsB,EAAEyB,GAAG4qB,IAAIpsB,EAAE,IAAIA,EAAEC,EAAEwB,GAAG1B,EAAE6R,cAAc,OAAO5R,EAAE07B,YAAO,IAAS17B,EAAE07B,MAAM17B,EAAE07B,MAAM,KAAK17B,EAAE27B,QAAQZ,GAAGh7B,EAAEgQ,UAAU/P,EAAEA,EAAEi7B,gBAAgBl7B,EAAEwB,KAAIxB,EAAEA,EAAEgQ,WAAY2c,4CAA4ClrB,EAAEzB,EAAE4sB,0CAA0ClrB,GAAUzB,CAAC,CAC5Z,SAAS47B,GAAG77B,EAAEC,EAAEC,EAAEsB,GAAGxB,EAAEC,EAAE07B,MAAM,oBAAoB17B,EAAE67B,2BAA2B77B,EAAE67B,0BAA0B57B,EAAEsB,GAAG,oBAAoBvB,EAAE87B,kCAAkC97B,EAAE87B,iCAAiC77B,EAAEsB,GAAGvB,EAAE07B,QAAQ37B,GAAGg7B,GAAGI,oBAAoBn7B,EAAEA,EAAE07B,MAAM,KAAK,CACpQ,SAASK,GAAGh8B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEzB,EAAEgQ,UAAUvO,EAAEkvB,MAAMzwB,EAAEuB,EAAEk6B,MAAM37B,EAAE6R,cAAcpQ,EAAE0uB,KAAK,CAAC,EAAE2C,GAAG9yB,GAAG,IAAI0B,EAAEzB,EAAEy7B,YAAY,kBAAkBh6B,GAAG,OAAOA,EAAED,EAAE6wB,QAAQD,GAAG3wB,IAAIA,EAAEmrB,GAAG5sB,GAAGusB,GAAGF,GAAEna,QAAQ1Q,EAAE6wB,QAAQ7F,GAAGzsB,EAAE0B,IAAID,EAAEk6B,MAAM37B,EAAE6R,cAA2C,oBAA7BnQ,EAAEzB,EAAEg8B,4BAAiDlB,GAAG/6B,EAAEC,EAAEyB,EAAExB,GAAGuB,EAAEk6B,MAAM37B,EAAE6R,eAAe,oBAAoB5R,EAAEg8B,0BAA0B,oBAAoBx6B,EAAEy6B,yBAAyB,oBAAoBz6B,EAAE06B,2BAA2B,oBAAoB16B,EAAE26B,qBAAqBn8B,EAAEwB,EAAEk6B,MACrf,oBAAoBl6B,EAAE26B,oBAAoB36B,EAAE26B,qBAAqB,oBAAoB36B,EAAE06B,2BAA2B16B,EAAE06B,4BAA4Bl8B,IAAIwB,EAAEk6B,OAAOX,GAAGI,oBAAoB35B,EAAEA,EAAEk6B,MAAM,MAAM3H,GAAGh0B,EAAEE,EAAEuB,EAAED,GAAGC,EAAEk6B,MAAM37B,EAAE6R,eAAe,oBAAoBpQ,EAAE46B,oBAAoBr8B,EAAE2R,OAAO,QAAQ,CAAC,SAAS2qB,GAAGt8B,EAAEC,GAAG,IAAI,IAAIC,EAAE,GAAGsB,EAAEvB,EAAE,GAAGC,GAAGgG,EAAG1E,GAAGA,EAAEA,EAAEkQ,aAAalQ,GAAG,IAAIC,EAAEvB,CAAC,CAAC,MAAMwB,GAAGD,EAAE,6BAA6BC,EAAE66B,QAAQ,KAAK76B,EAAEwD,KAAK,CAAC,MAAM,CAACyC,MAAM3H,EAAE+O,OAAO9O,EAAEiF,MAAMzD,EAAE+6B,OAAO,KAAK,CAC1d,SAASC,GAAGz8B,EAAEC,EAAEC,GAAG,MAAM,CAACyH,MAAM3H,EAAE+O,OAAO,KAAK7J,MAAM,MAAMhF,EAAEA,EAAE,KAAKs8B,OAAO,MAAMv8B,EAAEA,EAAE,KAAK,CAAC,SAASy8B,GAAG18B,EAAEC,GAAG,IAAI08B,QAAQC,MAAM38B,EAAE0H,MAAM,CAAC,MAAMzH,GAAG0qB,YAAW,WAAW,MAAM1qB,CAAE,GAAE,CAAC,CAAC,IAAI28B,GAAG,oBAAoBC,QAAQA,QAAQ5mB,IAAI,SAAS6mB,GAAG/8B,EAAEC,EAAEC,IAAGA,EAAEqzB,IAAI,EAAErzB,IAAKiG,IAAI,EAAEjG,EAAEwzB,QAAQ,CAAC7N,QAAQ,MAAM,IAAIrkB,EAAEvB,EAAE0H,MAAsD,OAAhDzH,EAAEyzB,SAAS,WAAWqJ,KAAKA,IAAG,EAAGC,GAAGz7B,GAAGk7B,GAAG18B,EAAEC,EAAE,EAASC,CAAC,CACrW,SAASg9B,GAAGl9B,EAAEC,EAAEC,IAAGA,EAAEqzB,IAAI,EAAErzB,IAAKiG,IAAI,EAAE,IAAI3E,EAAExB,EAAEkC,KAAKi7B,yBAAyB,GAAG,oBAAoB37B,EAAE,CAAC,IAAIC,EAAExB,EAAE0H,MAAMzH,EAAEwzB,QAAQ,WAAW,OAAOlyB,EAAEC,EAAE,EAAEvB,EAAEyzB,SAAS,WAAW+I,GAAG18B,EAAEC,EAAE,CAAC,CAAC,IAAIyB,EAAE1B,EAAEgQ,UAA8O,OAApO,OAAOtO,GAAG,oBAAoBA,EAAE07B,oBAAoBl9B,EAAEyzB,SAAS,WAAW+I,GAAG18B,EAAEC,GAAG,oBAAoBuB,IAAI,OAAO67B,GAAGA,GAAG,IAAI98B,IAAI,CAACqB,OAAOy7B,GAAG18B,IAAIiB,OAAO,IAAI1B,EAAED,EAAEiF,MAAMtD,KAAKw7B,kBAAkBn9B,EAAE0H,MAAM,CAAC21B,eAAe,OAAOp9B,EAAEA,EAAE,IAAI,GAAUA,CAAC,CACnb,SAASq9B,GAAGv9B,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEw9B,UAAU,GAAG,OAAOh8B,EAAE,CAACA,EAAExB,EAAEw9B,UAAU,IAAIX,GAAG,IAAIp7B,EAAE,IAAIlB,IAAIiB,EAAEiE,IAAIxF,EAAEwB,EAAE,WAAiB,KAAXA,EAAED,EAAE0F,IAAIjH,MAAgBwB,EAAE,IAAIlB,IAAIiB,EAAEiE,IAAIxF,EAAEwB,IAAIA,EAAE4mB,IAAInoB,KAAKuB,EAAEd,IAAIT,GAAGF,EAAEy9B,GAAG9U,KAAK,KAAK3oB,EAAEC,EAAEC,GAAGD,EAAEmrB,KAAKprB,EAAEA,GAAG,CAAC,SAAS09B,GAAG19B,GAAG,EAAE,CAAC,IAAIC,EAA4E,IAAvEA,EAAE,KAAKD,EAAEmG,OAAsBlG,EAAE,QAApBA,EAAED,EAAE6R,gBAAyB,OAAO5R,EAAE6R,YAAuB7R,EAAE,OAAOD,EAAEA,EAAEA,EAAE0R,MAAM,OAAO,OAAO1R,GAAG,OAAO,IAAI,CAChW,SAAS29B,GAAG39B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,OAAG,KAAY,EAAPzB,EAAEsvB,OAAetvB,IAAIC,EAAED,EAAE2R,OAAO,OAAO3R,EAAE2R,OAAO,IAAIzR,EAAEyR,OAAO,OAAOzR,EAAEyR,QAAQ,MAAM,IAAIzR,EAAEiG,MAAM,OAAOjG,EAAEuR,UAAUvR,EAAEiG,IAAI,KAAIlG,EAAEszB,IAAI,EAAE,IAAKptB,IAAI,EAAEytB,GAAG1zB,EAAED,EAAE,KAAKC,EAAEiyB,OAAO,GAAGnyB,IAAEA,EAAE2R,OAAO,MAAM3R,EAAEmyB,MAAM1wB,EAASzB,EAAC,CAAC,IAAI49B,GAAGn6B,EAAGo6B,kBAAkBzL,IAAG,EAAG,SAAS0L,GAAG99B,EAAEC,EAAEC,EAAEsB,GAAGvB,EAAEgS,MAAM,OAAOjS,EAAEsxB,GAAGrxB,EAAE,KAAKC,EAAEsB,GAAG6vB,GAAGpxB,EAAED,EAAEiS,MAAM/R,EAAEsB,EAAE,CACnV,SAASu8B,GAAG/9B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAGvB,EAAEA,EAAEkG,OAAO,IAAI1E,EAAEzB,EAAE+vB,IAAqC,OAAjCgC,GAAG/xB,EAAEwB,GAAGD,EAAEw0B,GAAGh2B,EAAEC,EAAEC,EAAEsB,EAAEE,EAAED,GAAGvB,EAAEm2B,KAAQ,OAAOr2B,GAAIoyB,IAA2E1D,IAAGxuB,GAAGouB,GAAGruB,GAAGA,EAAE0R,OAAO,EAAEmsB,GAAG99B,EAAEC,EAAEuB,EAAEC,GAAUxB,EAAEgS,QAA7GhS,EAAE8yB,YAAY/yB,EAAE+yB,YAAY9yB,EAAE0R,QAAQ,KAAK3R,EAAEmyB,QAAQ1wB,EAAEu8B,GAAGh+B,EAAEC,EAAEwB,GAAoD,CACzN,SAASw8B,GAAGj+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAG,OAAOzB,EAAE,CAAC,IAAI0B,EAAExB,EAAEgC,KAAK,MAAG,oBAAoBR,GAAIw8B,GAAGx8B,SAAI,IAASA,EAAEo5B,cAAc,OAAO56B,EAAEi+B,cAAS,IAASj+B,EAAE46B,eAAoD96B,EAAE4wB,GAAG1wB,EAAEgC,KAAK,KAAKV,EAAEvB,EAAEA,EAAEqvB,KAAK7tB,IAAKuuB,IAAI/vB,EAAE+vB,IAAIhwB,EAAE0R,OAAOzR,EAASA,EAAEgS,MAAMjS,IAArGC,EAAEkG,IAAI,GAAGlG,EAAEiC,KAAKR,EAAE08B,GAAGp+B,EAAEC,EAAEyB,EAAEF,EAAEC,GAAyE,CAAW,GAAVC,EAAE1B,EAAEiS,MAAS,KAAKjS,EAAEmyB,MAAM1wB,GAAG,CAAC,IAAIE,EAAED,EAAEguB,cAA0C,IAAhBxvB,EAAE,QAAdA,EAAEA,EAAEi+B,SAAmBj+B,EAAEsjB,IAAQ7hB,EAAEH,IAAIxB,EAAEgwB,MAAM/vB,EAAE+vB,IAAI,OAAOgO,GAAGh+B,EAAEC,EAAEwB,EAAE,CAA6C,OAA5CxB,EAAE0R,OAAO,GAAE3R,EAAEywB,GAAG/uB,EAAEF,IAAKwuB,IAAI/vB,EAAE+vB,IAAIhwB,EAAE0R,OAAOzR,EAASA,EAAEgS,MAAMjS,CAAC,CAC1b,SAASo+B,GAAGp+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAG,OAAOzB,EAAE,CAAC,IAAI0B,EAAE1B,EAAE0vB,cAAc,GAAGlM,GAAG9hB,EAAEF,IAAIxB,EAAEgwB,MAAM/vB,EAAE+vB,IAAI,IAAGoC,IAAG,EAAGnyB,EAAEgvB,aAAaztB,EAAEE,EAAE,KAAK1B,EAAEmyB,MAAM1wB,GAAsC,OAAOxB,EAAEkyB,MAAMnyB,EAAEmyB,MAAM6L,GAAGh+B,EAAEC,EAAEwB,GAAjE,KAAa,OAARzB,EAAE2R,SAAgBygB,IAAG,EAAyC,EAAC,OAAOiM,GAAGr+B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAE,CACxN,SAAS68B,GAAGt+B,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAEgvB,aAAaxtB,EAAED,EAAE8H,SAAS5H,EAAE,OAAO1B,EAAEA,EAAE6R,cAAc,KAAK,GAAG,WAAWrQ,EAAE8tB,KAAK,GAAG,KAAY,EAAPrvB,EAAEqvB,MAAQrvB,EAAE4R,cAAc,CAAC0sB,UAAU,EAAEC,UAAU,KAAKC,YAAY,MAAMrS,GAAEsS,GAAGC,IAAIA,IAAIz+B,MAAM,CAAC,GAAG,KAAO,WAAFA,GAAc,OAAOF,EAAE,OAAO0B,EAAEA,EAAE68B,UAAUr+B,EAAEA,EAAED,EAAEkyB,MAAMlyB,EAAE8xB,WAAW,WAAW9xB,EAAE4R,cAAc,CAAC0sB,UAAUv+B,EAAEw+B,UAAU,KAAKC,YAAY,MAAMx+B,EAAE8yB,YAAY,KAAK3G,GAAEsS,GAAGC,IAAIA,IAAI3+B,EAAE,KAAKC,EAAE4R,cAAc,CAAC0sB,UAAU,EAAEC,UAAU,KAAKC,YAAY,MAAMj9B,EAAE,OAAOE,EAAEA,EAAE68B,UAAUr+B,EAAEksB,GAAEsS,GAAGC,IAAIA,IAAIn9B,CAAC,MAAM,OACtfE,GAAGF,EAAEE,EAAE68B,UAAUr+B,EAAED,EAAE4R,cAAc,MAAMrQ,EAAEtB,EAAEksB,GAAEsS,GAAGC,IAAIA,IAAIn9B,EAAc,OAAZs8B,GAAG99B,EAAEC,EAAEwB,EAAEvB,GAAUD,EAAEgS,KAAK,CAAC,SAAS2sB,GAAG5+B,EAAEC,GAAG,IAAIC,EAAED,EAAE+vB,KAAO,OAAOhwB,GAAG,OAAOE,GAAG,OAAOF,GAAGA,EAAEgwB,MAAM9vB,KAAED,EAAE0R,OAAO,IAAI1R,EAAE0R,OAAO,QAAO,CAAC,SAAS0sB,GAAGr+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAEmrB,GAAG3sB,GAAGssB,GAAGF,GAAEna,QAAmD,OAA3CzQ,EAAE+qB,GAAGxsB,EAAEyB,GAAGswB,GAAG/xB,EAAEwB,GAAGvB,EAAE81B,GAAGh2B,EAAEC,EAAEC,EAAEsB,EAAEE,EAAED,GAAGD,EAAE60B,KAAQ,OAAOr2B,GAAIoyB,IAA2E1D,IAAGltB,GAAG8sB,GAAGruB,GAAGA,EAAE0R,OAAO,EAAEmsB,GAAG99B,EAAEC,EAAEC,EAAEuB,GAAUxB,EAAEgS,QAA7GhS,EAAE8yB,YAAY/yB,EAAE+yB,YAAY9yB,EAAE0R,QAAQ,KAAK3R,EAAEmyB,QAAQ1wB,EAAEu8B,GAAGh+B,EAAEC,EAAEwB,GAAoD,CACla,SAASo9B,GAAG7+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAGorB,GAAG3sB,GAAG,CAAC,IAAIwB,GAAE,EAAGyrB,GAAGltB,EAAE,MAAMyB,GAAE,EAAW,GAARswB,GAAG/xB,EAAEwB,GAAM,OAAOxB,EAAE+P,UAAU8uB,GAAG9+B,EAAEC,GAAGw7B,GAAGx7B,EAAEC,EAAEsB,GAAGw6B,GAAG/7B,EAAEC,EAAEsB,EAAEC,GAAGD,GAAE,OAAQ,GAAG,OAAOxB,EAAE,CAAC,IAAI2B,EAAE1B,EAAE+P,UAAUnK,EAAE5F,EAAEyvB,cAAc/tB,EAAEgvB,MAAM9qB,EAAE,IAAIC,EAAEnE,EAAE2wB,QAAQ1sB,EAAE1F,EAAEw7B,YAAY,kBAAkB91B,GAAG,OAAOA,EAAEA,EAAEysB,GAAGzsB,GAAyBA,EAAE6mB,GAAGxsB,EAA1B2F,EAAEinB,GAAG3sB,GAAGssB,GAAGF,GAAEna,SAAmB,IAAInB,EAAE9Q,EAAE+7B,yBAAyBjL,EAAE,oBAAoBhgB,GAAG,oBAAoBrP,EAAEu6B,wBAAwBlL,GAAG,oBAAoBrvB,EAAEo6B,kCAAkC,oBAAoBp6B,EAAEm6B,4BAC1dj2B,IAAIrE,GAAGsE,IAAIF,IAAIi2B,GAAG57B,EAAE0B,EAAEH,EAAEoE,GAAGitB,IAAG,EAAG,IAAI5B,EAAEhxB,EAAE4R,cAAclQ,EAAEg6B,MAAM1K,EAAE+C,GAAG/zB,EAAEuB,EAAEG,EAAEF,GAAGqE,EAAE7F,EAAE4R,cAAchM,IAAIrE,GAAGyvB,IAAInrB,GAAGymB,GAAGpa,SAAS0gB,IAAI,oBAAoB7hB,IAAI+pB,GAAG96B,EAAEC,EAAE8Q,EAAExP,GAAGsE,EAAE7F,EAAE4R,gBAAgBhM,EAAEgtB,IAAIyI,GAAGr7B,EAAEC,EAAE2F,EAAErE,EAAEyvB,EAAEnrB,EAAEF,KAAKorB,GAAG,oBAAoBrvB,EAAEw6B,2BAA2B,oBAAoBx6B,EAAEy6B,qBAAqB,oBAAoBz6B,EAAEy6B,oBAAoBz6B,EAAEy6B,qBAAqB,oBAAoBz6B,EAAEw6B,2BAA2Bx6B,EAAEw6B,6BAA6B,oBAAoBx6B,EAAE06B,oBAAoBp8B,EAAE0R,OAAO,WAClf,oBAAoBhQ,EAAE06B,oBAAoBp8B,EAAE0R,OAAO,SAAS1R,EAAEyvB,cAAcluB,EAAEvB,EAAE4R,cAAc/L,GAAGnE,EAAEgvB,MAAMnvB,EAAEG,EAAEg6B,MAAM71B,EAAEnE,EAAE2wB,QAAQ1sB,EAAEpE,EAAEqE,IAAI,oBAAoBlE,EAAE06B,oBAAoBp8B,EAAE0R,OAAO,SAASnQ,GAAE,EAAG,KAAK,CAACG,EAAE1B,EAAE+P,UAAUsjB,GAAGtzB,EAAEC,GAAG4F,EAAE5F,EAAEyvB,cAAc9pB,EAAE3F,EAAEiC,OAAOjC,EAAE6uB,YAAYjpB,EAAEg1B,GAAG56B,EAAEiC,KAAK2D,GAAGlE,EAAEgvB,MAAM/qB,EAAEorB,EAAE/wB,EAAEgvB,aAAagC,EAAEtvB,EAAE2wB,QAAwB,kBAAhBxsB,EAAE5F,EAAEw7B,cAAiC,OAAO51B,EAAEA,EAAEusB,GAAGvsB,GAAyBA,EAAE2mB,GAAGxsB,EAA1B6F,EAAE+mB,GAAG3sB,GAAGssB,GAAGF,GAAEna,SAAmB,IAAI+e,EAAEhxB,EAAE+7B,0BAA0BjrB,EAAE,oBAAoBkgB,GAAG,oBAAoBvvB,EAAEu6B,0BAC9e,oBAAoBv6B,EAAEo6B,kCAAkC,oBAAoBp6B,EAAEm6B,4BAA4Bj2B,IAAImrB,GAAGC,IAAInrB,IAAI+1B,GAAG57B,EAAE0B,EAAEH,EAAEsE,GAAG+sB,IAAG,EAAG5B,EAAEhxB,EAAE4R,cAAclQ,EAAEg6B,MAAM1K,EAAE+C,GAAG/zB,EAAEuB,EAAEG,EAAEF,GAAG,IAAIqnB,EAAE7oB,EAAE4R,cAAchM,IAAImrB,GAAGC,IAAInI,GAAGyD,GAAGpa,SAAS0gB,IAAI,oBAAoB3B,IAAI6J,GAAG96B,EAAEC,EAAEgxB,EAAE1vB,GAAGsnB,EAAE7oB,EAAE4R,gBAAgBjM,EAAEitB,IAAIyI,GAAGr7B,EAAEC,EAAE0F,EAAEpE,EAAEyvB,EAAEnI,EAAEhjB,KAAI,IAAKkL,GAAG,oBAAoBrP,EAAEo9B,4BAA4B,oBAAoBp9B,EAAEq9B,sBAAsB,oBAAoBr9B,EAAEq9B,qBAAqBr9B,EAAEq9B,oBAAoBx9B,EAAEsnB,EAAEhjB,GAAG,oBAAoBnE,EAAEo9B,4BAC5fp9B,EAAEo9B,2BAA2Bv9B,EAAEsnB,EAAEhjB,IAAI,oBAAoBnE,EAAEs9B,qBAAqBh/B,EAAE0R,OAAO,GAAG,oBAAoBhQ,EAAEu6B,0BAA0Bj8B,EAAE0R,OAAO,QAAQ,oBAAoBhQ,EAAEs9B,oBAAoBp5B,IAAI7F,EAAE0vB,eAAeuB,IAAIjxB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,GAAG,oBAAoBhQ,EAAEu6B,yBAAyBr2B,IAAI7F,EAAE0vB,eAAeuB,IAAIjxB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,MAAM1R,EAAEyvB,cAAcluB,EAAEvB,EAAE4R,cAAciX,GAAGnnB,EAAEgvB,MAAMnvB,EAAEG,EAAEg6B,MAAM7S,EAAEnnB,EAAE2wB,QAAQxsB,EAAEtE,EAAEoE,IAAI,oBAAoBjE,EAAEs9B,oBAAoBp5B,IAAI7F,EAAE0vB,eAAeuB,IACjfjxB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,GAAG,oBAAoBhQ,EAAEu6B,yBAAyBr2B,IAAI7F,EAAE0vB,eAAeuB,IAAIjxB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,MAAMnQ,GAAE,EAAG,CAAC,OAAO09B,GAAGl/B,EAAEC,EAAEC,EAAEsB,EAAEE,EAAED,EAAE,CACnK,SAASy9B,GAAGl/B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAGk9B,GAAG5+B,EAAEC,GAAG,IAAI0B,EAAE,KAAa,IAAR1B,EAAE0R,OAAW,IAAInQ,IAAIG,EAAE,OAAOF,GAAG4rB,GAAGptB,EAAEC,GAAE,GAAI89B,GAAGh+B,EAAEC,EAAEyB,GAAGF,EAAEvB,EAAE+P,UAAU4tB,GAAGzrB,QAAQlS,EAAE,IAAI4F,EAAElE,GAAG,oBAAoBzB,EAAEi9B,yBAAyB,KAAK37B,EAAE4E,SAAwI,OAA/HnG,EAAE0R,OAAO,EAAE,OAAO3R,GAAG2B,GAAG1B,EAAEgS,MAAMof,GAAGpxB,EAAED,EAAEiS,MAAM,KAAKvQ,GAAGzB,EAAEgS,MAAMof,GAAGpxB,EAAE,KAAK4F,EAAEnE,IAAIo8B,GAAG99B,EAAEC,EAAE4F,EAAEnE,GAAGzB,EAAE4R,cAAcrQ,EAAEm6B,MAAMl6B,GAAG4rB,GAAGptB,EAAEC,GAAE,GAAWD,EAAEgS,KAAK,CAAC,SAASktB,GAAGn/B,GAAG,IAAIC,EAAED,EAAEgQ,UAAU/P,EAAEm/B,eAAepS,GAAGhtB,EAAEC,EAAEm/B,eAAen/B,EAAEm/B,iBAAiBn/B,EAAEqyB,SAASryB,EAAEqyB,SAAStF,GAAGhtB,EAAEC,EAAEqyB,SAAQ,GAAIkC,GAAGx0B,EAAEC,EAAEkX,cAAc,CAC5e,SAASkoB,GAAGr/B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAuC,OAApCmuB,KAAKC,GAAGpuB,GAAGxB,EAAE0R,OAAO,IAAImsB,GAAG99B,EAAEC,EAAEC,EAAEsB,GAAUvB,EAAEgS,KAAK,CAAC,IAaqLqtB,GAAGC,GAAGC,GAAGC,GAb1LC,GAAG,CAAC5tB,WAAW,KAAKqd,YAAY,KAAKC,UAAU,GAAG,SAASuQ,GAAG3/B,GAAG,MAAM,CAACu+B,UAAUv+B,EAAEw+B,UAAU,KAAKC,YAAY,KAAK,CAClM,SAASmB,GAAG5/B,EAAEC,EAAEC,GAAG,IAA0D2F,EAAtDrE,EAAEvB,EAAEgvB,aAAaxtB,EAAEozB,GAAE1iB,QAAQzQ,GAAE,EAAGC,EAAE,KAAa,IAAR1B,EAAE0R,OAAqJ,IAAvI9L,EAAElE,KAAKkE,GAAE,OAAO7F,GAAG,OAAOA,EAAE6R,gBAAiB,KAAO,EAAFpQ,IAASoE,GAAEnE,GAAE,EAAGzB,EAAE0R,QAAQ,KAAY,OAAO3R,GAAG,OAAOA,EAAE6R,gBAAcpQ,GAAG,GAAE2qB,GAAEyI,GAAI,EAAFpzB,GAAQ,OAAOzB,EAA2B,OAAxBuvB,GAAGtvB,GAAwB,QAArBD,EAAEC,EAAE4R,gBAA2C,QAAf7R,EAAEA,EAAE8R,aAA4B,KAAY,EAAP7R,EAAEqvB,MAAQrvB,EAAEkyB,MAAM,EAAE,OAAOnyB,EAAE6c,KAAK5c,EAAEkyB,MAAM,EAAElyB,EAAEkyB,MAAM,WAAW,OAAKxwB,EAAEH,EAAE8H,SAAStJ,EAAEwB,EAAEq+B,SAAgBn+B,GAAGF,EAAEvB,EAAEqvB,KAAK5tB,EAAEzB,EAAEgS,MAAMtQ,EAAE,CAAC2tB,KAAK,SAAShmB,SAAS3H,GAAG,KAAO,EAAFH,IAAM,OAAOE,GAAGA,EAAEqwB,WAAW,EAAErwB,EAAEutB,aAC7ettB,GAAGD,EAAEo+B,GAAGn+B,EAAEH,EAAE,EAAE,MAAMxB,EAAE+wB,GAAG/wB,EAAEwB,EAAEtB,EAAE,MAAMwB,EAAEgQ,OAAOzR,EAAED,EAAE0R,OAAOzR,EAAEyB,EAAEwQ,QAAQlS,EAAEC,EAAEgS,MAAMvQ,EAAEzB,EAAEgS,MAAMJ,cAAc8tB,GAAGz/B,GAAGD,EAAE4R,cAAc6tB,GAAG1/B,GAAG+/B,GAAG9/B,EAAE0B,IAAqB,GAAG,QAArBF,EAAEzB,EAAE6R,gBAA2C,QAAfhM,EAAEpE,EAAEqQ,YAAqB,OAGpM,SAAY9R,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,GAAG,GAAGzB,EAAG,OAAW,IAARD,EAAE0R,OAAiB1R,EAAE0R,QAAQ,IAAwBquB,GAAGhgC,EAAEC,EAAE0B,EAA3BH,EAAEi7B,GAAGx3B,MAAMlF,EAAE,SAAsB,OAAOE,EAAE4R,eAAqB5R,EAAEgS,MAAMjS,EAAEiS,MAAMhS,EAAE0R,OAAO,IAAI,OAAKjQ,EAAEF,EAAEq+B,SAASp+B,EAAExB,EAAEqvB,KAAK9tB,EAAEs+B,GAAG,CAACxQ,KAAK,UAAUhmB,SAAS9H,EAAE8H,UAAU7H,EAAE,EAAE,OAAMC,EAAEqvB,GAAGrvB,EAAED,EAAEE,EAAE,OAAQgQ,OAAO,EAAEnQ,EAAEkQ,OAAOzR,EAAEyB,EAAEgQ,OAAOzR,EAAEuB,EAAE0Q,QAAQxQ,EAAEzB,EAAEgS,MAAMzQ,EAAE,KAAY,EAAPvB,EAAEqvB,OAAS+B,GAAGpxB,EAAED,EAAEiS,MAAM,KAAKtQ,GAAG1B,EAAEgS,MAAMJ,cAAc8tB,GAAGh+B,GAAG1B,EAAE4R,cAAc6tB,GAAUh+B,GAAE,GAAG,KAAY,EAAPzB,EAAEqvB,MAAQ,OAAO0Q,GAAGhgC,EAAEC,EAAE0B,EAAE,MAAM,GAAG,OAAOF,EAAEob,KAAK,CAChd,GADidrb,EAAEC,EAAEoiB,aAAapiB,EAAEoiB,YAAYoc,QAC3e,IAAIp6B,EAAErE,EAAE0+B,KAA0C,OAArC1+B,EAAEqE,EAA0Cm6B,GAAGhgC,EAAEC,EAAE0B,EAA/BH,EAAEi7B,GAAlB/6B,EAAEuD,MAAMlF,EAAE,MAAayB,OAAE,GAA0B,CAAwB,GAAvBqE,EAAE,KAAKlE,EAAE3B,EAAE+xB,YAAeK,IAAIvsB,EAAE,CAAK,GAAG,QAAPrE,EAAEk2B,IAAc,CAAC,OAAO/1B,GAAGA,GAAG,KAAK,EAAEF,EAAE,EAAE,MAAM,KAAK,GAAGA,EAAE,EAAE,MAAM,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAASA,EAAE,GAAG,MAAM,KAAK,UAAUA,EAAE,UAAU,MAAM,QAAQA,EAAE,EAChd,KADkdA,EAAE,KAAKA,GAAGD,EAAEkT,eAAe/S,IAAI,EAAEF,IAC5eA,IAAIC,EAAE0tB,YAAY1tB,EAAE0tB,UAAU3tB,EAAEmxB,GAAG5yB,EAAEyB,GAAGu2B,GAAGx2B,EAAExB,EAAEyB,GAAG,GAAG,CAA0B,OAAzB0+B,KAAgCH,GAAGhgC,EAAEC,EAAE0B,EAAlCH,EAAEi7B,GAAGx3B,MAAMlF,EAAE,OAAyB,CAAC,MAAG,OAAO0B,EAAEob,MAAY5c,EAAE0R,OAAO,IAAI1R,EAAEgS,MAAMjS,EAAEiS,MAAMhS,EAAEmgC,GAAGzX,KAAK,KAAK3oB,GAAGyB,EAAE4+B,YAAYpgC,EAAE,OAAKD,EAAE0B,EAAEytB,YAAYV,GAAGjD,GAAG/pB,EAAEoiB,aAAa2K,GAAGvuB,EAAEyuB,IAAE,EAAGC,GAAG,KAAK,OAAO3uB,IAAI+tB,GAAGC,MAAME,GAAGH,GAAGC,MAAMG,GAAGJ,GAAGC,MAAMC,GAAGC,GAAGluB,EAAEoY,GAAG+V,GAAGnuB,EAAEkvB,SAASjB,GAAGhuB,GAAGA,EAAE8/B,GAAG9/B,EAAEuB,EAAE8H,UAAUrJ,EAAE0R,OAAO,KAAY1R,EAAC,CALrKqgC,CAAGtgC,EAAEC,EAAE0B,EAAEH,EAAEqE,EAAEpE,EAAEvB,GAAG,GAAGwB,EAAE,CAACA,EAAEF,EAAEq+B,SAASl+B,EAAE1B,EAAEqvB,KAAezpB,GAAVpE,EAAEzB,EAAEiS,OAAUC,QAAQ,IAAIpM,EAAE,CAACwpB,KAAK,SAAShmB,SAAS9H,EAAE8H,UAChF,OAD0F,KAAO,EAAF3H,IAAM1B,EAAEgS,QAAQxQ,IAAGD,EAAEvB,EAAEgS,OAAQ8f,WAAW,EAAEvwB,EAAEytB,aAAanpB,EAAE7F,EAAE8uB,UAAU,OAAOvtB,EAAEivB,GAAGhvB,EAAEqE,IAAKy6B,aAA4B,SAAf9+B,EAAE8+B,aAAuB,OAAO16B,EAAEnE,EAAE+uB,GAAG5qB,EAAEnE,IAAIA,EAAEqvB,GAAGrvB,EAAEC,EAAEzB,EAAE,OAAQyR,OAAO,EAAGjQ,EAAEgQ,OACnfzR,EAAEuB,EAAEkQ,OAAOzR,EAAEuB,EAAE0Q,QAAQxQ,EAAEzB,EAAEgS,MAAMzQ,EAAEA,EAAEE,EAAEA,EAAEzB,EAAEgS,MAA8BtQ,EAAE,QAA1BA,EAAE3B,EAAEiS,MAAMJ,eAAyB8tB,GAAGz/B,GAAG,CAACq+B,UAAU58B,EAAE48B,UAAUr+B,EAAEs+B,UAAU,KAAKC,YAAY98B,EAAE88B,aAAa/8B,EAAEmQ,cAAclQ,EAAED,EAAEqwB,WAAW/xB,EAAE+xB,YAAY7xB,EAAED,EAAE4R,cAAc6tB,GAAUl+B,CAAC,CAAoO,OAAzNxB,GAAV0B,EAAE1B,EAAEiS,OAAUC,QAAQ1Q,EAAEivB,GAAG/uB,EAAE,CAAC4tB,KAAK,UAAUhmB,SAAS9H,EAAE8H,WAAW,KAAY,EAAPrJ,EAAEqvB,QAAU9tB,EAAE2wB,MAAMjyB,GAAGsB,EAAEkQ,OAAOzR,EAAEuB,EAAE0Q,QAAQ,KAAK,OAAOlS,IAAkB,QAAdE,EAAED,EAAE8uB,YAAoB9uB,EAAE8uB,UAAU,CAAC/uB,GAAGC,EAAE0R,OAAO,IAAIzR,EAAEiQ,KAAKnQ,IAAIC,EAAEgS,MAAMzQ,EAAEvB,EAAE4R,cAAc,KAAYrQ,CAAC,CACnd,SAASu+B,GAAG//B,EAAEC,GAA8D,OAA3DA,EAAE6/B,GAAG,CAACxQ,KAAK,UAAUhmB,SAASrJ,GAAGD,EAAEsvB,KAAK,EAAE,OAAQ5d,OAAO1R,EAASA,EAAEiS,MAAMhS,CAAC,CAAC,SAAS+/B,GAAGhgC,EAAEC,EAAEC,EAAEsB,GAAwG,OAArG,OAAOA,GAAGquB,GAAGruB,GAAG6vB,GAAGpxB,EAAED,EAAEiS,MAAM,KAAK/R,IAAGF,EAAE+/B,GAAG9/B,EAAEA,EAAEgvB,aAAa3lB,WAAYqI,OAAO,EAAE1R,EAAE4R,cAAc,KAAY7R,CAAC,CAGkJ,SAASwgC,GAAGxgC,EAAEC,EAAEC,GAAGF,EAAEmyB,OAAOlyB,EAAE,IAAIuB,EAAExB,EAAEyR,UAAU,OAAOjQ,IAAIA,EAAE2wB,OAAOlyB,GAAG6xB,GAAG9xB,EAAE0R,OAAOzR,EAAEC,EAAE,CACxc,SAASugC,GAAGzgC,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAE1B,EAAE6R,cAAc,OAAOnQ,EAAE1B,EAAE6R,cAAc,CAAC6uB,YAAYzgC,EAAE0gC,UAAU,KAAKC,mBAAmB,EAAEC,KAAKr/B,EAAEs/B,KAAK5gC,EAAE6gC,SAASt/B,IAAIC,EAAEg/B,YAAYzgC,EAAEyB,EAAEi/B,UAAU,KAAKj/B,EAAEk/B,mBAAmB,EAAEl/B,EAAEm/B,KAAKr/B,EAAEE,EAAEo/B,KAAK5gC,EAAEwB,EAAEq/B,SAASt/B,EAAE,CAC3O,SAASu/B,GAAGhhC,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAEgvB,aAAaxtB,EAAED,EAAEuzB,YAAYrzB,EAAEF,EAAEs/B,KAAsC,GAAjChD,GAAG99B,EAAEC,EAAEuB,EAAE8H,SAASpJ,GAAkB,KAAO,GAAtBsB,EAAEqzB,GAAE1iB,UAAqB3Q,EAAI,EAAFA,EAAI,EAAEvB,EAAE0R,OAAO,QAAQ,CAAC,GAAG,OAAO3R,GAAG,KAAa,IAARA,EAAE2R,OAAW3R,EAAE,IAAIA,EAAEC,EAAEgS,MAAM,OAAOjS,GAAG,CAAC,GAAG,KAAKA,EAAEmG,IAAI,OAAOnG,EAAE6R,eAAe2uB,GAAGxgC,EAAEE,EAAED,QAAQ,GAAG,KAAKD,EAAEmG,IAAIq6B,GAAGxgC,EAAEE,EAAED,QAAQ,GAAG,OAAOD,EAAEiS,MAAM,CAACjS,EAAEiS,MAAMP,OAAO1R,EAAEA,EAAEA,EAAEiS,MAAM,QAAQ,CAAC,GAAGjS,IAAIC,EAAE,MAAMD,EAAE,KAAK,OAAOA,EAAEkS,SAAS,CAAC,GAAG,OAAOlS,EAAE0R,QAAQ1R,EAAE0R,SAASzR,EAAE,MAAMD,EAAEA,EAAEA,EAAE0R,MAAM,CAAC1R,EAAEkS,QAAQR,OAAO1R,EAAE0R,OAAO1R,EAAEA,EAAEkS,OAAO,CAAC1Q,GAAG,CAAC,CAAQ,GAAP4qB,GAAEyI,GAAErzB,GAAM,KAAY,EAAPvB,EAAEqvB,MAAQrvB,EAAE4R,cAC/e,UAAU,OAAOpQ,GAAG,IAAK,WAAqB,IAAVvB,EAAED,EAAEgS,MAAUxQ,EAAE,KAAK,OAAOvB,GAAiB,QAAdF,EAAEE,EAAEuR,YAAoB,OAAOqjB,GAAG90B,KAAKyB,EAAEvB,GAAGA,EAAEA,EAAEgS,QAAY,QAAJhS,EAAEuB,IAAYA,EAAExB,EAAEgS,MAAMhS,EAAEgS,MAAM,OAAOxQ,EAAEvB,EAAEgS,QAAQhS,EAAEgS,QAAQ,MAAMuuB,GAAGxgC,GAAE,EAAGwB,EAAEvB,EAAEwB,GAAG,MAAM,IAAK,YAA6B,IAAjBxB,EAAE,KAAKuB,EAAExB,EAAEgS,MAAUhS,EAAEgS,MAAM,KAAK,OAAOxQ,GAAG,CAAe,GAAG,QAAjBzB,EAAEyB,EAAEgQ,YAAuB,OAAOqjB,GAAG90B,GAAG,CAACC,EAAEgS,MAAMxQ,EAAE,KAAK,CAACzB,EAAEyB,EAAEyQ,QAAQzQ,EAAEyQ,QAAQhS,EAAEA,EAAEuB,EAAEA,EAAEzB,CAAC,CAACygC,GAAGxgC,GAAE,EAAGC,EAAE,KAAKwB,GAAG,MAAM,IAAK,WAAW++B,GAAGxgC,GAAE,EAAG,KAAK,UAAK,GAAQ,MAAM,QAAQA,EAAE4R,cAAc,KAAK,OAAO5R,EAAEgS,KAAK,CAC7d,SAAS6sB,GAAG9+B,EAAEC,GAAG,KAAY,EAAPA,EAAEqvB,OAAS,OAAOtvB,IAAIA,EAAEyR,UAAU,KAAKxR,EAAEwR,UAAU,KAAKxR,EAAE0R,OAAO,EAAE,CAAC,SAASqsB,GAAGh+B,EAAEC,EAAEC,GAAyD,GAAtD,OAAOF,IAAIC,EAAEgyB,aAAajyB,EAAEiyB,cAAcgC,IAAIh0B,EAAEkyB,MAAS,KAAKjyB,EAAED,EAAE8xB,YAAY,OAAO,KAAK,GAAG,OAAO/xB,GAAGC,EAAEgS,QAAQjS,EAAEiS,MAAM,MAAMhN,MAAMlF,EAAE,MAAM,GAAG,OAAOE,EAAEgS,MAAM,CAA4C,IAAjC/R,EAAEuwB,GAAZzwB,EAAEC,EAAEgS,MAAajS,EAAEivB,cAAchvB,EAAEgS,MAAM/R,EAAMA,EAAEwR,OAAOzR,EAAE,OAAOD,EAAEkS,SAASlS,EAAEA,EAAEkS,SAAQhS,EAAEA,EAAEgS,QAAQue,GAAGzwB,EAAEA,EAAEivB,eAAgBvd,OAAOzR,EAAEC,EAAEgS,QAAQ,IAAI,CAAC,OAAOjS,EAAEgS,KAAK,CAO9a,SAASgvB,GAAGjhC,EAAEC,GAAG,IAAIyuB,GAAE,OAAO1uB,EAAE+gC,UAAU,IAAK,SAAS9gC,EAAED,EAAE8gC,KAAK,IAAI,IAAI5gC,EAAE,KAAK,OAAOD,GAAG,OAAOA,EAAEwR,YAAYvR,EAAED,GAAGA,EAAEA,EAAEiS,QAAQ,OAAOhS,EAAEF,EAAE8gC,KAAK,KAAK5gC,EAAEgS,QAAQ,KAAK,MAAM,IAAK,YAAYhS,EAAEF,EAAE8gC,KAAK,IAAI,IAAIt/B,EAAE,KAAK,OAAOtB,GAAG,OAAOA,EAAEuR,YAAYjQ,EAAEtB,GAAGA,EAAEA,EAAEgS,QAAQ,OAAO1Q,EAAEvB,GAAG,OAAOD,EAAE8gC,KAAK9gC,EAAE8gC,KAAK,KAAK9gC,EAAE8gC,KAAK5uB,QAAQ,KAAK1Q,EAAE0Q,QAAQ,KAAK,CAC5U,SAASgvB,GAAElhC,GAAG,IAAIC,EAAE,OAAOD,EAAEyR,WAAWzR,EAAEyR,UAAUQ,QAAQjS,EAAEiS,MAAM/R,EAAE,EAAEsB,EAAE,EAAE,GAAGvB,EAAE,IAAI,IAAIwB,EAAEzB,EAAEiS,MAAM,OAAOxQ,GAAGvB,GAAGuB,EAAE0wB,MAAM1wB,EAAEswB,WAAWvwB,GAAkB,SAAfC,EAAE8+B,aAAsB/+B,GAAW,SAARC,EAAEkQ,MAAelQ,EAAEiQ,OAAO1R,EAAEyB,EAAEA,EAAEyQ,aAAa,IAAIzQ,EAAEzB,EAAEiS,MAAM,OAAOxQ,GAAGvB,GAAGuB,EAAE0wB,MAAM1wB,EAAEswB,WAAWvwB,GAAGC,EAAE8+B,aAAa/+B,GAAGC,EAAEkQ,MAAMlQ,EAAEiQ,OAAO1R,EAAEyB,EAAEA,EAAEyQ,QAAyC,OAAjClS,EAAEugC,cAAc/+B,EAAExB,EAAE+xB,WAAW7xB,EAASD,CAAC,CAC7V,SAASkhC,GAAGnhC,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAEgvB,aAAmB,OAANV,GAAGtuB,GAAUA,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,OAAO+6B,GAAEjhC,GAAG,KAAK,KAAK,EAUtD,KAAK,GAAG,OAAO4sB,GAAG5sB,EAAEiC,OAAO6qB,KAAKmU,GAAEjhC,GAAG,KAVqD,KAAK,EAA2Q,OAAzQuB,EAAEvB,EAAE+P,UAAU0kB,KAAKvI,GAAEI,IAAIJ,GAAEG,IAAG2I,KAAKzzB,EAAE49B,iBAAiB59B,EAAE8wB,QAAQ9wB,EAAE49B,eAAe59B,EAAE49B,eAAe,MAAS,OAAOp/B,GAAG,OAAOA,EAAEiS,QAAMwd,GAAGxvB,GAAGA,EAAE0R,OAAO,EAAE,OAAO3R,GAAGA,EAAE6R,cAAcqF,cAAc,KAAa,IAARjX,EAAE0R,SAAa1R,EAAE0R,OAAO,KAAK,OAAOgd,KAAKyS,GAAGzS,IAAIA,GAAG,QAAO4Q,GAAGv/B,EAAEC,GAAGihC,GAAEjhC,GAAU,KAAK,KAAK,EAAE20B,GAAG30B,GAAG,IAAIwB,EAAE8yB,GAAGD,GAAGniB,SAC7e,GAATjS,EAAED,EAAEiC,KAAQ,OAAOlC,GAAG,MAAMC,EAAE+P,UAAUwvB,GAAGx/B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAGzB,EAAEgwB,MAAM/vB,EAAE+vB,MAAM/vB,EAAE0R,OAAO,IAAI1R,EAAE0R,OAAO,aAAa,CAAC,IAAInQ,EAAE,CAAC,GAAG,OAAOvB,EAAE+P,UAAU,MAAM/K,MAAMlF,EAAE,MAAW,OAALmhC,GAAEjhC,GAAU,IAAI,CAAkB,GAAjBD,EAAEu0B,GAAGH,GAAGjiB,SAAYsd,GAAGxvB,GAAG,CAACuB,EAAEvB,EAAE+P,UAAU9P,EAAED,EAAEiC,KAAK,IAAIR,EAAEzB,EAAEyvB,cAA+C,OAAjCluB,EAAEoqB,IAAI3rB,EAAEuB,EAAEqqB,IAAInqB,EAAE1B,EAAE,KAAY,EAAPC,EAAEqvB,MAAepvB,GAAG,IAAK,SAASioB,GAAE,SAAS3mB,GAAG2mB,GAAE,QAAQ3mB,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQ2mB,GAAE,OAAO3mB,GAAG,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIC,EAAE,EAAEA,EAAEmmB,GAAGxnB,OAAOqB,IAAI0mB,GAAEP,GAAGnmB,GAAGD,GAAG,MAAM,IAAK,SAAS2mB,GAAE,QAAQ3mB,GAAG,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAO2mB,GAAE,QACnhB3mB,GAAG2mB,GAAE,OAAO3mB,GAAG,MAAM,IAAK,UAAU2mB,GAAE,SAAS3mB,GAAG,MAAM,IAAK,QAAQ4G,EAAG5G,EAAEE,GAAGymB,GAAE,UAAU3mB,GAAG,MAAM,IAAK,SAASA,EAAE0G,cAAc,CAACm5B,cAAc3/B,EAAE4/B,UAAUnZ,GAAE,UAAU3mB,GAAG,MAAM,IAAK,WAAW+H,GAAG/H,EAAEE,GAAGymB,GAAE,UAAU3mB,GAAkB,IAAI,IAAIG,KAAvBuN,GAAGhP,EAAEwB,GAAGD,EAAE,KAAkBC,EAAE,GAAGA,EAAEP,eAAeQ,GAAG,CAAC,IAAIkE,EAAEnE,EAAEC,GAAG,aAAaA,EAAE,kBAAkBkE,EAAErE,EAAEkI,cAAc7D,KAAI,IAAKnE,EAAE6/B,0BAA0BlX,GAAG7oB,EAAEkI,YAAY7D,EAAE7F,GAAGyB,EAAE,CAAC,WAAWoE,IAAI,kBAAkBA,GAAGrE,EAAEkI,cAAc,GAAG7D,KAAI,IAAKnE,EAAE6/B,0BAA0BlX,GAAG7oB,EAAEkI,YAC1e7D,EAAE7F,GAAGyB,EAAE,CAAC,WAAW,GAAGoE,IAAIrF,EAAGW,eAAeQ,IAAI,MAAMkE,GAAG,aAAalE,GAAGwmB,GAAE,SAAS3mB,EAAE,CAAC,OAAOtB,GAAG,IAAK,QAAQ4G,EAAGtF,GAAGkH,EAAGlH,EAAEE,GAAE,GAAI,MAAM,IAAK,WAAWoF,EAAGtF,GAAGiI,GAAGjI,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,MAAM,QAAQ,oBAAoBE,EAAE8/B,UAAUhgC,EAAEigC,QAAQnX,IAAI9oB,EAAEC,EAAExB,EAAE8yB,YAAYvxB,EAAE,OAAOA,IAAIvB,EAAE0R,OAAO,EAAE,KAAK,CAAChQ,EAAE,IAAIF,EAAEiJ,SAASjJ,EAAEA,EAAEkH,cAAc,iCAAiC3I,IAAIA,EAAE2J,GAAGzJ,IAAI,iCAAiCF,EAAE,WAAWE,IAAGF,EAAE2B,EAAEZ,cAAc,QAASiJ,UAAU,qBAAuBhK,EAAEA,EAAEoK,YAAYpK,EAAEmK,aAC/f,kBAAkB3I,EAAE4N,GAAGpP,EAAE2B,EAAEZ,cAAcb,EAAE,CAACkP,GAAG5N,EAAE4N,MAAMpP,EAAE2B,EAAEZ,cAAcb,GAAG,WAAWA,IAAIyB,EAAE3B,EAAEwB,EAAE8/B,SAAS3/B,EAAE2/B,UAAS,EAAG9/B,EAAEkgC,OAAO//B,EAAE+/B,KAAKlgC,EAAEkgC,QAAQ1hC,EAAE2B,EAAEggC,gBAAgB3hC,EAAEE,GAAGF,EAAE4rB,IAAI3rB,EAAED,EAAE6rB,IAAIrqB,EAAE89B,GAAGt/B,EAAEC,GAAE,GAAG,GAAIA,EAAE+P,UAAUhQ,EAAEA,EAAE,CAAW,OAAV2B,EAAEwN,GAAGjP,EAAEsB,GAAUtB,GAAG,IAAK,SAASioB,GAAE,SAASnoB,GAAGmoB,GAAE,QAAQnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQ2mB,GAAE,OAAOnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIC,EAAE,EAAEA,EAAEmmB,GAAGxnB,OAAOqB,IAAI0mB,GAAEP,GAAGnmB,GAAGzB,GAAGyB,EAAED,EAAE,MAAM,IAAK,SAAS2mB,GAAE,QAAQnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAO2mB,GAAE,QAClfnoB,GAAGmoB,GAAE,OAAOnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,UAAU2mB,GAAE,SAASnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,QAAQ4G,EAAGpI,EAAEwB,GAAGC,EAAEsG,EAAG/H,EAAEwB,GAAG2mB,GAAE,UAAUnoB,GAAG,MAAM,IAAK,SAAiL,QAAQyB,EAAED,QAAxK,IAAK,SAASxB,EAAEkI,cAAc,CAACm5B,cAAc7/B,EAAE8/B,UAAU7/B,EAAEqD,EAAE,CAAC,EAAEtD,EAAE,CAACmG,WAAM,IAASwgB,GAAE,UAAUnoB,GAAG,MAAM,IAAK,WAAWuJ,GAAGvJ,EAAEwB,GAAGC,EAAE2H,GAAGpJ,EAAEwB,GAAG2mB,GAAE,UAAUnoB,GAAiC,IAAI0B,KAAhBwN,GAAGhP,EAAEuB,GAAGoE,EAAEpE,EAAa,GAAGoE,EAAE1E,eAAeO,GAAG,CAAC,IAAIoE,EAAED,EAAEnE,GAAG,UAAUA,EAAEgM,GAAG1N,EAAE8F,GAAG,4BAA4BpE,EAAuB,OAApBoE,EAAEA,EAAEA,EAAE4kB,YAAO,IAAgB5gB,GAAG9J,EAAE8F,GAAI,aAAapE,EAAE,kBAAkBoE,GAAG,aAC7e5F,GAAG,KAAK4F,IAAI0E,GAAGxK,EAAE8F,GAAG,kBAAkBA,GAAG0E,GAAGxK,EAAE,GAAG8F,GAAG,mCAAmCpE,GAAG,6BAA6BA,GAAG,cAAcA,IAAIlB,EAAGW,eAAeO,GAAG,MAAMoE,GAAG,aAAapE,GAAGymB,GAAE,SAASnoB,GAAG,MAAM8F,GAAGlD,EAAG5C,EAAE0B,EAAEoE,EAAEnE,GAAG,CAAC,OAAOzB,GAAG,IAAK,QAAQ4G,EAAG9G,GAAG0I,EAAG1I,EAAEwB,GAAE,GAAI,MAAM,IAAK,WAAWsF,EAAG9G,GAAGyJ,GAAGzJ,GAAG,MAAM,IAAK,SAAS,MAAMwB,EAAEmG,OAAO3H,EAAEqD,aAAa,QAAQ,GAAGsD,EAAGnF,EAAEmG,QAAQ,MAAM,IAAK,SAAS3H,EAAEshC,WAAW9/B,EAAE8/B,SAAmB,OAAV5/B,EAAEF,EAAEmG,OAAcoB,GAAG/I,IAAIwB,EAAE8/B,SAAS5/B,GAAE,GAAI,MAAMF,EAAEyG,cAAcc,GAAG/I,IAAIwB,EAAE8/B,SAAS9/B,EAAEyG,cAClf,GAAI,MAAM,QAAQ,oBAAoBxG,EAAE+/B,UAAUxhC,EAAEyhC,QAAQnX,IAAI,OAAOpqB,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAWsB,IAAIA,EAAEogC,UAAU,MAAM5hC,EAAE,IAAK,MAAMwB,GAAE,EAAG,MAAMxB,EAAE,QAAQwB,GAAE,EAAG,CAACA,IAAIvB,EAAE0R,OAAO,EAAE,CAAC,OAAO1R,EAAE+vB,MAAM/vB,EAAE0R,OAAO,IAAI1R,EAAE0R,OAAO,QAAQ,CAAM,OAALuvB,GAAEjhC,GAAU,KAAK,KAAK,EAAE,GAAGD,GAAG,MAAMC,EAAE+P,UAAUyvB,GAAGz/B,EAAEC,EAAED,EAAE0vB,cAAcluB,OAAO,CAAC,GAAG,kBAAkBA,GAAG,OAAOvB,EAAE+P,UAAU,MAAM/K,MAAMlF,EAAE,MAAsC,GAAhCG,EAAEq0B,GAAGD,GAAGniB,SAASoiB,GAAGH,GAAGjiB,SAAYsd,GAAGxvB,GAAG,CAAyC,GAAxCuB,EAAEvB,EAAE+P,UAAU9P,EAAED,EAAEyvB,cAAcluB,EAAEoqB,IAAI3rB,GAAKyB,EAAEF,EAAEmJ,YAAYzK,IAC/e,QADofF,EACvfwuB,IAAY,OAAOxuB,EAAEmG,KAAK,KAAK,EAAEkkB,GAAG7oB,EAAEmJ,UAAUzK,EAAE,KAAY,EAAPF,EAAEsvB,OAAS,MAAM,KAAK,GAAE,IAAKtvB,EAAE0vB,cAAc6R,0BAA0BlX,GAAG7oB,EAAEmJ,UAAUzK,EAAE,KAAY,EAAPF,EAAEsvB,OAAS5tB,IAAIzB,EAAE0R,OAAO,EAAE,MAAMnQ,GAAG,IAAItB,EAAEwK,SAASxK,EAAEA,EAAEyI,eAAek5B,eAAergC,IAAKoqB,IAAI3rB,EAAEA,EAAE+P,UAAUxO,CAAC,CAAM,OAAL0/B,GAAEjhC,GAAU,KAAK,KAAK,GAA0B,GAAvBksB,GAAE0I,IAAGrzB,EAAEvB,EAAE4R,cAAiB,OAAO7R,GAAG,OAAOA,EAAE6R,eAAe,OAAO7R,EAAE6R,cAAcC,WAAW,CAAC,GAAG4c,IAAG,OAAOD,IAAI,KAAY,EAAPxuB,EAAEqvB,OAAS,KAAa,IAARrvB,EAAE0R,OAAWge,KAAKC,KAAK3vB,EAAE0R,OAAO,MAAMjQ,GAAE,OAAQ,GAAGA,EAAE+tB,GAAGxvB,GAAG,OAAOuB,GAAG,OAAOA,EAAEsQ,WAAW,CAAC,GAAG,OAC5f9R,EAAE,CAAC,IAAI0B,EAAE,MAAMuD,MAAMlF,EAAE,MAAqD,KAA7B2B,EAAE,QAApBA,EAAEzB,EAAE4R,eAAyBnQ,EAAEoQ,WAAW,MAAW,MAAM7M,MAAMlF,EAAE,MAAM2B,EAAEkqB,IAAI3rB,CAAC,MAAM2vB,KAAK,KAAa,IAAR3vB,EAAE0R,SAAa1R,EAAE4R,cAAc,MAAM5R,EAAE0R,OAAO,EAAEuvB,GAAEjhC,GAAGyB,GAAE,CAAE,MAAM,OAAOitB,KAAKyS,GAAGzS,IAAIA,GAAG,MAAMjtB,GAAE,EAAG,IAAIA,EAAE,OAAe,MAARzB,EAAE0R,MAAY1R,EAAE,IAAI,CAAC,OAAG,KAAa,IAARA,EAAE0R,QAAkB1R,EAAEkyB,MAAMjyB,EAAED,KAAEuB,EAAE,OAAOA,MAAO,OAAOxB,GAAG,OAAOA,EAAE6R,gBAAgBrQ,IAAIvB,EAAEgS,MAAMN,OAAO,KAAK,KAAY,EAAP1R,EAAEqvB,QAAU,OAAOtvB,GAAG,KAAe,EAAV60B,GAAE1iB,SAAW,IAAI2vB,KAAIA,GAAE,GAAG3B,OAAO,OAAOlgC,EAAE8yB,cAAc9yB,EAAE0R,OAAO,GAAGuvB,GAAEjhC,GAAU,MAAK,KAAK,EAAE,OAAOy0B,KACrf6K,GAAGv/B,EAAEC,GAAG,OAAOD,GAAG0oB,GAAGzoB,EAAE+P,UAAUmH,eAAe+pB,GAAEjhC,GAAG,KAAK,KAAK,GAAG,OAAO2xB,GAAG3xB,EAAEiC,KAAKqE,UAAU26B,GAAEjhC,GAAG,KAA+C,KAAK,GAA0B,GAAvBksB,GAAE0I,IAAwB,QAArBnzB,EAAEzB,EAAE4R,eAA0B,OAAOqvB,GAAEjhC,GAAG,KAAuC,GAAlCuB,EAAE,KAAa,IAARvB,EAAE0R,OAA4B,QAAjBhQ,EAAED,EAAEi/B,WAAsB,GAAGn/B,EAAEy/B,GAAGv/B,GAAE,OAAQ,CAAC,GAAG,IAAIogC,IAAG,OAAO9hC,GAAG,KAAa,IAARA,EAAE2R,OAAW,IAAI3R,EAAEC,EAAEgS,MAAM,OAAOjS,GAAG,CAAS,GAAG,QAAX2B,EAAEmzB,GAAG90B,IAAe,CAAmG,IAAlGC,EAAE0R,OAAO,IAAIsvB,GAAGv/B,GAAE,GAAoB,QAAhBF,EAAEG,EAAEoxB,eAAuB9yB,EAAE8yB,YAAYvxB,EAAEvB,EAAE0R,OAAO,GAAG1R,EAAEsgC,aAAa,EAAE/+B,EAAEtB,EAAMA,EAAED,EAAEgS,MAAM,OAAO/R,GAAOF,EAAEwB,GAANE,EAAExB,GAAQyR,OAAO,SAC/d,QAAdhQ,EAAED,EAAE+P,YAAoB/P,EAAEqwB,WAAW,EAAErwB,EAAEywB,MAAMnyB,EAAE0B,EAAEuQ,MAAM,KAAKvQ,EAAE6+B,aAAa,EAAE7+B,EAAEguB,cAAc,KAAKhuB,EAAEmQ,cAAc,KAAKnQ,EAAEqxB,YAAY,KAAKrxB,EAAEuwB,aAAa,KAAKvwB,EAAEsO,UAAU,OAAOtO,EAAEqwB,WAAWpwB,EAAEowB,WAAWrwB,EAAEywB,MAAMxwB,EAAEwwB,MAAMzwB,EAAEuQ,MAAMtQ,EAAEsQ,MAAMvQ,EAAE6+B,aAAa,EAAE7+B,EAAEqtB,UAAU,KAAKrtB,EAAEguB,cAAc/tB,EAAE+tB,cAAchuB,EAAEmQ,cAAclQ,EAAEkQ,cAAcnQ,EAAEqxB,YAAYpxB,EAAEoxB,YAAYrxB,EAAEQ,KAAKP,EAAEO,KAAKlC,EAAE2B,EAAEswB,aAAavwB,EAAEuwB,aAAa,OAAOjyB,EAAE,KAAK,CAACmyB,MAAMnyB,EAAEmyB,MAAMD,aAAalyB,EAAEkyB,eAAehyB,EAAEA,EAAEgS,QAA2B,OAAnBka,GAAEyI,GAAY,EAAVA,GAAE1iB,QAAU,GAAUlS,EAAEgS,KAAK,CAACjS,EAClgBA,EAAEkS,OAAO,CAAC,OAAOxQ,EAAEo/B,MAAMhuB,KAAIivB,KAAK9hC,EAAE0R,OAAO,IAAInQ,GAAE,EAAGy/B,GAAGv/B,GAAE,GAAIzB,EAAEkyB,MAAM,QAAQ,KAAK,CAAC,IAAI3wB,EAAE,GAAW,QAARxB,EAAE80B,GAAGnzB,KAAa,GAAG1B,EAAE0R,OAAO,IAAInQ,GAAE,EAAmB,QAAhBtB,EAAEF,EAAE+yB,eAAuB9yB,EAAE8yB,YAAY7yB,EAAED,EAAE0R,OAAO,GAAGsvB,GAAGv/B,GAAE,GAAI,OAAOA,EAAEo/B,MAAM,WAAWp/B,EAAEq/B,WAAWp/B,EAAE8P,YAAYid,GAAE,OAAOwS,GAAEjhC,GAAG,UAAU,EAAE6S,KAAIpR,EAAEk/B,mBAAmBmB,IAAI,aAAa7hC,IAAID,EAAE0R,OAAO,IAAInQ,GAAE,EAAGy/B,GAAGv/B,GAAE,GAAIzB,EAAEkyB,MAAM,SAASzwB,EAAEg/B,aAAa/+B,EAAEuQ,QAAQjS,EAAEgS,MAAMhS,EAAEgS,MAAMtQ,IAAa,QAATzB,EAAEwB,EAAEm/B,MAAc3gC,EAAEgS,QAAQvQ,EAAE1B,EAAEgS,MAAMtQ,EAAED,EAAEm/B,KAAKl/B,EAAE,CAAC,OAAG,OAAOD,EAAEo/B,MAAY7gC,EAAEyB,EAAEo/B,KAAKp/B,EAAEi/B,UAC9e1gC,EAAEyB,EAAEo/B,KAAK7gC,EAAEiS,QAAQxQ,EAAEk/B,mBAAmB9tB,KAAI7S,EAAEiS,QAAQ,KAAKhS,EAAE20B,GAAE1iB,QAAQia,GAAEyI,GAAErzB,EAAI,EAAFtB,EAAI,EAAI,EAAFA,GAAKD,IAAEihC,GAAEjhC,GAAU,MAAK,KAAK,GAAG,KAAK,GAAG,OAAO+hC,KAAKxgC,EAAE,OAAOvB,EAAE4R,cAAc,OAAO7R,GAAG,OAAOA,EAAE6R,gBAAgBrQ,IAAIvB,EAAE0R,OAAO,MAAMnQ,GAAG,KAAY,EAAPvB,EAAEqvB,MAAQ,KAAQ,WAAHqP,MAAiBuC,GAAEjhC,GAAkB,EAAfA,EAAEsgC,eAAiBtgC,EAAE0R,OAAO,OAAOuvB,GAAEjhC,GAAG,KAAK,KAAK,GAAe,KAAK,GAAG,OAAO,KAAK,MAAMgF,MAAMlF,EAAE,IAAIE,EAAEkG,KAAM,CAClX,SAAS87B,GAAGjiC,EAAEC,GAAS,OAANsuB,GAAGtuB,GAAUA,EAAEkG,KAAK,KAAK,EAAE,OAAO0mB,GAAG5sB,EAAEiC,OAAO6qB,KAAiB,OAAZ/sB,EAAEC,EAAE0R,QAAe1R,EAAE0R,OAAS,MAAH3R,EAAS,IAAIC,GAAG,KAAK,KAAK,EAAE,OAAOy0B,KAAKvI,GAAEI,IAAIJ,GAAEG,IAAG2I,KAAe,KAAO,OAAjBj1B,EAAEC,EAAE0R,SAAqB,KAAO,IAAF3R,IAAQC,EAAE0R,OAAS,MAAH3R,EAAS,IAAIC,GAAG,KAAK,KAAK,EAAE,OAAO20B,GAAG30B,GAAG,KAAK,KAAK,GAA0B,GAAvBksB,GAAE0I,IAAwB,QAArB70B,EAAEC,EAAE4R,gBAA2B,OAAO7R,EAAE8R,WAAW,CAAC,GAAG,OAAO7R,EAAEwR,UAAU,MAAMxM,MAAMlF,EAAE,MAAM6vB,IAAI,CAAW,OAAS,OAAnB5vB,EAAEC,EAAE0R,QAAsB1R,EAAE0R,OAAS,MAAH3R,EAAS,IAAIC,GAAG,KAAK,KAAK,GAAG,OAAOksB,GAAE0I,IAAG,KAAK,KAAK,EAAE,OAAOH,KAAK,KAAK,KAAK,GAAG,OAAO9C,GAAG3xB,EAAEiC,KAAKqE,UAAU,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOy7B,KAC1gB,KAAyB,QAAQ,OAAO,KAAK,CArB7C1C,GAAG,SAASt/B,EAAEC,GAAG,IAAI,IAAIC,EAAED,EAAEgS,MAAM,OAAO/R,GAAG,CAAC,GAAG,IAAIA,EAAEiG,KAAK,IAAIjG,EAAEiG,IAAInG,EAAEqK,YAAYnK,EAAE8P,gBAAgB,GAAG,IAAI9P,EAAEiG,KAAK,OAAOjG,EAAE+R,MAAM,CAAC/R,EAAE+R,MAAMP,OAAOxR,EAAEA,EAAEA,EAAE+R,MAAM,QAAQ,CAAC,GAAG/R,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAEgS,SAAS,CAAC,GAAG,OAAOhS,EAAEwR,QAAQxR,EAAEwR,SAASzR,EAAE,OAAOC,EAAEA,EAAEwR,MAAM,CAACxR,EAAEgS,QAAQR,OAAOxR,EAAEwR,OAAOxR,EAAEA,EAAEgS,OAAO,CAAC,EAAEqtB,GAAG,WAAW,EACxTC,GAAG,SAASx/B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEzB,EAAE0vB,cAAc,GAAGjuB,IAAID,EAAE,CAACxB,EAAEC,EAAE+P,UAAUukB,GAAGH,GAAGjiB,SAAS,IAA4RxQ,EAAxRD,EAAE,KAAK,OAAOxB,GAAG,IAAK,QAAQuB,EAAEsG,EAAG/H,EAAEyB,GAAGD,EAAEuG,EAAG/H,EAAEwB,GAAGE,EAAE,GAAG,MAAM,IAAK,SAASD,EAAEqD,EAAE,CAAC,EAAErD,EAAE,CAACkG,WAAM,IAASnG,EAAEsD,EAAE,CAAC,EAAEtD,EAAE,CAACmG,WAAM,IAASjG,EAAE,GAAG,MAAM,IAAK,WAAWD,EAAE2H,GAAGpJ,EAAEyB,GAAGD,EAAE4H,GAAGpJ,EAAEwB,GAAGE,EAAE,GAAG,MAAM,QAAQ,oBAAoBD,EAAE+/B,SAAS,oBAAoBhgC,EAAEggC,UAAUxhC,EAAEyhC,QAAQnX,IAAyB,IAAI1kB,KAAzBsJ,GAAGhP,EAAEsB,GAAStB,EAAE,KAAcuB,EAAE,IAAID,EAAEL,eAAeyE,IAAInE,EAAEN,eAAeyE,IAAI,MAAMnE,EAAEmE,GAAG,GAAG,UAAUA,EAAE,CAAC,IAAIC,EAAEpE,EAAEmE,GAAG,IAAIjE,KAAKkE,EAAEA,EAAE1E,eAAeQ,KACjfzB,IAAIA,EAAE,CAAC,GAAGA,EAAEyB,GAAG,GAAG,KAAK,4BAA4BiE,GAAG,aAAaA,GAAG,mCAAmCA,GAAG,6BAA6BA,GAAG,cAAcA,IAAIpF,EAAGW,eAAeyE,GAAGlE,IAAIA,EAAE,KAAKA,EAAEA,GAAG,IAAIyO,KAAKvK,EAAE,OAAO,IAAIA,KAAKpE,EAAE,CAAC,IAAIsE,EAAEtE,EAAEoE,GAAyB,GAAtBC,EAAE,MAAMpE,EAAEA,EAAEmE,QAAG,EAAUpE,EAAEL,eAAeyE,IAAIE,IAAID,IAAI,MAAMC,GAAG,MAAMD,GAAG,GAAG,UAAUD,EAAE,GAAGC,EAAE,CAAC,IAAIlE,KAAKkE,GAAGA,EAAE1E,eAAeQ,IAAImE,GAAGA,EAAE3E,eAAeQ,KAAKzB,IAAIA,EAAE,CAAC,GAAGA,EAAEyB,GAAG,IAAI,IAAIA,KAAKmE,EAAEA,EAAE3E,eAAeQ,IAAIkE,EAAElE,KAAKmE,EAAEnE,KAAKzB,IAAIA,EAAE,CAAC,GAAGA,EAAEyB,GAAGmE,EAAEnE,GAAG,MAAMzB,IAAIwB,IAAIA,EAAE,IAAIA,EAAEyO,KAAKvK,EACpf1F,IAAIA,EAAE4F,MAAM,4BAA4BF,GAAGE,EAAEA,EAAEA,EAAE4kB,YAAO,EAAO7kB,EAAEA,EAAEA,EAAE6kB,YAAO,EAAO,MAAM5kB,GAAGD,IAAIC,IAAIpE,EAAEA,GAAG,IAAIyO,KAAKvK,EAAEE,IAAI,aAAaF,EAAE,kBAAkBE,GAAG,kBAAkBA,IAAIpE,EAAEA,GAAG,IAAIyO,KAAKvK,EAAE,GAAGE,GAAG,mCAAmCF,GAAG,6BAA6BA,IAAIpF,EAAGW,eAAeyE,IAAI,MAAME,GAAG,aAAaF,GAAGuiB,GAAE,SAASnoB,GAAG0B,GAAGmE,IAAIC,IAAIpE,EAAE,MAAMA,EAAEA,GAAG,IAAIyO,KAAKvK,EAAEE,GAAG,CAAC5F,IAAIwB,EAAEA,GAAG,IAAIyO,KAAK,QAAQjQ,GAAG,IAAI0F,EAAElE,GAAKzB,EAAE8yB,YAAYntB,KAAE3F,EAAE0R,OAAO,EAAC,CAAC,EAAE8tB,GAAG,SAASz/B,EAAEC,EAAEC,EAAEsB,GAAGtB,IAAIsB,IAAIvB,EAAE0R,OAAO,EAAE,EAkBlb,IAAIuwB,IAAG,EAAGC,IAAE,EAAGC,GAAG,oBAAoBC,QAAQA,QAAQ9hC,IAAI+hC,GAAE,KAAK,SAASC,GAAGviC,EAAEC,GAAG,IAAIC,EAAEF,EAAEgwB,IAAI,GAAG,OAAO9vB,EAAE,GAAG,oBAAoBA,EAAE,IAAIA,EAAE,KAAK,CAAC,MAAMsB,GAAGghC,GAAExiC,EAAEC,EAAEuB,EAAE,MAAMtB,EAAEiS,QAAQ,IAAI,CAAC,SAASswB,GAAGziC,EAAEC,EAAEC,GAAG,IAAIA,GAAG,CAAC,MAAMsB,GAAGghC,GAAExiC,EAAEC,EAAEuB,EAAE,CAAC,CAAC,IAAIkhC,IAAG,EAIxR,SAASC,GAAG3iC,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAE8yB,YAAyC,GAAG,QAAhCvxB,EAAE,OAAOA,EAAEA,EAAEo2B,WAAW,MAAiB,CAAC,IAAIn2B,EAAED,EAAEA,EAAE2vB,KAAK,EAAE,CAAC,IAAI1vB,EAAE0E,IAAInG,KAAKA,EAAE,CAAC,IAAI0B,EAAED,EAAE22B,QAAQ32B,EAAE22B,aAAQ,OAAO,IAAS12B,GAAG+gC,GAAGxiC,EAAEC,EAAEwB,EAAE,CAACD,EAAEA,EAAE0vB,IAAI,OAAO1vB,IAAID,EAAE,CAAC,CAAC,SAASohC,GAAG5iC,EAAEC,GAAgD,GAAG,QAAhCA,EAAE,QAAlBA,EAAEA,EAAE8yB,aAAuB9yB,EAAE23B,WAAW,MAAiB,CAAC,IAAI13B,EAAED,EAAEA,EAAEkxB,KAAK,EAAE,CAAC,IAAIjxB,EAAEiG,IAAInG,KAAKA,EAAE,CAAC,IAAIwB,EAAEtB,EAAEi4B,OAAOj4B,EAAEk4B,QAAQ52B,GAAG,CAACtB,EAAEA,EAAEixB,IAAI,OAAOjxB,IAAID,EAAE,CAAC,CAAC,SAAS4iC,GAAG7iC,GAAG,IAAIC,EAAED,EAAEgwB,IAAI,GAAG,OAAO/vB,EAAE,CAAC,IAAIC,EAAEF,EAAEgQ,UAAiBhQ,EAAEmG,IAA8BnG,EAAEE,EAAE,oBAAoBD,EAAEA,EAAED,GAAGC,EAAEkS,QAAQnS,CAAC,CAAC,CAClf,SAAS8iC,GAAG9iC,GAAG,IAAIC,EAAED,EAAEyR,UAAU,OAAOxR,IAAID,EAAEyR,UAAU,KAAKqxB,GAAG7iC,IAAID,EAAEiS,MAAM,KAAKjS,EAAE+uB,UAAU,KAAK/uB,EAAEkS,QAAQ,KAAK,IAAIlS,EAAEmG,MAAoB,QAAdlG,EAAED,EAAEgQ,oBAA4B/P,EAAE2rB,WAAW3rB,EAAE4rB,WAAW5rB,EAAEmoB,WAAWnoB,EAAE6rB,WAAW7rB,EAAE8rB,MAAM/rB,EAAEgQ,UAAU,KAAKhQ,EAAE0R,OAAO,KAAK1R,EAAEiyB,aAAa,KAAKjyB,EAAE0vB,cAAc,KAAK1vB,EAAE6R,cAAc,KAAK7R,EAAEivB,aAAa,KAAKjvB,EAAEgQ,UAAU,KAAKhQ,EAAE+yB,YAAY,IAAI,CAAC,SAASgQ,GAAG/iC,GAAG,OAAO,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,IAAInG,EAAEmG,GAAG,CACna,SAAS68B,GAAGhjC,GAAGA,EAAE,OAAO,CAAC,KAAK,OAAOA,EAAEkS,SAAS,CAAC,GAAG,OAAOlS,EAAE0R,QAAQqxB,GAAG/iC,EAAE0R,QAAQ,OAAO,KAAK1R,EAAEA,EAAE0R,MAAM,CAA2B,IAA1B1R,EAAEkS,QAAQR,OAAO1R,EAAE0R,OAAW1R,EAAEA,EAAEkS,QAAQ,IAAIlS,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,KAAKnG,EAAEmG,KAAK,CAAC,GAAW,EAARnG,EAAE2R,MAAQ,SAAS3R,EAAE,GAAG,OAAOA,EAAEiS,OAAO,IAAIjS,EAAEmG,IAAI,SAASnG,EAAOA,EAAEiS,MAAMP,OAAO1R,EAAEA,EAAEA,EAAEiS,KAAK,CAAC,KAAa,EAARjS,EAAE2R,OAAS,OAAO3R,EAAEgQ,SAAS,CAAC,CACzT,SAASizB,GAAGjjC,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEmG,IAAI,GAAG,IAAI3E,GAAG,IAAIA,EAAExB,EAAEA,EAAEgQ,UAAU/P,EAAE,IAAIC,EAAEwK,SAASxK,EAAEwP,WAAWwzB,aAAaljC,EAAEC,GAAGC,EAAEgjC,aAAaljC,EAAEC,IAAI,IAAIC,EAAEwK,UAAUzK,EAAEC,EAAEwP,YAAawzB,aAAaljC,EAAEE,IAAKD,EAAEC,GAAImK,YAAYrK,GAA4B,QAAxBE,EAAEA,EAAEijC,2BAA8B,IAASjjC,GAAG,OAAOD,EAAEwhC,UAAUxhC,EAAEwhC,QAAQnX,UAAU,GAAG,IAAI9oB,GAAc,QAAVxB,EAAEA,EAAEiS,OAAgB,IAAIgxB,GAAGjjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,QAAQ,OAAOlS,GAAGijC,GAAGjjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,OAAO,CAC1X,SAASkxB,GAAGpjC,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEmG,IAAI,GAAG,IAAI3E,GAAG,IAAIA,EAAExB,EAAEA,EAAEgQ,UAAU/P,EAAEC,EAAEgjC,aAAaljC,EAAEC,GAAGC,EAAEmK,YAAYrK,QAAQ,GAAG,IAAIwB,GAAc,QAAVxB,EAAEA,EAAEiS,OAAgB,IAAImxB,GAAGpjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,QAAQ,OAAOlS,GAAGojC,GAAGpjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,OAAO,CAAC,IAAImxB,GAAE,KAAKC,IAAG,EAAG,SAASC,GAAGvjC,EAAEC,EAAEC,GAAG,IAAIA,EAAEA,EAAE+R,MAAM,OAAO/R,GAAGsjC,GAAGxjC,EAAEC,EAAEC,GAAGA,EAAEA,EAAEgS,OAAO,CACnR,SAASsxB,GAAGxjC,EAAEC,EAAEC,GAAG,GAAG2T,IAAI,oBAAoBA,GAAG4vB,qBAAqB,IAAI5vB,GAAG4vB,qBAAqB7vB,GAAG1T,EAAE,CAAC,MAAM2F,GAAG,CAAC,OAAO3F,EAAEiG,KAAK,KAAK,EAAEg8B,IAAGI,GAAGriC,EAAED,GAAG,KAAK,EAAE,IAAIuB,EAAE6hC,GAAE5hC,EAAE6hC,GAAGD,GAAE,KAAKE,GAAGvjC,EAAEC,EAAEC,GAAOojC,GAAG7hC,EAAE,QAAT4hC,GAAE7hC,KAAkB8hC,IAAItjC,EAAEqjC,GAAEnjC,EAAEA,EAAE8P,UAAU,IAAIhQ,EAAE0K,SAAS1K,EAAE0P,WAAWtF,YAAYlK,GAAGF,EAAEoK,YAAYlK,IAAImjC,GAAEj5B,YAAYlK,EAAE8P,YAAY,MAAM,KAAK,GAAG,OAAOqzB,KAAIC,IAAItjC,EAAEqjC,GAAEnjC,EAAEA,EAAE8P,UAAU,IAAIhQ,EAAE0K,SAAS6gB,GAAGvrB,EAAE0P,WAAWxP,GAAG,IAAIF,EAAE0K,UAAU6gB,GAAGvrB,EAAEE,GAAGyX,GAAG3X,IAAIurB,GAAG8X,GAAEnjC,EAAE8P,YAAY,MAAM,KAAK,EAAExO,EAAE6hC,GAAE5hC,EAAE6hC,GAAGD,GAAEnjC,EAAE8P,UAAUmH,cAAcmsB,IAAG,EAClfC,GAAGvjC,EAAEC,EAAEC,GAAGmjC,GAAE7hC,EAAE8hC,GAAG7hC,EAAE,MAAM,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI0gC,KAAoB,QAAhB3gC,EAAEtB,EAAE6yB,cAAsC,QAAfvxB,EAAEA,EAAEo2B,aAAsB,CAACn2B,EAAED,EAAEA,EAAE2vB,KAAK,EAAE,CAAC,IAAIzvB,EAAED,EAAEE,EAAED,EAAE02B,QAAQ12B,EAAEA,EAAEyE,SAAI,IAASxE,IAAI,KAAO,EAAFD,IAAe,KAAO,EAAFA,KAAf+gC,GAAGviC,EAAED,EAAE0B,GAAyBF,EAAEA,EAAE0vB,IAAI,OAAO1vB,IAAID,EAAE,CAAC+hC,GAAGvjC,EAAEC,EAAEC,GAAG,MAAM,KAAK,EAAE,IAAIiiC,KAAII,GAAGriC,EAAED,GAAiB,oBAAduB,EAAEtB,EAAE8P,WAAgC0zB,sBAAsB,IAAIliC,EAAEmvB,MAAMzwB,EAAEwvB,cAAcluB,EAAEm6B,MAAMz7B,EAAE2R,cAAcrQ,EAAEkiC,sBAAsB,CAAC,MAAM79B,GAAG28B,GAAEtiC,EAAED,EAAE4F,EAAE,CAAC09B,GAAGvjC,EAAEC,EAAEC,GAAG,MAAM,KAAK,GAAGqjC,GAAGvjC,EAAEC,EAAEC,GAAG,MAAM,KAAK,GAAU,EAAPA,EAAEovB,MAAQ6S,IAAG3gC,EAAE2gC,KAAI,OAChfjiC,EAAE2R,cAAc0xB,GAAGvjC,EAAEC,EAAEC,GAAGiiC,GAAE3gC,GAAG+hC,GAAGvjC,EAAEC,EAAEC,GAAG,MAAM,QAAQqjC,GAAGvjC,EAAEC,EAAEC,GAAG,CAAC,SAASyjC,GAAG3jC,GAAG,IAAIC,EAAED,EAAE+yB,YAAY,GAAG,OAAO9yB,EAAE,CAACD,EAAE+yB,YAAY,KAAK,IAAI7yB,EAAEF,EAAEgQ,UAAU,OAAO9P,IAAIA,EAAEF,EAAEgQ,UAAU,IAAIoyB,IAAIniC,EAAEsC,SAAQ,SAAStC,GAAG,IAAIuB,EAAEoiC,GAAGjb,KAAK,KAAK3oB,EAAEC,GAAGC,EAAEmoB,IAAIpoB,KAAKC,EAAES,IAAIV,GAAGA,EAAEmrB,KAAK5pB,EAAEA,GAAG,GAAE,CAAC,CACzQ,SAASqiC,GAAG7jC,EAAEC,GAAG,IAAIC,EAAED,EAAE8uB,UAAU,GAAG,OAAO7uB,EAAE,IAAI,IAAIsB,EAAE,EAAEA,EAAEtB,EAAEE,OAAOoB,IAAI,CAAC,IAAIC,EAAEvB,EAAEsB,GAAG,IAAI,IAAIE,EAAE1B,EAAE2B,EAAE1B,EAAE4F,EAAElE,EAAE3B,EAAE,KAAK,OAAO6F,GAAG,CAAC,OAAOA,EAAEM,KAAK,KAAK,EAAEk9B,GAAEx9B,EAAEmK,UAAUszB,IAAG,EAAG,MAAMtjC,EAAE,KAAK,EAA4C,KAAK,EAAEqjC,GAAEx9B,EAAEmK,UAAUmH,cAAcmsB,IAAG,EAAG,MAAMtjC,EAAE6F,EAAEA,EAAE6L,MAAM,CAAC,GAAG,OAAO2xB,GAAE,MAAMp+B,MAAMlF,EAAE,MAAMyjC,GAAG9hC,EAAEC,EAAEF,GAAG4hC,GAAE,KAAKC,IAAG,EAAG,IAAIx9B,EAAErE,EAAEgQ,UAAU,OAAO3L,IAAIA,EAAE4L,OAAO,MAAMjQ,EAAEiQ,OAAO,IAAI,CAAC,MAAM9L,GAAG48B,GAAE/gC,EAAExB,EAAE2F,EAAE,CAAC,CAAC,GAAkB,MAAf3F,EAAEsgC,aAAmB,IAAItgC,EAAEA,EAAEgS,MAAM,OAAOhS,GAAG6jC,GAAG7jC,EAAED,GAAGC,EAAEA,EAAEiS,OAAO,CACje,SAAS4xB,GAAG9jC,EAAEC,GAAG,IAAIC,EAAEF,EAAEyR,UAAUjQ,EAAExB,EAAE2R,MAAM,OAAO3R,EAAEmG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAiB,GAAd09B,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAQ,EAAFwB,EAAI,CAAC,IAAImhC,GAAG,EAAE3iC,EAAEA,EAAE0R,QAAQkxB,GAAG,EAAE5iC,EAAE,CAAC,MAAM+oB,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,IAAI4Z,GAAG,EAAE3iC,EAAEA,EAAE0R,OAAO,CAAC,MAAMqX,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE8a,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAK,IAAFwB,GAAO,OAAOtB,GAAGqiC,GAAGriC,EAAEA,EAAEwR,QAAQ,MAAM,KAAK,EAAgD,GAA9CmyB,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAK,IAAFwB,GAAO,OAAOtB,GAAGqiC,GAAGriC,EAAEA,EAAEwR,QAAmB,GAAR1R,EAAE2R,MAAS,CAAC,IAAIlQ,EAAEzB,EAAEgQ,UAAU,IAAIxF,GAAG/I,EAAE,GAAG,CAAC,MAAMsnB,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,GAAK,EAAFvnB,GAAoB,OAAdC,EAAEzB,EAAEgQ,WAAmB,CAAC,IAAItO,EAAE1B,EAAE0vB,cAAc/tB,EAAE,OAAOzB,EAAEA,EAAEwvB,cAAchuB,EAAEmE,EAAE7F,EAAEkC,KAAK4D,EAAE9F,EAAE+yB,YACje,GAAnB/yB,EAAE+yB,YAAY,KAAQ,OAAOjtB,EAAE,IAAI,UAAUD,GAAG,UAAUnE,EAAEQ,MAAM,MAAMR,EAAEuE,MAAMsC,EAAG9G,EAAEC,GAAGyN,GAAGtJ,EAAElE,GAAG,IAAIiE,EAAEuJ,GAAGtJ,EAAEnE,GAAG,IAAIC,EAAE,EAAEA,EAAEmE,EAAE1F,OAAOuB,GAAG,EAAE,CAAC,IAAIqP,EAAElL,EAAEnE,GAAGqvB,EAAElrB,EAAEnE,EAAE,GAAG,UAAUqP,EAAEtD,GAAGjM,EAAEuvB,GAAG,4BAA4BhgB,EAAElH,GAAGrI,EAAEuvB,GAAG,aAAahgB,EAAExG,GAAG/I,EAAEuvB,GAAGpuB,EAAGnB,EAAEuP,EAAEggB,EAAEprB,EAAE,CAAC,OAAOC,GAAG,IAAK,QAAQ2C,EAAG/G,EAAEC,GAAG,MAAM,IAAK,WAAW8H,GAAG/H,EAAEC,GAAG,MAAM,IAAK,SAAS,IAAIuvB,EAAExvB,EAAEyG,cAAcm5B,YAAY5/B,EAAEyG,cAAcm5B,cAAc3/B,EAAE4/B,SAAS,IAAIpQ,EAAExvB,EAAEiG,MAAM,MAAMupB,EAAEnoB,GAAGtH,IAAIC,EAAE4/B,SAASpQ,GAAE,GAAID,MAAMvvB,EAAE4/B,WAAW,MAAM5/B,EAAEuG,aAAac,GAAGtH,IAAIC,EAAE4/B,SACnf5/B,EAAEuG,cAAa,GAAIc,GAAGtH,IAAIC,EAAE4/B,SAAS5/B,EAAE4/B,SAAS,GAAG,IAAG,IAAK7/B,EAAEoqB,IAAInqB,CAAC,CAAC,MAAMqnB,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,MAAM,KAAK,EAAgB,GAAd8a,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAQ,EAAFwB,EAAI,CAAC,GAAG,OAAOxB,EAAEgQ,UAAU,MAAM/K,MAAMlF,EAAE,MAAM0B,EAAEzB,EAAEgQ,UAAUtO,EAAE1B,EAAE0vB,cAAc,IAAIjuB,EAAEkJ,UAAUjJ,CAAC,CAAC,MAAMqnB,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,MAAM,KAAK,EAAgB,GAAd8a,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAQ,EAAFwB,GAAK,OAAOtB,GAAGA,EAAE2R,cAAcqF,aAAa,IAAIS,GAAG1X,EAAEkX,cAAc,CAAC,MAAM4R,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,MAAM,KAAK,EAG4G,QAAQ8a,GAAG5jC,EACnfD,GAAG+jC,GAAG/jC,SAJ4Y,KAAK,GAAG6jC,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAqB,MAAlByB,EAAEzB,EAAEiS,OAAQN,QAAajQ,EAAE,OAAOD,EAAEoQ,cAAcpQ,EAAEuO,UAAUg0B,SAAStiC,GAAGA,GAClf,OAAOD,EAAEgQ,WAAW,OAAOhQ,EAAEgQ,UAAUI,gBAAgBoyB,GAAGnxB,OAAQ,EAAFtR,GAAKmiC,GAAG3jC,GAAG,MAAM,KAAK,GAAsF,GAAnFgR,EAAE,OAAO9Q,GAAG,OAAOA,EAAE2R,cAAqB,EAAP7R,EAAEsvB,MAAQ6S,IAAGv8B,EAAEu8B,KAAInxB,EAAE6yB,GAAG5jC,EAAED,GAAGmiC,GAAEv8B,GAAGi+B,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAQ,KAAFwB,EAAO,CAA0B,GAAzBoE,EAAE,OAAO5F,EAAE6R,eAAkB7R,EAAEgQ,UAAUg0B,SAASp+B,KAAKoL,GAAG,KAAY,EAAPhR,EAAEsvB,MAAQ,IAAIgT,GAAEtiC,EAAEgR,EAAEhR,EAAEiS,MAAM,OAAOjB,GAAG,CAAC,IAAIggB,EAAEsR,GAAEtxB,EAAE,OAAOsxB,IAAG,CAAe,OAAVpR,GAAJD,EAAEqR,IAAMrwB,MAAagf,EAAE9qB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAGw8B,GAAG,EAAE1R,EAAEA,EAAEvf,QAAQ,MAAM,KAAK,EAAE6wB,GAAGtR,EAAEA,EAAEvf,QAAQ,IAAIoX,EAAEmI,EAAEjhB,UAAU,GAAG,oBAAoB8Y,EAAE4a,qBAAqB,CAACliC,EAAEyvB,EAAE/wB,EAAE+wB,EAAEvf,OAAO,IAAIzR,EAAEuB,EAAEsnB,EAAE6H,MACpf1wB,EAAEyvB,cAAc5G,EAAE6S,MAAM17B,EAAE4R,cAAciX,EAAE4a,sBAAsB,CAAC,MAAM3a,GAAGyZ,GAAEhhC,EAAEtB,EAAE6oB,EAAE,CAAC,CAAC,MAAM,KAAK,EAAEwZ,GAAGtR,EAAEA,EAAEvf,QAAQ,MAAM,KAAK,GAAG,GAAG,OAAOuf,EAAEpf,cAAc,CAACqyB,GAAGlT,GAAG,QAAQ,EAAE,OAAOE,GAAGA,EAAExf,OAAOuf,EAAEqR,GAAEpR,GAAGgT,GAAGlT,EAAE,CAAChgB,EAAEA,EAAEkB,OAAO,CAAClS,EAAE,IAAIgR,EAAE,KAAKggB,EAAEhxB,IAAI,CAAC,GAAG,IAAIgxB,EAAE7qB,KAAK,GAAG,OAAO6K,EAAE,CAACA,EAAEggB,EAAE,IAAIvvB,EAAEuvB,EAAEhhB,UAAUpK,EAAa,oBAAVlE,EAAED,EAAEkM,OAA4BE,YAAYnM,EAAEmM,YAAY,UAAU,OAAO,aAAanM,EAAEyiC,QAAQ,QAASt+B,EAAEmrB,EAAEhhB,UAAkCrO,OAAE,KAA1BmE,EAAEkrB,EAAEtB,cAAc/hB,QAAoB,OAAO7H,GAAGA,EAAE3E,eAAe,WAAW2E,EAAEq+B,QAAQ,KAAKt+B,EAAE8H,MAAMw2B,QACzf12B,GAAG,UAAU9L,GAAG,CAAC,MAAMonB,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,OAAO,GAAG,IAAIiI,EAAE7qB,KAAK,GAAG,OAAO6K,EAAE,IAAIggB,EAAEhhB,UAAUrF,UAAU/E,EAAE,GAAGorB,EAAEtB,aAAa,CAAC,MAAM3G,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,OAAO,IAAI,KAAKiI,EAAE7qB,KAAK,KAAK6qB,EAAE7qB,KAAK,OAAO6qB,EAAEnf,eAAemf,IAAIhxB,IAAI,OAAOgxB,EAAE/e,MAAM,CAAC+e,EAAE/e,MAAMP,OAAOsf,EAAEA,EAAEA,EAAE/e,MAAM,QAAQ,CAAC,GAAG+e,IAAIhxB,EAAE,MAAMA,EAAE,KAAK,OAAOgxB,EAAE9e,SAAS,CAAC,GAAG,OAAO8e,EAAEtf,QAAQsf,EAAEtf,SAAS1R,EAAE,MAAMA,EAAEgR,IAAIggB,IAAIhgB,EAAE,MAAMggB,EAAEA,EAAEtf,MAAM,CAACV,IAAIggB,IAAIhgB,EAAE,MAAMggB,EAAE9e,QAAQR,OAAOsf,EAAEtf,OAAOsf,EAAEA,EAAE9e,OAAO,CAAC,CAAC,MAAM,KAAK,GAAG2xB,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAK,EAAFwB,GAAKmiC,GAAG3jC,GAAS,KAAK,IACtd,CAAC,SAAS+jC,GAAG/jC,GAAG,IAAIC,EAAED,EAAE2R,MAAM,GAAK,EAAF1R,EAAI,CAAC,IAAID,EAAE,CAAC,IAAI,IAAIE,EAAEF,EAAE0R,OAAO,OAAOxR,GAAG,CAAC,GAAG6iC,GAAG7iC,GAAG,CAAC,IAAIsB,EAAEtB,EAAE,MAAMF,CAAC,CAACE,EAAEA,EAAEwR,MAAM,CAAC,MAAMzM,MAAMlF,EAAE,KAAM,CAAC,OAAOyB,EAAE2E,KAAK,KAAK,EAAE,IAAI1E,EAAED,EAAEwO,UAAkB,GAARxO,EAAEmQ,QAAWnH,GAAG/I,EAAE,IAAID,EAAEmQ,QAAQ,IAAgByxB,GAAGpjC,EAATgjC,GAAGhjC,GAAUyB,GAAG,MAAM,KAAK,EAAE,KAAK,EAAE,IAAIE,EAAEH,EAAEwO,UAAUmH,cAAsB8rB,GAAGjjC,EAATgjC,GAAGhjC,GAAU2B,GAAG,MAAM,QAAQ,MAAMsD,MAAMlF,EAAE,MAAO,CAAC,MAAM+F,GAAG08B,GAAExiC,EAAEA,EAAE0R,OAAO5L,EAAE,CAAC9F,EAAE2R,QAAQ,CAAC,CAAG,KAAF1R,IAASD,EAAE2R,QAAQ,KAAK,CAAC,SAASyyB,GAAGpkC,EAAEC,EAAEC,GAAGoiC,GAAEtiC,EAAEqkC,GAAGrkC,EAAEC,EAAEC,EAAE,CACvb,SAASmkC,GAAGrkC,EAAEC,EAAEC,GAAG,IAAI,IAAIsB,EAAE,KAAY,EAAPxB,EAAEsvB,MAAQ,OAAOgT,IAAG,CAAC,IAAI7gC,EAAE6gC,GAAE5gC,EAAED,EAAEwQ,MAAM,GAAG,KAAKxQ,EAAE0E,KAAK3E,EAAE,CAAC,IAAIG,EAAE,OAAOF,EAAEoQ,eAAeqwB,GAAG,IAAIvgC,EAAE,CAAC,IAAIkE,EAAEpE,EAAEgQ,UAAU3L,EAAE,OAAOD,GAAG,OAAOA,EAAEgM,eAAeswB,GAAEt8B,EAAEq8B,GAAG,IAAIt8B,EAAEu8B,GAAO,GAALD,GAAGvgC,GAAMwgC,GAAEr8B,KAAKF,EAAE,IAAI08B,GAAE7gC,EAAE,OAAO6gC,IAAOx8B,GAAJnE,EAAE2gC,IAAMrwB,MAAM,KAAKtQ,EAAEwE,KAAK,OAAOxE,EAAEkQ,cAAcyyB,GAAG7iC,GAAG,OAAOqE,GAAGA,EAAE4L,OAAO/P,EAAE2gC,GAAEx8B,GAAGw+B,GAAG7iC,GAAG,KAAK,OAAOC,GAAG4gC,GAAE5gC,EAAE2iC,GAAG3iC,EAAEzB,EAAEC,GAAGwB,EAAEA,EAAEwQ,QAAQowB,GAAE7gC,EAAEygC,GAAGr8B,EAAEs8B,GAAEv8B,CAAC,CAAC2+B,GAAGvkC,EAAM,MAAM,KAAoB,KAAfyB,EAAE8+B,eAAoB,OAAO7+B,GAAGA,EAAEgQ,OAAOjQ,EAAE6gC,GAAE5gC,GAAG6iC,GAAGvkC,EAAM,CAAC,CACvc,SAASukC,GAAGvkC,GAAG,KAAK,OAAOsiC,IAAG,CAAC,IAAIriC,EAAEqiC,GAAE,GAAG,KAAa,KAARriC,EAAE0R,OAAY,CAAC,IAAIzR,EAAED,EAAEwR,UAAU,IAAI,GAAG,KAAa,KAARxR,EAAE0R,OAAY,OAAO1R,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGg8B,IAAGS,GAAG,EAAE3iC,GAAG,MAAM,KAAK,EAAE,IAAIuB,EAAEvB,EAAE+P,UAAU,GAAW,EAAR/P,EAAE0R,QAAUwwB,GAAE,GAAG,OAAOjiC,EAAEsB,EAAE66B,wBAAwB,CAAC,IAAI56B,EAAExB,EAAE6uB,cAAc7uB,EAAEiC,KAAKhC,EAAEwvB,cAAcmL,GAAG56B,EAAEiC,KAAKhC,EAAEwvB,eAAeluB,EAAEy9B,mBAAmBx9B,EAAEvB,EAAE2R,cAAcrQ,EAAEgjC,oCAAoC,CAAC,IAAI9iC,EAAEzB,EAAE8yB,YAAY,OAAOrxB,GAAGwyB,GAAGj0B,EAAEyB,EAAEF,GAAG,MAAM,KAAK,EAAE,IAAIG,EAAE1B,EAAE8yB,YAAY,GAAG,OAAOpxB,EAAE,CAAQ,GAAPzB,EAAE,KAAQ,OAAOD,EAAEgS,MAAM,OAAOhS,EAAEgS,MAAM9L,KAAK,KAAK,EACvf,KAAK,EAAEjG,EAAED,EAAEgS,MAAMjC,UAAUkkB,GAAGj0B,EAAE0B,EAAEzB,EAAE,CAAC,MAAM,KAAK,EAAE,IAAI2F,EAAE5F,EAAE+P,UAAU,GAAG,OAAO9P,GAAW,EAARD,EAAE0R,MAAQ,CAACzR,EAAE2F,EAAE,IAAIC,EAAE7F,EAAEyvB,cAAc,OAAOzvB,EAAEiC,MAAM,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAW4D,EAAE87B,WAAW1hC,EAAEgmB,QAAQ,MAAM,IAAK,MAAMpgB,EAAE2+B,MAAMvkC,EAAEukC,IAAI3+B,EAAE2+B,KAAK,CAAC,MAAM,KAAK,EAAQ,KAAK,EAAQ,KAAK,GAAyJ,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAhM,KAAK,GAAG,GAAG,OAAOxkC,EAAE4R,cAAc,CAAC,IAAIjM,EAAE3F,EAAEwR,UAAU,GAAG,OAAO7L,EAAE,CAAC,IAAIoL,EAAEpL,EAAEiM,cAAc,GAAG,OAAOb,EAAE,CAAC,IAAIggB,EAAEhgB,EAAEc,WAAW,OAAOkf,GAAGrZ,GAAGqZ,EAAE,CAAC,CAAC,CAAC,MAC5c,QAAQ,MAAM/rB,MAAMlF,EAAE,MAAOoiC,IAAW,IAARliC,EAAE0R,OAAWkxB,GAAG5iC,EAAE,CAAC,MAAMgxB,GAAGuR,GAAEviC,EAAEA,EAAEyR,OAAOuf,EAAE,CAAC,CAAC,GAAGhxB,IAAID,EAAE,CAACsiC,GAAE,KAAK,KAAK,CAAa,GAAG,QAAfpiC,EAAED,EAAEiS,SAAoB,CAAChS,EAAEwR,OAAOzR,EAAEyR,OAAO4wB,GAAEpiC,EAAE,KAAK,CAACoiC,GAAEriC,EAAEyR,MAAM,CAAC,CAAC,SAASwyB,GAAGlkC,GAAG,KAAK,OAAOsiC,IAAG,CAAC,IAAIriC,EAAEqiC,GAAE,GAAGriC,IAAID,EAAE,CAACsiC,GAAE,KAAK,KAAK,CAAC,IAAIpiC,EAAED,EAAEiS,QAAQ,GAAG,OAAOhS,EAAE,CAACA,EAAEwR,OAAOzR,EAAEyR,OAAO4wB,GAAEpiC,EAAE,KAAK,CAACoiC,GAAEriC,EAAEyR,MAAM,CAAC,CACvS,SAAS4yB,GAAGtkC,GAAG,KAAK,OAAOsiC,IAAG,CAAC,IAAIriC,EAAEqiC,GAAE,IAAI,OAAOriC,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,IAAIjG,EAAED,EAAEyR,OAAO,IAAIkxB,GAAG,EAAE3iC,EAAE,CAAC,MAAM6F,GAAG08B,GAAEviC,EAAEC,EAAE4F,EAAE,CAAC,MAAM,KAAK,EAAE,IAAItE,EAAEvB,EAAE+P,UAAU,GAAG,oBAAoBxO,EAAE66B,kBAAkB,CAAC,IAAI56B,EAAExB,EAAEyR,OAAO,IAAIlQ,EAAE66B,mBAAmB,CAAC,MAAMv2B,GAAG08B,GAAEviC,EAAEwB,EAAEqE,EAAE,CAAC,CAAC,IAAIpE,EAAEzB,EAAEyR,OAAO,IAAImxB,GAAG5iC,EAAE,CAAC,MAAM6F,GAAG08B,GAAEviC,EAAEyB,EAAEoE,EAAE,CAAC,MAAM,KAAK,EAAE,IAAInE,EAAE1B,EAAEyR,OAAO,IAAImxB,GAAG5iC,EAAE,CAAC,MAAM6F,GAAG08B,GAAEviC,EAAE0B,EAAEmE,EAAE,EAAE,CAAC,MAAMA,GAAG08B,GAAEviC,EAAEA,EAAEyR,OAAO5L,EAAE,CAAC,GAAG7F,IAAID,EAAE,CAACsiC,GAAE,KAAK,KAAK,CAAC,IAAIz8B,EAAE5F,EAAEiS,QAAQ,GAAG,OAAOrM,EAAE,CAACA,EAAE6L,OAAOzR,EAAEyR,OAAO4wB,GAAEz8B,EAAE,KAAK,CAACy8B,GAAEriC,EAAEyR,MAAM,CAAC,CAC7d,IAwBkNgzB,GAxB9MC,GAAG5wB,KAAK6wB,KAAKC,GAAGphC,EAAG2xB,uBAAuB0P,GAAGrhC,EAAGo6B,kBAAkBkH,GAAGthC,EAAGoU,wBAAwBgc,GAAE,EAAE6D,GAAE,KAAKsN,GAAE,KAAKC,GAAE,EAAEtG,GAAG,EAAED,GAAGxS,GAAG,GAAG4V,GAAE,EAAEoD,GAAG,KAAKjR,GAAG,EAAEkR,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,GAAG,KAAKrB,GAAG,EAAElC,GAAGwD,IAASC,GAAG,KAAKxI,IAAG,EAAGC,GAAG,KAAKI,GAAG,KAAKoI,IAAG,EAAGC,GAAG,KAAKC,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,IAAI,EAAEC,GAAG,EAAE,SAASvM,KAAI,OAAO,KAAO,EAAF3F,IAAK/gB,MAAK,IAAIgzB,GAAGA,GAAGA,GAAGhzB,IAAG,CAChU,SAASumB,GAAGr5B,GAAG,OAAG,KAAY,EAAPA,EAAEsvB,MAAe,EAAK,KAAO,EAAFuE,KAAM,IAAIoR,GAASA,IAAGA,GAAK,OAAOnV,GAAG9X,YAAkB,IAAI+tB,KAAKA,GAAG/wB,MAAM+wB,IAAU,KAAP/lC,EAAEqV,IAAkBrV,EAAiBA,OAAE,KAAjBA,EAAEa,OAAOohB,OAAmB,GAAG1J,GAAGvY,EAAEkC,KAAc,CAAC,SAAS81B,GAAGh4B,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,GAAGokC,GAAG,MAAMA,GAAG,EAAEC,GAAG,KAAK5gC,MAAMlF,EAAE,MAAMmV,GAAGlV,EAAEE,EAAEsB,GAAM,KAAO,EAAFqyB,KAAM7zB,IAAI03B,KAAE13B,IAAI03B,KAAI,KAAO,EAAF7D,MAAOsR,IAAIjlC,GAAG,IAAI4hC,IAAGkE,GAAGhmC,EAAEilC,KAAIgB,GAAGjmC,EAAEwB,GAAG,IAAItB,GAAG,IAAI2zB,IAAG,KAAY,EAAP5zB,EAAEqvB,QAAUyS,GAAGjvB,KAAI,IAAIya,IAAIG,MAAK,CAC1Y,SAASuY,GAAGjmC,EAAEC,GAAG,IAAIC,EAAEF,EAAEkmC,cA3MzB,SAAYlmC,EAAEC,GAAG,IAAI,IAAIC,EAAEF,EAAE0U,eAAelT,EAAExB,EAAE2U,YAAYlT,EAAEzB,EAAEmmC,gBAAgBzkC,EAAE1B,EAAEyU,aAAa,EAAE/S,GAAG,CAAC,IAAIC,EAAE,GAAGmS,GAAGpS,GAAGmE,EAAE,GAAGlE,EAAEmE,EAAErE,EAAEE,IAAO,IAAImE,EAAM,KAAKD,EAAE3F,IAAI,KAAK2F,EAAErE,KAAGC,EAAEE,GAAGmT,GAAGjP,EAAE5F,IAAQ6F,GAAG7F,IAAID,EAAEomC,cAAcvgC,GAAGnE,IAAImE,CAAC,CAAC,CA2MnLwgC,CAAGrmC,EAAEC,GAAG,IAAIuB,EAAEgT,GAAGxU,EAAEA,IAAI03B,GAAEuN,GAAE,GAAG,GAAG,IAAIzjC,EAAE,OAAOtB,GAAGsS,GAAGtS,GAAGF,EAAEkmC,aAAa,KAAKlmC,EAAEsmC,iBAAiB,OAAO,GAAGrmC,EAAEuB,GAAGA,EAAExB,EAAEsmC,mBAAmBrmC,EAAE,CAAgB,GAAf,MAAMC,GAAGsS,GAAGtS,GAAM,IAAID,EAAE,IAAID,EAAEmG,IA5IsJ,SAAYnG,GAAGutB,IAAG,EAAGE,GAAGztB,EAAE,CA4I5KumC,CAAGC,GAAG7d,KAAK,KAAK3oB,IAAIytB,GAAG+Y,GAAG7d,KAAK,KAAK3oB,IAAIirB,IAAG,WAAW,KAAO,EAAF4I,KAAMnG,IAAI,IAAGxtB,EAAE,SAAS,CAAC,OAAOoV,GAAG9T,IAAI,KAAK,EAAEtB,EAAEgT,GAAG,MAAM,KAAK,EAAEhT,EAAEkT,GAAG,MAAM,KAAK,GAAwC,QAAQlT,EAAEoT,SAApC,KAAK,UAAUpT,EAAEwT,GAAsBxT,EAAEumC,GAAGvmC,EAAEwmC,GAAG/d,KAAK,KAAK3oB,GAAG,CAACA,EAAEsmC,iBAAiBrmC,EAAED,EAAEkmC,aAAahmC,CAAC,CAAC,CAC7c,SAASwmC,GAAG1mC,EAAEC,GAAc,GAAX6lC,IAAI,EAAEC,GAAG,EAAK,KAAO,EAAFlS,IAAK,MAAM5uB,MAAMlF,EAAE,MAAM,IAAIG,EAAEF,EAAEkmC,aAAa,GAAGS,MAAM3mC,EAAEkmC,eAAehmC,EAAE,OAAO,KAAK,IAAIsB,EAAEgT,GAAGxU,EAAEA,IAAI03B,GAAEuN,GAAE,GAAG,GAAG,IAAIzjC,EAAE,OAAO,KAAK,GAAG,KAAO,GAAFA,IAAO,KAAKA,EAAExB,EAAEomC,eAAenmC,EAAEA,EAAE2mC,GAAG5mC,EAAEwB,OAAO,CAACvB,EAAEuB,EAAE,IAAIC,EAAEoyB,GAAEA,IAAG,EAAE,IAAInyB,EAAEmlC,KAAgD,IAAxCnP,KAAI13B,GAAGilC,KAAIhlC,IAAEulC,GAAG,KAAKzD,GAAGjvB,KAAI,IAAIg0B,GAAG9mC,EAAEC,UAAU8mC,KAAK,KAAK,CAAC,MAAMlhC,GAAGmhC,GAAGhnC,EAAE6F,EAAE,CAAU8rB,KAAKkT,GAAG1yB,QAAQzQ,EAAEmyB,GAAEpyB,EAAE,OAAOujC,GAAE/kC,EAAE,GAAGy3B,GAAE,KAAKuN,GAAE,EAAEhlC,EAAE6hC,GAAE,CAAC,GAAG,IAAI7hC,EAAE,CAAyC,GAAxC,IAAIA,IAAY,KAARwB,EAAEsT,GAAG/U,MAAWwB,EAAEC,EAAExB,EAAEgnC,GAAGjnC,EAAEyB,KAAQ,IAAIxB,EAAE,MAAMC,EAAEglC,GAAG4B,GAAG9mC,EAAE,GAAGgmC,GAAGhmC,EAAEwB,GAAGykC,GAAGjmC,EAAE8S,MAAK5S,EAAE,GAAG,IAAID,EAAE+lC,GAAGhmC,EAAEwB,OAChf,CAAuB,GAAtBC,EAAEzB,EAAEmS,QAAQV,UAAa,KAAO,GAAFjQ,KAGnC,SAAYxB,GAAG,IAAI,IAAIC,EAAED,IAAI,CAAC,GAAW,MAARC,EAAE0R,MAAY,CAAC,IAAIzR,EAAED,EAAE8yB,YAAY,GAAG,OAAO7yB,GAAe,QAAXA,EAAEA,EAAE23B,QAAiB,IAAI,IAAIr2B,EAAE,EAAEA,EAAEtB,EAAEE,OAAOoB,IAAI,CAAC,IAAIC,EAAEvB,EAAEsB,GAAGE,EAAED,EAAE81B,YAAY91B,EAAEA,EAAEkG,MAAM,IAAI,IAAI4b,GAAG7hB,IAAID,GAAG,OAAM,CAAE,CAAC,MAAME,GAAG,OAAM,CAAE,CAAC,CAAC,CAAW,GAAVzB,EAAED,EAAEgS,MAAwB,MAAfhS,EAAEsgC,cAAoB,OAAOrgC,EAAEA,EAAEwR,OAAOzR,EAAEA,EAAEC,MAAM,CAAC,GAAGD,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAEiS,SAAS,CAAC,GAAG,OAAOjS,EAAEyR,QAAQzR,EAAEyR,SAAS1R,EAAE,OAAM,EAAGC,EAAEA,EAAEyR,MAAM,CAACzR,EAAEiS,QAAQR,OAAOzR,EAAEyR,OAAOzR,EAAEA,EAAEiS,OAAO,CAAC,CAAC,OAAM,CAAE,CAHvXg1B,CAAGzlC,KAAe,KAAVxB,EAAE2mC,GAAG5mC,EAAEwB,MAAmB,KAARE,EAAEqT,GAAG/U,MAAWwB,EAAEE,EAAEzB,EAAEgnC,GAAGjnC,EAAE0B,KAAK,IAAIzB,GAAG,MAAMC,EAAEglC,GAAG4B,GAAG9mC,EAAE,GAAGgmC,GAAGhmC,EAAEwB,GAAGykC,GAAGjmC,EAAE8S,MAAK5S,EAAqC,OAAnCF,EAAEmnC,aAAa1lC,EAAEzB,EAAEonC,cAAc5lC,EAASvB,GAAG,KAAK,EAAE,KAAK,EAAE,MAAMgF,MAAMlF,EAAE,MAAM,KAAK,EAC8B,KAAK,EAAEsnC,GAAGrnC,EAAEslC,GAAGE,IAAI,MAD7B,KAAK,EAAU,GAARQ,GAAGhmC,EAAEwB,IAAS,UAAFA,KAAeA,GAAiB,IAAbvB,EAAEgkC,GAAG,IAAInxB,MAAU,CAAC,GAAG,IAAI0B,GAAGxU,EAAE,GAAG,MAAyB,KAAnByB,EAAEzB,EAAE0U,gBAAqBlT,KAAKA,EAAE,CAACg4B,KAAIx5B,EAAE2U,aAAa3U,EAAE0U,eAAejT,EAAE,KAAK,CAACzB,EAAEsnC,cAAc3c,GAAG0c,GAAG1e,KAAK,KAAK3oB,EAAEslC,GAAGE,IAAIvlC,GAAG,KAAK,CAAConC,GAAGrnC,EAAEslC,GAAGE,IAAI,MAAM,KAAK,EAAU,GAARQ,GAAGhmC,EAAEwB,IAAS,QAAFA,KAC9eA,EAAE,MAAqB,IAAfvB,EAAED,EAAEmV,WAAe1T,GAAG,EAAE,EAAED,GAAG,CAAC,IAAIG,EAAE,GAAGmS,GAAGtS,GAAGE,EAAE,GAAGC,GAAEA,EAAE1B,EAAE0B,IAAKF,IAAIA,EAAEE,GAAGH,IAAIE,CAAC,CAAqG,GAApGF,EAAEC,EAAqG,IAA3FD,GAAG,KAAXA,EAAEsR,KAAItR,GAAW,IAAI,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAKA,EAAE,KAAK,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAKmjC,GAAGnjC,EAAE,OAAOA,GAAU,CAACxB,EAAEsnC,cAAc3c,GAAG0c,GAAG1e,KAAK,KAAK3oB,EAAEslC,GAAGE,IAAIhkC,GAAG,KAAK,CAAC6lC,GAAGrnC,EAAEslC,GAAGE,IAAI,MAA+B,QAAQ,MAAMvgC,MAAMlF,EAAE,MAAO,CAAC,CAAW,OAAVkmC,GAAGjmC,EAAE8S,MAAY9S,EAAEkmC,eAAehmC,EAAEwmC,GAAG/d,KAAK,KAAK3oB,GAAG,IAAI,CACrX,SAASinC,GAAGjnC,EAAEC,GAAG,IAAIC,EAAEmlC,GAA2G,OAAxGrlC,EAAEmS,QAAQN,cAAcqF,eAAe4vB,GAAG9mC,EAAEC,GAAG0R,OAAO,KAAe,KAAV3R,EAAE4mC,GAAG5mC,EAAEC,MAAWA,EAAEqlC,GAAGA,GAAGplC,EAAE,OAAOD,GAAGmhC,GAAGnhC,IAAWD,CAAC,CAAC,SAASohC,GAAGphC,GAAG,OAAOslC,GAAGA,GAAGtlC,EAAEslC,GAAGn1B,KAAKY,MAAMu0B,GAAGtlC,EAAE,CAE5L,SAASgmC,GAAGhmC,EAAEC,GAAuD,IAApDA,IAAImlC,GAAGnlC,IAAIklC,GAAGnlC,EAAE0U,gBAAgBzU,EAAED,EAAE2U,cAAc1U,EAAMD,EAAEA,EAAEmmC,gBAAgB,EAAElmC,GAAG,CAAC,IAAIC,EAAE,GAAG4T,GAAG7T,GAAGuB,EAAE,GAAGtB,EAAEF,EAAEE,IAAI,EAAED,IAAIuB,CAAC,CAAC,CAAC,SAASglC,GAAGxmC,GAAG,GAAG,KAAO,EAAF6zB,IAAK,MAAM5uB,MAAMlF,EAAE,MAAM4mC,KAAK,IAAI1mC,EAAEuU,GAAGxU,EAAE,GAAG,GAAG,KAAO,EAAFC,GAAK,OAAOgmC,GAAGjmC,EAAE8S,MAAK,KAAK,IAAI5S,EAAE0mC,GAAG5mC,EAAEC,GAAG,GAAG,IAAID,EAAEmG,KAAK,IAAIjG,EAAE,CAAC,IAAIsB,EAAEuT,GAAG/U,GAAG,IAAIwB,IAAIvB,EAAEuB,EAAEtB,EAAE+mC,GAAGjnC,EAAEwB,GAAG,CAAC,GAAG,IAAItB,EAAE,MAAMA,EAAEglC,GAAG4B,GAAG9mC,EAAE,GAAGgmC,GAAGhmC,EAAEC,GAAGgmC,GAAGjmC,EAAE8S,MAAK5S,EAAE,GAAG,IAAIA,EAAE,MAAM+E,MAAMlF,EAAE,MAAiF,OAA3EC,EAAEmnC,aAAannC,EAAEmS,QAAQV,UAAUzR,EAAEonC,cAAcnnC,EAAEonC,GAAGrnC,EAAEslC,GAAGE,IAAIS,GAAGjmC,EAAE8S,MAAY,IAAI,CACvd,SAASy0B,GAAGvnC,EAAEC,GAAG,IAAIC,EAAE2zB,GAAEA,IAAG,EAAE,IAAI,OAAO7zB,EAAEC,EAAE,CAAC,QAAY,KAAJ4zB,GAAE3zB,KAAU6hC,GAAGjvB,KAAI,IAAIya,IAAIG,KAAK,CAAC,CAAC,SAAS8Z,GAAGxnC,GAAG,OAAO0lC,IAAI,IAAIA,GAAGv/B,KAAK,KAAO,EAAF0tB,KAAM8S,KAAK,IAAI1mC,EAAE4zB,GAAEA,IAAG,EAAE,IAAI3zB,EAAE6kC,GAAG/sB,WAAWxW,EAAE6T,GAAE,IAAI,GAAG0vB,GAAG/sB,WAAW,KAAK3C,GAAE,EAAErV,EAAE,OAAOA,GAAG,CAAC,QAAQqV,GAAE7T,EAAEujC,GAAG/sB,WAAW9X,EAAM,KAAO,GAAX2zB,GAAE5zB,KAAaytB,IAAI,CAAC,CAAC,SAASsU,KAAKrD,GAAGD,GAAGvsB,QAAQga,GAAEuS,GAAG,CAChT,SAASoI,GAAG9mC,EAAEC,GAAGD,EAAEmnC,aAAa,KAAKnnC,EAAEonC,cAAc,EAAE,IAAIlnC,EAAEF,EAAEsnC,cAAiD,IAAlC,IAAIpnC,IAAIF,EAAEsnC,eAAe,EAAEzc,GAAG3qB,IAAO,OAAO8kC,GAAE,IAAI9kC,EAAE8kC,GAAEtzB,OAAO,OAAOxR,GAAG,CAAC,IAAIsB,EAAEtB,EAAQ,OAANquB,GAAG/sB,GAAUA,EAAE2E,KAAK,KAAK,EAA6B,QAA3B3E,EAAEA,EAAEU,KAAK4qB,yBAA4B,IAAStrB,GAAGurB,KAAK,MAAM,KAAK,EAAE2H,KAAKvI,GAAEI,IAAIJ,GAAEG,IAAG2I,KAAK,MAAM,KAAK,EAAEL,GAAGpzB,GAAG,MAAM,KAAK,EAAEkzB,KAAK,MAAM,KAAK,GAAc,KAAK,GAAGvI,GAAE0I,IAAG,MAAM,KAAK,GAAGjD,GAAGpwB,EAAEU,KAAKqE,UAAU,MAAM,KAAK,GAAG,KAAK,GAAGy7B,KAAK9hC,EAAEA,EAAEwR,MAAM,CAAqE,GAApEgmB,GAAE13B,EAAEglC,GAAEhlC,EAAEywB,GAAGzwB,EAAEmS,QAAQ,MAAM8yB,GAAEtG,GAAG1+B,EAAE6hC,GAAE,EAAEoD,GAAG,KAAKE,GAAGD,GAAGlR,GAAG,EAAEqR,GAAGD,GAAG,KAAQ,OAAO7S,GAAG,CAAC,IAAIvyB,EAC1f,EAAEA,EAAEuyB,GAAGpyB,OAAOH,IAAI,GAA2B,QAAhBuB,GAARtB,EAAEsyB,GAAGvyB,IAAO0yB,aAAqB,CAACzyB,EAAEyyB,YAAY,KAAK,IAAIlxB,EAAED,EAAE2vB,KAAKzvB,EAAExB,EAAEkzB,QAAQ,GAAG,OAAO1xB,EAAE,CAAC,IAAIC,EAAED,EAAEyvB,KAAKzvB,EAAEyvB,KAAK1vB,EAAED,EAAE2vB,KAAKxvB,CAAC,CAACzB,EAAEkzB,QAAQ5xB,CAAC,CAACgxB,GAAG,IAAI,CAAC,OAAOxyB,CAAC,CAC3K,SAASgnC,GAAGhnC,EAAEC,GAAG,OAAE,CAAC,IAAIC,EAAE8kC,GAAE,IAAuB,GAAnBrT,KAAKwD,GAAGhjB,QAAQikB,GAAMV,GAAG,CAAC,IAAI,IAAIl0B,EAAE+zB,GAAE1jB,cAAc,OAAOrQ,GAAG,CAAC,IAAIC,EAAED,EAAEg1B,MAAM,OAAO/0B,IAAIA,EAAE2xB,QAAQ,MAAM5xB,EAAEA,EAAE2vB,IAAI,CAACuE,IAAG,CAAE,CAA4C,GAA3CJ,GAAG,EAAEG,GAAED,GAAED,GAAE,KAAKI,IAAG,EAAGC,GAAG,EAAEkP,GAAG3yB,QAAQ,KAAQ,OAAOjS,GAAG,OAAOA,EAAEwR,OAAO,CAACowB,GAAE,EAAEoD,GAAGjlC,EAAE+kC,GAAE,KAAK,KAAK,CAAChlC,EAAE,CAAC,IAAI0B,EAAE1B,EAAE2B,EAAEzB,EAAEwR,OAAO7L,EAAE3F,EAAE4F,EAAE7F,EAAqB,GAAnBA,EAAEglC,GAAEp/B,EAAE8L,OAAO,MAAS,OAAO7L,GAAG,kBAAkBA,GAAG,oBAAoBA,EAAEslB,KAAK,CAAC,IAAIxlB,EAAEE,EAAEkL,EAAEnL,EAAEmrB,EAAEhgB,EAAE7K,IAAI,GAAG,KAAY,EAAP6K,EAAEse,QAAU,IAAI0B,GAAG,KAAKA,GAAG,KAAKA,GAAG,CAAC,IAAIC,EAAEjgB,EAAES,UAAUwf,GAAGjgB,EAAE+hB,YAAY9B,EAAE8B,YAAY/hB,EAAEa,cAAcof,EAAEpf,cACxeb,EAAEmhB,MAAMlB,EAAEkB,QAAQnhB,EAAE+hB,YAAY,KAAK/hB,EAAEa,cAAc,KAAK,CAAC,IAAIqf,EAAEwM,GAAG/7B,GAAG,GAAG,OAAOuvB,EAAE,CAACA,EAAEvf,QAAQ,IAAIgsB,GAAGzM,EAAEvvB,EAAEkE,EAAEnE,EAAEzB,GAAU,EAAPixB,EAAE5B,MAAQiO,GAAG77B,EAAEkE,EAAE3F,GAAO6F,EAAEF,EAAE,IAAIkjB,GAAZ7oB,EAAEixB,GAAc6B,YAAY,GAAG,OAAOjK,EAAE,CAAC,IAAIC,EAAE,IAAIxoB,IAAIwoB,EAAEpoB,IAAImF,GAAG7F,EAAE8yB,YAAYhK,CAAC,MAAMD,EAAEnoB,IAAImF,GAAG,MAAM9F,CAAC,CAAM,GAAG,KAAO,EAAFC,GAAK,CAACs9B,GAAG77B,EAAEkE,EAAE3F,GAAGkgC,KAAK,MAAMngC,CAAC,CAAC8F,EAAEb,MAAMlF,EAAE,KAAM,MAAM,GAAG2uB,IAAU,EAAP7oB,EAAEypB,KAAO,CAAC,IAAItG,EAAE0U,GAAG/7B,GAAG,GAAG,OAAOqnB,EAAE,CAAC,KAAa,MAARA,EAAErX,SAAeqX,EAAErX,OAAO,KAAKgsB,GAAG3U,EAAErnB,EAAEkE,EAAEnE,EAAEzB,GAAG4vB,GAAGyM,GAAGx2B,EAAED,IAAI,MAAM7F,CAAC,CAAC,CAAC0B,EAAEoE,EAAEw2B,GAAGx2B,EAAED,GAAG,IAAIi8B,KAAIA,GAAE,GAAG,OAAOuD,GAAGA,GAAG,CAAC3jC,GAAG2jC,GAAGl1B,KAAKzO,GAAGA,EAAEC,EAAE,EAAE,CAAC,OAAOD,EAAEyE,KAAK,KAAK,EAAEzE,EAAEiQ,OAAO,MACpf1R,IAAIA,EAAEyB,EAAEywB,OAAOlyB,EAAkB8zB,GAAGryB,EAAbq7B,GAAGr7B,EAAEoE,EAAE7F,IAAW,MAAMD,EAAE,KAAK,EAAE6F,EAAEC,EAAE,IAAIqjB,EAAEznB,EAAEQ,KAAKgnB,EAAExnB,EAAEsO,UAAU,GAAG,KAAa,IAARtO,EAAEiQ,SAAa,oBAAoBwX,EAAEgU,0BAA0B,OAAOjU,GAAG,oBAAoBA,EAAEkU,oBAAoB,OAAOC,KAAKA,GAAGhV,IAAIa,KAAK,CAACxnB,EAAEiQ,OAAO,MAAM1R,IAAIA,EAAEyB,EAAEywB,OAAOlyB,EAAkB8zB,GAAGryB,EAAbw7B,GAAGx7B,EAAEmE,EAAE5F,IAAW,MAAMD,CAAC,EAAE0B,EAAEA,EAAEgQ,MAAM,OAAO,OAAOhQ,EAAE,CAAC+lC,GAAGvnC,EAAE,CAAC,MAAMwpB,GAAIzpB,EAAEypB,EAAGsb,KAAI9kC,GAAG,OAAOA,IAAI8kC,GAAE9kC,EAAEA,EAAEwR,QAAQ,QAAQ,CAAC,KAAK,CAAS,CAAC,SAASm1B,KAAK,IAAI7mC,EAAE6kC,GAAG1yB,QAAsB,OAAd0yB,GAAG1yB,QAAQikB,GAAU,OAAOp2B,EAAEo2B,GAAGp2B,CAAC,CACrd,SAASmgC,KAAQ,IAAI2B,IAAG,IAAIA,IAAG,IAAIA,KAAEA,GAAE,GAAE,OAAOpK,IAAG,KAAQ,UAAHzD,KAAe,KAAQ,UAAHkR,KAAea,GAAGtO,GAAEuN,GAAE,CAAC,SAAS2B,GAAG5mC,EAAEC,GAAG,IAAIC,EAAE2zB,GAAEA,IAAG,EAAE,IAAIryB,EAAEqlC,KAAqC,IAA7BnP,KAAI13B,GAAGilC,KAAIhlC,IAAEulC,GAAG,KAAKsB,GAAG9mC,EAAEC,UAAUynC,KAAK,KAAK,CAAC,MAAMjmC,GAAGulC,GAAGhnC,EAAEyB,EAAE,CAAgC,GAAtBkwB,KAAKkC,GAAE3zB,EAAE2kC,GAAG1yB,QAAQ3Q,EAAK,OAAOwjC,GAAE,MAAM//B,MAAMlF,EAAE,MAAiB,OAAX23B,GAAE,KAAKuN,GAAE,EAASnD,EAAC,CAAC,SAAS4F,KAAK,KAAK,OAAO1C,IAAG2C,GAAG3C,GAAE,CAAC,SAAS+B,KAAK,KAAK,OAAO/B,KAAItyB,MAAMi1B,GAAG3C,GAAE,CAAC,SAAS2C,GAAG3nC,GAAG,IAAIC,EAAEykC,GAAG1kC,EAAEyR,UAAUzR,EAAE2+B,IAAI3+B,EAAE0vB,cAAc1vB,EAAEivB,aAAa,OAAOhvB,EAAEwnC,GAAGznC,GAAGglC,GAAE/kC,EAAE6kC,GAAG3yB,QAAQ,IAAI,CAC1d,SAASs1B,GAAGznC,GAAG,IAAIC,EAAED,EAAE,EAAE,CAAC,IAAIE,EAAED,EAAEwR,UAAqB,GAAXzR,EAAEC,EAAEyR,OAAU,KAAa,MAARzR,EAAE0R,QAAc,GAAgB,QAAbzR,EAAEihC,GAAGjhC,EAAED,EAAE0+B,KAAkB,YAAJqG,GAAE9kC,OAAc,CAAW,GAAG,QAAbA,EAAE+hC,GAAG/hC,EAAED,IAAmC,OAAnBC,EAAEyR,OAAO,WAAMqzB,GAAE9kC,GAAS,GAAG,OAAOF,EAAmE,OAAX8hC,GAAE,OAAEkD,GAAE,MAA5DhlC,EAAE2R,OAAO,MAAM3R,EAAEugC,aAAa,EAAEvgC,EAAE+uB,UAAU,IAA4B,CAAa,GAAG,QAAf9uB,EAAEA,EAAEiS,SAAyB,YAAJ8yB,GAAE/kC,GAAS+kC,GAAE/kC,EAAED,CAAC,OAAO,OAAOC,GAAG,IAAI6hC,KAAIA,GAAE,EAAE,CAAC,SAASuF,GAAGrnC,EAAEC,EAAEC,GAAG,IAAIsB,EAAE6T,GAAE5T,EAAEsjC,GAAG/sB,WAAW,IAAI+sB,GAAG/sB,WAAW,KAAK3C,GAAE,EAC3Y,SAAYrV,EAAEC,EAAEC,EAAEsB,GAAG,GAAGmlC,WAAW,OAAOjB,IAAI,GAAG,KAAO,EAAF7R,IAAK,MAAM5uB,MAAMlF,EAAE,MAAMG,EAAEF,EAAEmnC,aAAa,IAAI1lC,EAAEzB,EAAEonC,cAAc,GAAG,OAAOlnC,EAAE,OAAO,KAA2C,GAAtCF,EAAEmnC,aAAa,KAAKnnC,EAAEonC,cAAc,EAAKlnC,IAAIF,EAAEmS,QAAQ,MAAMlN,MAAMlF,EAAE,MAAMC,EAAEkmC,aAAa,KAAKlmC,EAAEsmC,iBAAiB,EAAE,IAAI5kC,EAAExB,EAAEiyB,MAAMjyB,EAAE6xB,WAA8J,GAzNtT,SAAY/xB,EAAEC,GAAG,IAAIC,EAAEF,EAAEyU,cAAcxU,EAAED,EAAEyU,aAAaxU,EAAED,EAAE0U,eAAe,EAAE1U,EAAE2U,YAAY,EAAE3U,EAAEomC,cAAcnmC,EAAED,EAAE4nC,kBAAkB3nC,EAAED,EAAE4U,gBAAgB3U,EAAEA,EAAED,EAAE6U,cAAc,IAAIrT,EAAExB,EAAEmV,WAAW,IAAInV,EAAEA,EAAEmmC,gBAAgB,EAAEjmC,GAAG,CAAC,IAAIuB,EAAE,GAAGqS,GAAG5T,GAAGwB,EAAE,GAAGD,EAAExB,EAAEwB,GAAG,EAAED,EAAEC,IAAI,EAAEzB,EAAEyB,IAAI,EAAEvB,IAAIwB,CAAC,CAAC,CAyN5GmmC,CAAG7nC,EAAE0B,GAAG1B,IAAI03B,KAAIsN,GAAEtN,GAAE,KAAKuN,GAAE,GAAG,KAAoB,KAAf/kC,EAAEqgC,eAAoB,KAAa,KAARrgC,EAAEyR,QAAa8zB,KAAKA,IAAG,EAAGgB,GAAGnzB,IAAG,WAAgB,OAALqzB,KAAY,IAAI,KAAIjlC,EAAE,KAAa,MAARxB,EAAEyR,OAAgB,KAAoB,MAAfzR,EAAEqgC,eAAqB7+B,EAAE,CAACA,EAAEqjC,GAAG/sB,WAAW+sB,GAAG/sB,WAAW,KAChf,IAAIrW,EAAE0T,GAAEA,GAAE,EAAE,IAAIxP,EAAEguB,GAAEA,IAAG,EAAEiR,GAAG3yB,QAAQ,KA1CpC,SAAYnS,EAAEC,GAAgB,GAAbsqB,GAAGzS,GAAauM,GAAVrkB,EAAEikB,MAAc,CAAC,GAAG,mBAAmBjkB,EAAE,IAAIE,EAAE,CAACykB,MAAM3kB,EAAE6kB,eAAeD,IAAI5kB,EAAE8kB,mBAAmB9kB,EAAE,CAA8C,IAAIwB,GAAjDtB,GAAGA,EAAEF,EAAE2I,gBAAgBzI,EAAE8kB,aAAankB,QAAeokB,cAAc/kB,EAAE+kB,eAAe,GAAGzjB,GAAG,IAAIA,EAAE2jB,WAAW,CAACjlB,EAAEsB,EAAE4jB,WAAW,IAAI3jB,EAAED,EAAE6jB,aAAa3jB,EAAEF,EAAE8jB,UAAU9jB,EAAEA,EAAE+jB,YAAY,IAAIrlB,EAAEwK,SAAShJ,EAAEgJ,QAAQ,CAAC,MAAM0e,GAAGlpB,EAAE,KAAK,MAAMF,CAAC,CAAC,IAAI2B,EAAE,EAAEkE,GAAG,EAAEC,GAAG,EAAEF,EAAE,EAAEoL,EAAE,EAAEggB,EAAEhxB,EAAEixB,EAAE,KAAKhxB,EAAE,OAAO,CAAC,IAAI,IAAIixB,EAAKF,IAAI9wB,GAAG,IAAIuB,GAAG,IAAIuvB,EAAEtmB,WAAW7E,EAAElE,EAAEF,GAAGuvB,IAAItvB,GAAG,IAAIF,GAAG,IAAIwvB,EAAEtmB,WAAW5E,EAAEnE,EAAEH,GAAG,IAAIwvB,EAAEtmB,WAAW/I,GACnfqvB,EAAErmB,UAAUvK,QAAW,QAAQ8wB,EAAEF,EAAE7mB,aAAkB8mB,EAAED,EAAEA,EAAEE,EAAE,OAAO,CAAC,GAAGF,IAAIhxB,EAAE,MAAMC,EAA8C,GAA5CgxB,IAAI/wB,KAAK0F,IAAInE,IAAIoE,EAAElE,GAAGsvB,IAAIvvB,KAAKsP,IAAIxP,IAAIsE,EAAEnE,GAAM,QAAQuvB,EAAEF,EAAEnN,aAAa,MAAUoN,GAAJD,EAAEC,GAAMvhB,UAAU,CAACshB,EAAEE,CAAC,CAAChxB,GAAG,IAAI2F,IAAI,IAAIC,EAAE,KAAK,CAAC6e,MAAM9e,EAAE+e,IAAI9e,EAAE,MAAM5F,EAAE,IAAI,CAACA,EAAEA,GAAG,CAACykB,MAAM,EAAEC,IAAI,EAAE,MAAM1kB,EAAE,KAA+C,IAA1CsqB,GAAG,CAAChG,YAAYxkB,EAAEykB,eAAevkB,GAAG4X,IAAG,EAAOwqB,GAAEriC,EAAE,OAAOqiC,IAAG,GAAOtiC,GAAJC,EAAEqiC,IAAMrwB,MAAM,KAAoB,KAAfhS,EAAEsgC,eAAoB,OAAOvgC,EAAEA,EAAE0R,OAAOzR,EAAEqiC,GAAEtiC,OAAO,KAAK,OAAOsiC,IAAG,CAACriC,EAAEqiC,GAAE,IAAI,IAAIxZ,EAAE7oB,EAAEwR,UAAU,GAAG,KAAa,KAARxR,EAAE0R,OAAY,OAAO1R,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GACvK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,MAA3W,KAAK,EAAE,GAAG,OAAO2iB,EAAE,CAAC,IAAIC,EAAED,EAAE4G,cAAc1G,EAAEF,EAAEjX,cAAcoX,EAAEhpB,EAAE+P,UAAUmZ,EAAEF,EAAEiT,wBAAwBj8B,EAAE6uB,cAAc7uB,EAAEiC,KAAK6mB,EAAE8R,GAAG56B,EAAEiC,KAAK6mB,GAAGC,GAAGC,EAAEub,oCAAoCrb,CAAC,CAAC,MAAM,KAAK,EAAE,IAAID,EAAEjpB,EAAE+P,UAAUmH,cAAc,IAAI+R,EAAExe,SAASwe,EAAExf,YAAY,GAAG,IAAIwf,EAAExe,UAAUwe,EAAExE,iBAAiBwE,EAAE9e,YAAY8e,EAAExE,iBAAiB,MAAyC,QAAQ,MAAMzf,MAAMlF,EAAE,MAAO,CAAC,MAAMqpB,GAAGoZ,GAAEviC,EAAEA,EAAEyR,OAAO0X,EAAE,CAAa,GAAG,QAAfppB,EAAEC,EAAEiS,SAAoB,CAAClS,EAAE0R,OAAOzR,EAAEyR,OAAO4wB,GAAEtiC,EAAE,KAAK,CAACsiC,GAAEriC,EAAEyR,MAAM,CAACoX,EAAE4Z,GAAGA,IAAG,CAAW,CAwCldoF,CAAG9nC,EAAEE,GAAG4jC,GAAG5jC,EAAEF,GAAGukB,GAAGiG,IAAI1S,KAAKyS,GAAGC,GAAGD,GAAG,KAAKvqB,EAAEmS,QAAQjS,EAAEkkC,GAAGlkC,EAAEF,EAAEyB,GAAGmR,KAAKihB,GAAEhuB,EAAEwP,GAAE1T,EAAEojC,GAAG/sB,WAAWtW,CAAC,MAAM1B,EAAEmS,QAAQjS,EAAsF,GAApFulC,KAAKA,IAAG,EAAGC,GAAG1lC,EAAE2lC,GAAGlkC,GAAGC,EAAE1B,EAAEyU,aAAa,IAAI/S,IAAI27B,GAAG,MAhOmJ,SAAYr9B,GAAG,GAAG6T,IAAI,oBAAoBA,GAAGk0B,kBAAkB,IAAIl0B,GAAGk0B,kBAAkBn0B,GAAG5T,OAAE,EAAO,OAAuB,IAAhBA,EAAEmS,QAAQR,OAAW,CAAC,MAAM1R,GAAG,CAAC,CAgOxR+nC,CAAG9nC,EAAE8P,WAAai2B,GAAGjmC,EAAE8S,MAAQ,OAAO7S,EAAE,IAAIuB,EAAExB,EAAEioC,mBAAmB/nC,EAAE,EAAEA,EAAED,EAAEG,OAAOF,IAAIuB,EAAExB,EAAEC,GAAGsB,EAAEC,EAAEkG,MAAM,CAAC21B,eAAe77B,EAAEyD,MAAMs3B,OAAO/6B,EAAE+6B,SAAS,GAAGQ,GAAG,MAAMA,IAAG,EAAGh9B,EAAEi9B,GAAGA,GAAG,KAAKj9B,EAAE,KAAQ,EAAH2lC,KAAO,IAAI3lC,EAAEmG,KAAKwgC,KAAKjlC,EAAE1B,EAAEyU,aAAa,KAAO,EAAF/S,GAAK1B,IAAI6lC,GAAGD,MAAMA,GAAG,EAAEC,GAAG7lC,GAAG4lC,GAAG,EAAElY,IAAgB,CAFxFwa,CAAGloC,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,QAAQujC,GAAG/sB,WAAWvW,EAAE4T,GAAE7T,CAAC,CAAC,OAAO,IAAI,CAGhc,SAASmlC,KAAK,GAAG,OAAOjB,GAAG,CAAC,IAAI1lC,EAAEsV,GAAGqwB,IAAI1lC,EAAE8kC,GAAG/sB,WAAW9X,EAAEmV,GAAE,IAAmC,GAA/B0vB,GAAG/sB,WAAW,KAAK3C,GAAE,GAAGrV,EAAE,GAAGA,EAAK,OAAO0lC,GAAG,IAAIlkC,GAAE,MAAO,CAAmB,GAAlBxB,EAAE0lC,GAAGA,GAAG,KAAKC,GAAG,EAAK,KAAO,EAAF9R,IAAK,MAAM5uB,MAAMlF,EAAE,MAAM,IAAI0B,EAAEoyB,GAAO,IAALA,IAAG,EAAMyO,GAAEtiC,EAAEmS,QAAQ,OAAOmwB,IAAG,CAAC,IAAI5gC,EAAE4gC,GAAE3gC,EAAED,EAAEuQ,MAAM,GAAG,KAAa,GAARqwB,GAAE3wB,OAAU,CAAC,IAAI9L,EAAEnE,EAAEqtB,UAAU,GAAG,OAAOlpB,EAAE,CAAC,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEzF,OAAO0F,IAAI,CAAC,IAAIF,EAAEC,EAAEC,GAAG,IAAIw8B,GAAE18B,EAAE,OAAO08B,IAAG,CAAC,IAAItxB,EAAEsxB,GAAE,OAAOtxB,EAAE7K,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGw8B,GAAG,EAAE3xB,EAAEtP,GAAG,IAAIsvB,EAAEhgB,EAAEiB,MAAM,GAAG,OAAO+e,EAAEA,EAAEtf,OAAOV,EAAEsxB,GAAEtR,OAAO,KAAK,OAAOsR,IAAG,CAAK,IAAIrR,GAARjgB,EAAEsxB,IAAUpwB,QAAQgf,EAAElgB,EAAEU,OAAa,GAANoxB,GAAG9xB,GAAMA,IACnfpL,EAAE,CAAC08B,GAAE,KAAK,KAAK,CAAC,GAAG,OAAOrR,EAAE,CAACA,EAAEvf,OAAOwf,EAAEoR,GAAErR,EAAE,KAAK,CAACqR,GAAEpR,CAAC,CAAC,CAAC,CAAC,IAAIpI,EAAEpnB,EAAE+P,UAAU,GAAG,OAAOqX,EAAE,CAAC,IAAIC,EAAED,EAAE7W,MAAM,GAAG,OAAO8W,EAAE,CAACD,EAAE7W,MAAM,KAAK,EAAE,CAAC,IAAI+W,EAAED,EAAE7W,QAAQ6W,EAAE7W,QAAQ,KAAK6W,EAAEC,CAAC,OAAO,OAAOD,EAAE,CAAC,CAACuZ,GAAE5gC,CAAC,CAAC,CAAC,GAAG,KAAoB,KAAfA,EAAE6+B,eAAoB,OAAO5+B,EAAEA,EAAE+P,OAAOhQ,EAAE4gC,GAAE3gC,OAAO1B,EAAE,KAAK,OAAOqiC,IAAG,CAAK,GAAG,KAAa,MAApB5gC,EAAE4gC,IAAY3wB,OAAY,OAAOjQ,EAAEyE,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGw8B,GAAG,EAAEjhC,EAAEA,EAAEgQ,QAAQ,IAAIuX,EAAEvnB,EAAEwQ,QAAQ,GAAG,OAAO+W,EAAE,CAACA,EAAEvX,OAAOhQ,EAAEgQ,OAAO4wB,GAAErZ,EAAE,MAAMhpB,CAAC,CAACqiC,GAAE5gC,EAAEgQ,MAAM,CAAC,CAAC,IAAIyX,EAAEnpB,EAAEmS,QAAQ,IAAImwB,GAAEnZ,EAAE,OAAOmZ,IAAG,CAAK,IAAIpZ,GAARvnB,EAAE2gC,IAAUrwB,MAAM,GAAG,KAAoB,KAAftQ,EAAE4+B,eAAoB,OAClfrX,EAAEA,EAAExX,OAAO/P,EAAE2gC,GAAEpZ,OAAOjpB,EAAE,IAAI0B,EAAEwnB,EAAE,OAAOmZ,IAAG,CAAK,GAAG,KAAa,MAApBz8B,EAAEy8B,IAAY3wB,OAAY,IAAI,OAAO9L,EAAEM,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGy8B,GAAG,EAAE/8B,GAAG,CAAC,MAAM6jB,GAAI8Y,GAAE38B,EAAEA,EAAE6L,OAAOgY,EAAG,CAAC,GAAG7jB,IAAIlE,EAAE,CAAC2gC,GAAE,KAAK,MAAMriC,CAAC,CAAC,IAAImpB,EAAEvjB,EAAEqM,QAAQ,GAAG,OAAOkX,EAAE,CAACA,EAAE1X,OAAO7L,EAAE6L,OAAO4wB,GAAElZ,EAAE,MAAMnpB,CAAC,CAACqiC,GAAEz8B,EAAE6L,MAAM,CAAC,CAAU,GAATmiB,GAAEpyB,EAAEisB,KAAQ7Z,IAAI,oBAAoBA,GAAGs0B,sBAAsB,IAAIt0B,GAAGs0B,sBAAsBv0B,GAAG5T,EAAE,CAAC,MAAM0pB,GAAI,CAACloB,GAAE,CAAE,CAAC,OAAOA,CAAC,CAAC,QAAQ6T,GAAEnV,EAAE6kC,GAAG/sB,WAAW/X,CAAC,CAAC,CAAC,OAAM,CAAE,CAAC,SAASmoC,GAAGpoC,EAAEC,EAAEC,GAAyBF,EAAE4zB,GAAG5zB,EAAjBC,EAAE88B,GAAG/8B,EAAfC,EAAEq8B,GAAGp8B,EAAED,GAAY,GAAY,GAAGA,EAAEu5B,KAAI,OAAOx5B,IAAIkV,GAAGlV,EAAE,EAAEC,GAAGgmC,GAAGjmC,EAAEC,GAAG,CACze,SAASuiC,GAAExiC,EAAEC,EAAEC,GAAG,GAAG,IAAIF,EAAEmG,IAAIiiC,GAAGpoC,EAAEA,EAAEE,QAAQ,KAAK,OAAOD,GAAG,CAAC,GAAG,IAAIA,EAAEkG,IAAI,CAACiiC,GAAGnoC,EAAED,EAAEE,GAAG,KAAK,CAAM,GAAG,IAAID,EAAEkG,IAAI,CAAC,IAAI3E,EAAEvB,EAAE+P,UAAU,GAAG,oBAAoB/P,EAAEiC,KAAKi7B,0BAA0B,oBAAoB37B,EAAE47B,oBAAoB,OAAOC,KAAKA,GAAGhV,IAAI7mB,IAAI,CAAuBvB,EAAE2zB,GAAG3zB,EAAjBD,EAAEk9B,GAAGj9B,EAAfD,EAAEs8B,GAAGp8B,EAAEF,GAAY,GAAY,GAAGA,EAAEw5B,KAAI,OAAOv5B,IAAIiV,GAAGjV,EAAE,EAAED,GAAGimC,GAAGhmC,EAAED,IAAI,KAAK,CAAC,CAACC,EAAEA,EAAEyR,MAAM,CAAC,CACnV,SAAS+rB,GAAGz9B,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEw9B,UAAU,OAAOh8B,GAAGA,EAAE+U,OAAOtW,GAAGA,EAAEu5B,KAAIx5B,EAAE2U,aAAa3U,EAAE0U,eAAexU,EAAEw3B,KAAI13B,IAAIilC,GAAE/kC,KAAKA,IAAI,IAAI4hC,IAAG,IAAIA,KAAM,UAAFmD,MAAeA,IAAG,IAAInyB,KAAImxB,GAAG6C,GAAG9mC,EAAE,GAAGolC,IAAIllC,GAAG+lC,GAAGjmC,EAAEC,EAAE,CAAC,SAASooC,GAAGroC,EAAEC,GAAG,IAAIA,IAAI,KAAY,EAAPD,EAAEsvB,MAAQrvB,EAAE,GAAGA,EAAEqU,GAAU,KAAQ,WAAfA,KAAK,MAAuBA,GAAG,WAAW,IAAIpU,EAAEs5B,KAAc,QAAVx5B,EAAE4yB,GAAG5yB,EAAEC,MAAciV,GAAGlV,EAAEC,EAAEC,GAAG+lC,GAAGjmC,EAAEE,GAAG,CAAC,SAASkgC,GAAGpgC,GAAG,IAAIC,EAAED,EAAE6R,cAAc3R,EAAE,EAAE,OAAOD,IAAIC,EAAED,EAAEmvB,WAAWiZ,GAAGroC,EAAEE,EAAE,CACjZ,SAAS0jC,GAAG5jC,EAAEC,GAAG,IAAIC,EAAE,EAAE,OAAOF,EAAEmG,KAAK,KAAK,GAAG,IAAI3E,EAAExB,EAAEgQ,UAAcvO,EAAEzB,EAAE6R,cAAc,OAAOpQ,IAAIvB,EAAEuB,EAAE2tB,WAAW,MAAM,KAAK,GAAG5tB,EAAExB,EAAEgQ,UAAU,MAAM,QAAQ,MAAM/K,MAAMlF,EAAE,MAAO,OAAOyB,GAAGA,EAAE+U,OAAOtW,GAAGooC,GAAGroC,EAAEE,EAAE,CAQqK,SAASumC,GAAGzmC,EAAEC,GAAG,OAAOqS,GAAGtS,EAAEC,EAAE,CACjZ,SAASqoC,GAAGtoC,EAAEC,EAAEC,EAAEsB,GAAGI,KAAKuE,IAAInG,EAAE4B,KAAKuc,IAAIje,EAAE0B,KAAKsQ,QAAQtQ,KAAKqQ,MAAMrQ,KAAK8P,OAAO9P,KAAKoO,UAAUpO,KAAKM,KAAKN,KAAKktB,YAAY,KAAKltB,KAAK4uB,MAAM,EAAE5uB,KAAKouB,IAAI,KAAKpuB,KAAKqtB,aAAahvB,EAAE2B,KAAKqwB,aAAarwB,KAAKiQ,cAAcjQ,KAAKmxB,YAAYnxB,KAAK8tB,cAAc,KAAK9tB,KAAK0tB,KAAK9tB,EAAEI,KAAK2+B,aAAa3+B,KAAK+P,MAAM,EAAE/P,KAAKmtB,UAAU,KAAKntB,KAAKmwB,WAAWnwB,KAAKuwB,MAAM,EAAEvwB,KAAK6P,UAAU,IAAI,CAAC,SAASod,GAAG7uB,EAAEC,EAAEC,EAAEsB,GAAG,OAAO,IAAI8mC,GAAGtoC,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,SAAS08B,GAAGl+B,GAAiB,UAAdA,EAAEA,EAAEkB,aAAuBlB,EAAEuoC,iBAAiB,CAEpd,SAAS9X,GAAGzwB,EAAEC,GAAG,IAAIC,EAAEF,EAAEyR,UACuB,OADb,OAAOvR,IAAGA,EAAE2uB,GAAG7uB,EAAEmG,IAAIlG,EAAED,EAAEme,IAAIne,EAAEsvB,OAAQR,YAAY9uB,EAAE8uB,YAAY5uB,EAAEgC,KAAKlC,EAAEkC,KAAKhC,EAAE8P,UAAUhQ,EAAEgQ,UAAU9P,EAAEuR,UAAUzR,EAAEA,EAAEyR,UAAUvR,IAAIA,EAAE+uB,aAAahvB,EAAEC,EAAEgC,KAAKlC,EAAEkC,KAAKhC,EAAEyR,MAAM,EAAEzR,EAAEqgC,aAAa,EAAErgC,EAAE6uB,UAAU,MAAM7uB,EAAEyR,MAAc,SAAR3R,EAAE2R,MAAezR,EAAE6xB,WAAW/xB,EAAE+xB,WAAW7xB,EAAEiyB,MAAMnyB,EAAEmyB,MAAMjyB,EAAE+R,MAAMjS,EAAEiS,MAAM/R,EAAEwvB,cAAc1vB,EAAE0vB,cAAcxvB,EAAE2R,cAAc7R,EAAE6R,cAAc3R,EAAE6yB,YAAY/yB,EAAE+yB,YAAY9yB,EAAED,EAAEiyB,aAAa/xB,EAAE+xB,aAAa,OAAOhyB,EAAE,KAAK,CAACkyB,MAAMlyB,EAAEkyB,MAAMD,aAAajyB,EAAEiyB,cAC/ehyB,EAAEgS,QAAQlS,EAAEkS,QAAQhS,EAAEswB,MAAMxwB,EAAEwwB,MAAMtwB,EAAE8vB,IAAIhwB,EAAEgwB,IAAW9vB,CAAC,CACxD,SAAS0wB,GAAG5wB,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAG,IAAIC,EAAE,EAAM,GAAJH,EAAExB,EAAK,oBAAoBA,EAAEk+B,GAAGl+B,KAAK2B,EAAE,QAAQ,GAAG,kBAAkB3B,EAAE2B,EAAE,OAAO3B,EAAE,OAAOA,GAAG,KAAK+D,EAAG,OAAOgtB,GAAG7wB,EAAEoJ,SAAS7H,EAAEC,EAAEzB,GAAG,KAAK+D,EAAGrC,EAAE,EAAEF,GAAG,EAAE,MAAM,KAAKwC,EAAG,OAAOjE,EAAE6uB,GAAG,GAAG3uB,EAAED,EAAI,EAAFwB,IAAOqtB,YAAY7qB,EAAGjE,EAAEmyB,MAAMzwB,EAAE1B,EAAE,KAAKqE,EAAG,OAAOrE,EAAE6uB,GAAG,GAAG3uB,EAAED,EAAEwB,IAAKqtB,YAAYzqB,EAAGrE,EAAEmyB,MAAMzwB,EAAE1B,EAAE,KAAKsE,EAAG,OAAOtE,EAAE6uB,GAAG,GAAG3uB,EAAED,EAAEwB,IAAKqtB,YAAYxqB,EAAGtE,EAAEmyB,MAAMzwB,EAAE1B,EAAE,KAAKyE,EAAG,OAAOq7B,GAAG5/B,EAAEuB,EAAEC,EAAEzB,GAAG,QAAQ,GAAG,kBAAkBD,GAAG,OAAOA,EAAE,OAAOA,EAAEsG,UAAU,KAAKpC,EAAGvC,EAAE,GAAG,MAAM3B,EAAE,KAAKmE,EAAGxC,EAAE,EAAE,MAAM3B,EAAE,KAAKoE,EAAGzC,EAAE,GACpf,MAAM3B,EAAE,KAAKuE,EAAG5C,EAAE,GAAG,MAAM3B,EAAE,KAAKwE,EAAG7C,EAAE,GAAGH,EAAE,KAAK,MAAMxB,EAAE,MAAMiF,MAAMlF,EAAE,IAAI,MAAMC,EAAEA,SAASA,EAAE,KAAuD,OAAjDC,EAAE4uB,GAAGltB,EAAEzB,EAAED,EAAEwB,IAAKqtB,YAAY9uB,EAAEC,EAAEiC,KAAKV,EAAEvB,EAAEkyB,MAAMzwB,EAASzB,CAAC,CAAC,SAAS8wB,GAAG/wB,EAAEC,EAAEC,EAAEsB,GAA2B,OAAxBxB,EAAE6uB,GAAG,EAAE7uB,EAAEwB,EAAEvB,IAAKkyB,MAAMjyB,EAASF,CAAC,CAAC,SAAS8/B,GAAG9/B,EAAEC,EAAEC,EAAEsB,GAAuE,OAApExB,EAAE6uB,GAAG,GAAG7uB,EAAEwB,EAAEvB,IAAK6uB,YAAYrqB,EAAGzE,EAAEmyB,MAAMjyB,EAAEF,EAAEgQ,UAAU,CAACg0B,UAAS,GAAWhkC,CAAC,CAAC,SAAS0wB,GAAG1wB,EAAEC,EAAEC,GAA8B,OAA3BF,EAAE6uB,GAAG,EAAE7uB,EAAE,KAAKC,IAAKkyB,MAAMjyB,EAASF,CAAC,CAC5W,SAAS8wB,GAAG9wB,EAAEC,EAAEC,GAA8J,OAA3JD,EAAE4uB,GAAG,EAAE,OAAO7uB,EAAEsJ,SAAStJ,EAAEsJ,SAAS,GAAGtJ,EAAEme,IAAIle,IAAKkyB,MAAMjyB,EAAED,EAAE+P,UAAU,CAACmH,cAAcnX,EAAEmX,cAAcqxB,gBAAgB,KAAK3X,eAAe7wB,EAAE6wB,gBAAuB5wB,CAAC,CACtL,SAASwoC,GAAGzoC,EAAEC,EAAEC,EAAEsB,EAAEC,GAAGG,KAAKuE,IAAIlG,EAAE2B,KAAKuV,cAAcnX,EAAE4B,KAAKulC,aAAavlC,KAAK47B,UAAU57B,KAAKuQ,QAAQvQ,KAAK4mC,gBAAgB,KAAK5mC,KAAK0lC,eAAe,EAAE1lC,KAAKskC,aAAatkC,KAAKw9B,eAAex9B,KAAK0wB,QAAQ,KAAK1wB,KAAK0kC,iBAAiB,EAAE1kC,KAAKuT,WAAWF,GAAG,GAAGrT,KAAKukC,gBAAgBlxB,IAAI,GAAGrT,KAAKgT,eAAehT,KAAKwlC,cAAcxlC,KAAKgmC,iBAAiBhmC,KAAKwkC,aAAaxkC,KAAK+S,YAAY/S,KAAK8S,eAAe9S,KAAK6S,aAAa,EAAE7S,KAAKiT,cAAcI,GAAG,GAAGrT,KAAKg5B,iBAAiBp5B,EAAEI,KAAKqmC,mBAAmBxmC,EAAEG,KAAK8mC,gCAC/e,IAAI,CAAC,SAASC,GAAG3oC,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAgN,OAA7M9F,EAAE,IAAIyoC,GAAGzoC,EAAEC,EAAEC,EAAE2F,EAAEC,GAAG,IAAI7F,GAAGA,EAAE,GAAE,IAAKyB,IAAIzB,GAAG,IAAIA,EAAE,EAAEyB,EAAEmtB,GAAG,EAAE,KAAK,KAAK5uB,GAAGD,EAAEmS,QAAQzQ,EAAEA,EAAEsO,UAAUhQ,EAAE0B,EAAEmQ,cAAc,CAACgU,QAAQrkB,EAAE0V,aAAahX,EAAE0oC,MAAM,KAAKnK,YAAY,KAAKoK,0BAA0B,MAAM/V,GAAGpxB,GAAU1B,CAAC,CACzP,SAAS8oC,GAAG9oC,GAAG,IAAIA,EAAE,OAAOqsB,GAAuBrsB,EAAE,CAAC,GAAGwR,GAA1BxR,EAAEA,EAAEk7B,mBAA8Bl7B,GAAG,IAAIA,EAAEmG,IAAI,MAAMlB,MAAMlF,EAAE,MAAM,IAAIE,EAAED,EAAE,EAAE,CAAC,OAAOC,EAAEkG,KAAK,KAAK,EAAElG,EAAEA,EAAE+P,UAAUsiB,QAAQ,MAAMtyB,EAAE,KAAK,EAAE,GAAG6sB,GAAG5sB,EAAEiC,MAAM,CAACjC,EAAEA,EAAE+P,UAAUod,0CAA0C,MAAMptB,CAAC,EAAEC,EAAEA,EAAEyR,MAAM,OAAO,OAAOzR,GAAG,MAAMgF,MAAMlF,EAAE,KAAM,CAAC,GAAG,IAAIC,EAAEmG,IAAI,CAAC,IAAIjG,EAAEF,EAAEkC,KAAK,GAAG2qB,GAAG3sB,GAAG,OAAO+sB,GAAGjtB,EAAEE,EAAED,EAAE,CAAC,OAAOA,CAAC,CACpW,SAAS8oC,GAAG/oC,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAwK,OAArK9F,EAAE2oC,GAAGzoC,EAAEsB,GAAE,EAAGxB,EAAEyB,EAAEC,EAAEC,EAAEkE,EAAEC,IAAKwsB,QAAQwW,GAAG,MAAM5oC,EAAEF,EAAEmS,SAAsBzQ,EAAE6xB,GAAhB/xB,EAAEg4B,KAAI/3B,EAAE43B,GAAGn5B,KAAeyzB,cAAS,IAAS1zB,GAAG,OAAOA,EAAEA,EAAE,KAAK2zB,GAAG1zB,EAAEwB,EAAED,GAAGzB,EAAEmS,QAAQggB,MAAM1wB,EAAEyT,GAAGlV,EAAEyB,EAAED,GAAGykC,GAAGjmC,EAAEwB,GAAUxB,CAAC,CAAC,SAASgpC,GAAGhpC,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAExB,EAAEkS,QAAQzQ,EAAE83B,KAAI73B,EAAE03B,GAAG53B,GAAsL,OAAnLvB,EAAE4oC,GAAG5oC,GAAG,OAAOD,EAAEqyB,QAAQryB,EAAEqyB,QAAQpyB,EAAED,EAAEm/B,eAAel/B,GAAED,EAAEszB,GAAG7xB,EAAEC,IAAK+xB,QAAQ,CAAC7N,QAAQ7lB,GAAuB,QAApBwB,OAAE,IAASA,EAAE,KAAKA,KAAavB,EAAE0zB,SAASnyB,GAAe,QAAZxB,EAAE4zB,GAAGnyB,EAAExB,EAAE0B,MAAcq2B,GAAGh4B,EAAEyB,EAAEE,EAAED,GAAGoyB,GAAG9zB,EAAEyB,EAAEE,IAAWA,CAAC,CAC3b,SAASsnC,GAAGjpC,GAAe,OAAZA,EAAEA,EAAEmS,SAAcF,OAAyBjS,EAAEiS,MAAM9L,IAAoDnG,EAAEiS,MAAMjC,WAAhF,IAA0F,CAAC,SAASk5B,GAAGlpC,EAAEC,GAAqB,GAAG,QAArBD,EAAEA,EAAE6R,gBAA2B,OAAO7R,EAAE8R,WAAW,CAAC,IAAI5R,EAAEF,EAAEovB,UAAUpvB,EAAEovB,UAAU,IAAIlvB,GAAGA,EAAED,EAAEC,EAAED,CAAC,CAAC,CAAC,SAASkpC,GAAGnpC,EAAEC,GAAGipC,GAAGlpC,EAAEC,IAAID,EAAEA,EAAEyR,YAAYy3B,GAAGlpC,EAAEC,EAAE,CAnB7SykC,GAAG,SAAS1kC,EAAEC,EAAEC,GAAG,GAAG,OAAOF,EAAE,GAAGA,EAAE0vB,gBAAgBzvB,EAAEgvB,cAAc1C,GAAGpa,QAAQigB,IAAG,MAAO,CAAC,GAAG,KAAKpyB,EAAEmyB,MAAMjyB,IAAI,KAAa,IAARD,EAAE0R,OAAW,OAAOygB,IAAG,EAzE1I,SAAYpyB,EAAEC,EAAEC,GAAG,OAAOD,EAAEkG,KAAK,KAAK,EAAEg5B,GAAGl/B,GAAG2vB,KAAK,MAAM,KAAK,EAAE+E,GAAG10B,GAAG,MAAM,KAAK,EAAE4sB,GAAG5sB,EAAEiC,OAAOirB,GAAGltB,GAAG,MAAM,KAAK,EAAEu0B,GAAGv0B,EAAEA,EAAE+P,UAAUmH,eAAe,MAAM,KAAK,GAAG,IAAI3V,EAAEvB,EAAEiC,KAAKqE,SAAS9E,EAAExB,EAAEyvB,cAAc/nB,MAAMykB,GAAEmF,GAAG/vB,EAAEqwB,eAAerwB,EAAEqwB,cAAcpwB,EAAE,MAAM,KAAK,GAAqB,GAAG,QAArBD,EAAEvB,EAAE4R,eAA2B,OAAG,OAAOrQ,EAAEsQ,YAAkBsa,GAAEyI,GAAY,EAAVA,GAAE1iB,SAAWlS,EAAE0R,OAAO,IAAI,MAAQ,KAAKzR,EAAED,EAAEgS,MAAM8f,YAAmB6N,GAAG5/B,EAAEC,EAAEC,IAAGksB,GAAEyI,GAAY,EAAVA,GAAE1iB,SAA8B,QAAnBnS,EAAEg+B,GAAGh+B,EAAEC,EAAEC,IAAmBF,EAAEkS,QAAQ,MAAKka,GAAEyI,GAAY,EAAVA,GAAE1iB,SAAW,MAAM,KAAK,GAC7d,GADge3Q,EAAE,KAAKtB,EACrfD,EAAE8xB,YAAe,KAAa,IAAR/xB,EAAE2R,OAAW,CAAC,GAAGnQ,EAAE,OAAOw/B,GAAGhhC,EAAEC,EAAEC,GAAGD,EAAE0R,OAAO,GAAG,CAA6F,GAA1E,QAAlBlQ,EAAExB,EAAE4R,iBAAyBpQ,EAAEk/B,UAAU,KAAKl/B,EAAEq/B,KAAK,KAAKr/B,EAAEm2B,WAAW,MAAMxL,GAAEyI,GAAEA,GAAE1iB,SAAY3Q,EAAE,MAAW,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOvB,EAAEkyB,MAAM,EAAEmM,GAAGt+B,EAAEC,EAAEC,GAAG,OAAO89B,GAAGh+B,EAAEC,EAAEC,EAAE,CAwE7GkpC,CAAGppC,EAAEC,EAAEC,GAAGkyB,GAAG,KAAa,OAARpyB,EAAE2R,MAAmB,MAAMygB,IAAG,EAAG1D,IAAG,KAAa,QAARzuB,EAAE0R,QAAgB0c,GAAGpuB,EAAE6tB,GAAG7tB,EAAEuwB,OAAiB,OAAVvwB,EAAEkyB,MAAM,EAASlyB,EAAEkG,KAAK,KAAK,EAAE,IAAI3E,EAAEvB,EAAEiC,KAAK48B,GAAG9+B,EAAEC,GAAGD,EAAEC,EAAEgvB,aAAa,IAAIxtB,EAAEgrB,GAAGxsB,EAAEqsB,GAAEna,SAAS6f,GAAG/xB,EAAEC,GAAGuB,EAAEu0B,GAAG,KAAK/1B,EAAEuB,EAAExB,EAAEyB,EAAEvB,GAAG,IAAIwB,EAAE20B,KACvI,OAD4Ip2B,EAAE0R,OAAO,EAAE,kBAAkBlQ,GAAG,OAAOA,GAAG,oBAAoBA,EAAE2E,aAAQ,IAAS3E,EAAE6E,UAAUrG,EAAEkG,IAAI,EAAElG,EAAE4R,cAAc,KAAK5R,EAAE8yB,YAC1e,KAAKlG,GAAGrrB,IAAIE,GAAE,EAAGyrB,GAAGltB,IAAIyB,GAAE,EAAGzB,EAAE4R,cAAc,OAAOpQ,EAAEk6B,YAAO,IAASl6B,EAAEk6B,MAAMl6B,EAAEk6B,MAAM,KAAK7I,GAAG7yB,GAAGwB,EAAEm6B,QAAQZ,GAAG/6B,EAAE+P,UAAUvO,EAAEA,EAAEy5B,gBAAgBj7B,EAAE+7B,GAAG/7B,EAAEuB,EAAExB,EAAEE,GAAGD,EAAEi/B,GAAG,KAAKj/B,EAAEuB,GAAE,EAAGE,EAAExB,KAAKD,EAAEkG,IAAI,EAAEuoB,IAAGhtB,GAAG4sB,GAAGruB,GAAG69B,GAAG,KAAK79B,EAAEwB,EAAEvB,GAAGD,EAAEA,EAAEgS,OAAchS,EAAE,KAAK,GAAGuB,EAAEvB,EAAE6uB,YAAY9uB,EAAE,CAAqF,OAApF8+B,GAAG9+B,EAAEC,GAAGD,EAAEC,EAAEgvB,aAAuBztB,GAAVC,EAAED,EAAEiF,OAAUjF,EAAEgF,UAAUvG,EAAEiC,KAAKV,EAAEC,EAAExB,EAAEkG,IAQtU,SAAYnG,GAAG,GAAG,oBAAoBA,EAAE,OAAOk+B,GAAGl+B,GAAG,EAAE,EAAE,QAAG,IAASA,GAAG,OAAOA,EAAE,CAAc,IAAbA,EAAEA,EAAEsG,YAAgBlC,EAAG,OAAO,GAAG,GAAGpE,IAAIuE,EAAG,OAAO,EAAE,CAAC,OAAO,CAAC,CAR2L8kC,CAAG7nC,GAAGxB,EAAE66B,GAAGr5B,EAAExB,GAAUyB,GAAG,KAAK,EAAExB,EAAEo+B,GAAG,KAAKp+B,EAAEuB,EAAExB,EAAEE,GAAG,MAAMF,EAAE,KAAK,EAAEC,EAAE4+B,GAAG,KAAK5+B,EAAEuB,EAAExB,EAAEE,GAAG,MAAMF,EAAE,KAAK,GAAGC,EAAE89B,GAAG,KAAK99B,EAAEuB,EAAExB,EAAEE,GAAG,MAAMF,EAAE,KAAK,GAAGC,EAAEg+B,GAAG,KAAKh+B,EAAEuB,EAAEq5B,GAAGr5B,EAAEU,KAAKlC,GAAGE,GAAG,MAAMF,EAAE,MAAMiF,MAAMlF,EAAE,IACvgByB,EAAE,IAAK,CAAC,OAAOvB,EAAE,KAAK,EAAE,OAAOuB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAA2CoP,GAAGr+B,EAAEC,EAAEuB,EAArCC,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEo5B,GAAGr5B,EAAEC,GAAcvB,GAAG,KAAK,EAAE,OAAOsB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAA2C4P,GAAG7+B,EAAEC,EAAEuB,EAArCC,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEo5B,GAAGr5B,EAAEC,GAAcvB,GAAG,KAAK,EAAEF,EAAE,CAAO,GAANm/B,GAAGl/B,GAAM,OAAOD,EAAE,MAAMiF,MAAMlF,EAAE,MAAMyB,EAAEvB,EAAEgvB,aAA+BxtB,GAAlBC,EAAEzB,EAAE4R,eAAkBgU,QAAQyN,GAAGtzB,EAAEC,GAAG+zB,GAAG/zB,EAAEuB,EAAE,KAAKtB,GAAG,IAAIyB,EAAE1B,EAAE4R,cAA0B,GAAZrQ,EAAEG,EAAEkkB,QAAWnkB,EAAEwV,aAAY,CAAC,GAAGxV,EAAE,CAACmkB,QAAQrkB,EAAE0V,cAAa,EAAG0xB,MAAMjnC,EAAEinC,MAAMC,0BAA0BlnC,EAAEknC,0BAA0BpK,YAAY98B,EAAE88B,aAAax+B,EAAE8yB,YAAYC,UAChftxB,EAAEzB,EAAE4R,cAAcnQ,EAAU,IAARzB,EAAE0R,MAAU,CAAuB1R,EAAEo/B,GAAGr/B,EAAEC,EAAEuB,EAAEtB,EAAjCuB,EAAE66B,GAAGr3B,MAAMlF,EAAE,MAAME,IAAmB,MAAMD,CAAC,CAAM,GAAGwB,IAAIC,EAAE,CAAuBxB,EAAEo/B,GAAGr/B,EAAEC,EAAEuB,EAAEtB,EAAjCuB,EAAE66B,GAAGr3B,MAAMlF,EAAE,MAAME,IAAmB,MAAMD,CAAC,CAAM,IAAIyuB,GAAGjD,GAAGvrB,EAAE+P,UAAUmH,cAAchN,YAAYqkB,GAAGvuB,EAAEyuB,IAAE,EAAGC,GAAG,KAAKzuB,EAAEoxB,GAAGrxB,EAAE,KAAKuB,EAAEtB,GAAGD,EAAEgS,MAAM/R,EAAEA,GAAGA,EAAEyR,OAAe,EAATzR,EAAEyR,MAAS,KAAKzR,EAAEA,EAAEgS,OAAQ,KAAI,CAAM,GAAL0d,KAAQpuB,IAAIC,EAAE,CAACxB,EAAE+9B,GAAGh+B,EAAEC,EAAEC,GAAG,MAAMF,CAAC,CAAC89B,GAAG99B,EAAEC,EAAEuB,EAAEtB,EAAE,CAACD,EAAEA,EAAEgS,KAAK,CAAC,OAAOhS,EAAE,KAAK,EAAE,OAAO00B,GAAG10B,GAAG,OAAOD,GAAGuvB,GAAGtvB,GAAGuB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAAavtB,EAAE,OAAO1B,EAAEA,EAAE0vB,cAAc,KAAK/tB,EAAEF,EAAE6H,SAASmhB,GAAGjpB,EAAEC,GAAGE,EAAE,KAAK,OAAOD,GAAG+oB,GAAGjpB,EAAEE,KAAKzB,EAAE0R,OAAO,IACnfitB,GAAG5+B,EAAEC,GAAG69B,GAAG99B,EAAEC,EAAE0B,EAAEzB,GAAGD,EAAEgS,MAAM,KAAK,EAAE,OAAO,OAAOjS,GAAGuvB,GAAGtvB,GAAG,KAAK,KAAK,GAAG,OAAO2/B,GAAG5/B,EAAEC,EAAEC,GAAG,KAAK,EAAE,OAAOs0B,GAAGv0B,EAAEA,EAAE+P,UAAUmH,eAAe3V,EAAEvB,EAAEgvB,aAAa,OAAOjvB,EAAEC,EAAEgS,MAAMof,GAAGpxB,EAAE,KAAKuB,EAAEtB,GAAG49B,GAAG99B,EAAEC,EAAEuB,EAAEtB,GAAGD,EAAEgS,MAAM,KAAK,GAAG,OAAOzQ,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAA2C8O,GAAG/9B,EAAEC,EAAEuB,EAArCC,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEo5B,GAAGr5B,EAAEC,GAAcvB,GAAG,KAAK,EAAE,OAAO49B,GAAG99B,EAAEC,EAAEA,EAAEgvB,aAAa/uB,GAAGD,EAAEgS,MAAM,KAAK,EAAmD,KAAK,GAAG,OAAO6rB,GAAG99B,EAAEC,EAAEA,EAAEgvB,aAAa3lB,SAASpJ,GAAGD,EAAEgS,MAAM,KAAK,GAAGjS,EAAE,CACxZ,GADyZwB,EAAEvB,EAAEiC,KAAKqE,SAAS9E,EAAExB,EAAEgvB,aAAavtB,EAAEzB,EAAEyvB,cAClf/tB,EAAEF,EAAEkG,MAAMykB,GAAEmF,GAAG/vB,EAAEqwB,eAAerwB,EAAEqwB,cAAclwB,EAAK,OAAOD,EAAE,GAAG6hB,GAAG7hB,EAAEiG,MAAMhG,IAAI,GAAGD,EAAE4H,WAAW7H,EAAE6H,WAAWijB,GAAGpa,QAAQ,CAAClS,EAAE+9B,GAAGh+B,EAAEC,EAAEC,GAAG,MAAMF,CAAC,OAAO,IAAc,QAAV0B,EAAEzB,EAAEgS,SAAiBvQ,EAAEgQ,OAAOzR,GAAG,OAAOyB,GAAG,CAAC,IAAImE,EAAEnE,EAAEuwB,aAAa,GAAG,OAAOpsB,EAAE,CAAClE,EAAED,EAAEuQ,MAAM,IAAI,IAAInM,EAAED,EAAEqsB,aAAa,OAAOpsB,GAAG,CAAC,GAAGA,EAAEwsB,UAAU9wB,EAAE,CAAC,GAAG,IAAIE,EAAEyE,IAAI,EAACL,EAAEytB,IAAI,EAAErzB,GAAGA,IAAKiG,IAAI,EAAE,IAAIP,EAAElE,EAAEqxB,YAAY,GAAG,OAAOntB,EAAE,CAAY,IAAIoL,GAAfpL,EAAEA,EAAEutB,QAAeC,QAAQ,OAAOpiB,EAAElL,EAAEqrB,KAAKrrB,GAAGA,EAAEqrB,KAAKngB,EAAEmgB,KAAKngB,EAAEmgB,KAAKrrB,GAAGF,EAAEwtB,QAAQttB,CAAC,CAAC,CAACpE,EAAEywB,OAAOjyB,EAAgB,QAAd4F,EAAEpE,EAAE+P,aAAqB3L,EAAEqsB,OAAOjyB,GAAG4xB,GAAGpwB,EAAEgQ,OAClfxR,EAAED,GAAG4F,EAAEssB,OAAOjyB,EAAE,KAAK,CAAC4F,EAAEA,EAAEqrB,IAAI,CAAC,MAAM,GAAG,KAAKzvB,EAAEyE,IAAIxE,EAAED,EAAEQ,OAAOjC,EAAEiC,KAAK,KAAKR,EAAEuQ,WAAW,GAAG,KAAKvQ,EAAEyE,IAAI,CAAY,GAAG,QAAdxE,EAAED,EAAEgQ,QAAmB,MAAMzM,MAAMlF,EAAE,MAAM4B,EAAEwwB,OAAOjyB,EAAgB,QAAd2F,EAAElE,EAAE8P,aAAqB5L,EAAEssB,OAAOjyB,GAAG4xB,GAAGnwB,EAAEzB,EAAED,GAAG0B,EAAED,EAAEwQ,OAAO,MAAMvQ,EAAED,EAAEuQ,MAAM,GAAG,OAAOtQ,EAAEA,EAAE+P,OAAOhQ,OAAO,IAAIC,EAAED,EAAE,OAAOC,GAAG,CAAC,GAAGA,IAAI1B,EAAE,CAAC0B,EAAE,KAAK,KAAK,CAAa,GAAG,QAAfD,EAAEC,EAAEuQ,SAAoB,CAACxQ,EAAEgQ,OAAO/P,EAAE+P,OAAO/P,EAAED,EAAE,KAAK,CAACC,EAAEA,EAAE+P,MAAM,CAAChQ,EAAEC,CAAC,CAACm8B,GAAG99B,EAAEC,EAAEwB,EAAE6H,SAASpJ,GAAGD,EAAEA,EAAEgS,KAAK,CAAC,OAAOhS,EAAE,KAAK,EAAE,OAAOwB,EAAExB,EAAEiC,KAAKV,EAAEvB,EAAEgvB,aAAa3lB,SAAS0oB,GAAG/xB,EAAEC,GAAWsB,EAAEA,EAAVC,EAAE4wB,GAAG5wB,IAAUxB,EAAE0R,OAAO,EAAEmsB,GAAG99B,EAAEC,EAAEuB,EAAEtB,GACpfD,EAAEgS,MAAM,KAAK,GAAG,OAAgBxQ,EAAEo5B,GAAXr5B,EAAEvB,EAAEiC,KAAYjC,EAAEgvB,cAA6BgP,GAAGj+B,EAAEC,EAAEuB,EAAtBC,EAAEo5B,GAAGr5B,EAAEU,KAAKT,GAAcvB,GAAG,KAAK,GAAG,OAAOk+B,GAAGp+B,EAAEC,EAAEA,EAAEiC,KAAKjC,EAAEgvB,aAAa/uB,GAAG,KAAK,GAAG,OAAOsB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAAaxtB,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEo5B,GAAGr5B,EAAEC,GAAGq9B,GAAG9+B,EAAEC,GAAGA,EAAEkG,IAAI,EAAE0mB,GAAGrrB,IAAIxB,GAAE,EAAGmtB,GAAGltB,IAAID,GAAE,EAAGgyB,GAAG/xB,EAAEC,GAAGu7B,GAAGx7B,EAAEuB,EAAEC,GAAGu6B,GAAG/7B,EAAEuB,EAAEC,EAAEvB,GAAGg/B,GAAG,KAAKj/B,EAAEuB,GAAE,EAAGxB,EAAEE,GAAG,KAAK,GAAG,OAAO8gC,GAAGhhC,EAAEC,EAAEC,GAAG,KAAK,GAAG,OAAOo+B,GAAGt+B,EAAEC,EAAEC,GAAG,MAAM+E,MAAMlF,EAAE,IAAIE,EAAEkG,KAAM,EAYxC,IAAImjC,GAAG,oBAAoBC,YAAYA,YAAY,SAASvpC,GAAG28B,QAAQC,MAAM58B,EAAE,EAAE,SAASwpC,GAAGxpC,GAAG4B,KAAK6nC,cAAczpC,CAAC,CACjI,SAAS0pC,GAAG1pC,GAAG4B,KAAK6nC,cAAczpC,CAAC,CAC5J,SAAS2pC,GAAG3pC,GAAG,SAASA,GAAG,IAAIA,EAAE0K,UAAU,IAAI1K,EAAE0K,UAAU,KAAK1K,EAAE0K,SAAS,CAAC,SAASk/B,GAAG5pC,GAAG,SAASA,GAAG,IAAIA,EAAE0K,UAAU,IAAI1K,EAAE0K,UAAU,KAAK1K,EAAE0K,WAAW,IAAI1K,EAAE0K,UAAU,iCAAiC1K,EAAE2K,WAAW,CAAC,SAASk/B,KAAK,CAExa,SAASC,GAAG9pC,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAExB,EAAEijC,oBAAoB,GAAGzhC,EAAE,CAAC,IAAIC,EAAED,EAAE,GAAG,oBAAoBD,EAAE,CAAC,IAAIoE,EAAEpE,EAAEA,EAAE,WAAW,IAAIzB,EAAEipC,GAAGtnC,GAAGkE,EAAE5C,KAAKjD,EAAE,CAAC,CAACgpC,GAAG/oC,EAAE0B,EAAE3B,EAAEyB,EAAE,MAAME,EADxJ,SAAY3B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAGA,EAAE,CAAC,GAAG,oBAAoBD,EAAE,CAAC,IAAIE,EAAEF,EAAEA,EAAE,WAAW,IAAIxB,EAAEipC,GAAGtnC,GAAGD,EAAEuB,KAAKjD,EAAE,CAAC,CAAC,IAAI2B,EAAEonC,GAAG9oC,EAAEuB,EAAExB,EAAE,EAAE,MAAK,EAAG,EAAG,GAAG6pC,IAAmF,OAA/E7pC,EAAEmjC,oBAAoBxhC,EAAE3B,EAAEspB,IAAI3nB,EAAEwQ,QAAQuW,GAAG,IAAI1oB,EAAE0K,SAAS1K,EAAE0P,WAAW1P,GAAGwnC,KAAY7lC,CAAC,CAAC,KAAKF,EAAEzB,EAAEyK,WAAWzK,EAAEoK,YAAY3I,GAAG,GAAG,oBAAoBD,EAAE,CAAC,IAAIqE,EAAErE,EAAEA,EAAE,WAAW,IAAIxB,EAAEipC,GAAGnjC,GAAGD,EAAE5C,KAAKjD,EAAE,CAAC,CAAC,IAAI8F,EAAE6iC,GAAG3oC,EAAE,GAAE,EAAG,KAAK,GAAK,EAAG,EAAG,GAAG6pC,IAA0G,OAAtG7pC,EAAEmjC,oBAAoBr9B,EAAE9F,EAAEspB,IAAIxjB,EAAEqM,QAAQuW,GAAG,IAAI1oB,EAAE0K,SAAS1K,EAAE0P,WAAW1P,GAAGwnC,IAAG,WAAWwB,GAAG/oC,EAAE6F,EAAE5F,EAAEsB,EAAE,IAAUsE,CAAC,CACpUikC,CAAG7pC,EAAED,EAAED,EAAEyB,EAAED,GAAG,OAAOynC,GAAGtnC,EAAE,CAHpL+nC,GAAGxoC,UAAUkF,OAAOojC,GAAGtoC,UAAUkF,OAAO,SAASpG,GAAG,IAAIC,EAAE2B,KAAK6nC,cAAc,GAAG,OAAOxpC,EAAE,MAAMgF,MAAMlF,EAAE,MAAMipC,GAAGhpC,EAAEC,EAAE,KAAK,KAAK,EAAEypC,GAAGxoC,UAAU8oC,QAAQR,GAAGtoC,UAAU8oC,QAAQ,WAAW,IAAIhqC,EAAE4B,KAAK6nC,cAAc,GAAG,OAAOzpC,EAAE,CAAC4B,KAAK6nC,cAAc,KAAK,IAAIxpC,EAAED,EAAEmX,cAAcqwB,IAAG,WAAWwB,GAAG,KAAKhpC,EAAE,KAAK,KAAK,IAAGC,EAAEqpB,IAAI,IAAI,CAAC,EACzTogB,GAAGxoC,UAAU+oC,2BAA2B,SAASjqC,GAAG,GAAGA,EAAE,CAAC,IAAIC,EAAEyV,KAAK1V,EAAE,CAAC2W,UAAU,KAAKpH,OAAOvP,EAAEiX,SAAShX,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAEkW,GAAGhW,QAAQ,IAAIH,GAAGA,EAAEmW,GAAGlW,GAAG+W,SAAS/W,KAAKkW,GAAG8zB,OAAOhqC,EAAE,EAAEF,GAAG,IAAIE,GAAG6W,GAAG/W,EAAE,CAAC,EAEXuV,GAAG,SAASvV,GAAG,OAAOA,EAAEmG,KAAK,KAAK,EAAE,IAAIlG,EAAED,EAAEgQ,UAAU,GAAG/P,EAAEkS,QAAQN,cAAcqF,aAAa,CAAC,IAAIhX,EAAEqU,GAAGtU,EAAEwU,cAAc,IAAIvU,IAAIkV,GAAGnV,EAAI,EAAFC,GAAK+lC,GAAGhmC,EAAE6S,MAAK,KAAO,EAAF+gB,MAAOkO,GAAGjvB,KAAI,IAAI4a,MAAM,CAAC,MAAM,KAAK,GAAG8Z,IAAG,WAAW,IAAIvnC,EAAE2yB,GAAG5yB,EAAE,GAAG,GAAG,OAAOC,EAAE,CAAC,IAAIC,EAAEs5B,KAAIxB,GAAG/3B,EAAED,EAAE,EAAEE,EAAE,CAAC,IAAGipC,GAAGnpC,EAAE,GAAG,EAC/bwV,GAAG,SAASxV,GAAG,GAAG,KAAKA,EAAEmG,IAAI,CAAC,IAAIlG,EAAE2yB,GAAG5yB,EAAE,WAAW,GAAG,OAAOC,EAAa+3B,GAAG/3B,EAAED,EAAE,UAAXw5B,MAAwB2P,GAAGnpC,EAAE,UAAU,CAAC,EAAEyV,GAAG,SAASzV,GAAG,GAAG,KAAKA,EAAEmG,IAAI,CAAC,IAAIlG,EAAEo5B,GAAGr5B,GAAGE,EAAE0yB,GAAG5yB,EAAEC,GAAG,GAAG,OAAOC,EAAa83B,GAAG93B,EAAEF,EAAEC,EAAXu5B,MAAgB2P,GAAGnpC,EAAEC,EAAE,CAAC,EAAEyV,GAAG,WAAW,OAAOL,EAAC,EAAEM,GAAG,SAAS3V,EAAEC,GAAG,IAAIC,EAAEmV,GAAE,IAAI,OAAOA,GAAErV,EAAEC,GAAG,CAAC,QAAQoV,GAAEnV,CAAC,CAAC,EAClSyP,GAAG,SAAS3P,EAAEC,EAAEC,GAAG,OAAOD,GAAG,IAAK,QAAyB,GAAjBuI,EAAGxI,EAAEE,GAAGD,EAAEC,EAAE+F,KAAQ,UAAU/F,EAAEgC,MAAM,MAAMjC,EAAE,CAAC,IAAIC,EAAEF,EAAEE,EAAEwP,YAAYxP,EAAEA,EAAEwP,WAAsF,IAA3ExP,EAAEA,EAAEiqC,iBAAiB,cAAcC,KAAKC,UAAU,GAAGpqC,GAAG,mBAAuBA,EAAE,EAAEA,EAAEC,EAAEE,OAAOH,IAAI,CAAC,IAAIuB,EAAEtB,EAAED,GAAG,GAAGuB,IAAIxB,GAAGwB,EAAE8oC,OAAOtqC,EAAEsqC,KAAK,CAAC,IAAI7oC,EAAEwO,GAAGzO,GAAG,IAAIC,EAAE,MAAMwD,MAAMlF,EAAE,KAAK0H,EAAGjG,GAAGgH,EAAGhH,EAAEC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAK,WAAW+H,GAAGxJ,EAAEE,GAAG,MAAM,IAAK,SAAmB,OAAVD,EAAEC,EAAEyH,QAAeoB,GAAG/I,IAAIE,EAAEohC,SAASrhC,GAAE,GAAI,EAAEoQ,GAAGk3B,GAAGj3B,GAAGk3B,GACpa,IAAI+C,GAAG,CAACC,uBAAsB,EAAGC,OAAO,CAAC16B,GAAGyS,GAAGvS,GAAGC,GAAGE,GAAGm3B,KAAKmD,GAAG,CAACC,wBAAwB3zB,GAAG4zB,WAAW,EAAEC,QAAQ,SAASC,oBAAoB,aAC1IC,GAAG,CAACH,WAAWF,GAAGE,WAAWC,QAAQH,GAAGG,QAAQC,oBAAoBJ,GAAGI,oBAAoBE,eAAeN,GAAGM,eAAeC,kBAAkB,KAAKC,4BAA4B,KAAKC,4BAA4B,KAAKC,cAAc,KAAKC,wBAAwB,KAAKC,wBAAwB,KAAKC,gBAAgB,KAAKC,mBAAmB,KAAKC,eAAe,KAAKC,qBAAqBjoC,EAAG2xB,uBAAuBuW,wBAAwB,SAAS3rC,GAAW,OAAO,QAAfA,EAAEgS,GAAGhS,IAAmB,KAAKA,EAAEgQ,SAAS,EAAE26B,wBAAwBD,GAAGC,yBARjN,WAAc,OAAO,IAAI,EASpUiB,4BAA4B,KAAKC,gBAAgB,KAAKC,aAAa,KAAKC,kBAAkB,KAAKC,gBAAgB,KAAKC,kBAAkB,mCAAmC,GAAG,qBAAqBC,+BAA+B,CAAC,IAAIC,GAAGD,+BAA+B,IAAIC,GAAGC,YAAYD,GAAGE,cAAc,IAAIz4B,GAAGu4B,GAAGG,OAAOvB,IAAIl3B,GAAGs4B,EAAE,CAAC,MAAMnsC,IAAG,CAAC,CAACusC,EAAQ7oC,mDAAmD6mC,GAC/YgC,EAAQC,aAAa,SAASxsC,EAAEC,GAAG,IAAIC,EAAE,EAAEC,UAAUC,aAAQ,IAASD,UAAU,GAAGA,UAAU,GAAG,KAAK,IAAIwpC,GAAG1pC,GAAG,MAAMgF,MAAMlF,EAAE,MAAM,OAbuH,SAAYC,EAAEC,EAAEC,GAAG,IAAIsB,EAAE,EAAErB,UAAUC,aAAQ,IAASD,UAAU,GAAGA,UAAU,GAAG,KAAK,MAAM,CAACmG,SAASxC,EAAGqa,IAAI,MAAM3c,EAAE,KAAK,GAAGA,EAAE8H,SAAStJ,EAAEmX,cAAclX,EAAE4wB,eAAe3wB,EAAE,CAa1RusC,CAAGzsC,EAAEC,EAAE,KAAKC,EAAE,EAAEqsC,EAAQG,WAAW,SAAS1sC,EAAEC,GAAG,IAAI0pC,GAAG3pC,GAAG,MAAMiF,MAAMlF,EAAE,MAAM,IAAIG,GAAE,EAAGsB,EAAE,GAAGC,EAAE6nC,GAA4P,OAAzP,OAAOrpC,QAAG,IAASA,KAAI,IAAKA,EAAE0sC,sBAAsBzsC,GAAE,QAAI,IAASD,EAAE26B,mBAAmBp5B,EAAEvB,EAAE26B,uBAAkB,IAAS36B,EAAEgoC,qBAAqBxmC,EAAExB,EAAEgoC,qBAAqBhoC,EAAE0oC,GAAG3oC,EAAE,GAAE,EAAG,KAAK,EAAKE,EAAE,EAAGsB,EAAEC,GAAGzB,EAAEspB,IAAIrpB,EAAEkS,QAAQuW,GAAG,IAAI1oB,EAAE0K,SAAS1K,EAAE0P,WAAW1P,GAAU,IAAIwpC,GAAGvpC,EAAE,EACrfssC,EAAQK,YAAY,SAAS5sC,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,IAAIA,EAAE0K,SAAS,OAAO1K,EAAE,IAAIC,EAAED,EAAEk7B,gBAAgB,QAAG,IAASj7B,EAAE,CAAC,GAAG,oBAAoBD,EAAEoG,OAAO,MAAMnB,MAAMlF,EAAE,MAAiC,MAA3BC,EAAEiB,OAAO6M,KAAK9N,GAAGqwB,KAAK,KAAWprB,MAAMlF,EAAE,IAAIC,GAAI,CAAqC,OAA5BA,EAAE,QAAVA,EAAEgS,GAAG/R,IAAc,KAAKD,EAAEgQ,SAAkB,EAAEu8B,EAAQM,UAAU,SAAS7sC,GAAG,OAAOwnC,GAAGxnC,EAAE,EAAEusC,EAAQO,QAAQ,SAAS9sC,EAAEC,EAAEC,GAAG,IAAI0pC,GAAG3pC,GAAG,MAAMgF,MAAMlF,EAAE,MAAM,OAAO+pC,GAAG,KAAK9pC,EAAEC,GAAE,EAAGC,EAAE,EAC/YqsC,EAAQQ,YAAY,SAAS/sC,EAAEC,EAAEC,GAAG,IAAIypC,GAAG3pC,GAAG,MAAMiF,MAAMlF,EAAE,MAAM,IAAIyB,EAAE,MAAMtB,GAAGA,EAAE8sC,iBAAiB,KAAKvrC,GAAE,EAAGC,EAAE,GAAGC,EAAE2nC,GAAyO,GAAtO,OAAOppC,QAAG,IAASA,KAAI,IAAKA,EAAEysC,sBAAsBlrC,GAAE,QAAI,IAASvB,EAAE06B,mBAAmBl5B,EAAExB,EAAE06B,uBAAkB,IAAS16B,EAAE+nC,qBAAqBtmC,EAAEzB,EAAE+nC,qBAAqBhoC,EAAE8oC,GAAG9oC,EAAE,KAAKD,EAAE,EAAE,MAAME,EAAEA,EAAE,KAAKuB,EAAE,EAAGC,EAAEC,GAAG3B,EAAEspB,IAAIrpB,EAAEkS,QAAQuW,GAAG1oB,GAAMwB,EAAE,IAAIxB,EAAE,EAAEA,EAAEwB,EAAEpB,OAAOJ,IAA2ByB,GAAhBA,GAAPvB,EAAEsB,EAAExB,IAAOitC,aAAgB/sC,EAAEgtC,SAAS,MAAMjtC,EAAEyoC,gCAAgCzoC,EAAEyoC,gCAAgC,CAACxoC,EAAEuB,GAAGxB,EAAEyoC,gCAAgCv4B,KAAKjQ,EACvhBuB,GAAG,OAAO,IAAIioC,GAAGzpC,EAAE,EAAEssC,EAAQnmC,OAAO,SAASpG,EAAEC,EAAEC,GAAG,IAAI0pC,GAAG3pC,GAAG,MAAMgF,MAAMlF,EAAE,MAAM,OAAO+pC,GAAG,KAAK9pC,EAAEC,GAAE,EAAGC,EAAE,EAAEqsC,EAAQY,uBAAuB,SAASntC,GAAG,IAAI4pC,GAAG5pC,GAAG,MAAMiF,MAAMlF,EAAE,KAAK,QAAOC,EAAEmjC,sBAAqBqE,IAAG,WAAWsC,GAAG,KAAK,KAAK9pC,GAAE,GAAG,WAAWA,EAAEmjC,oBAAoB,KAAKnjC,EAAEspB,IAAI,IAAI,GAAE,KAAG,EAAM,EAAEijB,EAAQa,wBAAwB7F,GAC/UgF,EAAQc,oCAAoC,SAASrtC,EAAEC,EAAEC,EAAEsB,GAAG,IAAIooC,GAAG1pC,GAAG,MAAM+E,MAAMlF,EAAE,MAAM,GAAG,MAAMC,QAAG,IAASA,EAAEk7B,gBAAgB,MAAMj2B,MAAMlF,EAAE,KAAK,OAAO+pC,GAAG9pC,EAAEC,EAAEC,GAAE,EAAGsB,EAAE,EAAE+qC,EAAQ1B,QAAQ,iDC/T7L,IAAI75B,EAAInR,EAAQ,KAEd0sC,EAAQG,WAAa17B,EAAE07B,WACvBH,EAAQQ,YAAc/7B,EAAE+7B,4BCH1B,SAASO,IAEP,GAC4C,qBAAnCpB,gCAC4C,oBAA5CA,+BAA+BoB,SAcxC,IAEEpB,+BAA+BoB,SAASA,EAC1C,CAAE,MAAOC,GAGP5Q,QAAQC,MAAM2Q,EAChB,CACF,CAKED,GACAE,EAAOjB,QAAU,EAAjBiB,wBCzBe9rC,EAAE7B,EAAQ,IAASiG,EAAElC,OAAOC,IAAI,iBAAiB+B,EAAEhC,OAAOC,IAAI,kBAAkBmN,EAAE/P,OAAOC,UAAUC,eAAe2nB,EAAEpnB,EAAEgC,mDAAmDm6B,kBAAkB99B,EAAE,CAACoe,KAAI,EAAG6R,KAAI,EAAGyd,QAAO,EAAGC,UAAS,GAChP,SAAS1c,EAAE9wB,EAAEF,EAAE2B,GAAG,IAAI1B,EAAEuB,EAAE,CAAC,EAAEC,EAAE,KAAKoE,EAAE,KAAiF,IAAI5F,UAAhF,IAAS0B,IAAIF,EAAE,GAAGE,QAAG,IAAS3B,EAAEme,MAAM1c,EAAE,GAAGzB,EAAEme,UAAK,IAASne,EAAEgwB,MAAMnqB,EAAE7F,EAAEgwB,KAAchwB,EAAEgR,EAAE/N,KAAKjD,EAAEC,KAAKF,EAAEoB,eAAelB,KAAKuB,EAAEvB,GAAGD,EAAEC,IAAI,GAAGC,GAAGA,EAAE46B,aAAa,IAAI76B,KAAKD,EAAEE,EAAE46B,kBAAe,IAASt5B,EAAEvB,KAAKuB,EAAEvB,GAAGD,EAAEC,IAAI,MAAM,CAACqG,SAASR,EAAE5D,KAAKhC,EAAEie,IAAI1c,EAAEuuB,IAAInqB,EAAE8qB,MAAMnvB,EAAEyuB,OAAOnH,EAAE3W,QAAQ,CAAoBo6B,EAAQoB,IAAI3c,EAAEub,EAAQqB,KAAK5c,eCD7V,IAAIprB,EAAEhC,OAAOC,IAAI,iBAAiBilB,EAAEllB,OAAOC,IAAI,gBAAgB9D,EAAE6D,OAAOC,IAAI,kBAAkBmtB,EAAEptB,OAAOC,IAAI,qBAAqBotB,EAAErtB,OAAOC,IAAI,kBAAkBklB,EAAEnlB,OAAOC,IAAI,kBAAkBqlB,EAAEtlB,OAAOC,IAAI,iBAAiBtC,EAAEqC,OAAOC,IAAI,qBAAqBslB,EAAEvlB,OAAOC,IAAI,kBAAkBolB,EAAErlB,OAAOC,IAAI,cAAcqtB,EAAEttB,OAAOC,IAAI,cAAcxB,EAAEuB,OAAOe,SACzW,IAAImO,EAAE,CAACmoB,UAAU,WAAW,OAAM,CAAE,EAAEI,mBAAmB,WAAW,EAAED,oBAAoB,WAAW,EAAED,gBAAgB,WAAW,GAAG9lB,EAAEpU,OAAO8D,OAAOojB,EAAE,CAAC,EAAE,SAASgE,EAAEnsB,EAAEC,EAAEwB,GAAGG,KAAK+uB,MAAM3wB,EAAE4B,KAAK0wB,QAAQryB,EAAE2B,KAAKuuB,KAAKhI,EAAEvmB,KAAKg6B,QAAQn6B,GAAGqR,CAAC,CACwI,SAASsW,IAAI,CAAyB,SAASgD,EAAEpsB,EAAEC,EAAEwB,GAAGG,KAAK+uB,MAAM3wB,EAAE4B,KAAK0wB,QAAQryB,EAAE2B,KAAKuuB,KAAKhI,EAAEvmB,KAAKg6B,QAAQn6B,GAAGqR,CAAC,CADxPqZ,EAAEjrB,UAAUqnC,iBAAiB,CAAC,EACpQpc,EAAEjrB,UAAU2sC,SAAS,SAAS7tC,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,oBAAoBA,GAAG,MAAMA,EAAE,MAAMiF,MAAM,yHAAyHrD,KAAKg6B,QAAQT,gBAAgBv5B,KAAK5B,EAAEC,EAAE,WAAW,EAAEksB,EAAEjrB,UAAU4sC,YAAY,SAAS9tC,GAAG4B,KAAKg6B,QAAQP,mBAAmBz5B,KAAK5B,EAAE,cAAc,EAAgBopB,EAAEloB,UAAUirB,EAAEjrB,UAAsF,IAAIorB,EAAEF,EAAElrB,UAAU,IAAIkoB,EACrfkD,EAAErlB,YAAYmlB,EAAE/W,EAAEiX,EAAEH,EAAEjrB,WAAWorB,EAAEkP,sBAAqB,EAAG,IAAI9M,EAAE7lB,MAAMC,QAAQkgB,EAAE/nB,OAAOC,UAAUC,eAAe0yB,EAAE,CAAC1hB,QAAQ,MAAM0iB,EAAE,CAAC1W,KAAI,EAAG6R,KAAI,EAAGyd,QAAO,EAAGC,UAAS,GACtK,SAASnY,EAAEv1B,EAAEC,EAAEwB,GAAG,IAAID,EAAEtB,EAAE,CAAC,EAAE4F,EAAE,KAAKD,EAAE,KAAK,GAAG,MAAM5F,EAAE,IAAIuB,UAAK,IAASvB,EAAE+vB,MAAMnqB,EAAE5F,EAAE+vB,UAAK,IAAS/vB,EAAEke,MAAMrY,EAAE,GAAG7F,EAAEke,KAAKle,EAAE+oB,EAAE/lB,KAAKhD,EAAEuB,KAAKqzB,EAAE1zB,eAAeK,KAAKtB,EAAEsB,GAAGvB,EAAEuB,IAAI,IAAIG,EAAExB,UAAUC,OAAO,EAAE,GAAG,IAAIuB,EAAEzB,EAAEoJ,SAAS7H,OAAO,GAAG,EAAEE,EAAE,CAAC,IAAI,IAAID,EAAEmH,MAAMlH,GAAGqP,EAAE,EAAEA,EAAErP,EAAEqP,IAAItP,EAAEsP,GAAG7Q,UAAU6Q,EAAE,GAAG9Q,EAAEoJ,SAAS5H,CAAC,CAAC,GAAG1B,GAAGA,EAAE86B,aAAa,IAAIt5B,KAAKG,EAAE3B,EAAE86B,kBAAe,IAAS56B,EAAEsB,KAAKtB,EAAEsB,GAAGG,EAAEH,IAAI,MAAM,CAAC8E,SAASV,EAAE1D,KAAKlC,EAAEme,IAAIrY,EAAEkqB,IAAInqB,EAAE8qB,MAAMzwB,EAAE+vB,OAAO4D,EAAE1hB,QAAQ,CAChV,SAASsjB,EAAEz1B,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEsG,WAAWV,CAAC,CAAoG,IAAIkwB,EAAE,OAAO,SAAS4B,EAAE13B,EAAEC,GAAG,MAAM,kBAAkBD,GAAG,OAAOA,GAAG,MAAMA,EAAEme,IAA7K,SAAgBne,GAAG,IAAIC,EAAE,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAID,EAAEuD,QAAQ,SAAQ,SAASvD,GAAG,OAAOC,EAAED,EAAE,GAAE,CAA+E+tC,CAAO,GAAG/tC,EAAEme,KAAKle,EAAEiK,SAAS,GAAG,CAC/W,SAASsvB,EAAEx5B,EAAEC,EAAEwB,EAAED,EAAEtB,GAAG,IAAI4F,SAAS9F,EAAK,cAAc8F,GAAG,YAAYA,IAAE9F,EAAE,MAAK,IAAI6F,GAAE,EAAG,GAAG,OAAO7F,EAAE6F,GAAE,OAAQ,OAAOC,GAAG,IAAK,SAAS,IAAK,SAASD,GAAE,EAAG,MAAM,IAAK,SAAS,OAAO7F,EAAEsG,UAAU,KAAKV,EAAE,KAAKkjB,EAAEjjB,GAAE,GAAI,GAAGA,EAAE,OAAW3F,EAAEA,EAAN2F,EAAE7F,GAASA,EAAE,KAAKwB,EAAE,IAAIk2B,EAAE7xB,EAAE,GAAGrE,EAAEktB,EAAExuB,IAAIuB,EAAE,GAAG,MAAMzB,IAAIyB,EAAEzB,EAAEuD,QAAQuyB,EAAE,OAAO,KAAK0D,EAAEt5B,EAAED,EAAEwB,EAAE,IAAG,SAASzB,GAAG,OAAOA,CAAC,KAAI,MAAME,IAAIu1B,EAAEv1B,KAAKA,EADnW,SAAWF,EAAEC,GAAG,MAAM,CAACqG,SAASV,EAAE1D,KAAKlC,EAAEkC,KAAKic,IAAIle,EAAE+vB,IAAIhwB,EAAEgwB,IAAIW,MAAM3wB,EAAE2wB,MAAMV,OAAOjwB,EAAEiwB,OAAO,CACyQuF,CAAEt1B,EAAEuB,IAAIvB,EAAEie,KAAKtY,GAAGA,EAAEsY,MAAMje,EAAEie,IAAI,IAAI,GAAGje,EAAEie,KAAK5a,QAAQuyB,EAAE,OAAO,KAAK91B,IAAIC,EAAEkQ,KAAKjQ,IAAI,EAAyB,GAAvB2F,EAAE,EAAErE,EAAE,KAAKA,EAAE,IAAIA,EAAE,IAAOktB,EAAE1uB,GAAG,IAAI,IAAI2B,EAAE,EAAEA,EAAE3B,EAAEI,OAAOuB,IAAI,CAC/e,IAAID,EAAEF,EAAEk2B,EADwe5xB,EACrf9F,EAAE2B,GAAeA,GAAGkE,GAAG2zB,EAAE1zB,EAAE7F,EAAEwB,EAAEC,EAAExB,EAAE,MAAM,GAAGwB,EAPsU,SAAW1B,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAsC,oBAAjCA,EAAEqC,GAAGrC,EAAEqC,IAAIrC,EAAE,eAA0CA,EAAE,IAAI,CAO5b8E,CAAE9E,GAAG,oBAAoB0B,EAAE,IAAI1B,EAAE0B,EAAEuB,KAAKjD,GAAG2B,EAAE,IAAImE,EAAE9F,EAAEmxB,QAAQC,MAA6BvrB,GAAG2zB,EAA1B1zB,EAAEA,EAAE6B,MAA0B1H,EAAEwB,EAAtBC,EAAEF,EAAEk2B,EAAE5xB,EAAEnE,KAAkBzB,QAAQ,GAAG,WAAW4F,EAAE,MAAM7F,EAAEme,OAAOpe,GAAGiF,MAAM,mDAAmD,oBAAoBhF,EAAE,qBAAqBgB,OAAO6M,KAAK9N,GAAGqwB,KAAK,MAAM,IAAIpwB,GAAG,6EAA6E,OAAO4F,CAAC,CACzZ,SAASq7B,EAAElhC,EAAEC,EAAEwB,GAAG,GAAG,MAAMzB,EAAE,OAAOA,EAAE,IAAIwB,EAAE,GAAGtB,EAAE,EAAmD,OAAjDs5B,EAAEx5B,EAAEwB,EAAE,GAAG,IAAG,SAASxB,GAAG,OAAOC,EAAEgD,KAAKxB,EAAEzB,EAAEE,IAAI,IAAUsB,CAAC,CAAC,SAASsgC,EAAE9hC,GAAG,IAAI,IAAIA,EAAEguC,QAAQ,CAAC,IAAI/tC,EAAED,EAAEiuC,SAAQhuC,EAAEA,KAAMmrB,MAAK,SAASnrB,GAAM,IAAID,EAAEguC,UAAU,IAAIhuC,EAAEguC,UAAQhuC,EAAEguC,QAAQ,EAAEhuC,EAAEiuC,QAAQhuC,EAAC,IAAE,SAASA,GAAM,IAAID,EAAEguC,UAAU,IAAIhuC,EAAEguC,UAAQhuC,EAAEguC,QAAQ,EAAEhuC,EAAEiuC,QAAQhuC,EAAC,KAAI,IAAID,EAAEguC,UAAUhuC,EAAEguC,QAAQ,EAAEhuC,EAAEiuC,QAAQhuC,EAAE,CAAC,GAAG,IAAID,EAAEguC,QAAQ,OAAOhuC,EAAEiuC,QAAQC,QAAQ,MAAMluC,EAAEiuC,OAAQ,CAC5Z,IAAI9L,EAAE,CAAChwB,QAAQ,MAAMmwB,EAAE,CAACtqB,WAAW,MAAMwqB,EAAE,CAACpN,uBAAuB+M,EAAEtqB,wBAAwByqB,EAAEzE,kBAAkBhK,GAAG,SAASwP,IAAI,MAAMp+B,MAAM,2DAA4D,CACzMsnC,EAAQ4B,SAAS,CAACC,IAAIlN,EAAE3+B,QAAQ,SAASvC,EAAEC,EAAEwB,GAAGy/B,EAAElhC,GAAE,WAAWC,EAAE8Q,MAAMnP,KAAKzB,UAAU,GAAEsB,EAAE,EAAE4sC,MAAM,SAASruC,GAAG,IAAIC,EAAE,EAAuB,OAArBihC,EAAElhC,GAAE,WAAWC,GAAG,IAAUA,CAAC,EAAEquC,QAAQ,SAAStuC,GAAG,OAAOkhC,EAAElhC,GAAE,SAASA,GAAG,OAAOA,CAAC,KAAI,EAAE,EAAEuuC,KAAK,SAASvuC,GAAG,IAAIy1B,EAAEz1B,GAAG,MAAMiF,MAAM,yEAAyE,OAAOjF,CAAC,GAAGusC,EAAQiC,UAAUriB,EAAEogB,EAAQkC,SAAS1uC,EAAEwsC,EAAQmC,SAASzd,EAAEsb,EAAQoC,cAAcviB,EAAEmgB,EAAQqC,WAAW5d,EAAEub,EAAQsC,SAAS1lB,EAClcojB,EAAQ7oC,mDAAmD8+B,EAAE+J,EAAQuC,IAAIzL,EACzEkJ,EAAQwC,aAAa,SAAS/uC,EAAEC,EAAEwB,GAAG,GAAG,OAAOzB,QAAG,IAASA,EAAE,MAAMiF,MAAM,iFAAiFjF,EAAE,KAAK,IAAIwB,EAAE6T,EAAE,CAAC,EAAErV,EAAE2wB,OAAOzwB,EAAEF,EAAEme,IAAIrY,EAAE9F,EAAEgwB,IAAInqB,EAAE7F,EAAEiwB,OAAO,GAAG,MAAMhwB,EAAE,CAAoE,QAAnE,IAASA,EAAE+vB,MAAMlqB,EAAE7F,EAAE+vB,IAAInqB,EAAEguB,EAAE1hB,cAAS,IAASlS,EAAEke,MAAMje,EAAE,GAAGD,EAAEke,KAAQne,EAAEkC,MAAMlC,EAAEkC,KAAK44B,aAAa,IAAIn5B,EAAE3B,EAAEkC,KAAK44B,aAAa,IAAIp5B,KAAKzB,EAAE+oB,EAAE/lB,KAAKhD,EAAEyB,KAAKmzB,EAAE1zB,eAAeO,KAAKF,EAAEE,QAAG,IAASzB,EAAEyB,SAAI,IAASC,EAAEA,EAAED,GAAGzB,EAAEyB,GAAG,CAAC,IAAIA,EAAEvB,UAAUC,OAAO,EAAE,GAAG,IAAIsB,EAAEF,EAAE8H,SAAS7H,OAAO,GAAG,EAAEC,EAAE,CAACC,EAAEkH,MAAMnH,GACrf,IAAI,IAAIsP,EAAE,EAAEA,EAAEtP,EAAEsP,IAAIrP,EAAEqP,GAAG7Q,UAAU6Q,EAAE,GAAGxP,EAAE8H,SAAS3H,CAAC,CAAC,MAAM,CAAC2E,SAASV,EAAE1D,KAAKlC,EAAEkC,KAAKic,IAAIje,EAAE8vB,IAAIlqB,EAAE6qB,MAAMnvB,EAAEyuB,OAAOpqB,EAAE,EAAE0mC,EAAQyC,cAAc,SAAShvC,GAAqK,OAAlKA,EAAE,CAACsG,SAAS4iB,EAAE2I,cAAc7xB,EAAEivC,eAAejvC,EAAEkvC,aAAa,EAAEC,SAAS,KAAKC,SAAS,KAAKC,cAAc,KAAKC,YAAY,OAAQH,SAAS,CAAC7oC,SAASyiB,EAAExiB,SAASvG,GAAUA,EAAEovC,SAASpvC,CAAC,EAAEusC,EAAQxrC,cAAcw0B,EAAEgX,EAAQgD,cAAc,SAASvvC,GAAG,IAAIC,EAAEs1B,EAAE5M,KAAK,KAAK3oB,GAAY,OAATC,EAAEiC,KAAKlC,EAASC,CAAC,EAAEssC,EAAQiD,UAAU,WAAW,MAAM,CAACr9B,QAAQ,KAAK,EAC9do6B,EAAQkD,WAAW,SAASzvC,GAAG,MAAM,CAACsG,SAAS/E,EAAE6E,OAAOpG,EAAE,EAAEusC,EAAQmD,eAAeja,EAAE8W,EAAQoD,KAAK,SAAS3vC,GAAG,MAAM,CAACsG,SAAS4qB,EAAE1qB,SAAS,CAACwnC,SAAS,EAAEC,QAAQjuC,GAAGyG,MAAMq7B,EAAE,EAAEyK,EAAQqD,KAAK,SAAS5vC,EAAEC,GAAG,MAAM,CAACqG,SAAS2iB,EAAE/mB,KAAKlC,EAAEm+B,aAAQ,IAASl+B,EAAE,KAAKA,EAAE,EAAEssC,EAAQsD,gBAAgB,SAAS7vC,GAAG,IAAIC,EAAEqiC,EAAEtqB,WAAWsqB,EAAEtqB,WAAW,CAAC,EAAE,IAAIhY,GAAG,CAAC,QAAQsiC,EAAEtqB,WAAW/X,CAAC,CAAC,EAAEssC,EAAQuD,aAAazM,EAAEkJ,EAAQ5S,YAAY,SAAS35B,EAAEC,GAAG,OAAOkiC,EAAEhwB,QAAQwnB,YAAY35B,EAAEC,EAAE,EAAEssC,EAAQ3S,WAAW,SAAS55B,GAAG,OAAOmiC,EAAEhwB,QAAQynB,WAAW55B,EAAE,EAC3fusC,EAAQlS,cAAc,WAAW,EAAEkS,EAAQjS,iBAAiB,SAASt6B,GAAG,OAAOmiC,EAAEhwB,QAAQmoB,iBAAiBt6B,EAAE,EAAEusC,EAAQ1S,UAAU,SAAS75B,EAAEC,GAAG,OAAOkiC,EAAEhwB,QAAQ0nB,UAAU75B,EAAEC,EAAE,EAAEssC,EAAQ7R,MAAM,WAAW,OAAOyH,EAAEhwB,QAAQuoB,OAAO,EAAE6R,EAAQzS,oBAAoB,SAAS95B,EAAEC,EAAEwB,GAAG,OAAO0gC,EAAEhwB,QAAQ2nB,oBAAoB95B,EAAEC,EAAEwB,EAAE,EAAE8qC,EAAQxS,mBAAmB,SAAS/5B,EAAEC,GAAG,OAAOkiC,EAAEhwB,QAAQ4nB,mBAAmB/5B,EAAEC,EAAE,EAAEssC,EAAQvS,gBAAgB,SAASh6B,EAAEC,GAAG,OAAOkiC,EAAEhwB,QAAQ6nB,gBAAgBh6B,EAAEC,EAAE,EACzdssC,EAAQtS,QAAQ,SAASj6B,EAAEC,GAAG,OAAOkiC,EAAEhwB,QAAQ8nB,QAAQj6B,EAAEC,EAAE,EAAEssC,EAAQrS,WAAW,SAASl6B,EAAEC,EAAEwB,GAAG,OAAO0gC,EAAEhwB,QAAQ+nB,WAAWl6B,EAAEC,EAAEwB,EAAE,EAAE8qC,EAAQpS,OAAO,SAASn6B,GAAG,OAAOmiC,EAAEhwB,QAAQgoB,OAAOn6B,EAAE,EAAEusC,EAAQnS,SAAS,SAASp6B,GAAG,OAAOmiC,EAAEhwB,QAAQioB,SAASp6B,EAAE,EAAEusC,EAAQ9R,qBAAqB,SAASz6B,EAAEC,EAAEwB,GAAG,OAAO0gC,EAAEhwB,QAAQsoB,qBAAqBz6B,EAAEC,EAAEwB,EAAE,EAAE8qC,EAAQhS,cAAc,WAAW,OAAO4H,EAAEhwB,QAAQooB,eAAe,EAAEgS,EAAQ1B,QAAQ,uBCtBla2C,EAAOjB,QAAU,EAAjBiB,oBCAAA,EAAOjB,QAAU,EAAjBiB,kBCMW,SAAS9rC,EAAE1B,EAAEC,GAAG,IAAIC,EAAEF,EAAEI,OAAOJ,EAAEmQ,KAAKlQ,GAAGD,EAAE,KAAK,EAAEE,GAAG,CAAC,IAAIsB,EAAEtB,EAAE,IAAI,EAAEuB,EAAEzB,EAAEwB,GAAG,KAAG,EAAEG,EAAEF,EAAExB,IAA0B,MAAMD,EAA7BA,EAAEwB,GAAGvB,EAAED,EAAEE,GAAGuB,EAAEvB,EAAEsB,CAAc,CAAC,CAAC,SAASqE,EAAE7F,GAAG,OAAO,IAAIA,EAAEI,OAAO,KAAKJ,EAAE,EAAE,CAAC,SAAS8F,EAAE9F,GAAG,GAAG,IAAIA,EAAEI,OAAO,OAAO,KAAK,IAAIH,EAAED,EAAE,GAAGE,EAAEF,EAAE+vC,MAAM,GAAG7vC,IAAID,EAAE,CAACD,EAAE,GAAGE,EAAEF,EAAE,IAAI,IAAIwB,EAAE,EAAEC,EAAEzB,EAAEI,OAAO+oB,EAAE1nB,IAAI,EAAED,EAAE2nB,GAAG,CAAC,IAAInY,EAAE,GAAGxP,EAAE,GAAG,EAAE6T,EAAErV,EAAEgR,GAAG8X,EAAE9X,EAAE,EAAEiY,EAAEjpB,EAAE8oB,GAAG,GAAG,EAAEnnB,EAAE0T,EAAEnV,GAAG4oB,EAAErnB,GAAG,EAAEE,EAAEsnB,EAAE5T,IAAIrV,EAAEwB,GAAGynB,EAAEjpB,EAAE8oB,GAAG5oB,EAAEsB,EAAEsnB,IAAI9oB,EAAEwB,GAAG6T,EAAErV,EAAEgR,GAAG9Q,EAAEsB,EAAEwP,OAAQ,MAAG8X,EAAErnB,GAAG,EAAEE,EAAEsnB,EAAE/oB,IAA0B,MAAMF,EAA7BA,EAAEwB,GAAGynB,EAAEjpB,EAAE8oB,GAAG5oB,EAAEsB,EAAEsnB,CAAc,EAAC,CAAC,OAAO7oB,CAAC,CAC3c,SAAS0B,EAAE3B,EAAEC,GAAG,IAAIC,EAAEF,EAAEgwC,UAAU/vC,EAAE+vC,UAAU,OAAO,IAAI9vC,EAAEA,EAAEF,EAAEoY,GAAGnY,EAAEmY,EAAE,CAAC,GAAG,kBAAkB63B,aAAa,oBAAoBA,YAAY31B,IAAI,CAAC,IAAI1U,EAAEqqC,YAAY1D,EAAQx5B,aAAa,WAAW,OAAOnN,EAAE0U,KAAK,CAAC,KAAK,CAAC,IAAIva,EAAEsa,KAAK2W,EAAEjxB,EAAEua,MAAMiyB,EAAQx5B,aAAa,WAAW,OAAOhT,EAAEua,MAAM0W,CAAC,CAAC,CAAC,IAAIC,EAAE,GAAGlI,EAAE,GAAGG,EAAE,EAAE3nB,EAAE,KAAK2vB,EAAE,EAAE7uB,GAAE,EAAGyC,GAAE,EAAGgO,GAAE,EAAGqV,EAAE,oBAAoByC,WAAWA,WAAW,KAAKuB,EAAE,oBAAoBrB,aAAaA,aAAa,KAAK1B,EAAE,qBAAqB8mB,aAAaA,aAAa,KACnT,SAAS9jB,EAAEpsB,GAAG,IAAI,IAAIC,EAAE4F,EAAEkjB,GAAG,OAAO9oB,GAAG,CAAC,GAAG,OAAOA,EAAE0zB,SAAS7tB,EAAEijB,OAAQ,MAAG9oB,EAAEkwC,WAAWnwC,GAAgD,MAA9C8F,EAAEijB,GAAG9oB,EAAE+vC,UAAU/vC,EAAEmwC,eAAe1uC,EAAEuvB,EAAEhxB,EAAa,CAACA,EAAE4F,EAAEkjB,EAAE,CAAC,CAAC,SAASuD,EAAEtsB,GAAa,GAAV8S,GAAE,EAAGsZ,EAAEpsB,IAAO8E,EAAE,GAAG,OAAOe,EAAEorB,GAAGnsB,GAAE,EAAG4pB,EAAE1F,OAAO,CAAC,IAAI/oB,EAAE4F,EAAEkjB,GAAG,OAAO9oB,GAAG4zB,EAAEvH,EAAErsB,EAAEkwC,UAAUnwC,EAAE,CAAC,CACra,SAASgpB,EAAEhpB,EAAEC,GAAG6E,GAAE,EAAGgO,IAAIA,GAAE,EAAGqZ,EAAE0I,GAAGA,GAAG,GAAGxyB,GAAE,EAAG,IAAInC,EAAEgxB,EAAE,IAAS,IAAL9E,EAAEnsB,GAAOsB,EAAEsE,EAAEorB,GAAG,OAAO1vB,MAAMA,EAAE6uC,eAAenwC,IAAID,IAAIu1B,MAAM,CAAC,IAAI/zB,EAAED,EAAEoyB,SAAS,GAAG,oBAAoBnyB,EAAE,CAACD,EAAEoyB,SAAS,KAAKzC,EAAE3vB,EAAE8uC,cAAc,IAAI5uC,EAAED,EAAED,EAAE6uC,gBAAgBnwC,GAAGA,EAAEssC,EAAQx5B,eAAe,oBAAoBtR,EAAEF,EAAEoyB,SAASlyB,EAAEF,IAAIsE,EAAEorB,IAAInrB,EAAEmrB,GAAG7E,EAAEnsB,EAAE,MAAM6F,EAAEmrB,GAAG1vB,EAAEsE,EAAEorB,EAAE,CAAC,GAAG,OAAO1vB,EAAE,IAAI4nB,GAAE,MAAO,CAAC,IAAInY,EAAEnL,EAAEkjB,GAAG,OAAO/X,GAAG6iB,EAAEvH,EAAEtb,EAAEm/B,UAAUlwC,GAAGkpB,GAAE,CAAE,CAAC,OAAOA,CAAC,CAAC,QAAQ5nB,EAAE,KAAK2vB,EAAEhxB,EAAEmC,GAAE,CAAE,CAAC,CAD1a,qBAAqBiuC,gBAAW,IAASA,UAAUC,iBAAY,IAASD,UAAUC,WAAWC,gBAAgBF,UAAUC,WAAWC,eAAe7nB,KAAK2nB,UAAUC,YAC2Q,IACzPrP,EAD6P1L,GAAE,EAAGC,EAAE,KAAKZ,GAAG,EAAEiB,EAAE,EAAE4B,GAAG,EACvc,SAASnC,IAAI,QAAOgX,EAAQx5B,eAAe2kB,EAAE5B,EAAO,CAAC,SAAS0D,IAAI,GAAG,OAAO/D,EAAE,CAAC,IAAIz1B,EAAEusC,EAAQx5B,eAAe2kB,EAAE13B,EAAE,IAAIC,GAAE,EAAG,IAAIA,EAAEw1B,GAAE,EAAGz1B,EAAE,CAAC,QAAQC,EAAEihC,KAAK1L,GAAE,EAAGC,EAAE,KAAK,CAAC,MAAMD,GAAE,CAAE,CAAO,GAAG,oBAAoBpM,EAAE8X,EAAE,WAAW9X,EAAEoQ,EAAE,OAAO,GAAG,qBAAqBiX,eAAe,CAAC,IAAI3O,EAAE,IAAI2O,eAAetO,EAAEL,EAAE4O,MAAM5O,EAAE6O,MAAMC,UAAUpX,EAAE0H,EAAE,WAAWiB,EAAE0O,YAAY,KAAK,CAAC,MAAM3P,EAAE,WAAW/Y,EAAEqR,EAAE,EAAE,EAAE,SAAS9K,EAAE1uB,GAAGy1B,EAAEz1B,EAAEw1B,IAAIA,GAAE,EAAG0L,IAAI,CAAC,SAASrN,EAAE7zB,EAAEC,GAAG40B,EAAE1M,GAAE,WAAWnoB,EAAEusC,EAAQx5B,eAAe,GAAE9S,EAAE,CAC5dssC,EAAQ54B,sBAAsB,EAAE44B,EAAQp5B,2BAA2B,EAAEo5B,EAAQ94B,qBAAqB,EAAE84B,EAAQh5B,wBAAwB,EAAEg5B,EAAQuE,mBAAmB,KAAKvE,EAAQl5B,8BAA8B,EAAEk5B,EAAQ95B,wBAAwB,SAASzS,GAAGA,EAAE2zB,SAAS,IAAI,EAAE4Y,EAAQwE,2BAA2B,WAAWjsC,GAAGzC,IAAIyC,GAAE,EAAG4pB,EAAE1F,GAAG,EAC1UujB,EAAQyE,wBAAwB,SAAShxC,GAAG,EAAEA,GAAG,IAAIA,EAAE28B,QAAQC,MAAM,mHAAmH9G,EAAE,EAAE91B,EAAE+T,KAAKk9B,MAAM,IAAIjxC,GAAG,CAAC,EAAEusC,EAAQt5B,iCAAiC,WAAW,OAAOie,CAAC,EAAEqb,EAAQ2E,8BAA8B,WAAW,OAAOrrC,EAAEorB,EAAE,EAAEsb,EAAQ4E,cAAc,SAASnxC,GAAG,OAAOkxB,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAIjxB,EAAE,EAAE,MAAM,QAAQA,EAAEixB,EAAE,IAAIhxB,EAAEgxB,EAAEA,EAAEjxB,EAAE,IAAI,OAAOD,GAAG,CAAC,QAAQkxB,EAAEhxB,CAAC,CAAC,EAAEqsC,EAAQ6E,wBAAwB,WAAW,EAC9f7E,EAAQ15B,sBAAsB,WAAW,EAAE05B,EAAQ8E,yBAAyB,SAASrxC,EAAEC,GAAG,OAAOD,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,QAAQA,EAAE,EAAE,IAAIE,EAAEgxB,EAAEA,EAAElxB,EAAE,IAAI,OAAOC,GAAG,CAAC,QAAQixB,EAAEhxB,CAAC,CAAC,EAChMqsC,EAAQh6B,0BAA0B,SAASvS,EAAEC,EAAEC,GAAG,IAAIsB,EAAE+qC,EAAQx5B,eAA8F,OAA/E,kBAAkB7S,GAAG,OAAOA,EAAaA,EAAE,kBAAZA,EAAEA,EAAEoxC,QAA6B,EAAEpxC,EAAEsB,EAAEtB,EAAEsB,EAAGtB,EAAEsB,EAASxB,GAAG,KAAK,EAAE,IAAIyB,GAAG,EAAE,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,KAAK,EAAEA,EAAE,WAAW,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,QAAQA,EAAE,IAAmN,OAAzMzB,EAAE,CAACoY,GAAG8Q,IAAIyK,SAAS1zB,EAAEowC,cAAcrwC,EAAEmwC,UAAUjwC,EAAEkwC,eAAvD3uC,EAAEvB,EAAEuB,EAAoEuuC,WAAW,GAAG9vC,EAAEsB,GAAGxB,EAAEgwC,UAAU9vC,EAAEwB,EAAEqnB,EAAE/oB,GAAG,OAAO6F,EAAEorB,IAAIjxB,IAAI6F,EAAEkjB,KAAKjW,GAAGqZ,EAAE0I,GAAGA,GAAG,GAAG/hB,GAAE,EAAG+gB,EAAEvH,EAAEpsB,EAAEsB,MAAMxB,EAAEgwC,UAAUvuC,EAAEC,EAAEuvB,EAAEjxB,GAAG8E,GAAGzC,IAAIyC,GAAE,EAAG4pB,EAAE1F,KAAYhpB,CAAC,EACneusC,EAAQ55B,qBAAqB4iB,EAAEgX,EAAQgF,sBAAsB,SAASvxC,GAAG,IAAIC,EAAEixB,EAAE,OAAO,WAAW,IAAIhxB,EAAEgxB,EAAEA,EAAEjxB,EAAE,IAAI,OAAOD,EAAE+Q,MAAMnP,KAAKzB,UAAU,CAAC,QAAQ+wB,EAAEhxB,CAAC,CAAC,CAAC,iBCf7JstC,EAAOjB,QAAU,EAAjBiB,OCFEgE,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAapF,QAGrB,IAAIiB,EAASgE,EAAyBE,GAAY,CAGjDnF,QAAS,CAAC,GAOX,OAHAsF,EAAoBH,GAAUlE,EAAQA,EAAOjB,QAASkF,GAG/CjE,EAAOjB,OACf,OCtBA,IACIuF,EADAC,EAAW9wC,OAAO+wC,eAAkBC,GAAShxC,OAAO+wC,eAAeC,GAASA,GAASA,EAAa,UAQtGR,EAAoB1oB,EAAI,SAASphB,EAAO2nB,GAEvC,GADU,EAAPA,IAAU3nB,EAAQ/F,KAAK+F,IAChB,EAAP2nB,EAAU,OAAO3nB,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP2nB,GAAa3nB,EAAMuqC,WAAY,OAAOvqC,EAC1C,GAAW,GAAP2nB,GAAoC,oBAAf3nB,EAAMyjB,KAAqB,OAAOzjB,CAC5D,CACA,IAAIwqC,EAAKlxC,OAAOk3B,OAAO,MACvBsZ,EAAoBxgB,EAAEkhB,GACtB,IAAIC,EAAM,CAAC,EACXN,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAI5/B,EAAiB,EAAPmd,GAAY3nB,EAAyB,iBAAXwK,KAAyB2/B,EAAelkC,QAAQuE,GAAUA,EAAU4/B,EAAS5/B,GACxHlR,OAAOoxC,oBAAoBlgC,GAAS5P,SAAS4b,GAASi0B,EAAIj0B,GAAO,IAAOxW,EAAMwW,KAI/E,OAFAi0B,EAAa,QAAI,IAAM,EACvBX,EAAoBjwC,EAAE2wC,EAAIC,GACnBD,CACR,MCxBAV,EAAoBjwC,EAAI,CAAC+qC,EAAS+F,KACjC,IAAI,IAAIn0B,KAAOm0B,EACXb,EAAoBc,EAAED,EAAYn0B,KAASszB,EAAoBc,EAAEhG,EAASpuB,IAC5Eld,OAAOuE,eAAe+mC,EAASpuB,EAAK,CAAE/W,YAAY,EAAMF,IAAKorC,EAAWn0B,IAE1E,ECNDszB,EAAoBc,EAAI,CAACN,EAAKO,IAAUvxC,OAAOC,UAAUC,eAAe8B,KAAKgvC,EAAKO,GCClFf,EAAoBxgB,EAAKsb,IACH,qBAAX3oC,QAA0BA,OAAO6uC,aAC1CxxC,OAAOuE,eAAe+mC,EAAS3oC,OAAO6uC,YAAa,CAAE9qC,MAAO,WAE7D1G,OAAOuE,eAAe+mC,EAAS,aAAc,CAAE5kC,OAAO,GAAO,ECL9D8pC,EAAoB1xC,EAAI,4BCOZ2yC,uRAAZ,SAAYA,GAQVA,EAAA,UAOAA,EAAA,YAMAA,EAAA,iBACD,CAtBD,CAAYA,IAAAA,EAsBX,KAqKD,MAAMC,EAAoB,WAySV,SAAAC,EAAUjrC,EAAY40B,GACpC,IAAc,IAAV50B,GAA6B,OAAVA,GAAmC,qBAAVA,EAC9C,MAAM,IAAI1C,MAAMs3B,EAEpB,CAEgB,SAAAsW,EAAQC,EAAWvW,GACjC,IAAKuW,EAAM,CAEc,qBAAZnW,SAAyBA,QAAQoW,KAAKxW,GAEjD,IAME,MAAM,IAAIt3B,MAAMs3B,EAEjB,CAAC,MAAO96B,GAAI,CACd,CACH,CASA,SAASuxC,EAAgBz0B,EAAoBiS,GAC3C,MAAO,CACLyiB,IAAK10B,EAASod,MACdxd,IAAKI,EAASJ,IACd+0B,IAAK1iB,EAET,CAKM,SAAU2iB,EACdhhC,EACAihC,EACAzX,EACAxd,GAcA,YAfA,IAAAwd,IAAAA,EAAa,MAGD0X,EAAA,CACVC,SAA6B,kBAAZnhC,EAAuBA,EAAUA,EAAQmhC,SAC1D9xB,OAAQ,GACR+xB,KAAM,IACY,kBAAPH,EAAkBI,EAAUJ,GAAMA,EAAE,CAC/CzX,QAKAxd,IAAMi1B,GAAOA,EAAgBj1B,KAAQA,GAjChCpK,KAAK0U,SAASve,SAAS,IAAIupC,OAAO,EAAG,IAoC9C,CAKgB,SAAAC,EAAUC,GAIV,IAJW,SACzBL,EAAW,IAAG,OACd9xB,EAAS,GAAE,KACX+xB,EAAO,IACOI,EAKd,OAJInyB,GAAqB,MAAXA,IACZ8xB,GAAiC,MAArB9xB,EAAOzT,OAAO,GAAayT,EAAS,IAAMA,GACpD+xB,GAAiB,MAATA,IACVD,GAA+B,MAAnBC,EAAKxlC,OAAO,GAAawlC,EAAO,IAAMA,GAC7CD,CACT,CAKM,SAAUE,EAAUI,GACxB,IAAIC,EAA4B,CAAC,EAEjC,GAAID,EAAM,CACR,IAAIE,EAAYF,EAAKhmC,QAAQ,KACzBkmC,GAAa,IACfD,EAAWN,KAAOK,EAAKH,OAAOK,GAC9BF,EAAOA,EAAKH,OAAO,EAAGK,IAGxB,IAAIC,EAAcH,EAAKhmC,QAAQ,KAC3BmmC,GAAe,IACjBF,EAAWryB,OAASoyB,EAAKH,OAAOM,GAChCH,EAAOA,EAAKH,OAAO,EAAGM,IAGpBH,IACFC,EAAWP,SAAWM,EAEzB,CAED,OAAOC,CACT,CASA,SAASG,EACPC,EACAC,EACAC,EACAnrC,QAAA,IAAAA,IAAAA,EAA6B,CAAC,GAE9B,IAAI,OAAEnI,EAASC,SAASkkB,YAAY,SAAEovB,GAAW,GAAUprC,EACvDqrC,EAAgBxzC,EAAOyzC,QACvBzd,EAAS6b,EAAO6B,IAChBrsB,EAA4B,KAE5BsI,EAAQgkB,IASZ,SAASA,IAEP,OADYH,EAAc1Y,OAAS,CAAEuX,IAAK,OAC7BA,GACf,CAEA,SAASuB,IACP5d,EAAS6b,EAAO6B,IAChB,IAAIG,EAAYF,IACZG,EAAqB,MAAbD,EAAoB,KAAOA,EAAYlkB,EACnDA,EAAQkkB,EACJxsB,GACFA,EAAS,CAAE2O,SAAQtY,SAAU+1B,EAAQ/1B,SAAUo2B,SAEnD,CA+CA,SAASC,EAAUxB,GAIjB,IAAIhlC,EACyB,SAA3BvN,EAAO0d,SAASs2B,OACZh0C,EAAO0d,SAASs2B,OAChBh0C,EAAO0d,SAAS6F,KAElBA,EAAqB,kBAAPgvB,EAAkBA,EAAKM,EAAWN,GASpD,OALAhvB,EAAOA,EAAK7gB,QAAQ,KAAM,OAC1BqvC,EACExkC,EACsE,sEAAAgW,GAEjE,IAAI0wB,IAAI1wB,EAAMhW,EACvB,CApFa,MAAToiB,IACFA,EAAQ,EACR6jB,EAAcU,aAAY1B,EAAM,GAAAgB,EAAc1Y,MAAO,CAAAuX,IAAK1iB,IAAS,KAoFrE,IAAI8jB,EAAmB,CACrB,UAAIzd,GACF,OAAOA,GAET,YAAItY,GACF,OAAO01B,EAAYpzC,EAAQwzC,IAE7BW,MAAAA,CAAOC,GACL,GAAI/sB,EACF,MAAM,IAAIjjB,MAAM,8CAKlB,OAHApE,EAAO+P,iBAAiB+hC,EAAmB8B,GAC3CvsB,EAAW+sB,EAEJ,KACLp0C,EAAOgQ,oBAAoB8hC,EAAmB8B,GAC9CvsB,EAAW,IAAI,GAGnBgsB,WAAWd,GACFc,EAAWrzC,EAAQuyC,GAE5BwB,YACAM,cAAAA,CAAe9B,GAEb,IAAIxxB,EAAMgzB,EAAUxB,GACpB,MAAO,CACLE,SAAU1xB,EAAI0xB,SACd9xB,OAAQI,EAAIJ,OACZ+xB,KAAM3xB,EAAI2xB,OAGdpjC,KAlGF,SAAcijC,EAAQzX,GACpB9E,EAAS6b,EAAOyC,KAChB,IAAI52B,EAAW40B,EAAemB,EAAQ/1B,SAAU60B,EAAIzX,GAChDwY,GAAkBA,EAAiB51B,EAAU60B,GAEjD5iB,EAAQgkB,IAAa,EACrB,IAAIY,EAAepC,EAAgBz0B,EAAUiS,GACzC5O,EAAM0yB,EAAQJ,WAAW31B,GAG7B,IACE81B,EAAcgB,UAAUD,EAAc,GAAIxzB,GAC1C,MAAOgb,GAKP,GAAIA,aAAiB0Y,cAA+B,mBAAf1Y,EAAM32B,KACzC,MAAM22B,EAIR/7B,EAAO0d,SAASxZ,OAAO6c,EACxB,CAEGwyB,GAAYlsB,GACdA,EAAS,CAAE2O,SAAQtY,SAAU+1B,EAAQ/1B,SAAUo2B,MAAO,GAE1D,EAuEEpxC,QArEF,SAAiB6vC,EAAQzX,GACvB9E,EAAS6b,EAAO6C,QAChB,IAAIh3B,EAAW40B,EAAemB,EAAQ/1B,SAAU60B,EAAIzX,GAChDwY,GAAkBA,EAAiB51B,EAAU60B,GAEjD5iB,EAAQgkB,IACR,IAAIY,EAAepC,EAAgBz0B,EAAUiS,GACzC5O,EAAM0yB,EAAQJ,WAAW31B,GAC7B81B,EAAcU,aAAaK,EAAc,GAAIxzB,GAEzCwyB,GAAYlsB,GACdA,EAAS,CAAE2O,SAAQtY,SAAU+1B,EAAQ/1B,SAAUo2B,MAAO,GAE1D,EAyDEa,GAAG1sB,GACMurB,EAAcmB,GAAG1sB,IAI5B,OAAOwrB,CACT,CC7tBA,IAAYmB,GAAZ,SAAYA,GACVA,EAAA,YACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,aACD,CALD,CAAYA,IAAAA,EAKX,KAmRiC,IAAIl1C,IAAuB,CAC3D,OACA,gBACA,OACA,KACA,QACA,aAoNI,SAAUm1C,EAGdC,EACAC,EACAC,GAEA,YAFQ,IAARA,IAAAA,EAAW,KAEJC,EAAgBH,EAAQC,EAAaC,GAAU,EACxD,CAEM,SAAUC,EAGdH,EACAC,EACAC,EACAE,GAEA,IAGIzC,EAAW0C,GAFU,kBAAhBJ,EAA2BpC,EAAUoC,GAAeA,GAEvBtC,UAAY,IAAKuC,GAEvD,GAAgB,MAAZvC,EACF,OAAO,KAGT,IAAI2C,EAAWC,EAAcP,IAmM/B,SAA2BM,GACzBA,EAASE,MAAK,CAACn2C,EAAGC,IAChBD,EAAEo2C,QAAUn2C,EAAEm2C,MACVn2C,EAAEm2C,MAAQp2C,EAAEo2C,MAyCpB,SAAwBp2C,EAAaC,GACnC,IAAIo2C,EACFr2C,EAAEI,SAAWH,EAAEG,QAAUJ,EAAE6C,MAAM,GAAI,GAAGyzC,OAAM,CAACxtB,EAAGytB,IAAMztB,IAAM7oB,EAAEs2C,KAElE,OAAOF,EAKHr2C,EAAEA,EAAEI,OAAS,GAAKH,EAAEA,EAAEG,OAAS,GAG/B,CACN,CArDQo2C,CACEx2C,EAAEy2C,WAAWrI,KAAKv/B,GAASA,EAAK6nC,gBAChCz2C,EAAEw2C,WAAWrI,KAAKv/B,GAASA,EAAK6nC,kBAG1C,CA3MEC,CAAkBV,GAElB,IAAIW,EAAU,KACd,IAAK,IAAIL,EAAI,EAAc,MAAXK,GAAmBL,EAAIN,EAAS71C,SAAUm2C,EAAG,CAO3D,IAAIM,EAAUC,EAAWxD,GACzBsD,EAAUG,EACRd,EAASM,GACTM,EACAd,EAEH,CAED,OAAOa,CACT,CAyCA,SAASV,EAGPP,EACAM,EACAe,EACAC,QAF2C,IAA3ChB,IAAAA,EAA2C,SAC3C,IAAAe,IAAAA,EAA4C,SAClC,IAAVC,IAAAA,EAAa,IAEb,IAAIC,EAAeA,CACjBC,EACA3mB,EACA4mB,KAEA,IAAIvoC,EAAmC,CACrCuoC,kBACmBxF,IAAjBwF,EAA6BD,EAAMvD,MAAQ,GAAKwD,EAClDC,eAAuC,IAAxBF,EAAME,cACrBX,cAAelmB,EACf2mB,SAGEtoC,EAAKuoC,aAAaE,WAAW,OAC/B1E,EACE/jC,EAAKuoC,aAAaE,WAAWL,GAC7B,wBAAwBpoC,EAAKuoC,aAA7B,wBACMH,EADN,4GAKFpoC,EAAKuoC,aAAevoC,EAAKuoC,aAAav0C,MAAMo0C,EAAW72C,SAGzD,IAAIwzC,EAAO2D,EAAU,CAACN,EAAYpoC,EAAKuoC,eACnCX,EAAaO,EAAYlvB,OAAOjZ,GAKhCsoC,EAAM7tC,UAAY6tC,EAAM7tC,SAASlJ,OAAS,IAC5CwyC,GAGkB,IAAhBuE,EAAM3mB,MACN,4FACuCojB,EAAI,MAE7CsC,EAAciB,EAAM7tC,SAAU2sC,EAAUQ,EAAY7C,KAKpC,MAAduD,EAAMvD,MAAiBuD,EAAM3mB,QAIjCylB,EAAS9lC,KAAK,CACZyjC,OACAwC,MAAOoB,EAAa5D,EAAMuD,EAAM3mB,OAChCimB,cACA,EAaJ,OAXAd,EAAOpzC,SAAQ,CAAC40C,EAAO3mB,KAAS,IAAAinB,EAE9B,GAAmB,KAAfN,EAAMvD,MAA0B,OAAX6D,EAACN,EAAMvD,OAAN6D,EAAYzxC,SAAS,KAG7C,IAAK,IAAI0xC,KAAYC,EAAwBR,EAAMvD,MACjDsD,EAAaC,EAAO3mB,EAAOknB,QAH7BR,EAAaC,EAAO3mB,EAKrB,IAGIylB,CACT,CAgBA,SAAS0B,EAAwB/D,GAC/B,IAAIgE,EAAWhE,EAAKtxC,MAAM,KAC1B,GAAwB,IAApBs1C,EAASx3C,OAAc,MAAO,GAElC,IAAKy3C,KAAUC,GAAQF,EAGnBG,EAAaF,EAAMG,SAAS,KAE5BC,EAAWJ,EAAMt0C,QAAQ,MAAO,IAEpC,GAAoB,IAAhBu0C,EAAK13C,OAGP,OAAO23C,EAAa,CAACE,EAAU,IAAM,CAACA,GAGxC,IAAIC,EAAeP,EAAwBG,EAAKznB,KAAK,MAEjD8nB,EAAmB,GAqBvB,OAZAA,EAAOhoC,QACF+nC,EAAa9J,KAAKgK,GACP,KAAZA,EAAiBH,EAAW,CAACA,EAAUG,GAAS/nB,KAAK,QAKrD0nB,GACFI,EAAOhoC,QAAQ+nC,GAIVC,EAAO/J,KAAKsJ,GACjB9D,EAAK0D,WAAW,MAAqB,KAAbI,EAAkB,IAAMA,GAEpD,CAaA,MAAMW,EAAU,YACVC,EAAsB,EACtBC,EAAkB,EAClBC,EAAoB,EACpBC,EAAqB,GACrBC,GAAgB,EAChBC,EAAWC,GAAoB,MAANA,EAE/B,SAASpB,EAAa5D,EAAcpjB,GAClC,IAAIonB,EAAWhE,EAAKtxC,MAAM,KACtBu2C,EAAejB,EAASx3C,OAS5B,OARIw3C,EAASkB,KAAKH,KAChBE,GAAgBH,GAGdloB,IACFqoB,GAAgBN,GAGXX,EACJmB,QAAQH,IAAOD,EAAQC,KACvBI,QACC,CAAC5C,EAAO6C,IACN7C,GACCiC,EAAQn1C,KAAK+1C,GACVX,EACY,KAAZW,EACAT,EACAC,IACNI,EAEN,CAiBA,SAAS9B,EAIPmC,EACA5F,EACAyC,QAAY,IAAZA,IAAAA,GAAe,GAEf,IAAI,WAAEU,GAAeyC,EAEjBC,EAAgB,CAAC,EACjBC,EAAkB,IAClBxC,EAA2D,GAC/D,IAAK,IAAIL,EAAI,EAAGA,EAAIE,EAAWr2C,SAAUm2C,EAAG,CAC1C,IAAI1nC,EAAO4nC,EAAWF,GAClB3xB,EAAM2xB,IAAME,EAAWr2C,OAAS,EAChCi5C,EACkB,MAApBD,EACI9F,EACAA,EAASzwC,MAAMu2C,EAAgBh5C,SAAW,IAC5CgF,EAAQk0C,EACV,CAAE1F,KAAM/kC,EAAKuoC,aAAcC,cAAexoC,EAAKwoC,cAAezyB,OAC9Dy0B,GAGElC,EAAQtoC,EAAKsoC,MAkBjB,IAfG/xC,GACDwf,GACAmxB,IACCU,EAAWA,EAAWr2C,OAAS,GAAG+2C,MAAM3mB,QAEzCprB,EAAQk0C,EACN,CACE1F,KAAM/kC,EAAKuoC,aACXC,cAAexoC,EAAKwoC,cACpBzyB,KAAK,GAEPy0B,KAICj0C,EACH,OAAO,KAGTnE,OAAO8D,OAAOo0C,EAAe/zC,EAAMm0C,QAEnC3C,EAAQzmC,KAAK,CAEXopC,OAAQJ,EACR7F,SAAUiE,EAAU,CAAC6B,EAAiBh0C,EAAMkuC,WAC5CkG,aAAcC,EACZlC,EAAU,CAAC6B,EAAiBh0C,EAAMo0C,gBAEpCrC,UAGyB,MAAvB/xC,EAAMo0C,eACRJ,EAAkB7B,EAAU,CAAC6B,EAAiBh0C,EAAMo0C,eAEvD,CAED,OAAO5C,CACT,CAiHgB,SAAA0C,EAIdI,EACApG,GAEuB,kBAAZoG,IACTA,EAAU,CAAE9F,KAAM8F,EAASrC,eAAe,EAAOzyB,KAAK,IAGxD,IAAK+0B,EAASC,GA4ChB,SACEhG,EACAyD,EACAzyB,QADa,IAAbyyB,IAAAA,GAAgB,QACb,IAAHzyB,IAAAA,GAAM,GAENiuB,EACW,MAATe,IAAiBA,EAAKoE,SAAS,MAAQpE,EAAKoE,SAAS,MACrD,eAAepE,EAAf,oCACMA,EAAKrwC,QAAQ,MAAO,MAD1B,qIAGsCqwC,EAAKrwC,QAAQ,MAAO,MAAK,MAGjE,IAAIg2C,EAA8B,GAC9BM,EACF,IACAjG,EACGrwC,QAAQ,UAAW,IACnBA,QAAQ,OAAQ,KAChBA,QAAQ,qBAAsB,QAC9BA,QACC,qBACA,CAACu2C,EAAWC,EAAmBhC,KAC7BwB,EAAOppC,KAAK,CAAE4pC,YAAWhC,WAA0B,MAAdA,IAC9BA,EAAa,eAAiB,gBAIzCnE,EAAKoE,SAAS,MAChBuB,EAAOppC,KAAK,CAAE4pC,UAAW,MACzBF,GACW,MAATjG,GAAyB,OAATA,EACZ,QACA,qBACGhvB,EAETi1B,GAAgB,QACE,KAATjG,GAAwB,MAATA,IAQxBiG,GAAgB,iBAKlB,IAAIF,EAAU,IAAIK,OAAOH,EAAcxC,OAAgBzF,EAAY,KAEnE,MAAO,CAAC+H,EAASJ,EACnB,CAjGkCU,CAC9BP,EAAQ9F,KACR8F,EAAQrC,cACRqC,EAAQ90B,KAGNxf,EAAQkuC,EAASluC,MAAMu0C,GAC3B,IAAKv0C,EAAO,OAAO,KAEnB,IAAIg0C,EAAkBh0C,EAAM,GACxBo0C,EAAeJ,EAAgB71C,QAAQ,UAAW,MAClD22C,EAAgB90C,EAAMvC,MAAM,GAuBhC,MAAO,CACL02C,OAvBmBK,EAAeZ,QAClC,CAACpJ,EAAI+D,EAA6BnjB,KAAS,IAApC,UAAEupB,EAAS,WAAEhC,GAAYpE,EAG9B,GAAkB,MAAdoG,EAAmB,CACrB,IAAII,EAAaD,EAAc1pB,IAAU,GACzCgpB,EAAeJ,EACZv2C,MAAM,EAAGu2C,EAAgBh5C,OAAS+5C,EAAW/5C,QAC7CmD,QAAQ,UAAW,KACvB,CAED,MAAMoE,EAAQuyC,EAAc1pB,GAM5B,OAJEof,EAAKmK,GADHhC,IAAepwC,OACCiqC,GAECjqC,GAAS,IAAIpE,QAAQ,OAAQ,KAE3CqsC,CAAI,GAEb,CAAC,GAKD0D,SAAU8F,EACVI,eACAE,UAEJ,CA2DM,SAAU5C,EAAWnvC,GACzB,IACE,OAAOA,EACJrF,MAAM,KACN8rC,KAAK7sC,GAAM64C,mBAAmB74C,GAAGgC,QAAQ,MAAO,SAChD8sB,KAAK,KACR,MAAOuM,GAQP,OAPAiW,GACE,EACA,iBAAiBlrC,EAAjB,oHAEei1B,EAAK,MAGfj1B,CACR,CACH,CAKgB,SAAAquC,EACd1C,EACAuC,GAEA,GAAiB,MAAbA,EAAkB,OAAOvC,EAE7B,IAAKA,EAAS9wC,cAAc80C,WAAWzB,EAASrzC,eAC9C,OAAO,KAKT,IAAI63C,EAAaxE,EAASmC,SAAS,KAC/BnC,EAASz1C,OAAS,EAClBy1C,EAASz1C,OACTk6C,EAAWhH,EAASvlC,OAAOssC,GAC/B,OAAIC,GAAyB,MAAbA,EAEP,KAGFhH,EAASzwC,MAAMw3C,IAAe,GACvC,CA2CA,SAASE,EACPxwB,EACAywB,EACAC,EACA7G,GAEA,MACE,qBAAqB7pB,EAArB,2CACQywB,EAAK,YAAapQ,KAAKC,UAC7BuJ,GAFF,yCAIQ6G,EAJR,2HAOJ,CAyBM,SAAUC,EAEd9D,GACA,OAAOA,EAAQmC,QACb,CAAC3zC,EAAOorB,IACI,IAAVA,GAAgBprB,EAAM+xC,MAAMvD,MAAQxuC,EAAM+xC,MAAMvD,KAAKxzC,OAAS,GAEpE,CAIgB,SAAAu6C,EAEd/D,EAAcgE,GACd,IAAIC,EAAcH,EAA2B9D,GAK7C,OAAIgE,EACKC,EAAYzM,KAAI,CAAChpC,EAAO8tC,IAC7BA,IAAQ2H,EAAYz6C,OAAS,EAAIgF,EAAMkuC,SAAWluC,EAAMo0C,eAIrDqB,EAAYzM,KAAKhpC,GAAUA,EAAMo0C,cAC1C,CAKM,SAAUsB,EACdC,EACAC,EACAC,EACAC,GAEA,IAAI9H,OAFU,IAAd8H,IAAAA,GAAiB,GAGI,kBAAVH,EACT3H,EAAKI,EAAUuH,IAEf3H,EAAEC,EAAQ,GAAA0H,GAEVnI,GACGQ,EAAGE,WAAaF,EAAGE,SAASttC,SAAS,KACtCu0C,EAAoB,IAAK,WAAY,SAAUnH,IAEjDR,GACGQ,EAAGE,WAAaF,EAAGE,SAASttC,SAAS,KACtCu0C,EAAoB,IAAK,WAAY,OAAQnH,IAE/CR,GACGQ,EAAG5xB,SAAW4xB,EAAG5xB,OAAOxb,SAAS,KAClCu0C,EAAoB,IAAK,SAAU,OAAQnH,KAI/C,IAGI+H,EAHAC,EAAwB,KAAVL,GAAgC,KAAhB3H,EAAGE,SACjC+H,EAAaD,EAAc,IAAMhI,EAAGE,SAaxC,GAAkB,MAAd+H,EACFF,EAAOF,MACF,CACL,IAAIK,EAAqBN,EAAe56C,OAAS,EAMjD,IAAK86C,GAAkBG,EAAW/D,WAAW,MAAO,CAClD,IAAIiE,EAAaF,EAAW/4C,MAAM,KAElC,KAAyB,OAAlBi5C,EAAW,IAChBA,EAAWhkC,QACX+jC,GAAsB,EAGxBlI,EAAGE,SAAWiI,EAAWlrB,KAAK,IAC/B,CAED8qB,EAAOG,GAAsB,EAAIN,EAAeM,GAAsB,GACvE,CAED,IAAI1H,WAzKsBR,EAAQoI,QAAY,IAAZA,IAAAA,EAAe,KACjD,IACElI,SAAU+H,EAAU,OACpB75B,EAAS,GAAE,KACX+xB,EAAO,IACS,kBAAPH,EAAkBI,EAAUJ,GAAMA,EAEzCE,EAAW+H,EACXA,EAAW/D,WAAW,KACpB+D,EAWR,SAAyBjE,EAAsBoE,GAC7C,IAAI5D,EAAW4D,EAAaj4C,QAAQ,OAAQ,IAAIjB,MAAM,KAYtD,OAXuB80C,EAAa90C,MAAM,KAEzBC,SAAS02C,IACR,OAAZA,EAEErB,EAASx3C,OAAS,GAAGw3C,EAAS7H,MACb,MAAZkJ,GACTrB,EAASznC,KAAK8oC,EACf,IAGIrB,EAASx3C,OAAS,EAAIw3C,EAASvnB,KAAK,KAAO,GACpD,CAxBQorB,CAAgBJ,EAAYG,GAC9BA,EAEJ,MAAO,CACLlI,WACA9xB,OAAQk6B,EAAgBl6B,GACxB+xB,KAAMoI,EAAcpI,GAExB,CAuJaqI,CAAYxI,EAAI+H,GAGvBU,EACFR,GAA6B,MAAfA,GAAsBA,EAAWrD,SAAS,KAEtD8D,GACDV,GAA8B,MAAfC,IAAuBJ,EAAiBjD,SAAS,KAQnE,OANGpE,EAAKN,SAAS0E,SAAS,OACvB6D,IAA4BC,IAE7BlI,EAAKN,UAAY,KAGZM,CACT,OAiBa2D,EAAawE,GACxBA,EAAM1rB,KAAK,KAAK9sB,QAAQ,SAAU,KAKvBk2C,EAAqBnG,GAChCA,EAAS/vC,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,KAKlCm4C,EAAmBl6B,GAC7BA,GAAqB,MAAXA,EAEPA,EAAO81B,WAAW,KAClB91B,EACA,IAAMA,EAHN,GAQOm6B,EAAiBpI,GAC3BA,GAAiB,MAATA,EAAoBA,EAAK+D,WAAW,KAAO/D,EAAO,IAAMA,EAAzC,GAqDgBtuC,MAqSpC,SAAU+2C,EAAqBpf,GACnC,OACW,MAATA,GACwB,kBAAjBA,EAAMqf,QACe,kBAArBrf,EAAMsf,YACa,mBAAnBtf,EAAMuf,UACb,SAAUvf,CAEd,CCr/BA,MAAMwf,EAAgD,CACpD,OACA,MACA,QACA,UAMIC,GAJuB,IAAI97C,IAC/B67C,GAG2C,CAC3C,SACGA,IAEuB,IAAI77C,IAAgB87C,GAEpB,IAAI97C,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MACf,IAAIA,IAAI,CAAC,IAAK,MAsrFlBqD,OAAO,gPC5yGtC,MAAM04C,EACXC,EAAAA,cAAoD,MAK/C,MAAMC,EAAyBD,EAAAA,cAEpC,MA8CK,MAAME,EAAoBF,EAAAA,cAC/B,MAYK,MAAMG,EAAkBH,EAAAA,cAC7B,YAaWI,EAAeJ,EAAAA,cAAwC,CAClEK,OAAQ,KACRhG,QAAS,GACTiG,aAAa,IAOR,MAAMC,EAAoBP,EAAAA,cAAyB,MClFnD,SAASQ,IACd,OAA4C,MAArCR,EAAAA,WAAiBG,EAC1B,CAYO,SAASM,KAQd,OANED,KADFE,GAAU,GAOHV,EAAAA,WAAiBG,GAAiBn+B,QAC3C,CAkDA,SAAS2+B,GACPz0C,GAEe8zC,EAAAA,WAAiBE,GAAmBU,QAKjDZ,EAAAA,gBAAsB9zC,EAE1B,CAQO,SAAS20C,KACd,IAAI,YAAEP,GAAgBN,EAAAA,WAAiBI,GAGvC,OAAOE,EAq4BT,WACE,IAAI,OAAEQ,GAAWC,GAAqBC,GAAeC,mBACjDplC,EAAKqlC,GAAkBC,GAAoBF,mBAE3CG,EAAYpB,EAAAA,QAAa,GAC7BW,IAA0B,KACxBS,EAAUxrC,SAAU,CAAI,IAG1B,IAAIyrC,EAA6BrB,EAAAA,aAC/B,SAACnJ,EAAiBpqC,QAAwB,IAAxBA,IAAAA,EAA2B,CAAC,GAKvC20C,EAAUxrC,UAEG,kBAAPihC,EACTiK,EAAOO,SAASxK,GAEhBiK,EAAOO,SAASxK,EAAEC,EAAA,CAAIwK,YAAazlC,GAAOpP,IAE9C,GACA,CAACq0C,EAAQjlC,IAGX,OAAOwlC,CACT,CAh6BuBE,GAGvB,WAEIf,KADFE,GAAU,GAOV,IAAIc,EAAoBxB,EAAAA,WAAiBD,IACrC,SAAEzG,EAAQ,OAAEmI,EAAM,UAAE1N,GAAciM,EAAAA,WAAiBE,IACnD,QAAE7F,GAAY2F,EAAAA,WAAiBI,IAC7BrJ,SAAU2H,GAAqB+B,KAEjCiB,EAAqB7T,KAAKC,UAC5B6T,EAAoBtH,EAASoH,EAAOpD,uBAGlC+C,EAAYpB,EAAAA,QAAa,GAqD7B,OApDAW,IAA0B,KACxBS,EAAUxrC,SAAU,CAAI,IAGOoqC,EAAAA,aAC/B,SAACnJ,EAAiBpqC,GAKhB,QALwC,IAAxBA,IAAAA,EAA2B,CAAC,IAKvC20C,EAAUxrC,QAAS,OAExB,GAAkB,kBAAPihC,EAET,YADA9C,EAAUkF,GAAGpC,GAIf,IAAIQ,EAAOkH,EACT1H,EACAhJ,KAAK+T,MAAMF,GACXhD,EACqB,SAArBjyC,EAAQo1C,UASe,MAArBL,GAA0C,MAAblI,IAC/BjC,EAAKN,SACe,MAAlBM,EAAKN,SACDuC,EACA0B,EAAU,CAAC1B,EAAUjC,EAAKN,aAG/BtqC,EAAQzF,QAAU+sC,EAAU/sC,QAAU+sC,EAAUngC,MACjDyjC,EACA5qC,EAAQ2yB,MACR3yB,EAEJ,GACA,CACE6sC,EACAvF,EACA2N,EACAhD,EACA8C,GAKN,CA1E6CM,EAC7C,CA2HO,SAASC,GACdlL,EAAMmL,GAEA,IADN,SAAEH,QAA8C,IAAAG,EAAG,CAAC,EAACA,GAEjD,OAAEP,GAAWzB,EAAAA,WAAiBE,IAC9B,QAAE7F,GAAY2F,EAAAA,WAAiBI,IAC7BrJ,SAAU2H,GAAqB+B,KACjCiB,EAAqB7T,KAAKC,UAC5B6T,EAAoBtH,EAASoH,EAAOpD,uBAGtC,OAAO2B,EAAAA,SACL,IACEzB,EACE1H,EACAhJ,KAAK+T,MAAMF,GACXhD,EACa,SAAbmD,IAEJ,CAAChL,EAAI6K,EAAoBhD,EAAkBmD,GAE/C,CAkBO,SAASI,GACd7I,EACAC,EACA6I,EACAT,GAGEjB,KADFE,GAAU,GAOV,IAAI,UAAE3M,GAAciM,EAAAA,WAAiBE,IAC/B7F,QAAS8H,GAAkBnC,EAAAA,WAAiBI,GAC9CgC,EAAaD,EAAcA,EAAct+C,OAAS,GAClDw+C,EAAeD,EAAaA,EAAWpF,OAAS,CAAC,EAEjDsF,GADiBF,GAAaA,EAAWrL,SACpBqL,EAAaA,EAAWnF,aAAe,KAC9CmF,GAAcA,EAAWxH,MAqC3C,IAEI54B,EAFAugC,EAAsB9B,KAG1B,GAAIpH,EAAa,KAAAmJ,EACf,IAAIC,EACqB,kBAAhBpJ,EAA2BpC,EAAUoC,GAAeA,EAGpC,MAAvBiJ,IAC4B,OADFE,EACxBC,EAAkB1L,eAAQ,EAA1ByL,EAA4BzH,WAAWuH,KAF3C5B,GAAU,GASV1+B,EAAWygC,CACb,MACEzgC,EAAWugC,EAGb,IAAIxL,EAAW/0B,EAAS+0B,UAAY,IAEhC+F,EAAoB/F,EACxB,GAA2B,MAAvBuL,EAA4B,CAe9B,IAAII,EAAiBJ,EAAmBt7C,QAAQ,MAAO,IAAIjB,MAAM,KAEjE+2C,EAAoB,IADL/F,EAAS/vC,QAAQ,MAAO,IAAIjB,MAAM,KACdO,MAAMo8C,EAAe7+C,QAAQiwB,KAAK,IACvE,CAEA,IAAIumB,EAAUlB,EAAYC,EAAQ,CAAErC,SAAU+F,IAmB9C,IAAI6F,EAAkBC,GACpBvI,GACEA,EAAQxI,KAAKhpC,GACXnE,OAAO8D,OAAO,CAAC,EAAGK,EAAO,CACvBm0C,OAAQt4C,OAAO8D,OAAO,CAAC,EAAG65C,EAAcx5C,EAAMm0C,QAC9CjG,SAAUiE,EAAU,CAClBsH,EAEAvO,EAAU4E,eACN5E,EAAU4E,eAAe9vC,EAAMkuC,UAAUA,SACzCluC,EAAMkuC,WAEZkG,aACyB,MAAvBp0C,EAAMo0C,aACFqF,EACAtH,EAAU,CACRsH,EAEAvO,EAAU4E,eACN5E,EAAU4E,eAAe9vC,EAAMo0C,cAAclG,SAC7CluC,EAAMo0C,mBAIxBkF,EACAD,EACAT,GAMF,OAAIpI,GAAesJ,EAEf3C,EAAAA,cAACG,EAAgBvN,SAAQ,CACvBxnC,MAAO,CACL4W,SAAQ80B,EAAA,CACNC,SAAU,IACV9xB,OAAQ,GACR+xB,KAAM,GACN5X,MAAO,KACPxd,IAAK,WACFI,GAEL6gC,eAAgB1M,EAAe6B,MAGhC2K,GAKAA,CACT,CAEA,SAASG,KACP,IAAIziB,EA0cC,WAAkC,IAAA0iB,EACvC,IAAI1iB,EAAQ2f,EAAAA,WAAiBO,GACzBnhB,EAAQ4jB,GAAmB7B,GAAoB8B,eAC/CC,EAAUhC,GAAkBC,GAAoB8B,eAIpD,QAAc5N,IAAVhV,EACF,OAAOA,EAIT,OAAO,OAAP0iB,EAAO3jB,EAAM+jB,aAAN,EAAAJ,EAAeG,EACxB,CAvdcE,GACRpjB,EAAUyf,EAAqBpf,GAC5BA,EAAMqf,OAAU,IAAArf,EAAMsf,WACzBtf,aAAiB33B,MACjB23B,EAAML,QACN6N,KAAKC,UAAUzN,GACf13B,EAAQ03B,aAAiB33B,MAAQ23B,EAAM13B,MAAQ,KAC/C06C,EAAY,yBACZC,EAAY,CAAEC,QAAS,SAAUC,gBAAiBH,GAsBtD,OACErD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAI,2CACJA,EAAAA,cAAA,MAAI5uC,MAAO,CAAEqyC,UAAW,WAAazjB,GACpCr3B,EAAQq3C,EAAAA,cAAA,OAAK5uC,MAAOkyC,GAAY36C,GAAe,KAvBtC,KA2BhB,CAEA,MAAM+6C,GAAsB1D,EAAAA,cAAC8C,GAAqB,MAgB3C,MAAMa,WAA4B3D,EAAAA,UAIvCt1C,WAAAA,CAAY0pB,GACVwvB,MAAMxvB,GACN/uB,KAAK+5B,MAAQ,CACXpd,SAAUoS,EAAMpS,SAChB6hC,aAAczvB,EAAMyvB,aACpBxjB,MAAOjM,EAAMiM,MAEjB,CAEA,+BAAOO,CAAyBP,GAC9B,MAAO,CAAEA,MAAOA,EAClB,CAEA,+BAAOX,CACLtL,EACAgL,GAUA,OACEA,EAAMpd,WAAaoS,EAAMpS,UACD,SAAvBod,EAAMykB,cAAkD,SAAvBzvB,EAAMyvB,aAEjC,CACLxjB,MAAOjM,EAAMiM,MACbre,SAAUoS,EAAMpS,SAChB6hC,aAAczvB,EAAMyvB,cAQjB,CACLxjB,WAAuBgV,IAAhBjhB,EAAMiM,MAAsBjM,EAAMiM,MAAQjB,EAAMiB,MACvDre,SAAUod,EAAMpd,SAChB6hC,aAAczvB,EAAMyvB,cAAgBzkB,EAAMykB,aAE9C,CAEAhjB,iBAAAA,CAAkBR,EAAYyjB,GAC5B1jB,QAAQC,MACN,wDACAA,EACAyjB,EAEJ,CAEAj6C,MAAAA,GACE,YAA4BwrC,IAArBhwC,KAAK+5B,MAAMiB,MAChB2f,EAAAA,cAACI,EAAaxN,SAAQ,CAACxnC,MAAO/F,KAAK+uB,MAAM2vB,cACvC/D,EAAAA,cAACO,EAAkB3N,SAAQ,CACzBxnC,MAAO/F,KAAK+5B,MAAMiB,MAClBtzB,SAAU1H,KAAK+uB,MAAM4vB,aAIzB3+C,KAAK+uB,MAAMrnB,QAEf,EASF,SAASk3C,GAAa7M,GAAwD,IAAvD,aAAE2M,EAAY,MAAEl7C,EAAK,SAAEkE,GAA8BqqC,EACtEoK,EAAoBxB,EAAAA,WAAiBD,GAazC,OAREyB,GACAA,EAAkBZ,QAClBY,EAAkB0C,gBACjBr7C,EAAM+xC,MAAMuJ,cAAgBt7C,EAAM+xC,MAAMwJ,iBAEzC5C,EAAkB0C,cAAcG,2BAA6Bx7C,EAAM+xC,MAAM/+B,IAIzEmkC,EAAAA,cAACI,EAAaxN,SAAQ,CAACxnC,MAAO24C,GAC3Bh3C,EAGP,CAEO,SAAS61C,GACdvI,EACA8H,EACAD,EACAT,GAC2B,IAAA6C,EAC3B,QAJ2B,IAA3BnC,IAAAA,EAA8B,SACc,IAA5CD,IAAAA,EAA+C,WACX,IAApCT,IAAAA,EAAuC,MAExB,MAAXpH,EAAiB,KAAAkK,EACnB,IAAKrC,EACH,OAAO,KAGT,GAAIA,EAAgBiB,OAGlB9I,EAAU6H,EAAgB7H,YACrB,MACL,OAAAkK,EAAA9C,IAAA8C,EAAQC,qBACiB,IAAzBrC,EAAct+C,SACbq+C,EAAgBuC,aACjBvC,EAAgB7H,QAAQx2C,OAAS,GAUjC,OAAO,KAFPw2C,EAAU6H,EAAgB7H,OAG5B,CACF,CAEA,IAAIsI,EAAkBtI,EAGlB8I,EAAS,OAAHmB,EAAGpC,QAAA,EAAAoC,EAAiBnB,OAC9B,GAAc,MAAVA,EAAgB,CAClB,IAAIuB,EAAa/B,EAAgBgC,WAC9BlwC,GAAMA,EAAEmmC,MAAM/+B,SAA+Bw5B,KAAnB,MAAN8N,OAAM,EAANA,EAAS1uC,EAAEmmC,MAAM/+B,OAGtC6oC,GAAc,GADhBhE,GAAU,GAMViC,EAAkBA,EAAgBr8C,MAChC,EACAkR,KAAKgR,IAAIm6B,EAAgB9+C,OAAQ6gD,EAAa,GAElD,CAIA,IAAIE,GAAiB,EACjBC,GAAiB,EACrB,GAAI3C,GAAmBT,GAAUA,EAAO+C,oBACtC,IAAK,IAAIxK,EAAI,EAAGA,EAAI2I,EAAgB9+C,OAAQm2C,IAAK,CAC/C,IAAInxC,EAAQ85C,EAAgB3I,GAM5B,IAJInxC,EAAM+xC,MAAMkK,iBAAmBj8C,EAAM+xC,MAAMmK,0BAC7CF,EAAgB7K,GAGdnxC,EAAM+xC,MAAM/+B,GAAI,CAClB,IAAI,WAAEmpC,EAAU,OAAE7B,GAAWjB,EACzB+C,EACFp8C,EAAM+xC,MAAMsK,aACmB7P,IAA/B2P,EAAWn8C,EAAM+xC,MAAM/+B,OACrBsnC,QAAqC9N,IAA3B8N,EAAOt6C,EAAM+xC,MAAM/+B,KACjC,GAAIhT,EAAM+xC,MAAMxH,MAAQ6R,EAAkB,CAIxCL,GAAiB,EAEfjC,EADEkC,GAAiB,EACDlC,EAAgBr8C,MAAM,EAAGu+C,EAAgB,GAEzC,CAAClC,EAAgB,IAErC,KACF,CACF,CACF,CAGF,OAAOA,EAAgBwC,aAAY,CAAC9E,EAAQx3C,EAAOorB,KAEjD,IAAIoM,EACA+kB,GAA8B,EAC9BjB,EAAuC,KACvCY,EAAiD,KA0VzD,IAAqBnjC,EAzVbsgC,IACF7hB,EAAQ8iB,GAAUt6C,EAAM+xC,MAAM/+B,GAAKsnC,EAAOt6C,EAAM+xC,MAAM/+B,SAAMw5B,EAC5D8O,EAAet7C,EAAM+xC,MAAMuJ,cAAgBT,GAEvCkB,IACEC,EAAgB,GAAe,IAAV5wB,GAoVZrS,EAlVT,kBACA,GAkVIyjC,GAAczjC,KAC1ByjC,GAAczjC,IAAO,GAhVfwjC,GAA8B,EAC9BL,EAAyB,MAChBF,IAAkB5wB,IAC3BmxB,GAA8B,EAC9BL,EAAyBl8C,EAAM+xC,MAAMmK,wBAA0B,QAKrE,IAAI1K,EAAU8H,EAAc52B,OAAOo3B,EAAgBr8C,MAAM,EAAG2tB,EAAQ,IAChEqxB,EAAcA,KAChB,IAAIv4C,EAkBJ,OAhBEA,EADEszB,EACS8jB,EACFiB,EACEL,EACFl8C,EAAM+xC,MAAM3I,UAOV+N,EAAAA,cAACn3C,EAAM+xC,MAAM3I,UAAS,MACxBppC,EAAM+xC,MAAMtxB,QACVzgB,EAAM+xC,MAAMtxB,QAEZ+2B,EAGXL,EAAAA,cAACiE,GAAa,CACZp7C,MAAOA,EACPk7C,aAAc,CACZ1D,SACAhG,UACAiG,YAAgC,MAAnB4B,GAEfn1C,SAAUA,GACV,EAMN,OAAOm1C,IACJr5C,EAAM+xC,MAAMwJ,eAAiBv7C,EAAM+xC,MAAMuJ,cAA0B,IAAVlwB,GAC1D+rB,EAAAA,cAAC2D,GAAmB,CAClB3hC,SAAUkgC,EAAgBlgC,SAC1B6hC,aAAc3B,EAAgB2B,aAC9BG,UAAWG,EACX9jB,MAAOA,EACPtzB,SAAUu4C,IACVvB,aAAc,CAAE1D,OAAQ,KAAMhG,UAASiG,aAAa,KAGtDgF,GACD,GACA,KACL,CAAC,IAEItE,GAAc,SAAdA,GAAc,OAAdA,EAAc,wBAAdA,EAAc,gCAAdA,EAAc,gCAAdA,CAAc,EAAdA,IAAc,IAMdG,GAAmB,SAAnBA,GAAmB,OAAnBA,EAAmB,wBAAnBA,EAAmB,8BAAnBA,EAAmB,8BAAnBA,EAAmB,8BAAnBA,EAAmB,8BAAnBA,EAAmB,wCAAnBA,EAAmB,wBAAnBA,EAAmB,gCAAnBA,EAAmB,gCAAnBA,EAAmB,wBAAnBA,CAAmB,EAAnBA,IAAmB,IAmBxB,SAASJ,GAAqBwE,GAC5B,IAAIC,EAAMxF,EAAAA,WAAiBD,GAE3B,OADUyF,GAAV9E,GAAU,GACH8E,CACT,CAEA,SAASxC,GAAmBuC,GAC1B,IAAInmB,EAAQ4gB,EAAAA,WAAiBC,GAE7B,OADU7gB,GAAVshB,GAAU,GACHthB,CACT,CASA,SAAS8hB,GAAkBqE,GACzB,IAAI3K,EARN,WACE,IAAIA,EAAQoF,EAAAA,WAAiBI,GAE7B,OADUxF,GAAV8F,GAAU,GACH9F,CACT,CAIc6K,GACRC,EAAY9K,EAAMP,QAAQO,EAAMP,QAAQx2C,OAAS,GAKrD,OAHE6hD,EAAU9K,MAAM/+B,IADlB6kC,GAAU,GAIHgF,EAAU9K,MAAM/+B,EACzB,CA4NA,MAAMwpC,GAAyC,CAAC,ECngCpBrF,EAAsB,gBAyS3C,SAAS2F,GAAMC,GACpBlF,GAAU,EAKZ,CAqBO,SAASmF,GAAMC,GAQqB,IAPzCxM,SAAUyM,EAAe,IAAG,SAC5Bh5C,EAAW,KACXiV,SAAUgkC,EAAY,eACtBnD,EAAiB1M,EAAe6B,IAAG,UACnCjE,EACA6M,OAAQqF,GAAa,EAAK,OAC1BxE,GACYqE,EAETtF,KADHE,GAAU,GAQV,IAAIpH,EAAWyM,EAAa/+C,QAAQ,OAAQ,KACxCk/C,EAAoBlG,EAAAA,SACtB,KAAM,CACJ1G,WACAvF,YACA6M,OAAQqF,EACRxE,OAAM3K,EAAA,CACJuH,sBAAsB,GACnBoD,MAGP,CAACnI,EAAUmI,EAAQ1N,EAAWkS,IAGJ,kBAAjBD,IACTA,EAAe/O,EAAU+O,IAG3B,IAAI,SACFjP,EAAW,IAAG,OACd9xB,EAAS,GAAE,KACX+xB,EAAO,GAAE,MACT5X,EAAQ,KAAI,IACZxd,EAAM,WACJokC,EAEAG,EAAkBnG,EAAAA,SAAc,KAClC,IAAIoG,EAAmB3M,EAAc1C,EAAUuC,GAE/C,OAAwB,MAApB8M,EACK,KAGF,CACLpkC,SAAU,CACR+0B,SAAUqP,EACVnhC,SACA+xB,OACA5X,QACAxd,OAEFihC,iBACD,GACA,CAACvJ,EAAUvC,EAAU9xB,EAAQ+xB,EAAM5X,EAAOxd,EAAKihC,IASlD,OAAuB,MAAnBsD,EACK,KAIPnG,EAAAA,cAACE,EAAkBtN,SAAQ,CAACxnC,MAAO86C,GACjClG,EAAAA,cAACG,EAAgBvN,SAAQ,CAAC7lC,SAAUA,EAAU3B,MAAO+6C,IAG3D,CAaO,SAASE,GAAMC,GAGqB,IAHpB,SACrBv5C,EAAQ,SACRiV,GACYskC,EACZ,ODnKOrE,GCmKUsE,GAAyBx5C,GAAWiV,EACvD,CAuC4B,IAAIyM,SAAQ,SAEPuxB,EAAAA,UAkH1B,SAASuG,GACdx5C,EACA2tC,QAAoB,IAApBA,IAAAA,EAAuB,IAEvB,IAAItB,EAAwB,GA6D5B,OA3DA4G,EAAAA,SAAeh6C,QAAQ+G,GAAU,CAACuc,EAAS2K,KACzC,IAAK+rB,EAAAA,eAAqB12B,GAGxB,OAGF,IAAIk9B,EAAW,IAAI9L,EAAYzmB,GAE/B,GAAI3K,EAAQ3jB,OAASq6C,EAAAA,SAMnB,YAJA5G,EAAOxlC,KAAKY,MACV4kC,EACAmN,GAAyBj9B,EAAQ8K,MAAMrnB,SAAUy5C,IAMnDl9B,EAAQ3jB,OAASggD,IADnBjF,GAAU,GAQPp3B,EAAQ8K,MAAMH,OAAU3K,EAAQ8K,MAAMrnB,UADzC2zC,GAAU,GAKV,IAAI9F,EAAqB,CACvB/+B,GAAIyN,EAAQ8K,MAAMvY,IAAM2qC,EAAS1yB,KAAK,KACtCgnB,cAAexxB,EAAQ8K,MAAM0mB,cAC7BxxB,QAASA,EAAQ8K,MAAM9K,QACvB2oB,UAAW3oB,EAAQ8K,MAAM6d,UACzBhe,MAAO3K,EAAQ8K,MAAMH,MACrBojB,KAAM/tB,EAAQ8K,MAAMijB,KACpB6N,OAAQ57B,EAAQ8K,MAAM8wB,OACtB5qB,OAAQhR,EAAQ8K,MAAMkG,OACtB6pB,aAAc76B,EAAQ8K,MAAM+vB,aAC5BC,cAAe96B,EAAQ8K,MAAMgwB,cAC7BqC,iBACiC,MAA/Bn9B,EAAQ8K,MAAMgwB,eACgB,MAA9B96B,EAAQ8K,MAAM+vB,aAChBuC,iBAAkBp9B,EAAQ8K,MAAMsyB,iBAChCC,OAAQr9B,EAAQ8K,MAAMuyB,OACtBvT,KAAM9pB,EAAQ8K,MAAMgf,MAGlB9pB,EAAQ8K,MAAMrnB,WAChB6tC,EAAM7tC,SAAWw5C,GACfj9B,EAAQ8K,MAAMrnB,SACdy5C,IAIJpN,EAAOxlC,KAAKgnC,EAAM,IAGbxB,CACT,+WClfgD,IAAIp1C,IAAI,CACtD,oCACA,sBACA,+ICaF,IACEM,OAAOsiD,qBAHT,GAIC,CAAC,MAAO1hD,IACP,CAgJiE,IAAIyU,IAkCvE,MACMktC,GAAsB7G,EAAsB,gBAE5B8G,EAAmB,UAEvB9G,EAAY,MA+YxB,SAAU+G,GAAUjB,GAKR,IALS,SACzBxM,EAAQ,SACRvsC,EAAQ,OACR00C,EAAM,OACNn9C,GACgBwhD,EACZkB,EAAahH,EAAAA,SPraH,IACdvzC,EOqa0B,MAAtBu6C,EAAWpxC,UACboxC,EAAWpxC,cPtab,KAAAnJ,EOsayC,CAAEnI,SAAQuzC,UAAU,MPta7DprC,EAA8B,CAAC,GAqDxBgrC,GAnDP,SACEnzC,EACAwzC,GAEA,IAAI,SACFf,EAAW,IAAG,OACd9xB,EAAS,GAAE,KACX+xB,EAAO,IACLC,EAAU3yC,EAAO0d,SAASg1B,KAAKE,OAAO,IAY1C,OAJKH,EAASgE,WAAW,MAAShE,EAASgE,WAAW,OACpDhE,EAAW,IAAMA,GAGZH,EACL,GACA,CAAEG,WAAU9xB,SAAQ+xB,QAEnBc,EAAc1Y,OAAS0Y,EAAc1Y,MAAMsX,KAAQ,KACnDoB,EAAc1Y,OAAS0Y,EAAc1Y,MAAMxd,KAAQ,UAExD,IAEA,SAAwBtd,EAAgBuyC,GACtC,IAAIhlC,EAAOvN,EAAOC,SAAS0iD,cAAc,QACrCp/B,EAAO,GAEX,GAAIhW,GAAQA,EAAKq1C,aAAa,QAAS,CACrC,IAAI7hC,EAAM/gB,EAAO0d,SAAS6F,KACtB0vB,EAAYlyB,EAAIhU,QAAQ,KAC5BwW,GAAsB,IAAf0vB,EAAmBlyB,EAAMA,EAAI/e,MAAM,EAAGixC,EAC9C,CAED,OAAO1vB,EAAO,KAAqB,kBAAPgvB,EAAkBA,EAAKM,EAAWN,GAChE,IAEA,SAA8B70B,EAAoB60B,GAChDP,EACkC,MAAhCt0B,EAAS+0B,SAASvlC,OAAO,GAAU,6DAC0Bq8B,KAAKC,UAChE+I,GACD,IAEL,GAMEpqC,KOgXF,IAAIsrC,EAAUiP,EAAWpxC,SACpBwpB,EAAO+nB,GAAgBnH,EAAAA,SAAe,CACzC1lB,OAAQyd,EAAQzd,OAChBtY,SAAU+1B,EAAQ/1B,YAEhB,mBAAEolC,GAAuB3F,GAAU,CAAC,EACpCnQ,EAAW0O,EAAAA,aACZqH,IACCD,GAAsBP,GAClBA,IAAoB,IAAMM,EAAaE,KACvCF,EAAaE,EAAS,GAE5B,CAACF,EAAcC,IAKjB,OAFApH,EAAAA,iBAAsB,IAAMjI,EAAQU,OAAOnH,IAAW,CAACyG,EAASzG,IAG9D0O,EAAAA,cAAC6F,GAAM,CACLvM,SAAUA,EACVvsC,SAAUA,EACViV,SAAUod,EAAMpd,SAChB6gC,eAAgBzjB,EAAM9E,OACtByZ,UAAWgE,EACX0J,OAAQA,GAGd,CAkEA,MAAM6F,GACc,qBAAXhjD,QACoB,qBAApBA,OAAOC,UAC2B,qBAAlCD,OAAOC,SAASC,cAEnB+iD,GAAqB,gCAKdC,GAAOxH,EAAAA,YAClB,SAAoByH,EAalBh0B,GAAG,IAKCi0B,GAjBJ,QACEziB,EAAO,SACP4c,EAAQ,eACR8F,EAAc,QACd3gD,EAAO,MACPo4B,EAAK,OACLpsB,EAAM,GACN6jC,EAAE,mBACF+Q,EAAkB,wBAClBC,GAEDJ,EADIlM,EAAIuM,GAAAL,EAAAM,KAIL,SAAEzO,GAAa0G,EAAAA,WAAiBgI,GAIhCC,GAAa,EAEjB,GAAkB,kBAAPpR,GAAmB0Q,GAAmB5gD,KAAKkwC,KAEpD6Q,EAAe7Q,EAGXyQ,IACF,IACE,IAAIY,EAAa,IAAI3P,IAAIj0C,OAAO0d,SAAS6F,MACrCsgC,EAAYtR,EAAGkE,WAAW,MAC1B,IAAIxC,IAAI2P,EAAWE,SAAWvR,GAC9B,IAAI0B,IAAI1B,GACRQ,EAAOoC,EAAc0O,EAAUpR,SAAUuC,GAEzC6O,EAAU7P,SAAW4P,EAAW5P,QAAkB,MAARjB,EAE5CR,EAAKQ,EAAO8Q,EAAUljC,OAASkjC,EAAUnR,KAEzCiR,GAAa,EAEf,MAAO/iD,IAOR,CAKL,IAAI2iB,EH96BD,SACLgvB,EAAMwR,GAEE,IADR,SAAExG,QAA8C,IAAAwG,EAAG,CAAC,EAACA,EAGnD7H,KADFE,GAAU,GAOV,IAAI,SAAEpH,EAAQ,UAAEvF,GAAciM,EAAAA,WAAiBE,IAC3C,KAAElJ,EAAI,SAAED,EAAQ,OAAE9xB,GAAW88B,GAAgBlL,EAAI,CAAEgL,aAEnDyG,EAAiBvR,EAWrB,MALiB,MAAbuC,IACFgP,EACe,MAAbvR,EAAmBuC,EAAW0B,EAAU,CAAC1B,EAAUvC,KAGhDhD,EAAU4D,WAAW,CAAEZ,SAAUuR,EAAgBrjC,SAAQ+xB,QAClE,CGo5BeuR,CAAQ1R,EAAI,CAAEgL,aAErB2G,EAoZF,SACJ3R,EAAMwR,GAeA,IAdN,OACEr1C,EACAhM,QAASyhD,EAAW,MACpBrpB,EAAK,mBACLwoB,EAAkB,SAClB/F,EAAQ,wBACRgG,cAQE,CAAC,EAACQ,EAEFhH,EAAWR,KACX7+B,EAAWy+B,KACXpJ,EAAO0K,GAAgBlL,EAAI,CAAEgL,aAEjC,OAAO7B,EAAAA,aACJt6B,IACC,GDj3CU,SACdA,EACA1S,GAEA,OACmB,IAAjB0S,EAAMvG,UACJnM,GAAqB,UAAXA,KAVhB,SAAyB0S,GACvB,SAAUA,EAAM1G,SAAW0G,EAAM3G,QAAU2G,EAAM7G,SAAW6G,EAAM5G,SACpE,CASK4pC,CAAgBhjC,EAErB,CCw2CUijC,CAAuBjjC,EAAO1S,GAAS,CACzC0S,EAAMxI,iBAIN,IAAIlW,OACcquC,IAAhBoT,EACIA,EACAtR,EAAWn1B,KAAcm1B,EAAWE,GAE1CgK,EAASxK,EAAI,CACX7vC,UACAo4B,QACAwoB,qBACA/F,WACAgG,2BAEH,IAEH,CACE7lC,EACAq/B,EACAhK,EACAoR,EACArpB,EACApsB,EACA6jC,EACA+Q,EACA/F,EACAgG,GAGN,CA5c0Be,CAAoB/R,EAAI,CAC5C7vC,UACAo4B,QACApsB,SACA40C,qBACA/F,WACAgG,4BAWF,OAEE7H,EAAAA,cAAA,IAAAlJ,GAAA,GACMyE,EAAI,CACR1zB,KAAM6/B,GAAgB7/B,EACtBod,QAASgjB,GAAcN,EAAiB1iB,EAd5C,SACEvf,GAEIuf,GAASA,EAAQvf,GAChBA,EAAM3I,kBACTyrC,EAAgB9iC,EAEpB,EAQI+N,IAAKA,EACLzgB,OAAQA,IAGd,IAgVF,IAAKguC,GAQAG,IARL,SAAKH,GACHA,EAAA,4CACAA,EAAA,sBACAA,EAAA,oCACAA,EAAA,wBACAA,EAAA,+CACD,EAND,CAAKA,KAAAA,GAMJ,KAED,SAAKG,GACHA,EAAA,wBACAA,EAAA,0BACAA,EAAA,2CACD,CAJD,CAAKA,KAAAA,GAIJ,mBC51CD,MAoBA,GApBa0H,KAGLC,EAAAA,GAAAA,MAAA,OAAA/7C,SAAA,EACIg8C,EAAAA,GAAAA,KAAA,MAAIC,UAAU,QAAOj8C,SAAC,yCACtBg8C,EAAAA,GAAAA,KAAA,KAAGC,UAAU,aAAYj8C,SAAC,4cCqBtC,GAzBck8C,KAGNH,EAAAA,GAAAA,MAAA,OAAA/7C,SAAA,EACK+7C,EAAAA,GAAAA,MAAA,OAAKE,UAAU,YAAWj8C,SAAA,EAC3B+7C,EAAAA,GAAAA,MAAA,OAAKE,UAAU,aAAYj8C,SAAA,EACvBg8C,EAAAA,GAAAA,KAAA,MAAAh8C,SAAI,YACJg8C,EAAAA,GAAAA,KAAA,KAAAh8C,SAAG,gGAIP+7C,EAAAA,GAAAA,MAAA,OAAKE,UAAU,aAAYj8C,SAAA,EACvBg8C,EAAAA,GAAAA,KAAA,MAAAh8C,SAAI,aACJg8C,EAAAA,GAAAA,KAAA,KAAAh8C,SAAG,4FAIPg8C,EAAAA,GAAAA,KAAA,OAAKC,UAAU,qBAAoBj8C,UACvCg8C,EAAAA,GAAAA,KAAA,KAAGlhC,KAAMqhC,GAASC,UAAQ,EAACH,UAAU,kBAAiBj8C,SAAC,iCCT/D,GAVgBq8C,KAGRL,EAAAA,GAAAA,KAAA,OAAAh8C,SAAK,YCOb,GAVgBs8C,KAGRN,EAAAA,GAAAA,KAAA,OAAAh8C,SAAK,YCAAu8C,GAAY,CACrB,CACIjS,KAAM,IACN/tB,SAASy/B,EAAAA,GAAAA,KAACF,GAAI,IACdn/C,KAAM,QAEV,CACI2tC,KAAM,SACN/tB,SAASy/B,EAAAA,GAAAA,KAACE,GAAK,IACfv/C,KAAM,YAEV,CACI2tC,KAAM,WACN/tB,SAASy/B,EAAAA,GAAAA,KAACK,GAAO,IACjB1/C,KAAM,WAEV,CACI2tC,KAAM,WACN/tB,SAASy/B,EAAAA,GAAAA,KAACM,GAAO,IACjB3/C,KAAM,eCzBmutsB,MAAwD,GAAe,IAAwB,yDC2Ch1tsB,SA/BA,WAGI,OACIo/C,EAAAA,GAAAA,MAACjD,GAAM,CAAA94C,SAAA,EAEH+7C,EAAAA,GAAAA,MAAA,OAAKE,UAAU,iBAAgBj8C,SAAA,EAC3Bg8C,EAAAA,GAAAA,KAAA,OAAK7gB,IAAKqhB,GAAMP,UAAU,OAAOQ,IAAI,SAEpCF,GAAUzX,KAAI,CAACnd,EAAGslB,KAEf+O,EAAAA,GAAAA,KAACvB,GAAI,CAAS3Q,GAAIniB,EAAE2iB,KAAM2R,UAAU,YAAWj8C,SAAE2nB,EAAEhrB,MAAxCswC,SAGnB+O,EAAAA,GAAAA,KAAA,OAAKC,UAAU,OAAMj8C,UACjBg8C,EAAAA,GAAAA,KAAC1C,GAAM,CAAAt5C,SAEFu8C,GAAUzX,KAAI,CAACnd,EAAGslB,KACf+O,EAAAA,GAAAA,KAACpD,GAAK,CAAStO,KAAM3iB,EAAE2iB,KAAM/tB,QAASoL,EAAEpL,SAA5B0wB,WAWpC,EC/BA,SANA,WACE,OACE+O,EAAAA,GAAAA,KAACU,GAAY,GAEjB,ECFa3C,EAAAA,WACXviD,SAASmlD,eAAe,SAErB7/C,QACHk/C,EAAAA,GAAAA,KAAC/I,EAAAA,WAAgB,CAAAjzC,UACfg8C,EAAAA,GAAAA,KAACY,GAAG","sources":["../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","components/Home.tsx","components/About.tsx","components/Careers.tsx","components/Contact.tsx","router/routes.js","media/logo.svg","router/router.tsx","App.tsx","index.tsx"],"sourcesContent":["/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/brahmajyotiholdings/\";","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => DataFunctionReturnValue\n  ) => Promise<DataStrategyResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n  fetcherKey: string | null;\n}\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface DataStrategyResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<Record<string, DataStrategyResult>>;\n}\n\nexport interface AgnosticPatchRoutesOnNavigationFunction<\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> {\n  (opts: {\n    path: string;\n    matches: M[];\n    patch: (routeId: string | null, children: AgnosticRouteObject[]) => void;\n  }): void | Promise<void>;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  DataStrategyResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnNavigationFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  unstable_patchRoutesOnNavigation?: AgnosticPatchRoutesOnNavigationFunction;\n  unstable_dataStrategy?: DataStrategyFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n      unstable_flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.unstable_patchRoutesOnNavigation;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // FIFO queue of previously discovered routes to prevent re-calling on\n  // subsequent navigations to the same path\n  let discoveredRoutesMaxSize = 1000;\n  let discoveredRoutes = new Set<string>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = (m: AgnosticDataRouteMatch) => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (\n        typeof m.route.loader === \"function\" &&\n        m.route.loader.hydrate === true\n      ) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return (\n        (loaderData && loaderData[m.route.id] !== undefined) ||\n        (errors && errors[m.route.id] !== undefined)\n      );\n    };\n\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnNavigationFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate: (() => void) | undefined = undefined;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = undefined;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          let nextHistoryUpdatePromise = new Promise<void>((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked, after the url\n              // restoration is also complete.  See:\n              // https://github.com/remix-run/react-router/issues/11613\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: opts.viewTransitionOpts,\n        unstable_flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true,\n      }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        state,\n        request,\n        [actionMatch],\n        matches,\n        null\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors)\n        .filter(([id]) => !matchesToLoad.some((m) => m.route.id === id))\n        .forEach(([routeId, error]) => {\n          errors = Object.assign(errors || {}, { [routeId]: error });\n        });\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      state,\n      fetchRequest,\n      [match],\n      requestMatches,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false\n      );\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false\n      );\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      state,\n      fetchRequest,\n      [match],\n      matches,\n      key\n    );\n    let result = results[match.route.id];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    isNavigation: boolean,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    state: RouterState,\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    fetcherKey: string | null\n  ): Promise<Record<string, DataResult>> {\n    let results: Record<string, DataStrategyResult>;\n    let dataResults: Record<string, DataResult> = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        state,\n        request,\n        matchesToLoad,\n        matches,\n        fetcherKey,\n        manifest,\n        mapRouteProperties\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach((m) => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e,\n        };\n      });\n      return dataResults;\n    }\n\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result as Response;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          ),\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n\n    return dataResults;\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    state: RouterState,\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let currentMatches = state.matches;\n\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\n      \"loader\",\n      state,\n      request,\n      matchesToLoad,\n      matches,\n      null\n    );\n\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.controller) {\n          let results = await callDataStrategy(\n            \"loader\",\n            state,\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            [f.match],\n            f.matches,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          // Fetcher results are keyed by fetcher key from here on out, not routeId\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: ResultType.error,\n              error: getInternalRouterError(404, {\n                pathname: f.path,\n              }),\n            } as ErrorResult,\n          });\n        }\n      })\n    );\n\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n\n    await Promise.all([\n      resolveNavigationDeferredResults(\n        matches,\n        loaderResults,\n        request.signal,\n        currentMatches,\n        state.loaderData\n      ),\n      resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function handleDiscoverRouteError(\n    pathname: string,\n    discoverResult: DiscoverRoutesErrorResult\n  ) {\n    return {\n      boundaryId: findNearestBoundary(discoverResult.partialMatches).route.id,\n      error: getInternalRouterError(400, {\n        type: \"route-discovery\",\n        pathname,\n        message:\n          discoverResult.error != null && \"message\" in discoverResult.error\n            ? discoverResult.error\n            : String(discoverResult.error),\n      }),\n    };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnNavigationImpl) {\n      // Don't bother re-calling patchRouteOnMiss for a path we've already\n      // processed.  the last execution would have patched the route tree\n      // accordingly so `matches` here are already accurate.\n      if (discoveredRoutes.has(pathname)) {\n        return { active: false, matches };\n      }\n\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal\n  ): Promise<DiscoverRoutesResult> {\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      try {\n        await loadLazyRouteChildren(\n          patchRoutesOnNavigationImpl!,\n          pathname,\n          partialMatches,\n          routesToUse,\n          manifest,\n          mapRouteProperties,\n          pendingPatchRoutes,\n          signal\n        );\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return { type: \"success\", matches: newMatches };\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // Avoid loops if the second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        (partialMatches.length === newPartialMatches.length &&\n          partialMatches.every(\n            (m, i) => m.route.id === newPartialMatches![i].route.id\n          ))\n      ) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return { type: \"success\", matches: null };\n      }\n\n      partialMatches = newPartialMatches;\n    }\n  }\n\n  function addToFifoQueue(path: string, queue: Set<string>) {\n    if (queue.size >= discoveredRoutesMaxSize) {\n      let first = queue.values().next().value;\n      queue.delete(first);\n    }\n    queue.add(path);\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          unstable_dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        unstable_dataStrategy\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      unstable_dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      unstable_dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null\n  ): Promise<Record<string, DataResult>> {\n    let results = await callDataStrategyImpl(\n      unstable_dataStrategy || defaultDataStrategy,\n      type,\n      null,\n      request,\n      matchesToLoad,\n      matches,\n      null,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    let dataResults: Record<string, DataResult> = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResultResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        dataResults[match.route.id] =\n          await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isInitialLoad: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[0]\n      : undefined;\n  let boundaryMatches = boundaryId\n    ? getLoaderMatchesUntilBoundary(matches, boundaryId)\n    : matches;\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return (\n        state.loaderData[route.id] === undefined &&\n        // Don't re-run if the loader ran and threw an error\n        (!state.errors || state.errors[route.id] === undefined)\n      );\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      isInitialLoad ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Idempotent utility to execute patchRoutesOnNavigation() to lazily load route\n * definitions and update the routes/routeManifest\n */\nasync function loadLazyRouteChildren(\n  patchRoutesOnNavigationImpl: AgnosticPatchRoutesOnNavigationFunction,\n  path: string,\n  matches: AgnosticDataRouteMatch[],\n  routes: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  pendingRouteChildren: Map<\n    string,\n    ReturnType<typeof patchRoutesOnNavigationImpl>\n  >,\n  signal: AbortSignal\n) {\n  let key = [path, ...matches.map((m) => m.route.id)].join(\"-\");\n  try {\n    let pending = pendingRouteChildren.get(key);\n    if (!pending) {\n      pending = patchRoutesOnNavigationImpl({\n        path,\n        matches,\n        patch: (routeId, children) => {\n          if (!signal.aborted) {\n            patchRoutesImpl(\n              routeId,\n              children,\n              routes,\n              manifest,\n              mapRouteProperties\n            );\n          }\n        },\n      });\n      pendingRouteChildren.set(key, pending);\n    }\n\n    if (pending && isPromise<AgnosticRouteObject[]>(pending)) {\n      await pending;\n    }\n  } finally {\n    pendingRouteChildren.delete(key);\n  }\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [routeId, \"patch\", String(route.children?.length || \"0\")],\n      manifest\n    );\n    if (route.children) {\n      route.children.push(...dataChildren);\n    } else {\n      route.children = dataChildren;\n    }\n  } else {\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [\"patch\", String(routesToUse.length || \"0\")],\n      manifest\n    );\n    routesToUse.push(...dataChildren);\n  }\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy({\n  matches,\n}: DataStrategyFunctionArgs): ReturnType<DataStrategyFunction> {\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  return results.reduce(\n    (acc, result, i) =>\n      Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n    {}\n  );\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  state: RouterState | null,\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  fetcherKey: string | null,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<Record<string, DataStrategyResult>> {\n  let loadRouteDefinitionsPromises = matches.map((m) =>\n    m.route.lazy\n      ? loadLazyRouteModule(m.route, mapRouteProperties, manifest)\n      : undefined\n  );\n\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve: DataStrategyMatch[\"resolve\"] = async (handlerOverride) => {\n      if (\n        handlerOverride &&\n        request.method === \"GET\" &&\n        (match.route.lazy || match.route.loader)\n      ) {\n        shouldLoad = true;\n      }\n      return shouldLoad\n        ? callLoaderOrAction(\n            type,\n            request,\n            match,\n            loadRoutePromise,\n            handlerOverride,\n            requestContext\n          )\n        : Promise.resolve({ type: ResultType.data, result: undefined });\n    };\n\n    return {\n      ...match,\n      shouldLoad,\n      resolve,\n    };\n  });\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext,\n  });\n\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n\n  return results;\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  loadRoutePromise: Promise<void> | undefined,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<DataStrategyResult> {\n  let result: DataStrategyResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<DataStrategyResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<DataStrategyResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<DataStrategyResult> = (async () => {\n      try {\n        let val = await (handlerOverride\n          ? handlerOverride((ctx: unknown) => actualHandler(ctx))\n          : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadRoutePromise,\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertDataStrategyResultToDataResult(\n  dataStrategyResult: DataStrategyResult\n): Promise<DataResult> {\n  let { result, type } = dataStrategyResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n        };\n      }\n\n      // Convert thrown unstable_data() to ErrorResponse instances\n      result = new ErrorResponseImpl(\n        result.init?.status || 500,\n        undefined,\n        result.data\n      );\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: Record<string, DataResult>,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\" | \"route-discovery\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (type === \"route-discovery\") {\n      errorMessage =\n        `Unable to match URL \"${pathname}\" - the \\`unstable_patchRoutesOnNavigation()\\` ` +\n        `function threw the following error:\\n${message}`;\n    } else if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: Record<string, DataResult>\n): { key: string; result: RedirectResult } | undefined {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isDataStrategyResult(result: unknown): result is DataStrategyResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectDataStrategyResultResult(result: DataStrategyResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveNavigationDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  signal: AbortSignal,\n  currentMatches: AgnosticDataRouteMatch[],\n  currentLoaderData: RouteData\n) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then((result) => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\n\nasync function resolveFetcherDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  revalidatingFetchers: RevalidatingFetcher[]\n) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, routeId, controller } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(\n        controller,\n        \"Expected an AbortController for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, controller.signal, true).then(\n        (result) => {\n          if (result) {\n            results[key] = result;\n          }\n        }\n      );\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else if (\n      future?.v7_partialHydration &&\n      parentMatches.length === 0 &&\n      !dataRouterState.initialized &&\n      dataRouterState.matches.length > 0\n    ) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  unstable_flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  unstable_DataStrategyFunction,\n  unstable_PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  unstable_DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n  unstable_PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  unstable_dataStrategy?: unstable_DataStrategyFunction;\n  unstable_patchRoutesOnNavigation?: unstable_PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts?.unstable_patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts?.unstable_patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","import React from \"react\";\r\nimport \"../router/router.css\";\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"title\">Brahma Jyoti Holding Limited (BJHL)</h1>\r\n            <p className=\"container1\">Brahma Jyoti Green Energy Limited is a leading force in Nepal’s\r\nrenewable energy sector, dedicated to advancing sustainable power solutions\r\nthrough its specialized focus on commercial solar power and hydropower\r\nprojects. Our company is committed to leveraging Nepal’s natural resources to\r\ndeliver innovative and efficient energy solutions that meet the growing\r\ndemand for clean energy</p>\r\n          \r\n           \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"../router/router.css\";\r\nimport pdfFile from \"../media/memorandum.pdf\"\r\n\r\nconst About = () => {\r\n\r\n    return(\r\n        <div>\r\n             <div className=\"align-two\"> \r\n            <div className=\"container1\">\r\n                <h2>Vision</h2>\r\n                <p>To be the most trusted Institution and GAIN\r\n                    expertise in Trading and investment sector.\r\n                </p>\r\n            </div>\r\n            <div className=\"container1\">\r\n                <h2>Mission</h2>\r\n                <p>To work with honesty and provide fair dealing\r\n                in all the Trading and investment.</p>\r\n            </div>\r\n            </div>\r\n            <div className=\"download-container\">\r\n        <a href={pdfFile} download className=\"download-button\">Download our memorandum</a>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React from \"react\";\r\n\r\n\r\nconst Careers = () => {\r\n\r\n    return(\r\n        <div>\r\n            Careers\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Careers;","import React from \"react\";\r\n\r\n\r\nconst Contact = () => {\r\n\r\n    return(\r\n        <div>\r\n            Contact\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Contact;","import Home from \"../components/Home\"\r\nimport About from \"../components/About\"\r\nimport Careers from \"../components/Careers\"\r\nimport Contact from \"../components/Contact\"\r\n\r\n\r\nexport const ROUTELIST = [\r\n    {\r\n        path: \"/\",\r\n        element: <Home/>,\r\n        name: \"Home\"\r\n    },\r\n    {\r\n        path: \"/about\",\r\n        element: <About/>,\r\n        name: \"About Us\"\r\n    },\r\n    {\r\n        path: \"/careers\",\r\n        element: <Careers/>,\r\n        name: \"Careers\"\r\n    },\r\n    {\r\n        path: \"/contact\",\r\n        element: <Contact/>,\r\n        name: \"Contact Us\"\r\n    }\r\n]","var _path,_path2,_path3,_path4,_path5,_path6,_path7,_path8,_path9,_path10,_path11,_path12,_path13,_path14,_path15,_path16,_path17,_path18,_path19,_path20,_path21,_path22,_path23,_path24,_path25,_path26,_path27,_path28,_path29,_path30,_path31,_path32,_path33,_path34,_path35,_path36,_path37,_path38,_path39,_path40,_path41,_path42,_path43,_path44,_path45,_path46,_path47,_path48,_path49,_path50,_path51,_path52,_path53,_path54,_path55,_path56,_path57,_path58,_path59,_path60,_path61,_path62,_path63,_path64,_path65,_path66,_path67,_path68,_path69,_path70,_path71,_path72,_path73,_path74,_path75,_path76,_path77,_path78,_path79,_path80,_path81,_path82,_path83,_path84,_path85,_path86,_path87,_path88,_path89,_path90,_path91,_path92,_path93,_path94,_path95,_path96,_path97,_path98,_path99,_path100,_path101,_path102,_path103,_path104,_path105,_path106,_path107,_path108,_path109,_path110,_path111,_path112,_path113,_path114,_path115,_path116,_path117,_path118,_path119,_path120,_path121,_path122,_path123,_path124,_path125,_path126,_path127,_path128,_path129,_path130,_path131,_path132,_path133,_path134,_path135,_path136,_path137,_path138,_path139,_path140,_path141,_path142,_path143,_path144,_path145,_path146,_path147,_path148,_path149,_path150,_path151,_path152,_path153,_path154,_path155,_path156,_path157,_path158,_path159,_path160,_path161,_path162,_path163,_path164,_path165,_path166,_path167,_path168,_path169,_path170,_path171,_path172,_path173,_path174,_path175,_path176,_path177,_path178,_path179,_path180,_path181,_path182,_path183,_path184,_path185,_path186,_path187,_path188,_path189,_path190,_path191,_path192,_path193,_path194,_path195,_path196,_path197,_path198,_path199,_path200,_path201,_path202,_path203,_path204,_path205,_path206,_path207,_path208,_path209,_path210,_path211,_path212,_path213,_path214,_path215,_path216,_path217,_path218,_path219,_path220,_path221,_path222,_path223,_path224,_path225,_path226,_path227,_path228,_path229,_path230,_path231,_path232,_path233,_path234,_path235,_path236,_path237,_path238,_path239,_path240,_path241,_path242,_path243,_path244,_path245,_path246,_path247,_path248,_path249,_path250,_path251,_path252,_path253,_path254,_path255,_path256,_path257,_path258,_path259,_path260,_path261,_path262,_path263,_path264,_path265,_path266,_path267,_path268,_path269,_path270,_path271,_path272,_path273,_path274,_path275,_path276,_path277,_path278,_path279,_path280,_path281,_path282,_path283,_path284,_path285,_path286,_path287,_path288,_path289,_path290,_path291,_path292,_path293,_path294,_path295,_path296,_path297,_path298,_path299,_path300,_path301,_path302,_path303,_path304,_path305,_path306,_path307,_path308,_path309,_path310,_path311,_path312,_path313,_path314,_path315,_path316,_path317,_path318,_path319,_path320,_path321,_path322,_path323,_path324,_path325,_path326,_path327,_path328,_path329,_path330,_path331,_path332,_path333,_path334,_path335,_path336,_path337,_path338,_path339,_path340,_path341,_path342,_path343,_path344,_path345,_path346,_path347,_path348,_path349,_path350,_path351,_path352,_path353,_path354,_path355,_path356,_path357,_path358,_path359,_path360,_path361,_path362,_path363,_path364,_path365,_path366,_path367,_path368,_path369,_path370,_path371,_path372,_path373,_path374,_path375,_path376,_path377,_path378,_path379,_path380,_path381,_path382,_path383,_path384,_path385,_path386,_path387,_path388,_path389,_path390,_path391,_path392,_path393,_path394,_path395,_path396,_path397,_path398,_path399,_path400,_path401,_path402,_path403,_path404,_path405,_path406,_path407,_path408,_path409,_path410,_path411,_path412,_path413,_path414,_path415,_path416,_path417,_path418,_path419,_path420,_path421,_path422,_path423,_path424,_path425,_path426,_path427,_path428,_path429,_path430,_path431,_path432,_path433,_path434,_path435,_path436,_path437,_path438,_path439,_path440,_path441,_path442,_path443,_path444,_path445,_path446,_path447,_path448,_path449,_path450,_path451,_path452,_path453,_path454,_path455,_path456,_path457,_path458,_path459,_path460,_path461,_path462,_path463,_path464,_path465,_path466,_path467,_path468,_path469,_path470,_path471,_path472,_path473,_path474,_path475,_path476,_path477,_path478,_path479,_path480,_path481,_path482,_path483,_path484,_path485,_path486,_path487,_path488,_path489,_path490,_path491,_path492,_path493,_path494,_path495,_path496,_path497,_path498,_path499,_path500,_path501,_path502,_path503,_path504,_path505,_path506,_path507,_path508,_path509,_path510,_path511,_path512,_path513,_path514,_path515,_path516,_path517,_path518,_path519,_path520,_path521,_path522,_path523,_path524,_path525,_path526,_path527,_path528,_path529,_path530,_path531,_path532,_path533,_path534,_path535,_path536,_path537,_path538,_path539,_path540,_path541,_path542,_path543,_path544,_path545,_path546,_path547,_path548,_path549,_path550,_path551,_path552,_path553,_path554,_path555,_path556,_path557,_path558,_path559,_path560,_path561,_path562,_path563,_path564,_path565,_path566,_path567,_path568,_path569,_path570,_path571,_path572,_path573,_path574,_path575,_path576,_path577,_path578,_path579,_path580,_path581,_path582,_path583,_path584,_path585,_path586,_path587,_path588,_path589,_path590,_path591,_path592,_path593,_path594,_path595,_path596,_path597,_path598,_path599,_path600,_path601,_path602,_path603,_path604,_path605,_path606,_path607,_path608,_path609,_path610,_path611,_path612,_path613,_path614,_path615,_path616,_path617,_path618,_path619,_path620,_path621,_path622,_path623,_path624,_path625,_path626,_path627,_path628,_path629,_path630,_path631,_path632,_path633,_path634,_path635,_path636,_path637,_path638,_path639,_path640,_path641,_path642,_path643,_path644,_path645,_path646,_path647,_path648,_path649,_path650,_path651,_path652,_path653,_path654,_path655,_path656,_path657,_path658,_path659,_path660,_path661,_path662,_path663,_path664,_path665,_path666,_path667,_path668,_path669,_path670,_path671,_path672,_path673,_path674,_path675,_path676,_path677,_path678,_path679,_path680,_path681,_path682,_path683,_path684,_path685,_path686,_path687,_path688,_path689,_path690,_path691,_path692,_path693,_path694,_path695,_path696,_path697,_path698,_path699,_path700,_path701,_path702,_path703,_path704,_path705,_path706,_path707,_path708,_path709,_path710,_path711,_path712,_path713,_path714,_path715,_path716,_path717,_path718,_path719,_path720,_path721,_path722,_path723,_path724,_path725,_path726,_path727,_path728,_path729,_path730,_path731,_path732,_path733,_path734,_path735,_path736,_path737,_path738,_path739,_path740,_path741,_path742,_path743,_path744,_path745,_path746,_path747,_path748,_path749,_path750,_path751,_path752,_path753,_path754,_path755,_path756,_path757,_path758,_path759,_path760,_path761,_path762,_path763,_path764,_path765,_path766,_path767,_path768,_path769,_path770,_path771,_path772,_path773,_path774,_path775,_path776,_path777,_path778,_path779,_path780,_path781,_path782,_path783,_path784,_path785,_path786,_path787,_path788,_path789,_path790,_path791,_path792,_path793,_path794,_path795,_path796,_path797,_path798,_path799,_path800,_path801,_path802,_path803,_path804,_path805,_path806,_path807,_path808,_path809,_path810,_path811,_path812,_path813,_path814,_path815,_path816,_path817,_path818,_path819,_path820,_path821,_path822,_path823,_path824,_path825,_path826,_path827,_path828,_path829,_path830,_path831,_path832,_path833,_path834,_path835,_path836,_path837,_path838,_path839,_path840,_path841,_path842,_path843,_path844,_path845,_path846,_path847,_path848,_path849,_path850,_path851,_path852,_path853,_path854,_path855,_path856,_path857,_path858,_path859,_path860,_path861,_path862,_path863,_path864,_path865,_path866,_path867,_path868,_path869,_path870,_path871,_path872,_path873,_path874,_path875,_path876,_path877,_path878,_path879,_path880,_path881,_path882,_path883,_path884,_path885,_path886,_path887,_path888,_path889,_path890,_path891,_path892,_path893,_path894,_path895,_path896,_path897,_path898,_path899,_path900,_path901,_path902,_path903,_path904,_path905,_path906,_path907,_path908,_path909,_path910,_path911,_path912,_path913,_path914,_path915,_path916,_path917,_path918,_path919,_path920,_path921,_path922,_path923,_path924,_path925,_path926,_path927,_path928,_path929,_path930,_path931,_path932,_path933,_path934,_path935,_path936,_path937,_path938,_path939,_path940,_path941,_path942,_path943,_path944,_path945,_path946,_path947,_path948,_path949,_path950,_path951,_path952,_path953,_path954,_path955,_path956,_path957,_path958,_path959,_path960,_path961,_path962,_path963,_path964,_path965,_path966,_path967,_path968,_path969,_path970,_path971,_path972,_path973,_path974,_path975,_path976,_path977,_path978,_path979,_path980,_path981,_path982,_path983,_path984,_path985,_path986,_path987,_path988,_path989,_path990,_path991,_path992,_path993,_path994,_path995,_path996,_path997,_path998,_path999,_path1000,_path1001,_path1002,_path1003,_path1004,_path1005,_path1006,_path1007,_path1008,_path1009,_path1010,_path1011,_path1012,_path1013,_path1014,_path1015,_path1016,_path1017,_path1018,_path1019,_path1020,_path1021,_path1022,_path1023,_path1024,_path1025,_path1026,_path1027,_path1028,_path1029,_path1030,_path1031,_path1032,_path1033,_path1034,_path1035,_path1036,_path1037,_path1038,_path1039,_path1040,_path1041,_path1042,_path1043,_path1044,_path1045,_path1046,_path1047,_path1048,_path1049,_path1050,_path1051,_path1052,_path1053,_path1054,_path1055,_path1056,_path1057,_path1058,_path1059,_path1060,_path1061,_path1062,_path1063,_path1064,_path1065,_path1066,_path1067,_path1068,_path1069,_path1070,_path1071,_path1072,_path1073,_path1074,_path1075,_path1076,_path1077,_path1078,_path1079,_path1080,_path1081,_path1082,_path1083,_path1084,_path1085,_path1086,_path1087,_path1088,_path1089,_path1090,_path1091,_path1092,_path1093,_path1094,_path1095,_path1096,_path1097,_path1098,_path1099,_path1100,_path1101,_path1102,_path1103,_path1104,_path1105,_path1106,_path1107,_path1108,_path1109,_path1110,_path1111,_path1112,_path1113,_path1114,_path1115,_path1116,_path1117,_path1118,_path1119,_path1120,_path1121,_path1122,_path1123,_path1124,_path1125,_path1126,_path1127,_path1128,_path1129,_path1130,_path1131,_path1132,_path1133,_path1134,_path1135,_path1136,_path1137,_path1138,_path1139,_path1140,_path1141,_path1142;function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from\"react\";function SvgLogo(_ref,svgRef){let{title,titleId,...props}=_ref;return/*#__PURE__*/React.createElement(\"svg\",_extends({xmlns:\"http://www.w3.org/2000/svg\",width:979,height:729,ref:svgRef,\"aria-labelledby\":titleId},props),title?/*#__PURE__*/React.createElement(\"title\",{id:titleId},title):null,_path||(_path=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C323.07 0 646.14 0 979 0 C979 240.57 979 481.14 979 729 C655.93 729 332.86 729 0 729 C0 488.43 0 247.86 0 0 Z \",fill:\"#020101\",transform:\"translate(0,0)\"})),_path2||(_path2=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.72431888 1.02373036 5.35824379 2.21841889 8 3.4375 C14.40232832 6.35585455 20.50164483 8.8738279 27.5 10 C31.50317761 10.68703183 35.15304079 11.68853663 39 13 C46.91488686 14.47177648 54.98614956 14.37271862 63.01171875 14.60546875 C64.71908203 14.66154297 64.71908203 14.66154297 66.4609375 14.71875 C67.50040527 14.74904297 68.53987305 14.77933594 69.61083984 14.81054688 C72 15 72 15 73 16 C73.21567927 17.33414106 73.37113612 18.67813306 73.5 20.0234375 C73.5820166 20.87139893 73.6640332 21.71936035 73.74853516 22.59301758 C73.83151855 23.51107178 73.91450195 24.42912598 74 25.375 C74.13027588 26.77431763 74.13027588 26.77431763 74.26318359 28.2019043 C75.09488794 37.4559805 75.59692352 46.71863361 76 56 C77.32 53.36 78.64 50.72 80 48 C80.66 48 81.32 48 82 48 C82.165 47.319375 82.33 46.63875 82.5 45.9375 C85.27044734 40.51204063 89.9153663 36.85618884 95.5 34.5625 C96.325 34.376875 97.15 34.19125 98 34 C97 37 97 37 94.5625 38.875 C91.82297246 41.14680333 91.0234817 42.65042354 90 46 C90.70125 45.0925 91.4025 44.185 92.125 43.25 C94.71739555 40.14207124 97.45526335 38.0035468 101 36 C101.99 36 102.98 36 104 36 C104.25 42.625 104.25 42.625 102 46 C101.34 46 100.68 46 100 46 C99.814375 46.556875 99.62875 47.11375 99.4375 47.6875 C97.62075833 50.61008442 95.43244405 51.93161032 92.55859375 53.75390625 C90.69351671 55.01360334 90.69351671 55.01360334 90 58 C88.98679687 58.79664063 88.98679687 58.79664063 87.953125 59.609375 C84.97634814 63.25294988 85.56513461 66.69946723 85.75 71.25 C85.76804687 72.09046875 85.78609375 72.9309375 85.8046875 73.796875 C85.85169202 75.86507395 85.92343276 77.93268441 86 80 C87.32 80.33 88.64 80.66 90 81 C90 81.66 90 82.32 90 83 C93.16197853 83.58077157 95.85376119 83.73179922 99 83 C103.07583212 79.61085698 105.68880375 75.86717748 106.5625 70.625 C106.12227926 67.78469973 106.12227926 67.78469973 104 65 C100.41642759 64.74984127 100.41642759 64.74984127 97 65 C97.33 65.33 97.66 65.66 98 66 C98.04080783 67.99958364 98.04254356 70.00045254 98 72 C94.625 71.6875 94.625 71.6875 91 71 C89 68 89 68 89.1875 65.5 C90.06259861 62.80738888 90.77725713 61.70980221 93 60 C97.08584869 58.63805044 100.74761587 58.08722249 105 59 C108.11698241 61.46519106 110.23219006 64.46438012 112 68 C112.0952699 69.47668337 112.12985959 70.95775457 112.125 72.4375 C112.12757813 73.21996094 112.13015625 74.00242187 112.1328125 74.80859375 C112 77 112 77 111 80 C110.34 80 109.68 80 109 80 C108.566875 80.8971875 108.566875 80.8971875 108.125 81.8125 C105.65809769 86.6092545 105.65809769 86.6092545 103 88.1875 C98.59049966 89.38173967 94.52026826 89.83917617 90 89 C87.84825936 87.65766645 86.22761075 86.23410159 84.47265625 84.41015625 C82.94171569 82.74294872 82.94171569 82.74294872 80 82 C80.01160156 82.81984375 80.02320313 83.6396875 80.03515625 84.484375 C80.04417969 85.56203125 80.05320312 86.6396875 80.0625 87.75 C80.07410156 88.81734375 80.08570313 89.8846875 80.09765625 90.984375 C79.94132833 95.81178127 79.94132833 95.81178127 79 98 C77.6756885 98.68441309 76.34107242 99.34904149 75 100 C73.24152087 102.15617093 73.24152087 102.15617093 71.75 104.625 C71.22921875 105.44226563 70.7084375 106.25953125 70.171875 107.1015625 C69.78515625 107.72804688 69.3984375 108.35453125 69 109 C69.92941406 108.65066406 70.85882812 108.30132812 71.81640625 107.94140625 C73.05261719 107.48636719 74.28882813 107.03132813 75.5625 106.5625 C76.78066406 106.11003906 77.99882813 105.65757812 79.25390625 105.19140625 C82.93350333 104.02114858 86.18299666 103.42738647 90 103 C90 102.34 90 101.68 90 101 C91.62249941 100.16180842 93.24808497 99.3295884 94.875 98.5 C95.77992188 98.0359375 96.68484375 97.571875 97.6171875 97.09375 C100 96 100 96 102 96 C102 95.34 102 94.68 102 94 C104.475 93.01 104.475 93.01 107 92 C105.61668258 97.22586581 102.32133539 100.03858796 98 103 C94.5625 104.375 94.5625 104.375 92 105 C93.69322341 108.26034685 93.69322341 108.26034685 96.875 108.75 C101.17830082 110.47132033 102.11110514 112.94977352 104 117 C104.4125 117.7425 104.825 118.485 105.25 119.25 C106 121 106 121 106 124 C105.34 124 104.68 124 104 124 C103.7525 123.401875 103.505 122.80375 103.25 122.1875 C101.83555909 119.71222841 100.27139812 118.66569196 98 117 C98 116.34 98 115.68 98 115 C93.54539123 112.69589202 89.81495856 111.81402914 84.8125 111.4375 C83.18248047 111.31181641 83.18248047 111.31181641 81.51953125 111.18359375 C80.68808594 111.12300781 79.85664062 111.06242187 79 111 C79.42152344 111.48210937 79.84304688 111.96421875 80.27734375 112.4609375 C81.09912109 113.40839844 81.09912109 113.40839844 81.9375 114.375 C82.48277344 115.00148438 83.02804687 115.62796875 83.58984375 116.2734375 C87.12088631 120.59676385 86.39955454 125.66748367 86 131 C85 134.1875 85 134.1875 83 136 C78.07757556 136.79393943 76.156234 136.77082267 72 134 C69.31347023 129.97020535 69.59655426 127.76065969 70 123 C71.32 122.67 72.64 122.34 74 122 C74 124.97 74 127.94 74 131 C75.9914056 131.38133299 77.99279077 131.71325582 80 132 C81.28612676 130.94021067 81.28612676 130.94021067 81.09765625 128.49609375 C81.08605469 127.48675781 81.07445312 126.47742188 81.0625 125.4375 C81.05347656 124.42558594 81.04445313 123.41367187 81.03515625 122.37109375 C81.02355469 121.58863281 81.01195312 120.80617188 81 120 C80.34 120 79.68 120 79 120 C78.62875 119.360625 78.2575 118.72125 77.875 118.0625 C74.9874932 114.88624252 72.19997357 115.2754081 68 115 C68 115.66 68 116.32 68 117 C67.38125 117.04125 66.7625 117.0825 66.125 117.125 C65.42375 117.41375 64.7225 117.7025 64 118 C63.731875 118.8971875 63.46375 119.794375 63.1875 120.71875 C61.76530408 124.64850188 59.89041985 126.51421706 56.875 129.375 C55.96492187 130.24898437 55.05484375 131.12296875 54.1171875 132.0234375 C53.41851563 132.67570313 52.71984375 133.32796875 52 134 C53.12019531 134.12117187 54.24039063 134.24234375 55.39453125 134.3671875 C56.86723636 134.53603267 58.33989004 134.70532697 59.8125 134.875 C60.55048828 134.95363281 61.28847656 135.03226563 62.04882812 135.11328125 C65.71506181 135.54460286 67.87951745 135.9196783 71 138 C69.7934375 138.433125 69.7934375 138.433125 68.5625 138.875 C65.8673532 139.73262568 65.8673532 139.73262568 65 142 C66.0828125 141.8453125 66.0828125 141.8453125 67.1875 141.6875 C71.13765108 142.12640568 72.48462726 144.0534205 75 147 C75 147.33 75 147.66 75 148 C73.02 148.33 71.04 148.66 69 149 C69.94875 149.763125 70.8975 150.52625 71.875 151.3125 C74.16609895 153.15534046 75.31224944 154.46837417 77 157 C77.14221065 159.60245498 77.18802932 162.09117684 77.125 164.6875 C77.11597656 165.38939453 77.10695313 166.09128906 77.09765625 166.81445312 C77.07413704 168.54311525 77.03826713 170.27160145 77 172 C66.39353198 171.97486619 56.86852094 171.65528724 48 165 C47.30362153 163.6819411 46.6313302 162.35042379 46 161 C43.29283758 160.09761253 41.76223232 159.88148698 38.98828125 159.90234375 C38.23095703 159.90556641 37.47363281 159.90878906 36.69335938 159.91210938 C35.90767578 159.92048828 35.12199219 159.92886719 34.3125 159.9375 C33.11657227 159.94426758 33.11657227 159.94426758 31.89648438 159.95117188 C29.93095743 159.9629415 27.96546915 159.98087652 26 160 C26 159.01 26 158.02 26 157 C19.79055044 159.20377124 14.45073713 161.7617551 9.10546875 165.6328125 C6.82256141 167.11521986 4.55041439 168.06529315 2 169 C2 169.66 2 170.32 2 171 C-2.14361408 172.38120469 -5.8489401 172.95792303 -9.96923828 171.12304688 C-12.0571078 169.90380842 -14.0608699 168.6060044 -16.0625 167.25 C-16.74376953 166.8065625 -17.42503906 166.363125 -18.12695312 165.90625 C-19.46328086 165.03333659 -20.79376515 164.15139912 -22.11767578 163.25976562 C-23.34413873 162.43894217 -24.58181754 161.63456088 -25.83154297 160.84960938 C-27.25405428 159.9499513 -28.63254712 158.98132344 -30 158 C-30 157.34 -30 156.68 -30 156 C-31.32 155.67 -32.64 155.34 -34 155 C-33.505 157.475 -33.505 157.475 -33 160 C-34.09957031 159.9071875 -35.19914062 159.814375 -36.33203125 159.71875 C-45.59528469 159.17829735 -51.34029955 159.51344823 -58.60546875 165.95703125 C-63.15341702 169.83725465 -66.85875062 171.30055258 -72.8359375 171.03515625 C-76.00592659 170.98365823 -79.07995213 171.44335527 -82.21484375 171.87890625 C-82.80394531 171.91886719 -83.39304687 171.95882812 -84 172 C-85.84942747 170.15057253 -85.2591876 167.29573569 -85.3125 164.8125 C-85.25883391 159.36837373 -85.00408972 156.00408972 -81 152 C-77.75 150.125 -77.75 150.125 -75 149 C-77.97 149 -80.94 149 -84 149 C-81.72161512 144.44323025 -80.58501552 143.83400621 -76 142 C-74.68 142 -73.36 142 -72 142 C-73.39195915 139.2160817 -75.15575779 139.02101003 -78 138 C-74.1533912 134.1533912 -68.78091826 134.94358009 -63.625 134.9375 C-61.74995225 134.95346756 -59.87491693 134.97269538 -58 135 C-63.53758496 125.79044714 -63.53758496 125.79044714 -72 120 C-72 119.34 -72 118.68 -72 118 C-76.12143057 116.42993121 -79.59586271 115.23406308 -84 116 C-87.366975 119.45557961 -88.23517488 122.18284957 -88.25 126.875 C-88.18641991 128.25105487 -88.10985087 129.62686409 -88 131 C-85.60280568 131.67958603 -85.60280568 131.67958603 -83 132 C-80.81668311 130.23863645 -80.81668311 130.23863645 -80.8046875 128.0546875 C-80.82789063 127.33539063 -80.85109375 126.61609375 -80.875 125.875 C-80.91625 124.59625 -80.9575 123.3175 -81 122 C-79.68 122.66 -78.36 123.32 -77 124 C-76.625 127.1875 -76.625 127.1875 -77 131 C-80.28391552 134.76448853 -81.74672888 135.80882305 -86.6875 136.5625 C-90 136 -90 136 -91.875 134.1875 C-94.03417713 129.98910002 -94.31758446 126.68437078 -94 122 C-92.35238431 117.79857998 -90.3514118 115.00471403 -87 112 C-92.40535344 111.81033848 -96.9551452 111.79860881 -102 114 C-104.0116721 116.00349457 -105.77715399 118.07954357 -107.51953125 120.3203125 C-108.00808594 120.87460937 -108.49664062 121.42890625 -109 122 C-109.66 122 -110.32 122 -111 122 C-111 122.99 -111 123.98 -111 125 C-112.485 125.495 -112.485 125.495 -114 126 C-114.28883414 121.93465943 -113.57875609 119.66941645 -111.5 116.1875 C-111.0359375 115.39730469 -110.571875 114.60710937 -110.09375 113.79296875 C-109.7328125 113.20128906 -109.371875 112.60960937 -109 112 C-108.34 112 -107.68 112 -107 112 C-107 111.34 -107 110.68 -107 110 C-102.61538462 107 -102.61538462 107 -100 107 C-100 106.34 -100 105.68 -100 105 C-101.546875 104.7215625 -101.546875 104.7215625 -103.125 104.4375 C-107.24897662 103.27605352 -109.31948169 100.95683668 -112.03125 97.75390625 C-112.3509375 97.17511719 -112.670625 96.59632813 -113 96 C-112.67 95.01 -112.34 94.02 -112 93 C-111.49210937 93.42152344 -110.98421875 93.84304688 -110.4609375 94.27734375 C-106.36302174 97.53879356 -103.42011235 99.72899438 -98 100 C-98 100.66 -98 101.32 -98 102 C-97.319375 101.938125 -96.63875 101.87625 -95.9375 101.8125 C-92.176498 102.05256396 -89.43859454 103.4918445 -86 105 C-84.01178687 105.39764263 -82.01267638 105.75455166 -80 106 C-80.40584995 103.15905033 -80.86297046 102.12846519 -83 100.125 C-85.49147225 97.47781074 -85.67660307 95.5573662 -86 92 C-86.66 92 -87.32 92 -88 92 C-88.33 89.69 -88.66 87.38 -89 85 C-89.7425 85.474375 -90.485 85.94875 -91.25 86.4375 C-96.52645718 89.43548703 -102.03164319 89.67739019 -108 89 C-110.82089667 87.97514186 -112.54608764 86.82738154 -115 85 C-115.33 84.01 -115.66 83.02 -116 82 C-116.66 82 -117.32 82 -118 82 C-119.46728881 74.66355593 -120.23781048 68.5080661 -116 62 C-113.74944697 59.90738051 -112.50411766 59.0572861 -109.421875 58.70703125 C-108.54015625 58.74183594 -107.6584375 58.77664062 -106.75 58.8125 C-105.41195313 58.85310547 -105.41195313 58.85310547 -104.046875 58.89453125 C-103.37140625 58.92933594 -102.6959375 58.96414062 -102 59 C-102 59.66 -102 60.32 -102 61 C-100.35 61.66 -98.7 62.32 -97 63 C-96.64 68.4 -96.64 68.4 -98.125 70.875 C-100.78034983 72.4682099 -102.96789518 72.20214032 -106 72 C-105.125 66.125 -105.125 66.125 -104 65 C-108.00254456 64.90818866 -108.00254456 64.90818866 -112 65 C-113.31262571 66.08552366 -113.31262571 66.08552366 -113.09765625 68.72265625 C-113.08605469 69.82480469 -113.07445312 70.92695313 -113.0625 72.0625 C-113.05347656 73.16722656 -113.04445313 74.27195312 -113.03515625 75.41015625 C-113.02355469 76.26480469 -113.01195312 77.11945313 -113 78 C-111.35 78.66 -109.7 79.32 -108 80 C-108 80.99 -108 81.98 -108 83 C-102.17318823 82.74610842 -98.25584472 82.38883987 -94 78 C-91.24637957 72.49275915 -93.26573694 65.7788965 -95.09765625 60.2578125 C-97.01609198 55.45757073 -99.66178148 53.12196844 -104 50.5625 C-107.833506 48.2738397 -109.99664747 46.09017808 -112 42 C-112.25 38.625 -112.25 38.625 -112 36 C-107.54326841 36.49871064 -105.42312822 38.02004362 -102.1875 41.0625 C-101.00220703 42.16271484 -101.00220703 42.16271484 -99.79296875 43.28515625 C-99.20128906 43.85105469 -98.60960937 44.41695312 -98 45 C-99.36982105 41.8129289 -100.84225143 40.06713092 -103.5625 37.9375 C-106.19437653 35.87467786 -106.90432539 35.28702382 -108 32 C-103.79303872 33.42777089 -100.85027893 35.4882949 -97.4375 38.3125 C-96.50808594 39.07175781 -95.57867187 39.83101562 -94.62109375 40.61328125 C-90.28918024 44.55784035 -87.17494587 49.12419026 -84 54 C-83.98018066 53.41734375 -83.96036133 52.8346875 -83.93994141 52.234375 C-82.71184023 17.71184023 -82.71184023 17.71184023 -80 15 C-78.3664419 14.91449226 -76.72954226 14.89182393 -75.09375 14.89453125 C-56.24722027 14.69933609 -38.58927005 11.94702263 -21 5 C-19.82695312 4.55398437 -18.65390625 4.10796875 -17.4453125 3.6484375 C-15.80175781 3.01808594 -15.80175781 3.01808594 -14.125 2.375 C-13.01382813 1.94960937 -11.90265625 1.52421875 -10.7578125 1.0859375 C-6.29418635 -0.67169433 -4.84464313 -1.11583794 0 0 Z \",fill:\"#020101\",transform:\"translate(486,176)\"})),_path3||(_path3=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.70007629 0.00262701 1.40015258 0.00525403 2.1214433 0.00796065 C2.86210482 0.0068068 3.60276634 0.00565296 4.36587214 0.00446415 C6.87940846 0.00179046 9.39288234 0.00632578 11.90641549 0.01075396 C13.71394126 0.01031841 15.52146697 0.00944381 17.32899234 0.00816479 C22.3206303 0.00591662 27.31224702 0.0099455 32.30388227 0.01494285 C37.67746636 0.01924257 43.05104916 0.01780127 48.42463449 0.01704058 C57.74293637 0.01651504 67.06123128 0.01966497 76.37953141 0.02527842 C89.85239718 0.03338936 103.32525955 0.03600822 116.79812749 0.03726641 C138.65449213 0.03945757 160.51085305 0.04611938 182.36721566 0.05556902 C203.60452016 0.06474149 224.84182365 0.07182313 246.07912973 0.07607684 C248.04119174 0.07647092 248.04119174 0.07647092 250.04289136 0.07687297 C256.60464393 0.07817796 263.16639651 0.07944168 269.72814909 0.08068487 C324.20476434 0.09105947 378.68137557 0.10867952 433.15798715 0.13100848 C433.15798715 1.78100848 433.15798715 3.43100848 433.15798715 5.13100848 C432.27515557 5.13243349 431.392324 5.13385851 430.48273996 5.13532671 C422.16878765 5.15314536 413.85536864 5.19472455 405.54167226 5.26309904 C401.26730264 5.29741188 396.99329204 5.3224856 392.71877816 5.32656512 C388.59467817 5.33083902 384.47138864 5.35922464 380.34754136 5.40444025 C378.77310485 5.41744463 377.19857148 5.42171252 375.62408784 5.41716227 C373.42054546 5.4122765 371.21939053 5.43825109 369.01614144 5.47158465 C367.13417314 5.4815774 367.13417314 5.4815774 365.21418527 5.49177203 C361.96294619 5.80853563 361.96294619 5.80853563 360.4168525 8.60972247 C360.00142694 9.44174685 359.58600137 10.27377123 359.15798715 11.13100848 C357.67298715 11.62600848 357.67298715 11.62600848 356.15798715 12.13100848 C354.30634402 14.41060689 354.30634402 14.41060689 352.47048715 17.19350848 C349.28318469 21.72499558 345.91228977 25.52959598 341.91579965 29.34585223 C339.55936705 31.73894044 337.92188332 34.28163773 336.15798715 37.13100848 C335.49798715 37.79100848 334.83798715 38.45100848 334.15798715 39.13100848 C333.16798715 39.13100848 332.17798715 39.13100848 331.15798715 39.13100848 C331.15798715 39.79100848 331.15798715 40.45100848 331.15798715 41.13100848 C329.69704965 42.31460223 329.69704965 42.31460223 327.78298715 43.56850848 C325.07207846 45.34789093 324.03002694 46.32294878 322.15798715 49.13100848 C320.32351449 50.30678973 320.32351449 50.30678973 318.11892465 51.44350848 C313.16401557 54.09035315 308.4944005 57.07776975 303.78298715 60.13100848 C294.31517792 66.17339384 285.1165383 70.69628021 274.3728309 74.04116473 C271.68636 74.95188815 269.11555046 75.96379649 266.4978309 77.04897723 C238.12705369 88.45061366 202.65792788 88.85506783 173.15798715 81.13100848 C171.81298586 80.48820698 170.47717975 79.82523689 169.15798715 79.13100848 C167.73022192 78.8128208 166.29053926 78.54562375 164.84548715 78.31850848 C154.44529189 76.33971026 144.64820305 72.84875275 135.52517465 67.46303973 C133.15446829 66.06025493 133.15446829 66.06025493 130.44704965 65.04897723 C127.99364547 64.06510354 126.99739021 62.97041154 125.15798715 61.13100848 C123.50360102 60.43442484 121.83544397 59.77003965 120.15798715 59.13100848 C117.34548715 57.63100848 117.34548715 57.63100848 115.15798715 56.13100848 C115.15798715 55.47100848 115.15798715 54.81100848 115.15798715 54.13100848 C114.47736215 53.90413348 113.79673715 53.67725848 113.09548715 53.44350848 C107.12546667 50.77605252 102.69739905 46.78390567 98.15798715 42.13100848 C96.32776816 40.55107585 94.47712958 39.00047583 92.61111215 37.46303973 C91.15798715 36.13100848 91.15798715 36.13100848 90.15798715 34.13100848 C88.67298715 33.63600848 88.67298715 33.63600848 87.15798715 33.13100848 C85.44802293 31.07905142 83.85270988 29.03525259 82.28298715 26.88100848 C79.15590297 22.62549637 75.97237079 18.81520838 72.15798715 15.13100848 C70.13986364 12.68042993 69.17233275 11.17404528 68.15798715 8.13100848 C64.9042717 7.04643666 62.54899395 7.0105399 59.12600473 7.01748309 C57.26441468 7.01759638 57.26441468 7.01759638 55.36521676 7.01771197 C54.01098357 7.02281857 52.65675078 7.02803456 51.3025184 7.03335223 C49.9167513 7.03521764 48.53098354 7.03664096 47.14521554 7.03763995 C43.50050805 7.04145538 39.8558405 7.05127735 36.21114877 7.06234393 C32.49095977 7.07257898 28.7707643 7.07714206 25.05056527 7.08218035 C17.75302104 7.09290049 10.45550969 7.10996523 3.15798715 7.13100848 C5.91946871 9.29692218 5.91946871 9.29692218 8.72048715 9.44350848 C9.52486215 9.67038348 10.32923715 9.89725848 11.15798715 10.13100848 C12.28298715 12.63100848 12.28298715 12.63100848 13.15798715 15.13100848 C14.14798715 15.46100848 15.13798715 15.79100848 16.15798715 16.13100848 C16.15798715 17.45100848 16.15798715 18.77100848 16.15798715 20.13100848 C16.81798715 20.13100848 17.47798715 20.13100848 18.15798715 20.13100848 C18.96236215 20.95600848 19.76673715 21.78100848 20.59548715 22.63100848 C22.91921131 25.4801704 22.91921131 25.4801704 26.15798715 25.13100848 C26.53890512 25.94505144 26.53890512 25.94505144 26.9275184 26.77553973 C27.27169809 27.49096941 27.61587777 28.2063991 27.97048715 28.94350848 C28.30693246 29.65120379 28.64337777 30.3588991 28.9900184 31.08803973 C30.06824987 33.18366286 30.06824987 33.18366286 31.7712684 34.73647723 C33.15798715 36.13100848 33.15798715 36.13100848 33.53298715 38.63100848 C33.09491151 41.55151275 32.32285288 42.23675096 30.15798715 44.13100848 C30.15798715 44.79100848 30.15798715 45.45100848 30.15798715 46.13100848 C31.14798715 46.62600848 31.14798715 46.62600848 32.15798715 47.13100848 C32.65298715 46.14100848 32.65298715 46.14100848 33.15798715 45.13100848 C34.14798715 45.62600848 34.14798715 45.62600848 35.15798715 46.13100848 C35.44673715 45.49163348 35.73548715 44.85225848 36.03298715 44.19350848 C37.15798715 42.13100848 37.15798715 42.13100848 39.15798715 41.13100848 C39.65298715 43.60600848 39.65298715 43.60600848 40.15798715 46.13100848 C41.55017465 46.16194598 41.55017465 46.16194598 42.97048715 46.19350848 C44.02236215 46.50288348 45.07423715 46.81225848 46.15798715 47.13100848 C47.17328256 49.45772713 48.17286913 51.79135317 49.15798715 54.13100848 C52.12986432 55.59458912 52.12986432 55.59458912 55.15798715 56.13100848 C55.81798715 56.46100848 56.47798715 56.79100848 57.15798715 57.13100848 C57.15798715 57.79100848 57.15798715 58.45100848 57.15798715 59.13100848 C57.67361215 59.37850848 58.18923715 59.62600848 58.72048715 59.88100848 C61.92982866 61.52682464 65.03384378 63.32861807 68.15798715 65.13100848 C68.15798715 65.79100848 68.15798715 66.45100848 68.15798715 67.13100848 C68.81798715 67.13100848 69.47798715 67.13100848 70.15798715 67.13100848 C70.15798715 67.79100848 70.15798715 68.45100848 70.15798715 69.13100848 C71.47798715 68.80100848 72.79798715 68.47100848 74.15798715 68.13100848 C74.24048715 68.74975848 74.32298715 69.36850848 74.40798715 70.00600848 C74.96402669 72.2657375 74.96402669 72.2657375 76.97048715 73.31850848 C79.07748481 74.19460523 79.07748481 74.19460523 81.09548715 74.38100848 C84.52577546 75.62838604 86.07927684 78.24391082 88.15798715 81.13100848 C88.15798715 82.12100848 88.15798715 83.11100848 88.15798715 84.13100848 C88.94173715 83.78038348 89.72548715 83.42975848 90.53298715 83.06850848 C91.39923715 82.75913348 92.26548715 82.44975848 93.15798715 82.13100848 C93.81798715 82.46100848 94.47798715 82.79100848 95.15798715 83.13100848 C95.48798715 82.47100848 95.81798715 81.81100848 96.15798715 81.13100848 C97.14798715 81.13100848 98.13798715 81.13100848 99.15798715 81.13100848 C99.23146371 81.74589129 99.30494027 82.3607741 99.3806434 82.99428973 C99.96901077 85.29941655 99.96901077 85.29941655 102.1540809 86.36147723 C102.95974496 86.67729754 103.76540902 86.99311785 104.59548715 87.31850848 C105.39857309 87.64206316 106.20165902 87.96561785 107.0290809 88.29897723 C107.73161996 88.57354754 108.43415902 88.84811785 109.15798715 89.13100848 C109.81798715 89.46100848 110.47798715 89.79100848 111.15798715 90.13100848 C110.82798715 90.79100848 110.49798715 91.45100848 110.15798715 92.13100848 C110.35779184 93.03464129 110.55759652 93.9382741 110.7634559 94.86928973 C111.25335852 98.91947478 110.34635801 100.73482298 108.47048715 104.31850848 C107.95099496 105.34331316 107.43150277 106.36811785 106.8962684 107.42397723 C105.1765439 110.10210999 103.91443436 111.57442652 101.15798715 113.13100848 C97.97048715 112.94350848 97.97048715 112.94350848 95.15798715 112.13100848 C94.82798715 111.47100848 94.49798715 110.81100848 94.15798715 110.13100848 C93.16798715 110.13100848 92.17798715 110.13100848 91.15798715 110.13100848 C91.15798715 109.47100848 91.15798715 108.81100848 91.15798715 108.13100848 C90.08548715 107.86288348 89.01298715 107.59475848 87.90798715 107.31850848 C84.59289787 106.2687302 82.71921069 105.38488519 80.15798715 103.13100848 C79.16798715 103.62600848 79.16798715 103.62600848 78.15798715 104.13100848 C77.82798715 103.47100848 77.49798715 102.81100848 77.15798715 102.13100848 C76.51861215 101.98663348 75.87923715 101.84225848 75.22048715 101.69350848 C73.15798715 101.13100848 73.15798715 101.13100848 71.15798715 98.13100848 C69.09873576 97.40718381 69.09873576 97.40718381 67.15798715 97.13100848 C67.15798715 96.14100848 67.15798715 95.15100848 67.15798715 94.13100848 C66.58048715 94.37850848 66.00298715 94.62600848 65.40798715 94.88100848 C63.15798715 95.13100848 63.15798715 95.13100848 60.90798715 93.44350848 C59.15798715 91.13100848 59.15798715 91.13100848 59.15798715 87.13100848 C59.81798715 87.13100848 60.47798715 87.13100848 61.15798715 87.13100848 C61.15798715 86.47100848 61.15798715 85.81100848 61.15798715 85.13100848 C63.13798715 84.80100848 65.11798715 84.47100848 67.15798715 84.13100848 C66.82798715 82.48100848 66.49798715 80.83100848 66.15798715 79.13100848 C65.18861215 79.93538348 64.21923715 80.73975848 63.22048715 81.56850848 C59.05764269 84.58827679 55.202695 85.00517676 50.15798715 85.13100848 C49.91048715 84.49163348 49.66298715 83.85225848 49.40798715 83.19350848 C48.34236282 80.94359307 48.34236282 80.94359307 46.03298715 80.38100848 C45.41423715 80.29850848 44.79548715 80.21600848 44.15798715 80.13100848 C43.93435345 78.71667641 43.72972239 77.2993323 43.53298715 75.88100848 C43.41697152 75.09210223 43.3009559 74.30319598 43.18142465 73.49038348 C43.15479319 70.80948388 43.7920663 69.40406759 45.15798715 67.13100848 C45.81798715 67.13100848 46.47798715 67.13100848 47.15798715 67.13100848 C47.15798715 66.47100848 47.15798715 65.81100848 47.15798715 65.13100848 C47.81798715 64.80100848 48.47798715 64.47100848 49.15798715 64.13100848 C49.15798715 62.81100848 49.15798715 61.49100848 49.15798715 60.13100848 C45.56441938 62.66176401 45.56441938 62.66176401 43.22048715 66.25600848 C42.15798715 68.13100848 42.15798715 68.13100848 39.53298715 69.63100848 C35.4437208 70.23682571 33.59250826 69.53379044 30.05642465 67.54897723 C26.39534805 64.8144694 24.19160471 61.1982436 22.15798715 57.13100848 C22.15798715 56.80100848 22.15798715 56.47100848 22.15798715 56.13100848 C20.67298715 56.62600848 20.67298715 56.62600848 19.15798715 57.13100848 C19.15798715 55.81100848 19.15798715 54.49100848 19.15798715 53.13100848 C18.47736215 53.08975848 17.79673715 53.04850848 17.09548715 53.00600848 C12.99666421 51.78508249 9.95058402 49.36623598 7.15798715 46.13100848 C7.15798715 45.14100848 7.15798715 44.15100848 7.15798715 43.13100848 C6.51861215 42.92475848 5.87923715 42.71850848 5.22048715 42.50600848 C4.19954965 41.82538348 4.19954965 41.82538348 3.15798715 41.13100848 C3.03423715 40.16163348 2.91048715 39.19225848 2.78298715 38.19350848 C2.57673715 37.18288348 2.37048715 36.17225848 2.15798715 35.13100848 C-0.70858252 33.44768908 -0.70858252 33.44768908 -3.84201285 32.13100848 C-5.99420115 29.75618001 -6.82038525 28.19589129 -7.84201285 25.13100848 C-8.50201285 25.13100848 -9.16201285 25.13100848 -9.84201285 25.13100848 C-9.63995864 20.78684297 -9.18686231 19.44650904 -5.90451285 16.44350848 C-4.89388785 15.68038348 -3.88326285 14.91725848 -2.84201285 14.13100848 C-2.18201285 13.14100848 -1.52201285 12.15100848 -0.84201285 11.13100848 C-0.18201285 11.13100848 0.47798715 11.13100848 1.15798715 11.13100848 C0.82798715 9.48100848 0.49798715 7.83100848 0.15798715 6.13100848 C-1.49201285 6.79100848 -3.14201285 7.45100848 -4.84201285 8.13100848 C-5.84201285 7.13100848 -5.84201285 7.13100848 -5.96701285 4.13100848 C-5.76704762 -0.66815718 -4.37408058 0.01560084 0 0 Z \",fill:\"#060402\",transform:\"translate(268.84201285243034,486.8689915239811)\"})),_path4||(_path4=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.72431888 1.02373036 5.35824379 2.21841889 8 3.4375 C14.40232832 6.35585455 20.50164483 8.8738279 27.5 10 C31.50317761 10.68703183 35.15304079 11.68853663 39 13 C46.91488686 14.47177648 54.98614956 14.37271862 63.01171875 14.60546875 C64.71908203 14.66154297 64.71908203 14.66154297 66.4609375 14.71875 C67.50040527 14.74904297 68.53987305 14.77933594 69.61083984 14.81054688 C72 15 72 15 73 16 C73.21567927 17.33414106 73.37113612 18.67813306 73.5 20.0234375 C73.5820166 20.87139893 73.6640332 21.71936035 73.74853516 22.59301758 C73.83151855 23.51107178 73.91450195 24.42912598 74 25.375 C74.13027588 26.77431763 74.13027588 26.77431763 74.26318359 28.2019043 C75.09488794 37.4559805 75.59692352 46.71863361 76 56 C77.32 53.36 78.64 50.72 80 48 C80.66 48 81.32 48 82 48 C82.165 47.319375 82.33 46.63875 82.5 45.9375 C85.27044734 40.51204063 89.9153663 36.85618884 95.5 34.5625 C96.325 34.376875 97.15 34.19125 98 34 C97 37 97 37 94.5625 38.875 C91.82297246 41.14680333 91.0234817 42.65042354 90 46 C90.70125 45.0925 91.4025 44.185 92.125 43.25 C94.71739555 40.14207124 97.45526335 38.0035468 101 36 C101.99 36 102.98 36 104 36 C104.25 42.625 104.25 42.625 102 46 C101.34 46 100.68 46 100 46 C99.814375 46.556875 99.62875 47.11375 99.4375 47.6875 C97.62075833 50.61008442 95.43244405 51.93161032 92.55859375 53.75390625 C90.69351671 55.01360334 90.69351671 55.01360334 90 58 C88.98679687 58.79664063 88.98679687 58.79664063 87.953125 59.609375 C84.97634814 63.25294988 85.56513461 66.69946723 85.75 71.25 C85.76804687 72.09046875 85.78609375 72.9309375 85.8046875 73.796875 C85.85169202 75.86507395 85.92343276 77.93268441 86 80 C87.32 80.33 88.64 80.66 90 81 C90 81.66 90 82.32 90 83 C93.16197853 83.58077157 95.85376119 83.73179922 99 83 C103.07583212 79.61085698 105.68880375 75.86717748 106.5625 70.625 C106.12227926 67.78469973 106.12227926 67.78469973 104 65 C100.41642759 64.74984127 100.41642759 64.74984127 97 65 C97.33 65.33 97.66 65.66 98 66 C98.04080783 67.99958364 98.04254356 70.00045254 98 72 C94.625 71.6875 94.625 71.6875 91 71 C89 68 89 68 89.1875 65.5 C90.06259861 62.80738888 90.77725713 61.70980221 93 60 C97.08584869 58.63805044 100.74761587 58.08722249 105 59 C108.11698241 61.46519106 110.23219006 64.46438012 112 68 C112.0952699 69.47668337 112.12985959 70.95775457 112.125 72.4375 C112.12757813 73.21996094 112.13015625 74.00242187 112.1328125 74.80859375 C112 77 112 77 111 80 C110.34 80 109.68 80 109 80 C108.566875 80.8971875 108.566875 80.8971875 108.125 81.8125 C105.65809769 86.6092545 105.65809769 86.6092545 103 88.1875 C98.59049966 89.38173967 94.52026826 89.83917617 90 89 C87.84825936 87.65766645 86.22761075 86.23410159 84.47265625 84.41015625 C82.94171569 82.74294872 82.94171569 82.74294872 80 82 C80.01160156 82.81984375 80.02320313 83.6396875 80.03515625 84.484375 C80.04417969 85.56203125 80.05320312 86.6396875 80.0625 87.75 C80.07410156 88.81734375 80.08570313 89.8846875 80.09765625 90.984375 C79.94132833 95.81178127 79.94132833 95.81178127 79 98 C77.6756885 98.68441309 76.34107242 99.34904149 75 100 C73.24152087 102.15617093 73.24152087 102.15617093 71.75 104.625 C71.22921875 105.44226563 70.7084375 106.25953125 70.171875 107.1015625 C69.78515625 107.72804688 69.3984375 108.35453125 69 109 C69.92941406 108.65066406 70.85882812 108.30132812 71.81640625 107.94140625 C73.05261719 107.48636719 74.28882813 107.03132813 75.5625 106.5625 C76.78066406 106.11003906 77.99882813 105.65757812 79.25390625 105.19140625 C82.93350333 104.02114858 86.18299666 103.42738647 90 103 C90 102.34 90 101.68 90 101 C91.62249941 100.16180842 93.24808497 99.3295884 94.875 98.5 C95.77992188 98.0359375 96.68484375 97.571875 97.6171875 97.09375 C100 96 100 96 102 96 C102 95.34 102 94.68 102 94 C104.475 93.01 104.475 93.01 107 92 C105.61668258 97.22586581 102.32133539 100.03858796 98 103 C94.5625 104.375 94.5625 104.375 92 105 C93.69322341 108.26034685 93.69322341 108.26034685 96.875 108.75 C101.17830082 110.47132033 102.11110514 112.94977352 104 117 C104.4125 117.7425 104.825 118.485 105.25 119.25 C106 121 106 121 106 124 C105.34 124 104.68 124 104 124 C103.7525 123.401875 103.505 122.80375 103.25 122.1875 C101.83555909 119.71222841 100.27139812 118.66569196 98 117 C98 116.34 98 115.68 98 115 C93.54539123 112.69589202 89.81495856 111.81402914 84.8125 111.4375 C83.18248047 111.31181641 83.18248047 111.31181641 81.51953125 111.18359375 C80.68808594 111.12300781 79.85664062 111.06242187 79 111 C79.42152344 111.48210937 79.84304688 111.96421875 80.27734375 112.4609375 C81.09912109 113.40839844 81.09912109 113.40839844 81.9375 114.375 C82.48277344 115.00148438 83.02804687 115.62796875 83.58984375 116.2734375 C87.12088631 120.59676385 86.39955454 125.66748367 86 131 C85 134.1875 85 134.1875 83 136 C78.07757556 136.79393943 76.156234 136.77082267 72 134 C69.31347023 129.97020535 69.59655426 127.76065969 70 123 C71.32 122.67 72.64 122.34 74 122 C74 124.97 74 127.94 74 131 C75.9914056 131.38133299 77.99279077 131.71325582 80 132 C81.28612676 130.94021067 81.28612676 130.94021067 81.09765625 128.49609375 C81.08605469 127.48675781 81.07445312 126.47742188 81.0625 125.4375 C81.05347656 124.42558594 81.04445313 123.41367187 81.03515625 122.37109375 C81.02355469 121.58863281 81.01195312 120.80617188 81 120 C80.34 120 79.68 120 79 120 C78.62875 119.360625 78.2575 118.72125 77.875 118.0625 C74.9874932 114.88624252 72.19997357 115.2754081 68 115 C68 115.66 68 116.32 68 117 C67.38125 117.04125 66.7625 117.0825 66.125 117.125 C65.42375 117.41375 64.7225 117.7025 64 118 C63.731875 118.8971875 63.46375 119.794375 63.1875 120.71875 C61.76530408 124.64850188 59.89041985 126.51421706 56.875 129.375 C55.96492187 130.24898437 55.05484375 131.12296875 54.1171875 132.0234375 C53.41851563 132.67570313 52.71984375 133.32796875 52 134 C53.12019531 134.12117187 54.24039063 134.24234375 55.39453125 134.3671875 C56.86723636 134.53603267 58.33989004 134.70532697 59.8125 134.875 C60.55048828 134.95363281 61.28847656 135.03226563 62.04882812 135.11328125 C65.71506181 135.54460286 67.87951745 135.9196783 71 138 C69.7934375 138.433125 69.7934375 138.433125 68.5625 138.875 C65.8673532 139.73262568 65.8673532 139.73262568 65 142 C66.0828125 141.8453125 66.0828125 141.8453125 67.1875 141.6875 C71.13765108 142.12640568 72.48462726 144.0534205 75 147 C75 147.33 75 147.66 75 148 C73.02 148.33 71.04 148.66 69 149 C69.94875 149.763125 70.8975 150.52625 71.875 151.3125 C74.16609895 153.15534046 75.31224944 154.46837417 77 157 C77.14221065 159.60245498 77.18802932 162.09117684 77.125 164.6875 C77.11597656 165.38939453 77.10695313 166.09128906 77.09765625 166.81445312 C77.07413704 168.54311525 77.03826713 170.27160145 77 172 C66.39353198 171.97486619 56.86852094 171.65528724 48 165 C47.30362153 163.6819411 46.6313302 162.35042379 46 161 C43.29283758 160.09761253 41.76223232 159.88148698 38.98828125 159.90234375 C38.23095703 159.90556641 37.47363281 159.90878906 36.69335938 159.91210938 C35.90767578 159.92048828 35.12199219 159.92886719 34.3125 159.9375 C33.11657227 159.94426758 33.11657227 159.94426758 31.89648438 159.95117188 C29.93095743 159.9629415 27.96546915 159.98087652 26 160 C26 159.01 26 158.02 26 157 C19.79055044 159.20377124 14.45073713 161.7617551 9.10546875 165.6328125 C6.82256141 167.11521986 4.55041439 168.06529315 2 169 C2 169.66 2 170.32 2 171 C-2.14361408 172.38120469 -5.8489401 172.95792303 -9.96923828 171.12304688 C-12.0571078 169.90380842 -14.0608699 168.6060044 -16.0625 167.25 C-16.74376953 166.8065625 -17.42503906 166.363125 -18.12695312 165.90625 C-19.46328086 165.03333659 -20.79376515 164.15139912 -22.11767578 163.25976562 C-23.34413873 162.43894217 -24.58181754 161.63456088 -25.83154297 160.84960938 C-27.25405428 159.9499513 -28.63254712 158.98132344 -30 158 C-30 157.34 -30 156.68 -30 156 C-31.32 155.67 -32.64 155.34 -34 155 C-33.505 157.475 -33.505 157.475 -33 160 C-34.09957031 159.9071875 -35.19914062 159.814375 -36.33203125 159.71875 C-45.59528469 159.17829735 -51.34029955 159.51344823 -58.60546875 165.95703125 C-63.15341702 169.83725465 -66.85875062 171.30055258 -72.8359375 171.03515625 C-76.00592659 170.98365823 -79.07995213 171.44335527 -82.21484375 171.87890625 C-82.80394531 171.91886719 -83.39304687 171.95882812 -84 172 C-85.84942747 170.15057253 -85.2591876 167.29573569 -85.3125 164.8125 C-85.25883391 159.36837373 -85.00408972 156.00408972 -81 152 C-77.75 150.125 -77.75 150.125 -75 149 C-77.97 149 -80.94 149 -84 149 C-81.72161512 144.44323025 -80.58501552 143.83400621 -76 142 C-74.68 142 -73.36 142 -72 142 C-73.39195915 139.2160817 -75.15575779 139.02101003 -78 138 C-74.1533912 134.1533912 -68.78091826 134.94358009 -63.625 134.9375 C-61.74995225 134.95346756 -59.87491693 134.97269538 -58 135 C-63.53758496 125.79044714 -63.53758496 125.79044714 -72 120 C-72 119.34 -72 118.68 -72 118 C-76.12143057 116.42993121 -79.59586271 115.23406308 -84 116 C-87.366975 119.45557961 -88.23517488 122.18284957 -88.25 126.875 C-88.18641991 128.25105487 -88.10985087 129.62686409 -88 131 C-85.60280568 131.67958603 -85.60280568 131.67958603 -83 132 C-80.81668311 130.23863645 -80.81668311 130.23863645 -80.8046875 128.0546875 C-80.82789063 127.33539063 -80.85109375 126.61609375 -80.875 125.875 C-80.91625 124.59625 -80.9575 123.3175 -81 122 C-79.68 122.66 -78.36 123.32 -77 124 C-76.625 127.1875 -76.625 127.1875 -77 131 C-80.28391552 134.76448853 -81.74672888 135.80882305 -86.6875 136.5625 C-90 136 -90 136 -91.875 134.1875 C-94.03417713 129.98910002 -94.31758446 126.68437078 -94 122 C-92.35238431 117.79857998 -90.3514118 115.00471403 -87 112 C-92.40535344 111.81033848 -96.9551452 111.79860881 -102 114 C-104.0116721 116.00349457 -105.77715399 118.07954357 -107.51953125 120.3203125 C-108.00808594 120.87460937 -108.49664062 121.42890625 -109 122 C-109.66 122 -110.32 122 -111 122 C-111 122.99 -111 123.98 -111 125 C-112.485 125.495 -112.485 125.495 -114 126 C-114.28883414 121.93465943 -113.57875609 119.66941645 -111.5 116.1875 C-111.0359375 115.39730469 -110.571875 114.60710937 -110.09375 113.79296875 C-109.7328125 113.20128906 -109.371875 112.60960937 -109 112 C-108.34 112 -107.68 112 -107 112 C-107 111.34 -107 110.68 -107 110 C-102.61538462 107 -102.61538462 107 -100 107 C-100 106.34 -100 105.68 -100 105 C-101.546875 104.7215625 -101.546875 104.7215625 -103.125 104.4375 C-107.24897662 103.27605352 -109.31948169 100.95683668 -112.03125 97.75390625 C-112.3509375 97.17511719 -112.670625 96.59632813 -113 96 C-112.67 95.01 -112.34 94.02 -112 93 C-111.49210937 93.42152344 -110.98421875 93.84304688 -110.4609375 94.27734375 C-106.36302174 97.53879356 -103.42011235 99.72899438 -98 100 C-98 100.66 -98 101.32 -98 102 C-97.319375 101.938125 -96.63875 101.87625 -95.9375 101.8125 C-92.176498 102.05256396 -89.43859454 103.4918445 -86 105 C-84.01178687 105.39764263 -82.01267638 105.75455166 -80 106 C-80.40584995 103.15905033 -80.86297046 102.12846519 -83 100.125 C-85.49147225 97.47781074 -85.67660307 95.5573662 -86 92 C-86.66 92 -87.32 92 -88 92 C-88.33 89.69 -88.66 87.38 -89 85 C-89.7425 85.474375 -90.485 85.94875 -91.25 86.4375 C-96.52645718 89.43548703 -102.03164319 89.67739019 -108 89 C-110.82089667 87.97514186 -112.54608764 86.82738154 -115 85 C-115.33 84.01 -115.66 83.02 -116 82 C-116.66 82 -117.32 82 -118 82 C-119.46728881 74.66355593 -120.23781048 68.5080661 -116 62 C-113.74944697 59.90738051 -112.50411766 59.0572861 -109.421875 58.70703125 C-108.54015625 58.74183594 -107.6584375 58.77664062 -106.75 58.8125 C-105.41195313 58.85310547 -105.41195313 58.85310547 -104.046875 58.89453125 C-103.37140625 58.92933594 -102.6959375 58.96414062 -102 59 C-102 59.66 -102 60.32 -102 61 C-100.35 61.66 -98.7 62.32 -97 63 C-96.64 68.4 -96.64 68.4 -98.125 70.875 C-100.78034983 72.4682099 -102.96789518 72.20214032 -106 72 C-105.125 66.125 -105.125 66.125 -104 65 C-108.00254456 64.90818866 -108.00254456 64.90818866 -112 65 C-113.31262571 66.08552366 -113.31262571 66.08552366 -113.09765625 68.72265625 C-113.08605469 69.82480469 -113.07445312 70.92695313 -113.0625 72.0625 C-113.05347656 73.16722656 -113.04445313 74.27195312 -113.03515625 75.41015625 C-113.02355469 76.26480469 -113.01195312 77.11945313 -113 78 C-111.35 78.66 -109.7 79.32 -108 80 C-108 80.99 -108 81.98 -108 83 C-102.17318823 82.74610842 -98.25584472 82.38883987 -94 78 C-91.24637957 72.49275915 -93.26573694 65.7788965 -95.09765625 60.2578125 C-97.01609198 55.45757073 -99.66178148 53.12196844 -104 50.5625 C-107.833506 48.2738397 -109.99664747 46.09017808 -112 42 C-112.25 38.625 -112.25 38.625 -112 36 C-107.54326841 36.49871064 -105.42312822 38.02004362 -102.1875 41.0625 C-101.00220703 42.16271484 -101.00220703 42.16271484 -99.79296875 43.28515625 C-99.20128906 43.85105469 -98.60960937 44.41695312 -98 45 C-99.36982105 41.8129289 -100.84225143 40.06713092 -103.5625 37.9375 C-106.19437653 35.87467786 -106.90432539 35.28702382 -108 32 C-103.79303872 33.42777089 -100.85027893 35.4882949 -97.4375 38.3125 C-96.50808594 39.07175781 -95.57867187 39.83101562 -94.62109375 40.61328125 C-90.28918024 44.55784035 -87.17494587 49.12419026 -84 54 C-83.98018066 53.41734375 -83.96036133 52.8346875 -83.93994141 52.234375 C-82.71184023 17.71184023 -82.71184023 17.71184023 -80 15 C-78.3664419 14.91449226 -76.72954226 14.89182393 -75.09375 14.89453125 C-56.24722027 14.69933609 -38.58927005 11.94702263 -21 5 C-19.82695312 4.55398437 -18.65390625 4.10796875 -17.4453125 3.6484375 C-15.80175781 3.01808594 -15.80175781 3.01808594 -14.125 2.375 C-13.01382813 1.94960937 -11.90265625 1.52421875 -10.7578125 1.0859375 C-6.29418635 -0.67169433 -4.84464313 -1.11583794 0 0 Z M-10.14453125 9.80078125 C-14.88960999 12.00479019 -19.69355637 13.64566496 -24.6875 15.1875 C-25.50283203 15.44724609 -26.31816406 15.70699219 -27.15820312 15.97460938 C-31.42222236 17.30862348 -35.55693709 18.40424197 -40 19 C-40 19.66 -40 20.32 -40 21 C-40.99580078 21.07347656 -40.99580078 21.07347656 -42.01171875 21.1484375 C-48.80040647 21.5427716 -48.80040647 21.5427716 -55 24 C-56.56938028 26.91456338 -57 28.67941669 -57 32 C-57.639375 32.103125 -58.27875 32.20625 -58.9375 32.3125 C-59.618125 32.539375 -60.29875 32.76625 -61 33 C-61.33 33.99 -61.66 34.98 -62 36 C-62.66 36 -63.32 36 -64 36 C-64.61875 37.1446875 -64.61875 37.1446875 -65.25 38.3125 C-67.3939521 41.60499787 -69.48750883 42.38140609 -73 44 C-73.48036555 67.37286316 -72.97654895 90.15031441 -61 111 C-60.40832031 112.09248047 -60.40832031 112.09248047 -59.8046875 113.20703125 C-47.71435443 134.58964889 -29.83381507 150.99372924 -8.2109375 162.390625 C-1.64364477 164.20069155 4.16411194 160.10000969 9.69140625 157.01953125 C14.5083918 154.07929331 18.75507379 150.70566848 23 147 C23.83273437 146.2884375 24.66546875 145.576875 25.5234375 144.84375 C47.74417229 125.42624637 63.26497828 97.68199857 66 68 C66.32838082 61.96233754 66.37074755 55.92025071 66.375 49.875 C66.37699402 49.1043219 66.37898804 48.3336438 66.38104248 47.53961182 C66.38039615 45.33590606 66.36239033 43.13322124 66.3359375 40.9296875 C66.32095215 39.64304199 66.3059668 38.35639648 66.29052734 37.03076172 C66.3138336 33.88956255 66.3138336 33.88956255 64 32 C64 35.3 64 38.6 64 42 C61.125 41.25 61.125 41.25 58 40 C57 38.1875 57 38.1875 56 36 C52.55069134 32.34492959 52.55069134 32.34492959 48 31 C47.505 27.04 47.505 27.04 47 23 C46.31679688 22.85304687 45.63359375 22.70609375 44.9296875 22.5546875 C29.84688571 19.19866766 14.67780141 15.77547989 0.6796875 9.1015625 C-3.50773472 7.38020235 -6.24261982 7.89575937 -10.14453125 9.80078125 Z \",fill:\"#1C1309\",transform:\"translate(486,176)\"})),_path5||(_path5=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.4062186 1.34634457 6.43077702 3.19374374 9 7 C9 7.66 9 8.32 9 9 C9.66 9 10.32 9 11 9 C11.33 9.66 11.66 10.32 12 11 C12.99 11.33 13.98 11.66 15 12 C16.06036586 13.62892665 17.05200708 15.30321268 18 17 C19.83233247 19.6170573 21.70048901 22.2054372 23.57421875 24.79296875 C25 27 25 27 25 29 C25.99 29.33 26.98 29.66 28 30 C28.144375 30.598125 28.28875 31.19625 28.4375 31.8125 C28.83376029 34.14520323 28.83376029 34.14520323 30.8125 35.75 C34.35926476 39.3981009 37 43.84854209 37 49 C37.66 49 38.32 49 39 49 C39.33 51.64 39.66 54.28 40 57 C40.66 57 41.32 57 42 57 C45.08151633 64.63042138 48 72.7084324 48 81 C48.66 81 49.32 81 50 81 C52.21271188 91.96029949 53.83024498 102.88044635 55 114 C59.62 114 64.24 114 69 114 C69.33 113.01 69.66 112.02 70 111 C72.74852621 107.95433582 75.17377257 105.5588334 79 104 C79 103.34 79 102.68 79 102 C85.50306285 96.97000664 92.13355187 96.47978068 100.0625 96.4375 C100.99594238 96.42332031 101.92938477 96.40914063 102.89111328 96.39453125 C109.40068065 96.4863608 114.27923426 97.91172101 120 101 C120.49794931 105.87990327 120.1285403 109.45364409 116.96411479 113.37205648 C107.447006 121.260249 94.04095369 120.71044238 82.43838501 120.62145996 C80.59233663 120.62579649 78.74629233 120.63231928 76.90025842 120.64082003 C71.86205637 120.65771899 66.8243556 120.64369526 61.78618026 120.62430525 C56.33971416 120.60881798 50.8933071 120.62229543 45.44683838 120.63204956 C34.79257104 120.64654627 24.13849482 120.63437328 13.48424561 120.61293632 C1.07391276 120.58888508 -11.33637668 120.59064312 -23.74672766 120.59324223 C-46.55572293 120.59704029 -69.36462394 120.57412902 -92.17358843 120.53889475 C-112.98700287 120.50688045 -133.80033169 120.49485561 -154.61376953 120.50097656 C-155.95114193 120.50136341 -157.28851433 120.50174987 -158.62588672 120.50213593 C-159.6176566 120.50242295 -159.6176566 120.50242295 -160.62946223 120.50271577 C-182.02898048 120.50885169 -203.42846661 120.50359915 -224.82797873 120.48561716 C-226.06533296 120.48457768 -227.30268719 120.48353819 -228.57753701 120.4824672 C-231.06261049 120.48037634 -233.54768395 120.47826536 -236.03275739 120.47613403 C-244.68340546 120.46923882 -253.33404138 120.46856902 -261.98469162 120.47001648 C-272.52212875 120.47145574 -283.05948901 120.46177271 -293.59690063 120.43807012 C-298.97307798 120.42620716 -304.34914815 120.4190871 -309.72533798 120.42490768 C-314.64617772 120.43007794 -319.56679096 120.42139671 -324.48759194 120.40163308 C-326.26791689 120.39689208 -328.04826389 120.39719488 -329.82858555 120.40304345 C-332.24911808 120.41022709 -334.66890054 120.3989459 -337.08937645 120.38311005 C-338.12515659 120.39278775 -338.12515659 120.39278775 -339.18186158 120.40266097 C-344.39780954 120.33864401 -348.25978826 118.99590486 -353 117 C-353 116.34 -353 115.68 -353 115 C-353.66 115 -354.32 115 -355 115 C-355 114.34 -355 113.68 -355 113 C-356.98 112.67 -358.96 112.34 -361 112 C-361.33 108.7 -361.66 105.4 -362 102 C-358.535 101.01 -358.535 101.01 -355 100 C-355 99.34 -355 98.68 -355 98 C-344.73775274 94.57925091 -330.78454601 96.75041165 -321 101 C-319.703125 103.078125 -319.703125 103.078125 -319 105 C-317.6846659 105.70151152 -316.34882408 106.36525925 -315 107 C-312.75 109 -312.75 109 -311 111 C-311 111.66 -311 112.32 -311 113 C-305.72 113.66 -300.44 114.32 -295 115 C-295.02707031 113.55882812 -295.05414063 112.11765625 -295.08203125 110.6328125 C-295.07920438 105.28249804 -294.50763162 100.15485231 -293.6875 94.875 C-293.56955078 94.03324219 -293.45160156 93.19148438 -293.33007812 92.32421875 C-292.60718106 87.54197662 -291.50245953 83.27903272 -289.69360352 78.79589844 C-288.73448994 76.3125336 -288.18480614 73.78659991 -287.625 71.1875 C-286.14229017 65.04043215 -283.74957794 59.66998765 -281 54 C-280.16329268 52.12650319 -279.32994182 50.25150367 -278.5 48.375 C-272.42145717 35.04751169 -264.56435884 23.08349526 -255 12 C-254.56155762 11.48775879 -254.12311523 10.97551758 -253.67138672 10.44775391 C-252.33373307 8.89250987 -250.98245849 7.35047026 -249.625 5.8125 C-248.81289063 4.89082031 -248.00078125 3.96914063 -247.1640625 3.01953125 C-245 1 -245 1 -242 1 C-240.625 3 -240.625 3 -240 6 C-241.56265319 9.0563658 -243.50310678 11.64610067 -246 14 C-246.68835938 14.15984375 -247.37671875 14.3196875 -248.0859375 14.484375 C-250.13809443 14.79587164 -250.13809443 14.79587164 -250.9453125 16.6328125 C-251.29335938 17.41398437 -251.64140625 18.19515625 -252 19 C-253.60059452 21.31444852 -255.21904663 23.60108153 -256.875 25.875 C-263.26721959 34.50583668 -263.26721959 34.50583668 -268.15625 44.0234375 C-269.49161216 47.15164701 -271.06781119 50.1551439 -272.62109375 53.1796875 C-276.35388073 60.81445294 -279.22011478 68.3857556 -281.5625 76.5625 C-281.86623535 77.61518066 -282.1699707 78.66786133 -282.48291016 79.75244141 C-285.80219409 91.49277197 -287.78281022 102.82810222 -289 115 C-269.86 115 -250.72 115 -231 115 C-231 114.34 -231 113.68 -231 113 C-232.05574219 112.76216797 -232.05574219 112.76216797 -233.1328125 112.51953125 C-240.20233789 110.84905593 -246.9594706 108.69771257 -253.7734375 106.18359375 C-256.83167739 105.06174546 -259.90866877 104.02622061 -263 103 C-265.67641439 102.02431716 -268.33633453 101.01035587 -271 100 C-271 99.34 -271 98.68 -271 98 C-262.08355419 97.37740528 -253.96728927 100.17003932 -245.44140625 102.51171875 C-238.4710645 104.35393421 -232.21797074 105.5252465 -225 105 C-226.03125 104.484375 -227.0625 103.96875 -228.125 103.4375 C-235.07887988 99.43375098 -238.88683965 93.21687172 -242 86 C-242.35835938 85.27039063 -242.71671875 84.54078125 -243.0859375 83.7890625 C-244.53767488 79.35940228 -244.35862616 74.87011316 -244.390625 70.23828125 C-244.55223165 65.16562798 -245.41219976 62.81623695 -249 59 C-252.58853686 53.56005241 -251.53827943 46.2361641 -251 40 C-249.504302 34.89612331 -246.48151087 30.97886957 -243 27 C-238.7135704 27.47626996 -236.77895881 29.87367133 -234 33 C-228.95490349 39.58665378 -228.47781016 45.9367746 -229 54 C-229.33 54.99 -229.66 55.98 -230 57 C-230.66 57 -231.32 57 -232 57 C-232.1546875 58.1446875 -232.1546875 58.1446875 -232.3125 59.3125 C-233.06799155 62.26578515 -233.86992523 62.95867834 -236 65 C-238.26478884 71.3755357 -238.26458157 81.2989186 -236.09375 87.65234375 C-231.61955728 95.12367198 -224.86639381 98.87092335 -217 102 C-217 102.66 -217 103.32 -217 104 C-211.63904667 105.12862175 -206.44693314 105.09688221 -201 105 C-201.7734375 104.70867187 -202.546875 104.41734375 -203.34375 104.1171875 C-212.74072731 100.41887217 -220.0060675 96.24165719 -226 88 C-226 87.34 -226 86.68 -226 86 C-226.66 86 -227.32 86 -228 86 C-228.10864945 83.93867858 -228.18588321 81.87568679 -228.25 79.8125 C-228.29640625 78.66394531 -228.3428125 77.51539063 -228.390625 76.33203125 C-227.92407191 72.35233335 -226.87409373 70.7448629 -224 68 C-223.01 68 -222.02 68 -221 68 C-220.96132813 69.30324219 -220.96132813 69.30324219 -220.921875 70.6328125 C-220.56784656 79.551177 -220.56784656 79.551177 -216 87 C-215.2575 87.845625 -214.515 88.69125 -213.75 89.5625 C-205.29568168 97.05610033 -196.71046861 100.17206838 -185.5625 100.75 C-171.29675155 101.79720337 -157.77447684 106.06475772 -144.2578125 110.5703125 C-133.10676877 114.16934633 -115.90758678 118.00453773 -104.81201172 113.01635742 C-104.21404785 112.68095947 -103.61608398 112.34556152 -103 112 C-101.6794609 111.58217317 -100.34493668 111.20598051 -99 110.875 C-98.01 110.62363281 -98.01 110.62363281 -97 110.3671875 C-95 110 -95 110 -91 110 C-91 109.34 -91 108.68 -91 108 C-79.95596569 104.22081218 -69.28634249 102.19629829 -57.625 101.75 C-48.66478122 101.14532266 -39.07696332 97.90113299 -31.65234375 92.80078125 C-29 91 -29 91 -27 91 C-27 90.34 -27 89.68 -27 89 C-26.34 89 -25.68 89 -25 89 C-24.731875 88.278125 -24.46375 87.55625 -24.1875 86.8125 C-23 84 -23 84 -21.4375 81.875 C-19.23105499 77.46210999 -19.24754766 72.874128 -19 68 C-17.68 68 -16.36 68 -15 68 C-12.97441119 71.34939881 -12.78261013 73.86962551 -12.875 77.75 C-12.89304687 78.73484375 -12.91109375 79.7196875 -12.9296875 80.734375 C-12.96449219 81.85585938 -12.96449219 81.85585938 -13 83 C-13.66 83 -14.32 83 -15 83 C-15.33 84.98 -15.66 86.96 -16 89 C-16.66 89 -17.32 89 -18 89 C-18.09539062 89.60457031 -18.19078125 90.20914063 -18.2890625 90.83203125 C-19.15834029 93.4828509 -20.08385303 94.15523505 -22.375 95.6875 C-22.98085938 96.10386719 -23.58671875 96.52023437 -24.2109375 96.94921875 C-26 98 -26 98 -29 99 C-29.66 99.99 -30.32 100.98 -31 102 C-33.6796875 102.94921875 -33.6796875 102.94921875 -36.875 103.6875 C-37.92429687 103.93886719 -38.97359375 104.19023437 -40.0546875 104.44921875 C-43 105 -43 105 -47 105 C-47 105.66 -47 106.32 -47 107 C-38.27782792 106.09032561 -30.26445632 105.08166168 -22 102 C-21.01 102 -20.02 102 -19 102 C-19 101.34 -19 100.68 -19 100 C-17.390625 98.66796875 -17.390625 98.66796875 -15.25 97.1875 C-11.90039758 94.75357373 -9.37738114 92.43399498 -7 89 C-6.47921875 88.29875 -5.9584375 87.5975 -5.421875 86.875 C-3.51363086 83.01657228 -3.52192503 79.80811708 -3.5625 75.5625 C-3.54251953 74.82451172 -3.52253906 74.08652344 -3.50195312 73.32617188 C-3.50661503 68.08152697 -4.64077993 65.20533941 -8 61 C-12.45598976 55.22371698 -12.5470084 50.14041322 -12 43 C-10.83670106 37.91056713 -8.72229119 33.72229119 -5 30 C-2.75 29.1875 -2.75 29.1875 -1 29 C-1 28.34 -1 27.68 -1 27 C3.3663634 27.72772723 4.98913464 29.77053664 7.671875 33.1171875 C11.52036751 38.57299158 11.54219495 44.55622152 11 51 C10 54.625 10 54.625 9 57 C8.34 57 7.68 57 7 57 C6.67 58.65 6.34 60.3 6 62 C4.515 62.495 4.515 62.495 3 63 C3.04640625 64.18335938 3.0928125 65.36671875 3.140625 66.5859375 C3.54449208 81.03795372 1.10400343 90.9774508 -9 102 C-11.40771966 103.57794057 -13.19569503 104.24050074 -16 105 C-9.69285175 105.18127582 -4.18434831 104.65992722 1.9375 103.1875 C2.72237793 103.00735352 3.50725586 102.82720703 4.31591797 102.64160156 C8.47821141 101.66841895 12.55649909 100.56832045 16.625 99.25 C20.89473318 97.87864473 24.53159048 97.75175503 29 98 C28.67 98.99 28.34 99.98 28 101 C26.08569336 101.93554688 26.08569336 101.93554688 23.58984375 102.71875 C22.22762695 103.15767578 22.22762695 103.15767578 20.83789062 103.60546875 C19.88076172 103.90066406 18.92363281 104.19585937 17.9375 104.5 C16.07117331 105.09236149 14.20528085 105.68609298 12.33984375 106.28125 C11.42702637 106.57 10.51420898 106.85875 9.57373047 107.15625 C7.33406009 107.89048457 5.13943843 108.68232432 2.94140625 109.53125 C-1.63144041 111.23530386 -6.32577573 112.59773272 -11 114 C18.205 114.495 18.205 114.495 48 115 C47.14790502 99.50917482 47.14790502 99.50917482 41 80 C40.76712992 78.31816052 40.58735834 76.6287584 40.4375 74.9375 C40.31181641 73.55884766 40.31181641 73.55884766 40.18359375 72.15234375 C40.12300781 71.44207031 40.06242187 70.73179687 40 70 C39.34 70 38.68 70 38 70 C37.34 66.37 36.68 62.74 36 59 C35.34 59 34.68 59 34 59 C33.41992188 57.60587891 33.41992188 57.60587891 32.828125 56.18359375 C29.57864625 48.29659469 29.57864625 48.29659469 25.625 40.75 C24 38 24 38 24 36 C23.01 35.67 22.02 35.34 21 35 C20.30959426 33.34302621 19.6469365 31.6744239 19 30 C17.13041231 27.44489682 15.2098059 25.20344814 12.9375 23 C11 21 11 21 9.703125 18.69140625 C7.12562139 14.61824113 3.59685112 11.66574589 0.08203125 8.40234375 C-2 6 -2 6 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#A48045\",transform:\"translate(603,271)\"})),_path6||(_path6=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.70007629 0.00262701 1.40015258 0.00525403 2.1214433 0.00796065 C2.86210482 0.0068068 3.60276634 0.00565296 4.36587214 0.00446415 C6.87940846 0.00179046 9.39288234 0.00632578 11.90641549 0.01075396 C13.71394126 0.01031841 15.52146697 0.00944381 17.32899234 0.00816479 C22.3206303 0.00591662 27.31224702 0.0099455 32.30388227 0.01494285 C37.67746636 0.01924257 43.05104916 0.01780127 48.42463449 0.01704058 C57.74293637 0.01651504 67.06123128 0.01966497 76.37953141 0.02527842 C89.85239718 0.03338936 103.32525955 0.03600822 116.79812749 0.03726641 C138.65449213 0.03945757 160.51085305 0.04611938 182.36721566 0.05556902 C203.60452016 0.06474149 224.84182365 0.07182313 246.07912973 0.07607684 C248.04119174 0.07647092 248.04119174 0.07647092 250.04289136 0.07687297 C256.60464393 0.07817796 263.16639651 0.07944168 269.72814909 0.08068487 C324.20476434 0.09105947 378.68137557 0.10867952 433.15798715 0.13100848 C433.15798715 1.78100848 433.15798715 3.43100848 433.15798715 5.13100848 C432.27515557 5.13243349 431.392324 5.13385851 430.48273996 5.13532671 C422.16878765 5.15314536 413.85536864 5.19472455 405.54167226 5.26309904 C401.26730264 5.29741188 396.99329204 5.3224856 392.71877816 5.32656512 C388.59467817 5.33083902 384.47138864 5.35922464 380.34754136 5.40444025 C378.77310485 5.41744463 377.19857148 5.42171252 375.62408784 5.41716227 C373.42054546 5.4122765 371.21939053 5.43825109 369.01614144 5.47158465 C367.13417314 5.4815774 367.13417314 5.4815774 365.21418527 5.49177203 C361.96294619 5.80853563 361.96294619 5.80853563 360.4168525 8.60972247 C360.00142694 9.44174685 359.58600137 10.27377123 359.15798715 11.13100848 C357.67298715 11.62600848 357.67298715 11.62600848 356.15798715 12.13100848 C354.30634402 14.41060689 354.30634402 14.41060689 352.47048715 17.19350848 C349.28318469 21.72499558 345.91228977 25.52959598 341.91579965 29.34585223 C339.55936705 31.73894044 337.92188332 34.28163773 336.15798715 37.13100848 C335.49798715 37.79100848 334.83798715 38.45100848 334.15798715 39.13100848 C333.16798715 39.13100848 332.17798715 39.13100848 331.15798715 39.13100848 C331.15798715 39.79100848 331.15798715 40.45100848 331.15798715 41.13100848 C329.69704965 42.31460223 329.69704965 42.31460223 327.78298715 43.56850848 C325.07207846 45.34789093 324.03002694 46.32294878 322.15798715 49.13100848 C320.32351449 50.30678973 320.32351449 50.30678973 318.11892465 51.44350848 C313.16401557 54.09035315 308.4944005 57.07776975 303.78298715 60.13100848 C294.31517792 66.17339384 285.1165383 70.69628021 274.3728309 74.04116473 C271.68636 74.95188815 269.11555046 75.96379649 266.4978309 77.04897723 C238.12705369 88.45061366 202.65792788 88.85506783 173.15798715 81.13100848 C171.81298586 80.48820698 170.47717975 79.82523689 169.15798715 79.13100848 C167.73022192 78.8128208 166.29053926 78.54562375 164.84548715 78.31850848 C154.44529189 76.33971026 144.64820305 72.84875275 135.52517465 67.46303973 C133.15446829 66.06025493 133.15446829 66.06025493 130.44704965 65.04897723 C127.99364547 64.06510354 126.99739021 62.97041154 125.15798715 61.13100848 C123.50360102 60.43442484 121.83544397 59.77003965 120.15798715 59.13100848 C117.34548715 57.63100848 117.34548715 57.63100848 115.15798715 56.13100848 C115.15798715 55.47100848 115.15798715 54.81100848 115.15798715 54.13100848 C114.47736215 53.90413348 113.79673715 53.67725848 113.09548715 53.44350848 C107.12546667 50.77605252 102.69739905 46.78390567 98.15798715 42.13100848 C96.32776816 40.55107585 94.47712958 39.00047583 92.61111215 37.46303973 C91.15798715 36.13100848 91.15798715 36.13100848 90.15798715 34.13100848 C88.67298715 33.63600848 88.67298715 33.63600848 87.15798715 33.13100848 C85.44802293 31.07905142 83.85270988 29.03525259 82.28298715 26.88100848 C79.15590297 22.62549637 75.97237079 18.81520838 72.15798715 15.13100848 C70.13986364 12.68042993 69.17233275 11.17404528 68.15798715 8.13100848 C64.9042717 7.04643666 62.54899395 7.0105399 59.12600473 7.01748309 C57.26441468 7.01759638 57.26441468 7.01759638 55.36521676 7.01771197 C54.01098357 7.02281857 52.65675078 7.02803456 51.3025184 7.03335223 C49.9167513 7.03521764 48.53098354 7.03664096 47.14521554 7.03763995 C43.50050805 7.04145538 39.8558405 7.05127735 36.21114877 7.06234393 C32.49095977 7.07257898 28.7707643 7.07714206 25.05056527 7.08218035 C17.75302104 7.09290049 10.45550969 7.10996523 3.15798715 7.13100848 C5.91946871 9.29692218 5.91946871 9.29692218 8.72048715 9.44350848 C9.52486215 9.67038348 10.32923715 9.89725848 11.15798715 10.13100848 C12.28298715 12.63100848 12.28298715 12.63100848 13.15798715 15.13100848 C14.14798715 15.46100848 15.13798715 15.79100848 16.15798715 16.13100848 C16.15798715 17.45100848 16.15798715 18.77100848 16.15798715 20.13100848 C16.81798715 20.13100848 17.47798715 20.13100848 18.15798715 20.13100848 C18.96236215 20.95600848 19.76673715 21.78100848 20.59548715 22.63100848 C22.91921131 25.4801704 22.91921131 25.4801704 26.15798715 25.13100848 C26.53890512 25.94505144 26.53890512 25.94505144 26.9275184 26.77553973 C27.27169809 27.49096941 27.61587777 28.2063991 27.97048715 28.94350848 C28.30693246 29.65120379 28.64337777 30.3588991 28.9900184 31.08803973 C30.06824987 33.18366286 30.06824987 33.18366286 31.7712684 34.73647723 C33.15798715 36.13100848 33.15798715 36.13100848 33.53298715 38.63100848 C33.09491151 41.55151275 32.32285288 42.23675096 30.15798715 44.13100848 C30.15798715 44.79100848 30.15798715 45.45100848 30.15798715 46.13100848 C31.14798715 46.62600848 31.14798715 46.62600848 32.15798715 47.13100848 C32.65298715 46.14100848 32.65298715 46.14100848 33.15798715 45.13100848 C34.14798715 45.62600848 34.14798715 45.62600848 35.15798715 46.13100848 C35.44673715 45.49163348 35.73548715 44.85225848 36.03298715 44.19350848 C37.15798715 42.13100848 37.15798715 42.13100848 39.15798715 41.13100848 C39.65298715 43.60600848 39.65298715 43.60600848 40.15798715 46.13100848 C41.55017465 46.16194598 41.55017465 46.16194598 42.97048715 46.19350848 C44.02236215 46.50288348 45.07423715 46.81225848 46.15798715 47.13100848 C47.17328256 49.45772713 48.17286913 51.79135317 49.15798715 54.13100848 C52.12986432 55.59458912 52.12986432 55.59458912 55.15798715 56.13100848 C55.81798715 56.46100848 56.47798715 56.79100848 57.15798715 57.13100848 C57.15798715 57.79100848 57.15798715 58.45100848 57.15798715 59.13100848 C57.67361215 59.37850848 58.18923715 59.62600848 58.72048715 59.88100848 C61.92982866 61.52682464 65.03384378 63.32861807 68.15798715 65.13100848 C68.15798715 65.79100848 68.15798715 66.45100848 68.15798715 67.13100848 C68.81798715 67.13100848 69.47798715 67.13100848 70.15798715 67.13100848 C70.15798715 67.79100848 70.15798715 68.45100848 70.15798715 69.13100848 C71.47798715 68.80100848 72.79798715 68.47100848 74.15798715 68.13100848 C74.24048715 68.74975848 74.32298715 69.36850848 74.40798715 70.00600848 C74.96402669 72.2657375 74.96402669 72.2657375 76.97048715 73.31850848 C79.07748481 74.19460523 79.07748481 74.19460523 81.09548715 74.38100848 C84.52577546 75.62838604 86.07927684 78.24391082 88.15798715 81.13100848 C88.15798715 82.12100848 88.15798715 83.11100848 88.15798715 84.13100848 C88.94173715 83.78038348 89.72548715 83.42975848 90.53298715 83.06850848 C91.39923715 82.75913348 92.26548715 82.44975848 93.15798715 82.13100848 C93.81798715 82.46100848 94.47798715 82.79100848 95.15798715 83.13100848 C95.48798715 82.47100848 95.81798715 81.81100848 96.15798715 81.13100848 C97.14798715 81.13100848 98.13798715 81.13100848 99.15798715 81.13100848 C99.23146371 81.74589129 99.30494027 82.3607741 99.3806434 82.99428973 C99.96901077 85.29941655 99.96901077 85.29941655 102.1540809 86.36147723 C102.95974496 86.67729754 103.76540902 86.99311785 104.59548715 87.31850848 C105.39857309 87.64206316 106.20165902 87.96561785 107.0290809 88.29897723 C107.73161996 88.57354754 108.43415902 88.84811785 109.15798715 89.13100848 C109.81798715 89.46100848 110.47798715 89.79100848 111.15798715 90.13100848 C110.82798715 90.79100848 110.49798715 91.45100848 110.15798715 92.13100848 C110.35779184 93.03464129 110.55759652 93.9382741 110.7634559 94.86928973 C111.25335852 98.91947478 110.34635801 100.73482298 108.47048715 104.31850848 C107.95099496 105.34331316 107.43150277 106.36811785 106.8962684 107.42397723 C105.1765439 110.10210999 103.91443436 111.57442652 101.15798715 113.13100848 C97.97048715 112.94350848 97.97048715 112.94350848 95.15798715 112.13100848 C94.82798715 111.47100848 94.49798715 110.81100848 94.15798715 110.13100848 C93.16798715 110.13100848 92.17798715 110.13100848 91.15798715 110.13100848 C91.15798715 109.47100848 91.15798715 108.81100848 91.15798715 108.13100848 C90.08548715 107.86288348 89.01298715 107.59475848 87.90798715 107.31850848 C84.59289787 106.2687302 82.71921069 105.38488519 80.15798715 103.13100848 C79.16798715 103.62600848 79.16798715 103.62600848 78.15798715 104.13100848 C77.82798715 103.47100848 77.49798715 102.81100848 77.15798715 102.13100848 C76.51861215 101.98663348 75.87923715 101.84225848 75.22048715 101.69350848 C73.15798715 101.13100848 73.15798715 101.13100848 71.15798715 98.13100848 C69.09873576 97.40718381 69.09873576 97.40718381 67.15798715 97.13100848 C67.15798715 96.14100848 67.15798715 95.15100848 67.15798715 94.13100848 C66.58048715 94.37850848 66.00298715 94.62600848 65.40798715 94.88100848 C63.15798715 95.13100848 63.15798715 95.13100848 60.90798715 93.44350848 C59.15798715 91.13100848 59.15798715 91.13100848 59.15798715 87.13100848 C59.81798715 87.13100848 60.47798715 87.13100848 61.15798715 87.13100848 C61.15798715 86.47100848 61.15798715 85.81100848 61.15798715 85.13100848 C63.13798715 84.80100848 65.11798715 84.47100848 67.15798715 84.13100848 C66.82798715 82.48100848 66.49798715 80.83100848 66.15798715 79.13100848 C65.18861215 79.93538348 64.21923715 80.73975848 63.22048715 81.56850848 C59.05764269 84.58827679 55.202695 85.00517676 50.15798715 85.13100848 C49.91048715 84.49163348 49.66298715 83.85225848 49.40798715 83.19350848 C48.34236282 80.94359307 48.34236282 80.94359307 46.03298715 80.38100848 C45.41423715 80.29850848 44.79548715 80.21600848 44.15798715 80.13100848 C43.93435345 78.71667641 43.72972239 77.2993323 43.53298715 75.88100848 C43.41697152 75.09210223 43.3009559 74.30319598 43.18142465 73.49038348 C43.15479319 70.80948388 43.7920663 69.40406759 45.15798715 67.13100848 C45.81798715 67.13100848 46.47798715 67.13100848 47.15798715 67.13100848 C47.15798715 66.47100848 47.15798715 65.81100848 47.15798715 65.13100848 C47.81798715 64.80100848 48.47798715 64.47100848 49.15798715 64.13100848 C49.15798715 62.81100848 49.15798715 61.49100848 49.15798715 60.13100848 C45.56441938 62.66176401 45.56441938 62.66176401 43.22048715 66.25600848 C42.15798715 68.13100848 42.15798715 68.13100848 39.53298715 69.63100848 C35.4437208 70.23682571 33.59250826 69.53379044 30.05642465 67.54897723 C26.39534805 64.8144694 24.19160471 61.1982436 22.15798715 57.13100848 C22.15798715 56.80100848 22.15798715 56.47100848 22.15798715 56.13100848 C20.67298715 56.62600848 20.67298715 56.62600848 19.15798715 57.13100848 C19.15798715 55.81100848 19.15798715 54.49100848 19.15798715 53.13100848 C18.47736215 53.08975848 17.79673715 53.04850848 17.09548715 53.00600848 C12.99666421 51.78508249 9.95058402 49.36623598 7.15798715 46.13100848 C7.15798715 45.14100848 7.15798715 44.15100848 7.15798715 43.13100848 C6.51861215 42.92475848 5.87923715 42.71850848 5.22048715 42.50600848 C4.19954965 41.82538348 4.19954965 41.82538348 3.15798715 41.13100848 C3.03423715 40.16163348 2.91048715 39.19225848 2.78298715 38.19350848 C2.57673715 37.18288348 2.37048715 36.17225848 2.15798715 35.13100848 C-0.70858252 33.44768908 -0.70858252 33.44768908 -3.84201285 32.13100848 C-5.99420115 29.75618001 -6.82038525 28.19589129 -7.84201285 25.13100848 C-8.50201285 25.13100848 -9.16201285 25.13100848 -9.84201285 25.13100848 C-9.63995864 20.78684297 -9.18686231 19.44650904 -5.90451285 16.44350848 C-4.89388785 15.68038348 -3.88326285 14.91725848 -2.84201285 14.13100848 C-2.18201285 13.14100848 -1.52201285 12.15100848 -0.84201285 11.13100848 C-0.18201285 11.13100848 0.47798715 11.13100848 1.15798715 11.13100848 C0.82798715 9.48100848 0.49798715 7.83100848 0.15798715 6.13100848 C-1.49201285 6.79100848 -3.14201285 7.45100848 -4.84201285 8.13100848 C-5.84201285 7.13100848 -5.84201285 7.13100848 -5.96701285 4.13100848 C-5.76704762 -0.66815718 -4.37408058 0.01560084 0 0 Z M75.15798715 5.13100848 C76.84970374 10.63467931 76.84970374 10.63467931 79.97048715 14.63100848 C80.8831434 15.62100848 80.8831434 15.62100848 81.81423715 16.63100848 C82.58767465 17.45600848 83.36111215 18.28100848 84.15798715 19.13100848 C85.25310812 20.33809942 86.34673768 21.54654437 87.43923715 22.75600848 C88.61568423 24.04825467 89.79277225 25.33991763 90.97048715 26.63100848 C91.54581185 27.26716082 92.12113656 27.90331316 92.71389535 28.55874285 C94.15450544 30.12140966 95.65195289 31.63129324 97.15798715 33.13100848 C97.81798715 33.13100848 98.47798715 33.13100848 99.15798715 33.13100848 C99.39130746 33.70979754 99.62462777 34.2885866 99.8650184 34.88491473 C102.42830947 39.33776176 107.11580511 42.07516726 111.15798715 45.13100848 C111.8540809 45.66854754 112.55017465 46.2060866 113.26736215 46.75991473 C116.81661986 49.50411552 116.81661986 49.50411552 121.15798715 50.13100848 C121.15798715 50.79100848 121.15798715 51.45100848 121.15798715 52.13100848 C123.23697933 53.62398158 123.23697933 53.62398158 125.84548715 55.06850848 C126.71560434 55.57253191 127.58572152 56.07655535 128.4822059 56.59585223 C129.36521371 57.10245379 130.24822152 57.60905535 131.15798715 58.13100848 C131.95978402 58.63761004 132.7615809 59.1442116 133.58767465 59.66616473 C136.50854832 61.33079638 139.44097007 62.47175132 142.59548715 63.63100848 C145.86457505 64.83520614 148.98844427 66.04431811 152.0915809 67.63100848 C155.56322968 69.32924177 159.09481448 70.51617649 162.78298715 71.63100848 C163.48955453 71.84604021 164.19612191 72.06107195 164.92410043 72.2826198 C166.9995534 72.90760615 169.07808758 73.52100808 171.15798715 74.13100848 C172.1737684 74.43393816 173.18954965 74.73686785 174.23611215 75.04897723 C197.64667262 81.49015099 223.51942983 80.76282115 247.15798715 76.13100848 C247.94141488 75.98647234 248.72484262 75.84193621 249.53201059 75.69302019 C259.01277961 73.92783784 267.58966266 71.48501341 276.33767465 67.40053973 C278.6471011 66.36097796 280.68813903 65.62617126 283.15798715 65.13100848 C283.15798715 64.47100848 283.15798715 63.81100848 283.15798715 63.13100848 C284.20986215 63.04850848 285.26173715 62.96600848 286.34548715 62.88100848 C290.61570945 62.04096474 291.84964263 60.83522052 295.15798715 58.13100848 C297.45697701 56.75430343 299.75088646 55.42318884 302.09548715 54.13100848 C306.58136751 51.64263281 311.01526282 49.16689806 315.15798715 46.13100848 C315.15798715 45.47100848 315.15798715 44.81100848 315.15798715 44.13100848 C315.81798715 44.13100848 316.47798715 44.13100848 317.15798715 44.13100848 C317.15798715 43.47100848 317.15798715 42.81100848 317.15798715 42.13100848 C318.47798715 41.80100848 319.79798715 41.47100848 321.15798715 41.13100848 C321.15798715 40.47100848 321.15798715 39.81100848 321.15798715 39.13100848 C321.69423715 38.90413348 322.23048715 38.67725848 322.78298715 38.44350848 C325.98258876 36.67530758 328.44835938 34.59430645 331.15798715 32.13100848 C331.15798715 31.47100848 331.15798715 30.81100848 331.15798715 30.13100848 C332.04744027 29.74428973 332.04744027 29.74428973 332.95486215 29.34975848 C336.8767752 27.18018955 339.33926456 23.55090731 342.15798715 20.13100848 C342.87083871 19.28151629 343.58369027 18.4320241 344.3181434 17.55678973 C347.7693095 13.36653542 350.10989381 10.25124182 352.15798715 5.13100848 C309.58798715 5.13100848 267.01798715 5.13100848 223.15798715 5.13100848 C223.84063359 8.34596224 223.84063359 8.34596224 226.72048715 9.44350848 C227.85486215 10.00038348 228.98923715 10.55725848 230.15798715 11.13100848 C238.98956516 16.92673155 243.64791005 23.20866763 247.15798715 33.13100848 C246.7197059 32.73011004 246.28142465 32.3292116 245.82986215 31.91616473 C230.09199753 17.40151309 230.09199753 17.40151309 210.16579965 11.96303973 C207.56979323 12.18021536 205.47743162 12.97128624 203.15798715 14.13100848 C203.15798715 14.79100848 203.15798715 15.45100848 203.15798715 16.13100848 C202.35361215 16.31663348 201.54923715 16.50225848 200.72048715 16.69350848 C195.81945935 18.67111618 192.21230286 21.79612772 188.15798715 25.13100848 C187.20923715 25.85288348 186.26048715 26.57475848 185.28298715 27.31850848 C183.19031781 29.10343232 181.76425082 30.9143646 180.15798715 33.13100848 C180.58167786 31.50235338 181.02244945 29.8781347 181.47048715 28.25600848 C181.71411996 27.3510866 181.95775277 26.44616473 182.2087684 25.51382098 C183.15798715 23.13100848 183.15798715 23.13100848 186.15798715 21.13100848 C186.59111215 20.34725848 187.02423715 19.56350848 187.47048715 18.75600848 C189.53423323 15.54573679 191.98275242 14.17727086 195.15798715 12.13100848 C195.15798715 11.47100848 195.15798715 10.81100848 195.15798715 10.13100848 C197.81027527 9.05575653 200.44167169 8.03644696 203.15798715 7.13100848 C203.15798715 6.47100848 203.15798715 5.81100848 203.15798715 5.13100848 C160.91798715 5.13100848 118.67798715 5.13100848 75.15798715 5.13100848 Z \",fill:\"#9A8056\",transform:\"translate(268.84201285243034,486.8689915239811)\"})),_path7||(_path7=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 2.64 2 5.28 2 8 C2.66 8 3.32 8 4 8 C8 12.47058824 8 12.47058824 8 15 C8.66 15 9.32 15 10 15 C10 15.99 10 16.98 10 18 C10.66 18 11.32 18 12 18 C12.3125 20.1875 12.3125 20.1875 12 23 C9.52552136 25.87574545 7.1557398 27.89617347 4 30 C1.66015625 29.8359375 1.66015625 29.8359375 -0.9375 29.375 C-5.03461177 28.81070963 -5.03461177 28.81070963 -8.6875 30.6875 C-10.25141992 32.84393968 -10.25141992 32.84393968 -9.59375 34.8671875 C-9.3978125 35.57101562 -9.201875 36.27484375 -9 37 C-8.65515994 40.26721342 -8.73937363 42.94080756 -10 46 C-13.05137878 48.44884202 -16.22319093 49.9905303 -20 51 C-22.32421875 50.6171875 -22.32421875 50.6171875 -24 50 C-23.01 52.475 -23.01 52.475 -22 55 C-22.75925781 55.66386719 -23.51851562 56.32773437 -24.30078125 57.01171875 C-25.30498964 57.90330564 -26.30887907 58.79525188 -27.3125 59.6875 C-28.29863281 60.55761719 -29.28476562 61.42773438 -30.30078125 62.32421875 C-32.76993958 64.77193721 -34.3868157 66.94430961 -36 70 C-36.33 69.34 -36.66 68.68 -37 68 C-37.47308594 68.32613281 -37.94617188 68.65226563 -38.43359375 68.98828125 C-42.14664656 71.44193603 -45.52963073 73.29870251 -49.8125 74.5625 C-53.43925692 75.64678815 -55.03249088 76.64366091 -57 80 C-57.66 80 -58.32 80 -59 80 C-59 80.66 -59 81.32 -59 82 C-62.3794534 84.51045109 -64.79169168 85.55372478 -69 85 C-70.485 84.01 -70.485 84.01 -72 83 C-74.14006055 84.77261323 -74.14006055 84.77261323 -74.3984375 86.94921875 C-75.39366573 90.34204226 -77.8696972 91.37258349 -80.8046875 93.08203125 C-84.20491526 94.50383467 -86.53788907 94.0652649 -90 93 C-92.4375 91.625 -92.4375 91.625 -94 90 C-94 89.01 -94 88.02 -94 87 C-94.66 87 -95.32 87 -96 87 C-96.33 87.66 -96.66 88.32 -97 89 C-97.33 88.67 -97.66 88.34 -98 88 C-98.495 89.485 -98.495 89.485 -99 91 C-97.515 91.495 -97.515 91.495 -96 92 C-94.3125 94.5625 -94.3125 94.5625 -93 97 C-96.82754414 100.47958558 -99.99790764 101.79259839 -105 103 C-111.12833093 104.64151721 -116.68906046 106.45937364 -122 110 C-122.66 107.69 -123.32 105.38 -124 103 C-124.40089844 103.49371094 -124.80179688 103.98742187 -125.21484375 104.49609375 C-128.38709617 108.07117187 -130.7765128 110.43467938 -135.625 111.125 C-139.58860191 111.26631688 -141.88630298 110.57992039 -145 108 C-145.680625 107.2575 -146.36125 106.515 -147.0625 105.75 C-147.701875 105.1725 -148.34125 104.595 -149 104 C-151.21858253 104.13641377 -151.21858253 104.13641377 -153 105 C-153 106.32 -153 107.64 -153 109 C-151.515 109.99 -151.515 109.99 -150 111 C-150.33 111.99 -150.66 112.98 -151 114 C-157.06815666 114.89898617 -162.86403867 115.08522169 -169 115 C-168.67 112.03 -168.34 109.06 -168 106 C-169.65 106 -171.3 106 -173 106 C-174.45445618 100.50538777 -173.8444029 95.93029836 -171 91 C-169.906875 91.103125 -168.81375 91.20625 -167.6875 91.3125 C-166.470625 91.209375 -165.25375 91.10625 -164 91 C-161.99135641 88.6273026 -161.99135641 88.6273026 -161 86 C-160.34 86.33 -159.68 86.66 -159 87 C-159.66 87.99 -160.32 88.98 -161 90 C-160.071875 90.0825 -159.14375 90.165 -158.1875 90.25 C-155 91 -155 91 -153.125 92.9375 C-152 95 -152 95 -152 97 C-151.01 97 -150.02 97 -149 97 C-148.938125 95.9275 -148.87625 94.855 -148.8125 93.75 C-148 90 -148 90 -145.9375 87.5 C-141.92843754 85.45281917 -139.27490459 86.05193648 -135 87 C-133.515 87.2784375 -133.515 87.2784375 -132 87.5625 C-131.01 87.7790625 -131.01 87.7790625 -130 88 C-129.71125 87.195625 -129.4225 86.39125 -129.125 85.5625 C-128 83 -128 83 -126 82 C-124.00039988 81.960008 -121.99952758 81.95653201 -120 82 C-120 81.34 -120 80.68 -120 80 C-118.02 79.505 -118.02 79.505 -116 79 C-115.67 79.66 -115.34 80.32 -115 81 C-114.608125 80.566875 -114.21625 80.13375 -113.8125 79.6875 C-111.60178383 77.62924702 -109.7650937 76.25686077 -107 75 C-103.1875 75.3125 -103.1875 75.3125 -100 76 C-100 76.99 -100 77.98 -100 79 C-99.34 79 -98.68 79 -98 79 C-97.9175 77.88625 -97.835 76.7725 -97.75 75.625 C-97 72 -97 72 -95.375 70.6875 C-94.59125 70.460625 -93.8075 70.23375 -93 70 C-91.2984375 69.443125 -91.2984375 69.443125 -89.5625 68.875 C-86.50363426 68.12369964 -84.11664322 67.81111253 -81 68 C-81 66.68 -81 65.36 -81 64 C-80.34 64 -79.68 64 -79 64 C-79 63.34 -79 62.68 -79 62 C-77.35 62 -75.7 62 -74 62 C-73.01 59.03 -73.01 59.03 -72 56 C-71.67 56.66 -71.34 57.32 -71 58 C-69.9275 57.690625 -68.855 57.38125 -67.75 57.0625 C-64 56 -64 56 -61.6875 55.625 C-59.80344649 55.15201042 -59.80344649 55.15201042 -59.125 53.125 C-58 51 -58 51 -55.25 49.75 C-50.8655743 47.38915539 -48.72972569 44.07522877 -46 40 C-41.12846211 40.41756039 -39.24637715 42.49732992 -36 46 C-35.01 46.66 -34.02 47.32 -33 48 C-33.03480469 47.05898438 -33.06960938 46.11796875 -33.10546875 45.1484375 C-33.13253906 43.90320313 -33.15960937 42.65796875 -33.1875 41.375 C-33.22230469 40.14523437 -33.25710938 38.91546875 -33.29296875 37.6484375 C-32.97548589 33.69471759 -32.12767303 31.32764028 -30 28 C-27.4375 27.375 -27.4375 27.375 -25 27 C-23.75825204 25.0998823 -23.75825204 25.0998823 -23 23 C-22.34 22.34 -21.68 21.68 -21 21 C-20.67 20.01 -20.34 19.02 -20 18 C-19.01 17.505 -19.01 17.505 -18 17 C-17.68573231 14.7058459 -17.62075424 12.44226779 -17.5390625 10.12890625 C-17 8 -17 8 -14.9609375 6.71484375 C-14.31382812 6.47894531 -13.66671875 6.24304688 -13 6 C-12.67 7.32 -12.34 8.64 -12 10 C-8.5097254 7.83935382 -5.60088214 5.71323217 -2.75 2.75 C-1.8425 1.8425 -0.935 0.935 0 0 Z \",fill:\"#4B3D29\",transform:\"translate(681,506)\"})),_path8||(_path8=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.4062186 1.34634457 6.43077702 3.19374374 9 7 C9 7.66 9 8.32 9 9 C9.66 9 10.32 9 11 9 C11.33 9.66 11.66 10.32 12 11 C12.99 11.33 13.98 11.66 15 12 C16.06036586 13.62892665 17.05200708 15.30321268 18 17 C19.83233247 19.6170573 21.70048901 22.2054372 23.57421875 24.79296875 C25 27 25 27 25 29 C25.99 29.33 26.98 29.66 28 30 C28.2165625 30.8971875 28.2165625 30.8971875 28.4375 31.8125 C28.83376029 34.14520323 28.83376029 34.14520323 30.8125 35.75 C34.35926476 39.3981009 37 43.84854209 37 49 C37.66 49 38.32 49 39 49 C39.33 51.64 39.66 54.28 40 57 C40.66 57 41.32 57 42 57 C45.08151633 64.63042138 48 72.7084324 48 81 C48.66 81 49.32 81 50 81 C50.48229332 83.49943204 50.96089426 85.99948243 51.4375 88.5 C51.57220703 89.19609375 51.70691406 89.8921875 51.84570312 90.609375 C53.13347861 97.39375318 54.14912568 104.06994584 54.0625 111 C54.05347656 111.94875 54.04445313 112.8975 54.03515625 113.875 C54.01775391 114.926875 54.01775391 114.926875 54 116 C55.32 116 56.64 116 58 116 C57.67 116.99 57.34 117.98 57 119 C-1.74 119 -60.48 119 -121 119 C-121 118.01 -121 117.02 -121 116 C-119.80503906 115.94392578 -119.80503906 115.94392578 -118.5859375 115.88671875 C-112.61082452 115.51600006 -108.27227812 114.99561257 -103 112 C-98.97303673 110.70505495 -95.25525362 110 -91 110 C-91 109.34 -91 108.68 -91 108 C-79.95596569 104.22081218 -69.28634249 102.19629829 -57.625 101.75 C-48.66478122 101.14532266 -39.07696332 97.90113299 -31.65234375 92.80078125 C-29 91 -29 91 -27 91 C-27 90.34 -27 89.68 -27 89 C-26.34 89 -25.68 89 -25 89 C-24.731875 88.278125 -24.46375 87.55625 -24.1875 86.8125 C-23 84 -23 84 -21.4375 81.875 C-19.23105499 77.46210999 -19.24754766 72.874128 -19 68 C-17.68 68 -16.36 68 -15 68 C-12.97441119 71.34939881 -12.78261013 73.86962551 -12.875 77.75 C-12.89304687 78.73484375 -12.91109375 79.7196875 -12.9296875 80.734375 C-12.95289063 81.48203125 -12.97609375 82.2296875 -13 83 C-13.66 83 -14.32 83 -15 83 C-15.33 84.98 -15.66 86.96 -16 89 C-16.66 89 -17.32 89 -18 89 C-18.09539062 89.60457031 -18.19078125 90.20914063 -18.2890625 90.83203125 C-19.15834029 93.4828509 -20.08385303 94.15523505 -22.375 95.6875 C-22.98085938 96.10386719 -23.58671875 96.52023437 -24.2109375 96.94921875 C-26 98 -26 98 -29 99 C-29.66 99.99 -30.32 100.98 -31 102 C-33.6796875 102.94921875 -33.6796875 102.94921875 -36.875 103.6875 C-37.92429687 103.93886719 -38.97359375 104.19023437 -40.0546875 104.44921875 C-43 105 -43 105 -47 105 C-47 105.66 -47 106.32 -47 107 C-38.27782792 106.09032561 -30.26445632 105.08166168 -22 102 C-21.01 102 -20.02 102 -19 102 C-19 101.34 -19 100.68 -19 100 C-17.390625 98.66796875 -17.390625 98.66796875 -15.25 97.1875 C-11.90039758 94.75357373 -9.37738114 92.43399498 -7 89 C-6.47921875 88.29875 -5.9584375 87.5975 -5.421875 86.875 C-3.51363086 83.01657228 -3.52192503 79.80811708 -3.5625 75.5625 C-3.54251953 74.82451172 -3.52253906 74.08652344 -3.50195312 73.32617188 C-3.50661503 68.08152697 -4.64077993 65.20533941 -8 61 C-12.45598976 55.22371698 -12.5470084 50.14041322 -12 43 C-10.83670106 37.91056713 -8.72229119 33.72229119 -5 30 C-2.75 29.1875 -2.75 29.1875 -1 29 C-1 28.34 -1 27.68 -1 27 C3.3663634 27.72772723 4.98913464 29.77053664 7.671875 33.1171875 C11.52036751 38.57299158 11.54219495 44.55622152 11 51 C10 54.625 10 54.625 9 57 C8.34 57 7.68 57 7 57 C6.67 58.65 6.34 60.3 6 62 C4.515 62.495 4.515 62.495 3 63 C3.04640625 64.18335938 3.0928125 65.36671875 3.140625 66.5859375 C3.54449208 81.03795372 1.10400343 90.9774508 -9 102 C-11.40771966 103.57794057 -13.19569503 104.24050074 -16 105 C-9.69285175 105.18127582 -4.18434831 104.65992722 1.9375 103.1875 C2.72237793 103.00735352 3.50725586 102.82720703 4.31591797 102.64160156 C8.47821141 101.66841895 12.55649909 100.56832045 16.625 99.25 C20.89473318 97.87864473 24.53159048 97.75175503 29 98 C28.67 98.99 28.34 99.98 28 101 C26.08569336 101.93554688 26.08569336 101.93554688 23.58984375 102.71875 C22.22762695 103.15767578 22.22762695 103.15767578 20.83789062 103.60546875 C19.40219727 104.04826172 19.40219727 104.04826172 17.9375 104.5 C16.07117331 105.09236149 14.20528085 105.68609298 12.33984375 106.28125 C11.42702637 106.57 10.51420898 106.85875 9.57373047 107.15625 C7.33406009 107.89048457 5.13943843 108.68232432 2.94140625 109.53125 C-1.63144041 111.23530386 -6.32577573 112.59773272 -11 114 C18.205 114.495 18.205 114.495 48 115 C47.14790502 99.50917482 47.14790502 99.50917482 41 80 C40.76712992 78.31816052 40.58735834 76.6287584 40.4375 74.9375 C40.35371094 74.01839844 40.26992188 73.09929687 40.18359375 72.15234375 C40.12300781 71.44207031 40.06242188 70.73179687 40 70 C39.34 70 38.68 70 38 70 C37.01 64.555 37.01 64.555 36 59 C35.34 59 34.68 59 34 59 C33.41992188 57.60587891 33.41992188 57.60587891 32.828125 56.18359375 C29.57864625 48.29659469 29.57864625 48.29659469 25.625 40.75 C24 38 24 38 24 36 C23.01 35.67 22.02 35.34 21 35 C20.30959426 33.34302621 19.6469365 31.6744239 19 30 C17.13041231 27.44489682 15.2098059 25.20344814 12.9375 23 C11 21 11 21 9.703125 18.69140625 C7.12562139 14.61824113 3.59685112 11.66574589 0.08203125 8.40234375 C-2 6 -2 6 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#C09B61\",transform:\"translate(603,271)\"})),_path9||(_path9=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C24.76 4 48.52 4 73 4 C73 4.66 73 5.32 73 6 C51.88 6 30.76 6 9 6 C11.76148156 8.16591371 11.76148156 8.16591371 14.5625 8.3125 C15.366875 8.539375 16.17125 8.76625 17 9 C18.125 11.5 18.125 11.5 19 14 C19.99 14.33 20.98 14.66 22 15 C22 16.32 22 17.64 22 19 C22.66 19 23.32 19 24 19 C24.804375 19.825 25.60875 20.65 26.4375 21.5 C28.76122416 24.34916193 28.76122416 24.34916193 32 24 C32.38091797 24.81404297 32.38091797 24.81404297 32.76953125 25.64453125 C33.11371094 26.35996094 33.45789063 27.07539062 33.8125 27.8125 C34.14894531 28.52019531 34.48539062 29.22789062 34.83203125 29.95703125 C35.91026272 32.05265439 35.91026272 32.05265439 37.61328125 33.60546875 C39 35 39 35 39.375 37.5 C38.93692436 40.42050428 38.16486573 41.10574248 36 43 C36 43.66 36 44.32 36 45 C36.99 45.495 36.99 45.495 38 46 C38.495 45.01 38.495 45.01 39 44 C39.99 44.495 39.99 44.495 41 45 C41.28875 44.360625 41.5775 43.72125 41.875 43.0625 C43 41 43 41 45 40 C45.495 42.475 45.495 42.475 46 45 C47.3921875 45.0309375 47.3921875 45.0309375 48.8125 45.0625 C49.864375 45.371875 50.91625 45.68125 52 46 C53.01529541 48.32671865 54.01488198 50.6603447 55 53 C57.97187717 54.46358065 57.97187717 54.46358065 61 55 C61.66 55.33 62.32 55.66 63 56 C63 56.66 63 57.32 63 58 C63.515625 58.2475 64.03125 58.495 64.5625 58.75 C67.77184151 60.39581616 70.87585664 62.1976096 74 64 C74 64.66 74 65.32 74 66 C74.66 66 75.32 66 76 66 C76 66.66 76 67.32 76 68 C77.32 67.67 78.64 67.34 80 67 C80.0825 67.61875 80.165 68.2375 80.25 68.875 C80.80603954 71.13472902 80.80603954 71.13472902 82.8125 72.1875 C84.91949766 73.06359676 84.91949766 73.06359676 86.9375 73.25 C90.36778831 74.49737757 91.92128969 77.11290235 94 80 C94 80.99 94 81.98 94 83 C94.78375 82.649375 95.5675 82.29875 96.375 81.9375 C97.24125 81.628125 98.1075 81.31875 99 81 C99.66 81.33 100.32 81.66 101 82 C101.33 81.34 101.66 80.68 102 80 C102.99 80 103.98 80 105 80 C105.07347656 80.61488281 105.14695312 81.22976563 105.22265625 81.86328125 C105.81102363 84.16840808 105.81102363 84.16840808 107.99609375 85.23046875 C108.80175781 85.54628906 109.60742188 85.86210938 110.4375 86.1875 C111.24058594 86.51105469 112.04367187 86.83460938 112.87109375 87.16796875 C113.57363281 87.44253906 114.27617187 87.71710938 115 88 C115.66 88.33 116.32 88.66 117 89 C116.67 89.66 116.34 90.32 116 91 C116.19980469 91.90363281 116.39960938 92.80726563 116.60546875 93.73828125 C117.09537137 97.7884663 116.18837086 99.60381451 114.3125 103.1875 C113.79300781 104.21230469 113.27351563 105.23710938 112.73828125 106.29296875 C111.01855675 108.97110151 109.75644721 110.44341805 107 112 C103.8125 111.8125 103.8125 111.8125 101 111 C100.67 110.34 100.34 109.68 100 109 C99.01 109 98.02 109 97 109 C97 108.34 97 107.68 97 107 C95.9275 106.731875 94.855 106.46375 93.75 106.1875 C90.43491072 105.13772173 88.56122354 104.25387672 86 102 C85.01 102.495 85.01 102.495 84 103 C83.67 102.34 83.34 101.68 83 101 C82.360625 100.855625 81.72125 100.71125 81.0625 100.5625 C79 100 79 100 77 97 C74.94074861 96.27617533 74.94074861 96.27617533 73 96 C73 95.01 73 94.02 73 93 C72.4225 93.2475 71.845 93.495 71.25 93.75 C69 94 69 94 66.75 92.3125 C65 90 65 90 65 86 C65.66 86 66.32 86 67 86 C67 85.34 67 84.68 67 84 C68.98 83.67 70.96 83.34 73 83 C72.67 81.35 72.34 79.7 72 78 C71.030625 78.804375 70.06125 79.60875 69.0625 80.4375 C64.89965554 83.45726832 61.04470785 83.87416828 56 84 C55.7525 83.360625 55.505 82.72125 55.25 82.0625 C54.18437567 79.81258459 54.18437567 79.81258459 51.875 79.25 C51.25625 79.1675 50.6375 79.085 50 79 C49.7763663 77.58566794 49.57173524 76.16832382 49.375 74.75 C49.25898438 73.96109375 49.14296875 73.1721875 49.0234375 72.359375 C48.99680605 69.67847541 49.63407916 68.27305911 51 66 C51.66 66 52.32 66 53 66 C53 65.34 53 64.68 53 64 C53.66 63.67 54.32 63.34 55 63 C55 61.68 55 60.36 55 59 C51.40643223 61.53075553 51.40643223 61.53075553 49.0625 65.125 C48 67 48 67 45.375 68.5 C41.28573366 69.10581724 39.43452111 68.40278196 35.8984375 66.41796875 C32.2373609 63.68346092 30.03361756 60.06723513 28 56 C28 55.67 28 55.34 28 55 C26.515 55.495 26.515 55.495 25 56 C25 54.68 25 53.36 25 52 C24.319375 51.95875 23.63875 51.9175 22.9375 51.875 C18.83867706 50.65407402 15.79259687 48.2352275 13 45 C13 44.01 13 43.02 13 42 C12.360625 41.79375 11.72125 41.5875 11.0625 41.375 C10.0415625 40.694375 10.0415625 40.694375 9 40 C8.87625 39.030625 8.7525 38.06125 8.625 37.0625 C8.41875 36.051875 8.2125 35.04125 8 34 C5.13343033 32.31668061 5.13343033 32.31668061 2 31 C-0.1521883 28.62517153 -0.9783724 27.06488281 -2 24 C-2.66 24 -3.32 24 -4 24 C-3.79794579 19.65583449 -3.34484946 18.31550057 -0.0625 15.3125 C0.948125 14.549375 1.95875 13.78625 3 13 C3.66 12.01 4.32 11.02 5 10 C5.66 10 6.32 10 7 10 C6.67 8.35 6.34 6.7 6 5 C4.35 5.66 2.7 6.32 1 7 C0 6 0 6 -0.0625 2.9375 C-0.041875 1.968125 -0.02125 0.99875 0 0 Z \",fill:\"#57482E\",transform:\"translate(263,488)\"})),_path10||(_path10=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.36611151 1.29772982 6.70600678 2.64871354 10.04296875 4.01953125 C28.86918691 11.45640748 48.01199514 13.25375962 68.04296875 14.01953125 C69.03590358 18.99262429 69.20386285 23.74653106 69.2109375 28.79296875 C69.2142659 29.63437408 69.2175943 30.47577942 69.22102356 31.34268188 C69.22607218 33.12281756 69.22843252 34.90296264 69.22827148 36.68310547 C69.2304338 39.35140528 69.24854409 42.01927453 69.26757812 44.6875 C69.35596243 70.9868773 69.35596243 70.9868773 65.04296875 81.01953125 C64.75421875 82.23640625 64.46546875 83.45328125 64.16796875 84.70703125 C59.92928168 102.114769 50.49077434 117.93351494 39.125 131.5234375 C37.59332413 133.35972433 36.11486193 135.24072443 34.66796875 137.14453125 C24.47895432 148.30392801 9.92250758 158.8860421 -3.95703125 165.01953125 C-9.75996102 164.88457939 -14.13701518 161.95542801 -18.95703125 159.01953125 C-19.85035156 158.478125 -20.74367188 157.93671875 -21.6640625 157.37890625 C-33.80873558 149.83731905 -33.80873558 149.83731905 -38.95703125 145.01953125 C-38.95703125 144.35953125 -38.95703125 143.69953125 -38.95703125 143.01953125 C-39.50875 142.80296875 -40.06046875 142.58640625 -40.62890625 142.36328125 C-43.76259514 140.55457491 -45.79099631 138.20401451 -48.20703125 135.51953125 C-48.89539063 134.77123047 -48.89539063 134.77123047 -49.59765625 134.0078125 C-52.95703125 130.27850632 -52.95703125 130.27850632 -52.95703125 128.01953125 C-53.61703125 128.01953125 -54.27703125 128.01953125 -54.95703125 128.01953125 C-57.18796652 125.14213179 -58.99212904 121.98450094 -60.85498047 118.859375 C-61.61505854 117.59044537 -62.38558926 116.32773845 -63.16455078 115.0703125 C-70.48089189 103.21055463 -74.67154 91.52084685 -77.95703125 78.01953125 C-78.14265625 77.31086914 -78.32828125 76.60220703 -78.51953125 75.87207031 C-80.28725916 69.10986116 -81.08351041 62.66491378 -81.08984375 55.6796875 C-81.09080048 54.99506943 -81.0917572 54.31045135 -81.09274292 53.60508728 C-81.09341959 52.16047066 -81.09160132 50.71585091 -81.08740234 49.27124023 C-81.08212171 47.11890354 -81.08732587 44.96678278 -81.09375 42.81445312 C-81.09788649 33.18181526 -80.66699374 23.62504885 -79.95703125 14.01953125 C-79.38895752 13.99971191 -78.82088379 13.97989258 -78.2355957 13.95947266 C-55.40746162 13.12415632 -32.36331488 10.36523464 -11.6875 -0.1328125 C-7.63414045 -2.1183182 -4.10544145 -1.36124941 0 0 Z M-12.1015625 5.8203125 C-16.84664124 8.02432144 -21.65058762 9.66519621 -26.64453125 11.20703125 C-27.45986328 11.46677734 -28.27519531 11.72652344 -29.11523438 11.99414062 C-33.37925361 13.32815473 -37.51396834 14.42377322 -41.95703125 15.01953125 C-41.95703125 15.67953125 -41.95703125 16.33953125 -41.95703125 17.01953125 C-42.95283203 17.09300781 -42.95283203 17.09300781 -43.96875 17.16796875 C-50.75743772 17.56230285 -50.75743772 17.56230285 -56.95703125 20.01953125 C-58.52641153 22.93409463 -58.95703125 24.69894794 -58.95703125 28.01953125 C-59.59640625 28.12265625 -60.23578125 28.22578125 -60.89453125 28.33203125 C-61.57515625 28.55890625 -62.25578125 28.78578125 -62.95703125 29.01953125 C-63.28703125 30.00953125 -63.61703125 30.99953125 -63.95703125 32.01953125 C-64.61703125 32.01953125 -65.27703125 32.01953125 -65.95703125 32.01953125 C-66.57578125 33.16421875 -66.57578125 33.16421875 -67.20703125 34.33203125 C-69.35098335 37.62452912 -71.44454008 38.40093734 -74.95703125 40.01953125 C-75.4373968 63.39239441 -74.9335802 86.16984566 -62.95703125 107.01953125 C-62.36535156 108.11201172 -62.36535156 108.11201172 -61.76171875 109.2265625 C-49.67138568 130.60918014 -31.79084632 147.01326049 -10.16796875 158.41015625 C-3.60067602 160.2202228 2.20708069 156.11954094 7.734375 153.0390625 C12.55136055 150.09882456 16.79804254 146.72519973 21.04296875 143.01953125 C21.87570312 142.30796875 22.7084375 141.59640625 23.56640625 140.86328125 C45.78714104 121.44577762 61.30794703 93.70152982 64.04296875 64.01953125 C64.37134957 57.98186879 64.4137163 51.93978196 64.41796875 45.89453125 C64.41996277 45.12385315 64.42195679 44.35317505 64.42401123 43.55914307 C64.4233649 41.35543731 64.40535908 39.15275249 64.37890625 36.94921875 C64.3639209 35.66257324 64.34893555 34.37592773 64.33349609 33.05029297 C64.35680235 29.9090938 64.35680235 29.9090938 62.04296875 28.01953125 C62.04296875 31.31953125 62.04296875 34.61953125 62.04296875 38.01953125 C59.16796875 37.26953125 59.16796875 37.26953125 56.04296875 36.01953125 C55.04296875 34.20703125 55.04296875 34.20703125 54.04296875 32.01953125 C50.59366009 28.36446084 50.59366009 28.36446084 46.04296875 27.01953125 C45.54796875 23.05953125 45.54796875 23.05953125 45.04296875 19.01953125 C44.35976563 18.87257812 43.6765625 18.725625 42.97265625 18.57421875 C27.88985446 15.21819891 12.72077016 11.79501114 -1.27734375 5.12109375 C-5.46476597 3.3997336 -8.19965107 3.91529062 -12.1015625 5.8203125 Z \",fill:\"#67512D\",transform:\"translate(487.95703125,179.98046875)\"})),_path11||(_path11=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C30.15625 0 30.15625 0 36.5625 5 C39.2157641 8.69149788 39.45055889 12.36719525 39.421875 16.77734375 C38.91976801 19.4227037 38.23709608 20.23795869 36.1875 21.9375 C35.135625 22.618125 34.08375 23.29875 33 24 C32.01 24.66 31.02 25.32 30 26 C30.68707031 26.31453125 31.37414062 26.6290625 32.08203125 26.953125 C32.98308594 27.38109375 33.88414062 27.8090625 34.8125 28.25 C35.70582031 28.66765625 36.59914063 29.0853125 37.51953125 29.515625 C41.22209994 31.7313354 42.64896544 33.94689632 44 38 C44.11687338 39.47586615 44.17501742 40.95706612 44.1875 42.4375 C44.20167969 43.19933594 44.21585937 43.96117187 44.23046875 44.74609375 C43.86151243 48.35436146 42.8343786 50.30245949 40.046875 52.6328125 C39.28890625 53.12523437 38.5309375 53.61765625 37.75 54.125 C37.00234375 54.62257813 36.2546875 55.12015625 35.484375 55.6328125 C23.85902347 62.03041161 14.91029668 59 0 59 C0 39.53 0 20.06 0 0 Z \",fill:\"#AD8F62\",transform:\"translate(461,229)\"})),_path12||(_path12=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C72.27 0 144.54 0 219 0 C219 0.99 219 1.98 219 3 C218.12605087 2.99032196 217.25210175 2.98064392 216.35166931 2.97067261 C208.0977334 2.88816509 199.84528443 2.85383685 191.5909338 2.87302971 C187.34746863 2.88121303 183.10572932 2.87105635 178.86254883 2.81835938 C174.7639071 2.76814261 170.66785749 2.76692134 166.56906319 2.79904556 C165.00899212 2.80278431 163.44877553 2.78914627 161.88902092 2.75750351 C153.07409234 2.36641062 153.07409234 2.36641062 145.51858521 6.2048645 C143.73646347 8.73392495 142.34563463 11.2201205 141 14 C136.7624145 19.58453233 132.26420333 24.94194069 127.59765625 30.171875 C126.08344736 31.904515 124.66787448 33.68850663 123.25 35.5 C122.5075 36.325 121.765 37.15 121 38 C120.01 38 119.02 38 118 38 C118 38.66 118 39.32 118 40 C116.5390625 41.18359375 116.5390625 41.18359375 114.625 42.4375 C111.91409131 44.21688245 110.87203979 45.19194031 109 48 C107.16552734 49.17578125 107.16552734 49.17578125 104.9609375 50.3125 C100.00602842 52.95934467 95.33641336 55.94676127 90.625 59 C81.03646274 65.11943437 71.72895723 69.58475689 60.87890625 73.03515625 C58.29637234 73.90067304 55.86477635 74.90244851 53.375 76 C36.36291006 82.93085146 18.07534896 83.19482412 0 83 C0 81.35 0 79.7 0 78 C0.58265625 77.95512451 1.1653125 77.91024902 1.765625 77.86401367 C14.01837304 76.89713507 25.98339133 75.6648742 38 73 C38.67256836 72.85304688 39.34513672 72.70609375 40.03808594 72.5546875 C48.21805689 70.74118525 55.91144413 68.49357618 63.546875 64.953125 C66 64 66 64 70 64 C70 63.34 70 62.68 70 62 C71.7325 61.4121875 71.7325 61.4121875 73.5 60.8125 C78.08225477 59.08713262 81.93280825 56.69469418 86 54 C87.89257754 52.7658262 89.78856995 51.53687715 91.6875 50.3125 C92.57824219 49.73113281 93.46898437 49.14976562 94.38671875 48.55078125 C96.87164684 47.07616772 99.29097157 45.99086986 102 45 C102 44.34 102 43.68 102 43 C102.66 43 103.32 43 104 43 C104 42.34 104 41.68 104 41 C105.32 40.67 106.64 40.34 108 40 C108 39.34 108 38.68 108 38 C109.72265625 36.5546875 109.72265625 36.5546875 112.0625 34.875 C115.91955952 31.9551699 119.02855158 28.94467922 122.11328125 25.234375 C125.12669836 21.66569055 128.3668117 18.30421251 131.5703125 14.90625 C134.67387928 11.32908195 134.67387928 11.32908195 139 4 C96.43 4 53.86 4 10 4 C10.87755899 6.26162958 10.87755899 6.26162958 13.5625 7.25 C23.02530696 12.067429 30.48473141 18.84477963 34 29 C34 29.99 34 30.98 34 32 C30.46997646 30.48136287 28.09153315 28.38135506 25.3125 25.75 C17.39109015 18.53503167 10.1943523 14.35510329 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#B89763\",transform:\"translate(482,488)\"})),_path13||(_path13=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.763125 0.0825 1.52625 0.165 2.3125 0.25 C2.3125 0.91 2.3125 1.57 2.3125 2.25 C3.45589844 2.44335938 4.59929687 2.63671875 5.77734375 2.8359375 C7.26831037 3.09849766 8.75919149 3.36154361 10.25 3.625 C11.38211914 3.81449219 11.38211914 3.81449219 12.53710938 4.0078125 C14.47533135 4.35547563 16.39629205 4.79643504 18.3125 5.25 C18.6425 5.91 18.9725 6.57 19.3125 7.25 C21.68608677 9.25271384 23.38653266 10.27761657 26.5390625 10.18359375 C28.10631717 9.98194372 29.66979549 9.7475356 31.2265625 9.4765625 C33.3125 9.25 33.3125 9.25 36.3125 10.25 C38.15749398 12.12617698 39.6808599 14.17737609 41.3125 16.25 C41.6425 15.26 41.9725 14.27 42.3125 13.25 C44.16015625 12.51953125 44.16015625 12.51953125 46.375 12.0625 C47.10847656 11.90394531 47.84195313 11.74539063 48.59765625 11.58203125 C49.16355469 11.47246094 49.72945313 11.36289062 50.3125 11.25 C50.3125 12.24 50.3125 13.23 50.3125 14.25 C51.21613281 14.23839844 52.11976563 14.22679687 53.05078125 14.21484375 C54.23027344 14.20582031 55.40976562 14.19679688 56.625 14.1875 C57.79675781 14.17589844 58.96851563 14.16429687 60.17578125 14.15234375 C63.3125 14.25 63.3125 14.25 66.3125 15.25 C69.86787832 15.4455096 73.4170476 15.59464789 76.9765625 15.6796875 C81.53540355 15.87096754 84.59053652 16.34087912 88.3125 19.25 C90.81281405 23.50053388 90.9130179 28.42467668 91.3125 33.25 C93.2925 33.745 93.2925 33.745 95.3125 34.25 C95.3125 35.9 95.3125 37.55 95.3125 39.25 C85.4125 39.25 75.5125 39.25 65.3125 39.25 C65.6425 37.6 65.9725 35.95 66.3125 34.25 C65.3225 34.745 65.3225 34.745 64.3125 35.25 C63.9825 36.24 63.6525 37.23 63.3125 38.25 C51.70807263 40.11894145 51.70807263 40.11894145 47 37.1875 C43.77473821 32.0686186 44.95677122 25.02071132 45.3125 19.25 C43.9925 19.25 42.6725 19.25 41.3125 19.25 C41.8075 19.971875 42.3025 20.69375 42.8125 21.4375 C44.39169285 24.39848659 44.59428312 25.96253029 44.3125 29.25 C43.69375 29.37375 43.075 29.4975 42.4375 29.625 C40.12129168 30.12197356 40.12129168 30.12197356 38.3125 32.25 C37.04766633 33.02477906 35.75205697 33.75045796 34.4375 34.4375 C33.75945312 34.80230469 33.08140625 35.16710937 32.3828125 35.54296875 C29.93677185 36.37831471 28.7148301 36.09566329 26.3125 35.25 C26.3125 34.59 26.3125 33.93 26.3125 33.25 C24.3325 32.92 22.3525 32.59 20.3125 32.25 C20.3125 30.6 20.3125 28.95 20.3125 27.25 C19.6525 27.25 18.9925 27.25 18.3125 27.25 C18.3125 23.95 18.3125 20.65 18.3125 17.25 C16.9925 16.92 15.6725 16.59 14.3125 16.25 C14.539375 17.44625 14.76625 18.6425 15 19.875 C15.55907126 24.1209196 14.60279204 26.58553273 12.3125 30.25 C11.3225 30.25 10.3325 30.25 9.3125 30.25 C8.3225 30.58 7.3325 30.91 6.3125 31.25 C3.625 30.3125 3.625 30.3125 1.3125 29.25 C1.3125 28.59 1.3125 27.93 1.3125 27.25 C0.136875 27.0334375 0.136875 27.0334375 -1.0625 26.8125 C-3.6875 26.25 -3.6875 26.25 -5.6875 25.25 C-5.6875 23.93 -5.6875 22.61 -5.6875 21.25 C-5.0275 21.25 -4.3675 21.25 -3.6875 21.25 C-3.3575 19.93 -3.0275 18.61 -2.6875 17.25 C-2.0275 17.25 -1.3675 17.25 -0.6875 17.25 C-1.84787766 10.16369345 -1.84787766 10.16369345 -5.6875 4.25 C-3.34903846 0.31153846 -3.34903846 0.31153846 0 0 Z \",fill:\"#4D3E28\",transform:\"translate(397.6875,583.75)\"})),_path14||(_path14=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 2.64 2 5.28 2 8 C2.66 8 3.32 8 4 8 C8 12.47058824 8 12.47058824 8 15 C8.66 15 9.32 15 10 15 C10 15.99 10 16.98 10 18 C10.66 18 11.32 18 12 18 C12.3125 20.1875 12.3125 20.1875 12 23 C9.52552136 25.87574545 7.1557398 27.89617347 4 30 C1.66015625 29.8359375 1.66015625 29.8359375 -0.9375 29.375 C-5.03461177 28.81070963 -5.03461177 28.81070963 -8.6875 30.6875 C-10.25141992 32.84393968 -10.25141992 32.84393968 -9.59375 34.8671875 C-9.29984375 35.92292969 -9.29984375 35.92292969 -9 37 C-8.65515994 40.26721342 -8.73937363 42.94080756 -10 46 C-13.05137878 48.44884202 -16.22319093 49.9905303 -20 51 C-22.32421875 50.6171875 -22.32421875 50.6171875 -24 50 C-23.34 51.65 -22.68 53.3 -22 55 C-23.13888672 55.99580078 -23.13888672 55.99580078 -24.30078125 57.01171875 C-25.30498964 57.90330564 -26.30887907 58.79525188 -27.3125 59.6875 C-28.29863281 60.55761719 -29.28476562 61.42773438 -30.30078125 62.32421875 C-32.76993958 64.77193721 -34.3868157 66.94430961 -36 70 C-36.33 69.34 -36.66 68.68 -37 68 C-37.47308594 68.32613281 -37.94617188 68.65226563 -38.43359375 68.98828125 C-43.45778432 72.3083604 -48.25457909 74.28798064 -54 76 C-55.6892885 76.55710578 -57.37685857 77.11945469 -59.0625 77.6875 C-61.03125 78.34375 -61.03125 78.34375 -63 79 C-63 79.66 -63 80.32 -63 81 C-65.475 81.495 -65.475 81.495 -68 82 C-68.16435547 81.11248047 -68.16435547 81.11248047 -68.33203125 80.20703125 C-69.59884549 73.648905 -69.59884549 73.648905 -73 68 C-75.59122743 67.11341534 -75.59122743 67.11341534 -78 67 C-76.60086451 62.80259353 -74.28265005 62.02261909 -70.48828125 60.01953125 C-66.65797622 58.4501284 -64.10154027 58.43427031 -60 59 C-58 60.1875 -58 60.1875 -57 62 C-57 63.65 -57 65.3 -57 67 C-53.7 67.33 -50.4 67.66 -47 68 C-47.28875 66.39125 -47.5775 64.7825 -47.875 63.125 C-48.03742187 62.22007812 -48.19984375 61.31515625 -48.3671875 60.3828125 C-48.83044703 57.83494012 -48.83044703 57.83494012 -51 56 C-53.32275177 55.59952556 -55.65739357 55.2602896 -58 55 C-56.66727125 51.40163237 -54.49638568 49.70395785 -51.53125 47.37109375 C-49.13178239 45.22259087 -47.66051138 42.74623036 -46 40 C-41.12846211 40.41756039 -39.24637715 42.49732992 -36 46 C-35.01 46.66 -34.02 47.32 -33 48 C-33.05220703 46.58847656 -33.05220703 46.58847656 -33.10546875 45.1484375 C-33.13253906 43.90320313 -33.15960937 42.65796875 -33.1875 41.375 C-33.23970703 39.53035156 -33.23970703 39.53035156 -33.29296875 37.6484375 C-32.97548589 33.69471759 -32.12767303 31.32764028 -30 28 C-27.4375 27.375 -27.4375 27.375 -25 27 C-23.75825204 25.0998823 -23.75825204 25.0998823 -23 23 C-22.34 22.34 -21.68 21.68 -21 21 C-20.505 19.515 -20.505 19.515 -20 18 C-19.34 17.67 -18.68 17.34 -18 17 C-17.68573231 14.7058459 -17.62075424 12.44226779 -17.5390625 10.12890625 C-17 8 -17 8 -14.9609375 6.71484375 C-14.31382812 6.47894531 -13.66671875 6.24304688 -13 6 C-12.505 7.98 -12.505 7.98 -12 10 C-8.5097254 7.83935382 -5.60088214 5.71323217 -2.75 2.75 C-1.8425 1.8425 -0.935 0.935 0 0 Z \",fill:\"#4B3E2B\",transform:\"translate(681,506)\"})),_path15||(_path15=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.375 2 1.375 2 2 5 C0.43734681 8.0563658 -1.50310678 10.64610067 -4 13 C-4.68835938 13.15984375 -5.37671875 13.3196875 -6.0859375 13.484375 C-8.13809443 13.79587164 -8.13809443 13.79587164 -8.9453125 15.6328125 C-9.29335938 16.41398437 -9.64140625 17.19515625 -10 18 C-11.60059452 20.31444852 -13.21904663 22.60108153 -14.875 24.875 C-21.26721959 33.50583668 -21.26721959 33.50583668 -26.15625 43.0234375 C-27.49161216 46.15164701 -29.06781119 49.1551439 -30.62109375 52.1796875 C-34.35386572 59.81442223 -37.22029341 67.38572455 -39.5625 75.5625 C-39.86623535 76.61590576 -40.1699707 77.66931152 -40.48291016 78.75463867 C-43.90488305 90.86465133 -45.85616049 102.41776542 -47 115 C-25.88 115 -4.76 115 17 115 C17.33 114.34 17.66 113.68 18 113 C18 113.99 18 114.98 18 116 C24.93 116.33 31.86 116.66 39 117 C39 117.33 39 117.66 39 118 C20.91898451 118.04679726 2.83798481 118.08202664 -15.24307823 118.10362434 C-23.63912358 118.11392072 -32.03513121 118.12794962 -40.43115234 118.15087891 C-47.75226894 118.17086307 -55.07335821 118.18372834 -62.39450133 118.18817699 C-66.26812539 118.19077588 -70.14167131 118.19685 -74.01527023 118.21146011 C-77.66778271 118.22512359 -81.32018549 118.22920509 -84.9727211 118.22621536 C-86.93890031 118.22702037 -88.90506781 118.23773584 -90.87121582 118.24884033 C-97.82483381 118.23279827 -104.24936303 117.70984753 -111 116 C-111 115.34 -111 114.68 -111 114 C-111.66 114 -112.32 114 -113 114 C-113 113.34 -113 112.68 -113 112 C-114.98 111.67 -116.96 111.34 -119 111 C-119.33 107.7 -119.66 104.4 -120 101 C-116.535 100.01 -116.535 100.01 -113 99 C-113 98.34 -113 97.68 -113 97 C-102.73775274 93.57925091 -88.78454601 95.75041165 -79 100 C-77.703125 102.078125 -77.703125 102.078125 -77 104 C-75.6846659 104.70151152 -74.34882408 105.36525925 -73 106 C-70.75 108 -70.75 108 -69 110 C-69 110.66 -69 111.32 -69 112 C-63.72 112.66 -58.44 113.32 -53 114 C-53.02707031 112.55882812 -53.05414063 111.11765625 -53.08203125 109.6328125 C-53.07920438 104.28249804 -52.50763162 99.15485231 -51.6875 93.875 C-51.56955078 93.03324219 -51.45160156 92.19148438 -51.33007812 91.32421875 C-50.60718106 86.54197662 -49.50245953 82.27903272 -47.69360352 77.79589844 C-46.73448994 75.3125336 -46.18480614 72.78659991 -45.625 70.1875 C-44.14229017 64.04043215 -41.74957794 58.66998765 -39 53 C-38.16329268 51.12650319 -37.32994182 49.25150367 -36.5 47.375 C-30.42145717 34.04751169 -22.56435884 22.08349526 -13 11 C-12.56155762 10.48775879 -12.12311523 9.97551758 -11.67138672 9.44775391 C-10.33373307 7.89250987 -8.98245849 6.35047026 -7.625 4.8125 C-6.81289063 3.89082031 -6.00078125 2.96914063 -5.1640625 2.01953125 C-3 0 -3 0 0 0 Z \",fill:\"#BE9D66\",transform:\"translate(361,272)\"})),_path16||(_path16=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.97805311 1.63880917 2.91505716 2.51226372 3.36328125 5.0859375 C3.26586411 9.47720263 3.06047811 13.00782367 1 17 C0.34 17 -0.32 17 -1 17 C-1.37511719 17.89332031 -1.37511719 17.89332031 -1.7578125 18.8046875 C-3.17178592 21.3035965 -4.55685314 22.45418472 -6.875 24.125 C-7.55304687 24.62257813 -8.23109375 25.12015625 -8.9296875 25.6328125 C-10.8975595 26.93235061 -12.86853684 27.99639627 -15 29 C-15 29.66 -15 30.32 -15 31 C-15.66 31.33 -16.32 31.66 -17 32 C-20.3886357 38.09954427 -20.67211655 44.11444759 -21 51 C-20.34 51 -19.68 51 -19 51 C-15 56.41176471 -15 56.41176471 -15 59 C-14.4225 59.28875 -13.845 59.5775 -13.25 59.875 C-12.5075 60.24625 -11.765 60.6175 -11 61 C-10.278125 61.28875 -9.55625 61.5775 -8.8125 61.875 C-7 63 -7 63 -6.25 64.9375 C-6 67 -6 67 -6 70 C-5.175 70.66 -4.35 71.32 -3.5 72 C-2.675 72.66 -1.85 73.32 -1 74 C-1 74.99 -1 75.98 -1 77 C-0.34 77 0.32 77 1 77 C2.5078125 78.86328125 2.5078125 78.86328125 4.125 81.3125 C4.66382813 82.11300781 5.20265625 82.91351563 5.7578125 83.73828125 C7 86 7 86 7 89 C5.041036 88.69147815 3.08284287 88.3780582 1.125 88.0625 C0.03445313 87.88847656 -1.05609375 87.71445312 -2.1796875 87.53515625 C-5 87 -5 87 -7 86 C-7 85.34 -7 84.68 -7 84 C-8.03125 83.896875 -9.0625 83.79375 -10.125 83.6875 C-13.95083945 83.00872203 -16.63370025 81.88841205 -20 80 C-20 80.99 -20 81.98 -20 83 C-26.36073905 82.67099626 -29.3847564 81.7201355 -34 77 C-39.84291816 69.73583147 -39.14153998 61.95753767 -39.0625 53.0625 C-39.05798828 52.09248047 -39.05347656 51.12246094 -39.04882812 50.12304688 C-39.0371315 47.7486324 -39.02074086 45.37434979 -39 43 C-39.66 43 -40.32 43 -41 43 C-42.15570704 46.46712111 -42.32835293 49.5414956 -42.5625 53.1875 C-42.68818359 55.09595703 -42.68818359 55.09595703 -42.81640625 57.04296875 C-42.90728516 58.50669922 -42.90728516 58.50669922 -43 60 C-45 59 -45 59 -45.6015625 57.37890625 C-47.34677984 46.95893216 -46.34354027 38.17943882 -41 29 C-40.34 29 -39.68 29 -39 29 C-39 28.34 -39 27.68 -39 27 C-38.34 27 -37.68 27 -37 27 C-36.773125 26.4225 -36.54625 25.845 -36.3125 25.25 C-32.58648375 18.86254357 -25.70955421 17.01196806 -19 15 C-16.39596931 14.41068612 -13.78873562 13.90540804 -11.1640625 13.41796875 C-8.52374243 12.90801524 -6.32454563 12.38019897 -4 11 C-2.70957237 8.73398135 -2.70957237 8.73398135 -2 6 C-1.62875 4.906875 -1.2575 3.81375 -0.875 2.6875 C-0.58625 1.800625 -0.2975 0.91375 0 0 Z \",fill:\"#C09C61\",transform:\"translate(695,261)\"})),_path17||(_path17=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.75481646 0.57634139 7.97048212 2.55068521 12 5 C12 5.66 12 6.32 12 7 C12.598125 7.103125 13.19625 7.20625 13.8125 7.3125 C16.28243264 8.08876455 17.32251235 9.07088921 19 11 C19 9.68 19 8.36 19 7 C19.66 7 20.32 7 21 7 C21.69260358 13.03554548 22.11251733 18.92406438 22 25 C22.08636719 24.41992188 22.17273438 23.83984375 22.26171875 23.2421875 C23.31047473 17.4114891 24.68681845 14.11256846 29 10 C34.48599349 7.28499302 40.00366096 7.32652755 46 8 C49.77361618 9.46471144 51.74857145 11.62285717 54 15 C54.46706347 20.69817438 54.00943022 23.98428297 51 29 C50.34 29 49.68 29 49 29 C49.01160156 28.31292969 49.02320313 27.62585938 49.03515625 26.91796875 C49.04417969 26.01691406 49.05320312 25.11585938 49.0625 24.1875 C49.07410156 23.29417969 49.08570313 22.40085937 49.09765625 21.48046875 C49.11009967 18.86586209 49.11009967 18.86586209 48 16 C43.66068602 14.16413639 38.53610722 14.53248911 34.125 15.875 C31.8498468 16.81594124 31.8498468 16.81594124 31 19 C30.01344482 28.31535753 33.11719711 34.57983028 38.8203125 41.71484375 C42.71862697 45.80178634 47.3446422 48.84273312 52 52 C53 53 53 53 53.25 55.25 C52.93734978 58.68915244 52.09969638 60.25691839 50 63 C47.00390625 64.29296875 47.00390625 64.29296875 43.5625 65.1875 C39.79635017 66.19437737 36.44537952 67.18429244 33 69 C26.74212034 70.89971347 26.74212034 70.89971347 23.6875 71.3125 C21.7359285 71.88861777 21.7359285 71.88861777 20.875 74.3125 C20.58625 75.199375 20.2975 76.08625 20 77 C19.65839844 77.54011719 19.31679687 78.08023438 18.96484375 78.63671875 C17.51592325 82.18569405 17.66207529 85.72540816 17.6875 89.5 C17.68951416 90.29937988 17.69152832 91.09875977 17.69360352 91.92236328 C17.80571356 98.60197362 18.98426947 104.62903821 21 111 C21.34281457 112.33092714 21.67984738 113.66344054 22 115 C20.68 115 19.36 115 18 115 C18 114.34 18 113.68 18 113 C17.40058594 112.73316406 16.80117187 112.46632813 16.18359375 112.19140625 C9.57614181 108.586267 4.65365271 100.08576211 2.37890625 93.08984375 C0.98431476 85.39802473 1.44772875 77.9729769 5 71 C6.485 70.505 6.485 70.505 8 70 C9.20882096 67.99983534 9.20882096 67.99983534 10 66 C5.57563975 66.51446049 2.73488939 67.61382067 -1 70 C-1.66 70 -2.32 70 -3 70 C-1.26691298 64.80073895 3.46031918 62.27958796 8.09912109 59.94238281 C15.16365294 56.90293887 22.00817121 55.97177307 29.625 55.25 C30.81996094 55.12496094 32.01492188 54.99992187 33.24609375 54.87109375 C36.16299663 54.56773585 39.08055989 54.27767631 42 54 C42.33 53.01 42.66 52.02 43 51 C42.01 50.67 41.02 50.34 40 50 C39.67 49.34 39.34 48.68 39 48 C38.236875 47.566875 37.47375 47.13375 36.6875 46.6875 C33.70669667 44.81583279 32.13122583 42.77059358 30 40 C29.01 39.34 28.02 38.68 27 38 C26.68675781 37.195625 26.37351562 36.39125 26.05078125 35.5625 C23.80173046 30.07782594 17.70780638 27.73137 12.515625 25.5078125 C9.35917242 24.28796074 6.19453614 23.11586579 3 22 C3 21.67 3 21.34 3 21 C4.65 21 6.3 21 8 21 C7.4121875 20.0409375 7.4121875 20.0409375 6.8125 19.0625 C6.214375 18.051875 5.61625 17.04125 5 16 C4.3503125 14.96552734 4.3503125 14.96552734 3.6875 13.91015625 C0.71513246 8.97028405 -0.61403451 5.77192435 0 0 Z \",fill:\"#906F3B\",transform:\"translate(232,241)\"})),_path18||(_path18=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.78770347 6.14408709 -1.89516847 9.9731299 -5 15 C-5.598125 16.010625 -6.19625 17.02125 -6.8125 18.0625 C-7.204375 18.701875 -7.59625 19.34125 -8 20 C-6.35 20 -4.7 20 -3 20 C-6.44450737 22.29633824 -8.93812283 22.54016485 -13 23 C-13 23.66 -13 24.32 -13 25 C-13.67804687 25.28230469 -14.35609375 25.56460937 -15.0546875 25.85546875 C-22.15467579 29.20878732 -26.20322986 33.06684021 -30.56201172 39.41674805 C-32.99982153 42.93359692 -35.11010322 45.15912912 -39 47 C-39.66 47 -40.32 47 -41 47 C-41.33 47.99 -41.66 48.98 -42 50 C-42.66 50 -43.32 50 -44 50 C-43.67 50.99 -43.34 51.98 -43 53 C-40.79634786 54.10182607 -39.29627778 54.25058368 -36.8515625 54.46484375 C-35.59811035 54.58013428 -35.59811035 54.58013428 -34.31933594 54.69775391 C-33.43020508 54.77687012 -32.54107422 54.85598633 -31.625 54.9375 C-24.00788948 55.65117768 -16.51892964 56.56345653 -9 58 C-9 58.66 -9 59.32 -9 60 C-8.38125 60.144375 -7.7625 60.28875 -7.125 60.4375 C-5 61 -5 61 -3 62 C-3 62.66 -3 63.32 -3 64 C-1.68 64.66 -0.36 65.32 1 66 C-2.30435084 67.12377697 -4.0506862 66.89554742 -7.25 65.5625 C-8.30960938 65.13130859 -8.30960938 65.13130859 -9.390625 64.69140625 C-9.92171875 64.46324219 -10.4528125 64.23507812 -11 64 C-9.88625 65.2375 -9.88625 65.2375 -8.75 66.5 C-3.43830704 73.0072022 -1.30130873 78.38617284 -1.61328125 86.90625 C-2.61979807 94.95838453 -5.79041381 101.83075319 -11 108 C-11.66 108 -12.32 108 -13 108 C-13 108.66 -13 109.32 -13 110 C-14.66666667 111 -16.33333333 112 -18 113 C-18.86625 113.886875 -19.7325 114.77375 -20.625 115.6875 C-23 118 -23 118 -26 118 C-24.93490333 115.85494484 -23.85429921 113.72085363 -22.74609375 111.59765625 C-22.31425781 110.76105469 -21.88242187 109.92445313 -21.4375 109.0625 C-21.00308594 108.22847656 -20.56867187 107.39445312 -20.12109375 106.53515625 C-17.76316242 101.20310945 -17.75819478 95.86541616 -17.6875 90.125 C-17.65849609 89.34769531 -17.62949219 88.57039063 -17.59960938 87.76953125 C-17.52938658 81.34144469 -19.09351022 77.37085878 -23.35693359 72.42626953 C-25.29569748 70.74331877 -27.06181273 69.98012148 -29.45703125 69.0625 C-30.32263672 68.72476563 -31.18824219 68.38703125 -32.08007812 68.0390625 C-32.98177734 67.69617188 -33.88347656 67.35328125 -34.8125 67 C-51.72026469 60.48665401 -51.72026469 60.48665401 -54 57 C-53.74103744 54.06988661 -53.3765911 52.43481716 -51.43359375 50.19140625 C-50.77488281 49.65386719 -50.11617187 49.11632812 -49.4375 48.5625 C-48.72207031 47.97082031 -48.00664063 47.37914062 -47.26953125 46.76953125 C-44.44634628 44.56832163 -41.58422661 42.43024835 -38.6640625 40.359375 C-36.73326702 38.91780257 -36.73326702 38.91780257 -35 36 C-34.34 36 -33.68 36 -33 36 C-32.855625 35.05125 -32.71125 34.1025 -32.5625 33.125 C-32 30 -32 30 -31 28 C-30.85359499 26.35857459 -30.77903411 24.7101859 -30.75 23.0625 C-30.72421875 22.18722656 -30.6984375 21.31195313 -30.671875 20.41015625 C-30.80472964 17.95987325 -30.80472964 17.95987325 -32.328125 16.24609375 C-35.63492968 13.7814426 -38.9642901 13.82603892 -42.96484375 13.671875 C-45.74539908 14.12017951 -47.03869833 14.98651292 -49 17 C-49.48261667 19.50880616 -49.48261667 19.50880616 -49.25 22.1875 C-49.21390625 23.08855469 -49.1778125 23.98960937 -49.140625 24.91796875 C-49.09421875 25.60503906 -49.0478125 26.29210937 -49 27 C-50.9375 26.625 -50.9375 26.625 -53 26 C-54.84206499 22.31587001 -54.3617633 18.03017014 -54 14 C-52.38727433 10.31376989 -51.369675 9.24645 -48 7 C-40.11607329 6.01928537 -33.32518609 7.07757696 -26.6875 11.5625 C-24.03282697 15.39702771 -23.18331879 19.5033886 -22 24 C-22 18.72 -22 13.44 -22 8 C-21.01 7.67 -20.02 7.34 -19 7 C-19 8.32 -19 9.64 -19 11 C-18.34 11 -17.68 11 -17 11 C-16.76925781 10.24332031 -16.53851562 9.48664063 -16.30078125 8.70703125 C-14.72878381 5.43557713 -13.29919885 4.49293846 -10.1875 2.6875 C-9.33542969 2.17574219 -8.48335937 1.66398438 -7.60546875 1.13671875 C-4.83166067 -0.0734434 -2.99009036 -0.23083283 0 0 Z \",fill:\"#AF8E56\",transform:\"translate(733,242)\"})),_path19||(_path19=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.50403768 1.29009643 3.00309926 2.58213789 3.5 3.875 C3.7784375 4.59429687 4.056875 5.31359375 4.34375 6.0546875 C5 8 5 8 5 10 C7.74051101 11.49230412 10.12248263 12.34572869 13.1953125 12.859375 C25.16967232 15.0163152 34.65933974 17.51401482 43 27 C47.64879036 36.83706998 49.84842614 47.06840199 47 57.75 C46.67 58.4925 46.34 59.235 46 60 C45.67 60 45.34 60 45 60 C44.34 53.73 43.68 47.46 43 41 C42.34 41 41.68 41 41 41 C41.02320313 42.11117187 41.04640625 43.22234375 41.0703125 44.3671875 C41.24440406 56.08935252 40.80314173 66.48180562 35 77 C32.32522069 79.67477931 29.507025 80.6464114 26 82 C25.01 82 24.02 82 23 82 C23.66 80.68 24.32 79.36 25 78 C25.66 78 26.32 78 27 78 C27 77.34 27 76.68 27 76 C25.98679687 76.48210937 24.97359375 76.96421875 23.9296875 77.4609375 C22.57820878 78.09913578 21.22664156 78.73714668 19.875 79.375 C19.20984375 79.69210937 18.5446875 80.00921875 17.859375 80.3359375 C13.96510976 82.16853291 10.10610077 83.68409827 6 85 C5.34 85.37125 4.68 85.7425 4 86.125 C1.28586617 87.31243355 -1.07421213 87.13299036 -4 87 C-2.75350667 78.655827 3.00304169 72.56860415 9 67 C8.01 66.67 7.02 66.34 6 66 C6 65.34 6 64.68 6 64 C7.98 63.34 9.96 62.68 12 62 C12 61.34 12 60.68 12 60 C13.65002828 58.64613064 15.3174387 57.31321858 17 56 C17.33 55.34 17.66 54.68 18 54 C18.66 54 19.32 54 20 54 C22.03418399 48.02458453 23.63912918 41.83366576 21.0546875 35.7890625 C18.58806634 31.61597387 15.84609804 28.96698991 12 26 C12 25.01 12 24.02 12 23 C11.0925 22.731875 10.185 22.46375 9.25 22.1875 C4.93155949 20.60960828 2.84776645 19.24137229 0.25 15.4375 C-1.39540248 10.91264318 -1.44624357 6.7713736 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#C29D62\",transform:\"translate(268,262)\"})),_path20||(_path20=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.72431888 1.02373036 5.35824379 2.21841889 8 3.4375 C14.40232832 6.35585455 20.50164483 8.8738279 27.5 10 C31.50317761 10.68703183 35.15304079 11.68853663 39 13 C46.91488686 14.47177648 54.98614956 14.37271862 63.01171875 14.60546875 C64.71908203 14.66154297 64.71908203 14.66154297 66.4609375 14.71875 C67.50040527 14.74904297 68.53987305 14.77933594 69.61083984 14.81054688 C72 15 72 15 73 16 C73.82506583 21.36127259 74.17921837 26.64201361 74.23828125 32.06640625 C74.24798447 32.81445023 74.25768768 33.5624942 74.26768494 34.33320618 C74.29250884 36.74302609 74.3052017 39.15256513 74.3125 41.5625 C74.31642761 42.79845917 74.31642761 42.79845917 74.32043457 44.05938721 C74.3250821 57.72942762 73.23107236 70.67601909 70 84 C69.82919922 84.73847168 69.65839844 85.47694336 69.48242188 86.23779297 C66.9703371 96.99788942 63.89529972 106.88032448 57.3671875 115.89453125 C55.91667907 117.96279437 55.91667907 117.96279437 55.109375 120.375 C53.69493106 123.72185327 51.61970759 126.36866285 49.375 129.1875 C48.92697021 129.75629883 48.47894043 130.32509766 48.01733398 130.91113281 C47.10687943 132.06591885 46.1943818 133.21909721 45.27978516 134.37060547 C44.14631271 135.81371785 43.04521973 137.28213351 41.94921875 138.75390625 C32.26541648 151.5653962 17.75558002 160.95428338 4 169 C3.34 169 2.68 169 2 169 C2 169.66 2 170.32 2 171 C-2.14361408 172.38120469 -5.8489401 172.95792303 -9.96923828 171.12304688 C-12.0571078 169.90380842 -14.0608699 168.6060044 -16.0625 167.25 C-16.74376953 166.8065625 -17.42503906 166.363125 -18.12695312 165.90625 C-19.46328086 165.03333659 -20.79376515 164.15139912 -22.11767578 163.25976562 C-23.34413873 162.43894217 -24.58181754 161.63456088 -25.83154297 160.84960938 C-27.25405428 159.9499513 -28.63254712 158.98132344 -30 158 C-30 157.34 -30 156.68 -30 156 C-30.56460938 155.75121094 -31.12921875 155.50242187 -31.7109375 155.24609375 C-47.96823823 146.3961297 -64.22395709 124.42281794 -70 107 C-70.63478596 105.66137187 -71.28108463 104.32815561 -71.9375 103 C-73.91006463 98.5966766 -75.25368207 94.07135634 -76.5625 89.4375 C-76.76029053 88.74849609 -76.95808105 88.05949219 -77.16186523 87.34960938 C-77.82864507 84.91015754 -78.42400203 82.46257498 -79 80 C-79.2676416 78.86643066 -79.5352832 77.73286133 -79.81103516 76.56494141 C-81.98540976 66.3642828 -82.40528756 56.5539812 -82.28125 46.14257812 C-82.24970577 43.47511904 -82.24022079 40.80825354 -82.234375 38.140625 C-82.22521561 36.41665953 -82.21484326 34.69269998 -82.203125 32.96875 C-82.19887512 32.18528198 -82.19462524 31.40181396 -82.19024658 30.59460449 C-82.01597422 17.01597422 -82.01597422 17.01597422 -80 15 C-78.3664419 14.91449226 -76.72954226 14.89182393 -75.09375 14.89453125 C-56.24722027 14.69933609 -38.58927005 11.94702263 -21 5 C-19.82695312 4.55398437 -18.65390625 4.10796875 -17.4453125 3.6484375 C-15.80175781 3.01808594 -15.80175781 3.01808594 -14.125 2.375 C-13.01382813 1.94960937 -11.90265625 1.52421875 -10.7578125 1.0859375 C-6.29418635 -0.67169433 -4.84464313 -1.11583794 0 0 Z M-11.62109375 4.83203125 C-16.17800149 7.19366719 -20.82823447 8.65176076 -25.75 10.0625 C-27.06834839 10.44764771 -27.06834839 10.44764771 -28.41333008 10.84057617 C-41.80076653 14.71993914 -54.14458825 16.97169094 -68.0625 17.5625 C-69.02349609 17.60568359 -69.98449219 17.64886719 -70.97460938 17.69335938 C-73.31630277 17.79821132 -75.65807929 17.90037788 -78 18 C-78.74307907 28.20386947 -79.18649788 38.3603976 -79.18530273 48.59204102 C-79.18751062 50.69762807 -79.20584294 52.80270624 -79.22460938 54.90820312 C-79.27644115 66.87968419 -78.07721692 78.12423227 -74 89.4375 C-73.60941406 90.56188477 -73.60941406 90.56188477 -73.2109375 91.70898438 C-72.70558382 93.16251427 -72.19443168 94.61404463 -71.67675781 96.06323242 C-71.11213893 97.67907716 -70.60360015 99.31437846 -70.109375 100.953125 C-68.53468023 105.27799093 -66.41041147 109.25454839 -64.25 113.3125 C-63.58000977 114.57574097 -63.58000977 114.57574097 -62.89648438 115.86450195 C-58.55713818 124.33636417 -58.55713818 124.33636417 -53 132 C-52.34 132 -51.68 132 -51 132 C-50.773125 132.54140625 -50.54625 133.0828125 -50.3125 133.640625 C-48.58704892 136.74232872 -46.38706787 139.12700101 -44 141.75 C-43.54882812 142.25660156 -43.09765625 142.76320313 -42.6328125 143.28515625 C-41.46639188 144.56545817 -40.23716029 145.78791729 -39 147 C-38.34 147 -37.68 147 -37 147 C-37 147.66 -37 148.32 -37 149 C-34.82965584 150.80558044 -32.66135822 152.47694815 -30.375 154.125 C-29.70218994 154.61274902 -29.02937988 155.10049805 -28.33618164 155.60302734 C-16.1444525 164.8720646 -16.1444525 164.8720646 -2 169 C0.7304749 167.87219515 2.99486684 166.75320261 5.5 165.25 C6.19270996 164.84749023 6.88541992 164.44498047 7.59912109 164.03027344 C14.9071781 159.6644212 21.48236405 154.45068094 28 149 C28.53447754 148.56341064 29.06895508 148.12682129 29.61962891 147.67700195 C44.53706645 135.44819908 55.29500036 118.04222935 62.12890625 100.234375 C62.89307863 98.2742557 63.75190691 96.3515887 64.625 94.4375 C66.26471811 90.33820472 67.15291966 86.32010972 68 82 C68.1753125 81.16984375 68.350625 80.3396875 68.53125 79.484375 C70.26590219 71.16824834 71.1538916 63.16491486 71.1328125 54.6796875 C71.13376923 53.81739532 71.13472595 52.95510315 71.13571167 52.06668091 C71.13638795 50.25653001 71.13457247 48.44637661 71.13037109 46.63623047 C71.12500179 43.87592102 71.13034165 41.11577329 71.13671875 38.35546875 C71.13605813 36.58854131 71.13477729 34.82161397 71.1328125 33.0546875 C71.13584885 31.82635696 71.13584885 31.82635696 71.13894653 30.57321167 C71.1214344 26.27009563 70.85612389 22.23811084 70 18 C68.78828125 17.96261719 67.5765625 17.92523438 66.328125 17.88671875 C44.33310518 17.07791538 24.27259877 13.88247994 4 5 C-1.59434366 2.60953862 -6.11368628 1.7776795 -11.62109375 4.83203125 Z \",fill:\"#755D3A\",transform:\"translate(486,176)\"})),_path21||(_path21=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.11246094 -0.00515625 2.22492187 -0.0103125 3.37109375 -0.015625 C7.3621325 0.31655448 10.27870353 1.18754775 13.375 3.75 C14.5625 5.25 14.5625 5.25 14.5625 7.25 C15.2225 7.25 15.8825 7.25 16.5625 7.25 C18.43396543 11.9841418 18.8398593 16.21787898 18.75 21.25 C18.74935547 21.93578125 18.74871094 22.6215625 18.74804688 23.328125 C18.71309718 27.39782229 18.34229754 31.25743659 17.5625 35.25 C16.9025 35.25 16.2425 35.25 15.5625 35.25 C15.5625 35.91 15.5625 36.57 15.5625 37.25 C14.5725 37.91 13.5825 38.57 12.5625 39.25 C12.2325 40.24 11.9025 41.23 11.5625 42.25 C5.82693019 44.52032972 -0.38101036 45.45883391 -6.390625 43.66796875 C-11.81490975 41.08553753 -14.04917291 36.55441186 -16.4375 31.25 C-16.80617188 30.44175781 -17.17484375 29.63351562 -17.5546875 28.80078125 C-19.47938219 23.23960587 -19.34398788 16.69314366 -17.0625 11.25 C-15.4375 8.25 -15.4375 8.25 -13.4375 5.25 C-12.7775 5.25 -12.1175 5.25 -11.4375 5.25 C-11.1075 4.26 -10.7775 3.27 -10.4375 2.25 C-7.11195373 -0.09744443 -3.97976899 -0.01840356 0 0 Z \",fill:\"#070403\",transform:\"translate(614.4375,418.75)\"})),_path22||(_path22=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.40826436 3.23872484 6.54552187 8.06661482 7.72265625 13.265625 C8.3665841 20.4166132 8.15833811 27.81241993 4.72265625 34.265625 C2.28946737 36.71402131 -0.32277087 38.50241215 -3.27734375 40.265625 C-4.26734375 40.925625 -5.25734375 41.585625 -6.27734375 42.265625 C-11.86984769 43.08585891 -16.54841873 42.48989206 -21.27734375 39.265625 C-28.10904837 32.11616667 -29.7726489 26.38055498 -29.578125 16.6953125 C-29.12937697 11.57841938 -27.56307974 7.83709698 -25.27734375 3.265625 C-24.61734375 3.265625 -23.95734375 3.265625 -23.27734375 3.265625 C-22.94734375 2.275625 -22.61734375 1.285625 -22.27734375 0.265625 C-14.84789017 -3.91344264 -7.50747639 -4.23881371 0 0 Z \",fill:\"#060402\",transform:\"translate(481.27734375,420.734375)\"})),_path23||(_path23=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C20.41666667 0 20.41666667 0 26.6875 5.25 C32.11442409 11.70363946 32.58838117 17.31712902 32.4296875 25.61328125 C31.81576135 30.4521355 29.93139946 33.2513619 27 37 C26.73960937 37.68835938 26.47921875 38.37671875 26.2109375 39.0859375 C25 41 25 41 19 43 C12.73 43 6.46 43 0 43 C0 28.81 0 14.62 0 0 Z \",fill:\"#0A0804\",transform:\"translate(675,419)\"})),_path24||(_path24=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C19 0 19 0 26 3 C27.87243424 5.36089534 27.99221556 6.93902191 28.375 9.9375 C27.907751 13.75336687 26.73340953 15.34468789 24 18 C23.01 18 22.02 18 21 18 C21.90625 20.3125 21.90625 20.3125 24.875 21.4375 C29.65 23.825 29.65 23.825 31 26 C31.37600931 30.6625154 31.67092497 34.99361254 29 39 C21 43 21 43 0 43 C0 28.81 0 14.62 0 0 Z \",fill:\"#6C5B3F\",transform:\"translate(125,419)\"})),_path25||(_path25=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.9719385 1.12451727 5.33440687 2.22293791 8 4 C8 4.66 8 5.32 8 6 C8.721875 6.226875 9.44375 6.45375 10.1875 6.6875 C15.24046408 9.0455499 18.83690332 13.48129046 22 18 C22.75 20.8125 22.75 20.8125 23 23 C22.236875 22.21625 21.47375 21.4325 20.6875 20.625 C18.09108195 17.92742283 18.09108195 17.92742283 15 16 C16.98 18.97 18.96 21.94 21 25 C15.18426857 25.25047565 10.09383249 24.28326008 4.4375 23 C-3.87337668 21.20878332 -11.47836998 20.49208828 -20 21 C-20 21.66 -20 22.32 -20 23 C-19.06800781 22.94199219 -18.13601563 22.88398437 -17.17578125 22.82421875 C-5.0162073 22.39390016 5.52776308 24.84947055 15 33 C15 33.66 15 34.32 15 35 C14.401875 34.835 13.80375 34.67 13.1875 34.5 C10.88655664 33.8885876 10.88655664 33.8885876 8 34 C8.72445312 34.54527344 9.44890625 35.09054687 10.1953125 35.65234375 C16.24284386 40.36941821 21.76559498 44.89229514 25 52 C25.375 55.5625 25.375 55.5625 25 58 C24 56.66666667 23 55.33333333 22 54 C21.443125 53.29875 20.88625 52.5975 20.3125 51.875 C19 50 19 50 19 48 C18.443125 47.731875 17.88625 47.46375 17.3125 47.1875 C14.8027573 45.89871321 12.4130541 44.46053274 10 43 C7.30298183 41.65149091 5.01235081 41.81183052 2 41.6875 C-5.5650603 41.16750694 -11.6948119 39.20345873 -18 35 C-18 34.34 -18 33.68 -18 33 C-14.37 33.66 -10.74 34.32 -7 35 C-7.97839844 34.69707031 -8.95679688 34.39414062 -9.96484375 34.08203125 C-26.45889927 28.86108819 -26.45889927 28.86108819 -31 25 C-31.83203125 23.0078125 -31.83203125 23.0078125 -32 21 C-29.24001603 16.80891323 -26.35382549 13.63151415 -21.4375 12.3125 C-16.61915643 11.87446877 -11.83412768 11.93169992 -7 12 C-6.01 12 -5.02 12 -4 12 C-8.26577569 9.0459281 -8.26577569 9.0459281 -13 7 C-13 6.34 -13 5.68 -13 5 C-6.83381819 4.59785771 -1.82254243 6.03181664 4 8 C3.525625 7.236875 3.05125 6.47375 2.5625 5.6875 C1 3 1 3 0 0 Z \",fill:\"#8E703F\",transform:\"translate(418,496)\"})),_path26||(_path26=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 1.98 -0.66 3.96 -1 6 C-0.01 6 0.98 6 2 6 C2 5.34 2 4.68 2 4 C12.37357631 0.55580866 12.37357631 0.55580866 18 1 C16.6875 2.5 16.6875 2.5 15 4 C14.01 4 13.02 4 12 4 C12 4.66 12 5.32 12 6 C10 7.625 10 7.625 8 9 C9.11375 8.835 10.2275 8.67 11.375 8.5 C23.875 6.9375 23.875 6.9375 28 9 C28 9.66 28 10.32 28 11 C28.7425 11.2475 29.485 11.495 30.25 11.75 C33.27490317 13.12495599 34.98280015 14.36212327 37 17 C37.125 19.125 37.125 19.125 36 21 C32.9375 22.25 32.9375 22.25 30 23 C30 23.66 30 24.32 30 25 C24.0682719 27.30678315 18.11059576 29.2177429 12 31 C15.3 30.67 18.6 30.34 22 30 C17.97501235 35.3666502 14.41357927 35.82103322 8 37 C4.64558982 37.32781736 1.31273654 37.55488906 -2.0546875 37.69140625 C-5.04283106 38.0044876 -7.28240415 38.75151039 -10 40 C-10 40.66 -10 41.32 -10 42 C-10.66 42 -11.32 42 -12 42 C-12.268125 42.53625 -12.53625 43.0725 -12.8125 43.625 C-14.20833333 46.41666667 -15.60416667 49.20833333 -17 52 C-17.66 52 -18.32 52 -19 52 C-19.33 53.32 -19.66 54.64 -20 56 C-21.30249153 52.40144968 -20.69931441 50.41900527 -19.25 46.9375 C-18.90453125 46.08027344 -18.5590625 45.22304688 -18.203125 44.33984375 C-17.02494041 42.04850423 -16.00154794 40.60650558 -14 39 C-13.34 39 -12.68 39 -12 39 C-11.75507812 38.40703125 -11.51015625 37.8140625 -11.2578125 37.203125 C-9.79047891 34.63301274 -8.27707775 33.45470034 -5.875 31.75 C-5.15054688 31.22921875 -4.42609375 30.7084375 -3.6796875 30.171875 C-3.12539063 29.78515625 -2.57109375 29.3984375 -2 29 C-5.95199987 30.16763633 -8.7725527 31.46414855 -12 34 C-12.66 34 -13.32 34 -14 34 C-11.20396681 27.51320301 -5.18620232 24.30922302 1.125 21.6875 C7.32362982 19.27917989 13.27373725 18.85434456 19.875 18.9375 C20.56335938 18.94201172 21.25171875 18.94652344 21.9609375 18.95117188 C23.64066335 18.96283664 25.32034375 18.98076729 27 19 C26.505 18.01 26.505 18.01 26 17 C18.42873947 15.15335109 11.08325207 15.93054595 3.5625 17.4375 C2.84384766 17.57220703 2.12519531 17.70691406 1.38476562 17.84570312 C-2.10144033 18.28394185 -2.10144033 18.28394185 -5 20 C-6.84891946 20.23363881 -8.70488031 20.41303635 -10.5625 20.5625 C-11.57441406 20.64628906 -12.58632813 20.73007812 -13.62890625 20.81640625 C-14.41136719 20.87699219 -15.19382812 20.93757812 -16 21 C-14.02 18.03 -12.04 15.06 -10 12 C-13.52381687 14.54604597 -13.52381687 14.54604597 -16 18 C-16.66 18 -17.32 18 -18 18 C-17.11079249 11.43354453 -13.00164247 7.5483332 -8.0859375 3.375 C-3.57954545 0 -3.57954545 0 0 0 Z \",fill:\"#B7945B\",transform:\"translate(540,500)\"})),_path27||(_path27=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C3 2.66 3 3.32 3 4 C0.69 3.67 -1.62 3.34 -4 3 C-4 4.98 -4 6.96 -4 9 C-3.08734375 8.89171875 -3.08734375 8.89171875 -2.15625 8.78125 C21.54222635 6.27199956 21.54222635 6.27199956 27.375 10.25 C30.64602708 13.67679027 32 15.27242422 32 20 C34.7808155 17.63630683 36.21689419 14.92249459 37.83984375 11.71875 C39.36264607 9.46274656 40.6108299 8.33987242 43 7 C46.34765625 6.671875 46.34765625 6.671875 50.0625 6.75 C51.90521484 6.77320313 51.90521484 6.77320313 53.78515625 6.796875 C57 7 57 7 60 8 C61.89212737 8.22179785 63.78884472 8.40614015 65.6875 8.5625 C66.68136719 8.64628906 67.67523437 8.73007812 68.69921875 8.81640625 C69.45847656 8.87699219 70.21773437 8.93757813 71 9 C70.505 6.525 70.505 6.525 70 4 C68.02 4 66.04 4 64 4 C64.66 2.68 65.32 1.36 66 0 C69.49644963 -0.31785906 71.397402 -0.39644605 74.375 1.5625 C76.63913895 4.95870843 76.64269755 7.00099302 76 11 C74.1875 13.5 74.1875 13.5 71 15 C67.28674916 15.02353883 63.67522566 14.49171985 60 14 C52.95881052 13.33661521 47.21338111 14.4905903 41 18 C38.19944928 20.965289 37.84975327 23.24724586 37.75 27.1875 C37.73960827 30.8023248 37.73960827 30.8023248 39 33 C41.64 33 44.28 33 47 33 C47.2784375 31.1128125 47.2784375 31.1128125 47.5625 29.1875 C47.66691406 28.47980469 47.77132812 27.77210938 47.87890625 27.04296875 C48.13904799 24.7974658 48.13904799 24.7974658 47 22 C45.02463255 22.34786708 45.02463255 22.34786708 43 23 C42.67 23.66 42.34 24.32 42 25 C41.34 25 40.68 25 40 25 C40.57344937 22.13275314 40.8614515 21.1385485 43 19 C49.1954023 18.43678161 49.1954023 18.43678161 51.875 20.3125 C54.42119471 24.13179206 54.79651188 28.55858047 54 33 C50.61930139 37.18139039 48.50663258 38.82710774 43.1875 39.4375 C40.57045652 39.43273307 39.40861353 39.33449748 37.36328125 37.66015625 C36 36 36 36 34 33 C33.401875 33.825 32.80375 34.65 32.1875 35.5 C29.50251247 38.19268091 27.24598082 38.47334086 23.5 38.625 C19.78774299 38.41959847 18.10549449 38.05998706 14.8125 36.1875 C12.21560501 31.62054674 12.04379914 27.14754794 13 22 C14.3125 20.18359375 14.3125 20.18359375 16 19 C20.36706908 18.61008312 22.30513897 18.53675931 26 21 C26 22.32 26 23.64 26 25 C25.34 25 24.68 25 24 25 C24 24.34 24 23.68 24 23 C22.35 23.66 20.7 24.32 19 25 C18.83318891 27.91652174 18.83318891 27.91652174 19 31 C20.95633975 33.41121859 20.95633975 33.41121859 24.625 33.125 C26.295625 33.063125 26.295625 33.063125 28 33 C28.05429959 31.25034642 28.09292823 29.50020213 28.125 27.75 C28.14820313 26.77546875 28.17140625 25.8009375 28.1953125 24.796875 C27.99286329 21.8978023 27.6420721 20.37709486 26 18 C19.53566076 13.20721759 11.70871328 13.30025073 4 14 C3.67 14.33 3.34 14.66 3 15 C-3.83473389 15.44817927 -3.83473389 15.44817927 -7.4375 14.0625 C-9.9382732 10.76147937 -9.83042096 7.04446014 -10 3 C-6.5217919 0.61494302 -4.24627291 -0.55872012 0 0 Z \",fill:\"#9F7E4C\",transform:\"translate(449,343)\"})),_path28||(_path28=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.4062186 1.34634457 6.43077702 3.19374374 9 7 C9 7.66 9 8.32 9 9 C9.66 9 10.32 9 11 9 C11.33 9.66 11.66 10.32 12 11 C12.99 11.33 13.98 11.66 15 12 C16.06036586 13.62892665 17.05200708 15.30321268 18 17 C19.83233247 19.6170573 21.70048901 22.2054372 23.57421875 24.79296875 C25 27 25 27 25 29 C25.99 29.33 26.98 29.66 28 30 C28.144375 30.598125 28.28875 31.19625 28.4375 31.8125 C28.83376029 34.14520323 28.83376029 34.14520323 30.8125 35.75 C34.35926476 39.3981009 37 43.84854209 37 49 C37.66 49 38.32 49 39 49 C39.495 52.96 39.495 52.96 40 57 C40.66 57 41.32 57 42 57 C45.08151633 64.63042138 48 72.7084324 48 81 C48.66 81 49.32 81 50 81 C50.48229332 83.49943204 50.96089426 85.99948243 51.4375 88.5 C51.57220703 89.19609375 51.70691406 89.8921875 51.84570312 90.609375 C53.13347861 97.39375318 54.14912568 104.06994584 54.0625 111 C54.05347656 111.94875 54.04445313 112.8975 54.03515625 113.875 C54.02355469 114.57625 54.01195312 115.2775 54 116 C55.32 116 56.64 116 58 116 C57.505 117.485 57.505 117.485 57 119 C33.57 119 10.14 119 -14 119 C-11 116 -11 116 -8.39936829 115.63923645 C-6.83716805 115.6492292 -6.83716805 115.6492292 -5.2434082 115.65942383 C-4.06241043 115.65965042 -2.88141266 115.65987701 -1.66462708 115.66011047 C-0.38955795 115.67559433 0.88551117 115.69107819 2.19921875 115.70703125 C3.50454056 115.71127609 4.80986237 115.71552094 6.15473938 115.71989441 C9.62205279 115.73133911 13.08898813 115.76080246 16.55615234 115.79400635 C20.09532558 115.82471567 23.63456001 115.83840155 27.17382812 115.85351562 C34.11604055 115.88567295 41.05800211 115.93686446 48 116 C47.57773905 112.03988923 47.13437524 108.08240265 46.6875 104.125 C46.51057617 102.46210938 46.51057617 102.46210938 46.33007812 100.765625 C45.57878321 89.66570576 45.57878321 89.66570576 41 80 C40.76712992 78.31816052 40.58735834 76.6287584 40.4375 74.9375 C40.35371094 74.01839844 40.26992188 73.09929687 40.18359375 72.15234375 C40.09271484 71.08693359 40.09271484 71.08693359 40 70 C39.34 70 38.68 70 38 70 C37.34 66.37 36.68 62.74 36 59 C35.34 59 34.68 59 34 59 C33.41992188 57.60587891 33.41992188 57.60587891 32.828125 56.18359375 C29.57864625 48.29659469 29.57864625 48.29659469 25.625 40.75 C24 38 24 38 24 36 C23.01 35.67 22.02 35.34 21 35 C20.30959426 33.34302621 19.6469365 31.6744239 19 30 C17.13041231 27.44489682 15.2098059 25.20344814 12.9375 23 C11 21 11 21 9.703125 18.69140625 C7.12562139 14.61824113 3.59685112 11.66574589 0.08203125 8.40234375 C-2 6 -2 6 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#AF9162\",transform:\"translate(603,271)\"})),_path29||(_path29=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.495 0.99 0.495 2 1 C1.34 1.99 0.68 2.98 0 4 C1.093125 3.938125 2.18625 3.87625 3.3125 3.8125 C7 4 7 4 8.6875 5.1875 C10.40109869 7.55389819 10.49939544 9.29068971 10.6875 12.1875 C10.75324219 13.08855469 10.81898438 13.98960937 10.88671875 14.91796875 C10.94279297 15.94857422 10.94279297 15.94857422 11 17 C3.25 17.125 3.25 17.125 1 16 C0.29618843 14.01276732 -0.3711811 12.01222047 -1 10 C-2.18047883 8.61027035 -2.18047883 8.61027035 -5.5 8.625 C-10.73882255 8.66289383 -14.81952454 10.98127593 -19 14 C-19.33 14.66 -19.66 15.32 -20 16 C-18.35 16 -16.7 16 -15 16 C-9.25968109 25.22551253 -9.25968109 25.22551253 -10 31 C-8.35 30.67 -6.7 30.34 -5 30 C-5 29.34 -5 28.68 -5 28 C-0.375 25.875 -0.375 25.875 3 27 C1.68 27.66 0.36 28.32 -1 29 C-1 29.66 -1 30.32 -1 31 C-4.3794534 33.51045109 -6.79169168 34.55372478 -11 34 C-11.99 33.34 -12.98 32.68 -14 32 C-16.14006055 33.77261323 -16.14006055 33.77261323 -16.3984375 35.94921875 C-17.39366573 39.34204226 -19.8696972 40.37258349 -22.8046875 42.08203125 C-26.20491526 43.50383467 -28.53788907 43.0652649 -32 42 C-34.4375 40.625 -34.4375 40.625 -36 39 C-36 38.01 -36 37.02 -36 36 C-36.66 36 -37.32 36 -38 36 C-38.33 36.66 -38.66 37.32 -39 38 C-39.495 37.505 -39.495 37.505 -40 37 C-40.33 37.99 -40.66 38.98 -41 40 C-39.515 40.495 -39.515 40.495 -38 41 C-36.3125 43.5625 -36.3125 43.5625 -35 46 C-38.82754414 49.47958558 -41.99790764 50.79259839 -47 52 C-48.11375 52.37125 -49.2275 52.7425 -50.375 53.125 C-54.67886358 54.16386362 -58.60060739 54.17956705 -63 54 C-62.67 53.01 -62.34 52.02 -62 51 C-62 51.66 -62 52.32 -62 53 C-61.01604248 52.68192383 -61.01604248 52.68192383 -60.01220703 52.35742188 C-57.05076278 51.40194793 -54.08790909 50.45092126 -51.125 49.5 C-50.09246094 49.16613281 -49.05992187 48.83226562 -47.99609375 48.48828125 C-47.00996094 48.17246094 -46.02382813 47.85664062 -45.0078125 47.53125 C-44.09660645 47.23798828 -43.18540039 46.94472656 -42.24658203 46.64257812 C-40 46 -40 46 -38 46 C-38 45.34 -38 44.68 -38 44 C-38.91845703 43.86464844 -38.91845703 43.86464844 -39.85546875 43.7265625 C-42.5833299 42.80236911 -43.0419178 41.91616439 -44.3125 39.375 C-46.28079456 35.13206153 -46.11986985 32.47947941 -45 28 C-47.64 28 -50.28 28 -53 28 C-53.33 30.64 -53.66 33.28 -54 36 C-54.66 36 -55.32 36 -56 36 C-57.125 34.25 -57.125 34.25 -58 32 C-57.5 29.9375 -57.5 29.9375 -56 28 C-52.86008315 26.15700533 -49.66169505 24.35435759 -46 24 C-43.25 24.9375 -43.25 24.9375 -41 26 C-41 26.99 -41 27.98 -41 29 C-39.61455564 27.82795044 -39.61455564 27.82795044 -39.6875 24.5625 C-39 21 -39 21 -37.375 19.6875 C-36.199375 19.3471875 -36.199375 19.3471875 -35 19 C-33.865625 18.62875 -32.73125 18.2575 -31.5625 17.875 C-28.50363426 17.12369964 -26.11664322 16.81111253 -23 17 C-23 15.68 -23 14.36 -23 13 C-22.34 13 -21.68 13 -21 13 C-21 12.34 -21 11.68 -21 11 C-19.35 11 -17.7 11 -16 11 C-15.34 9.02 -14.68 7.04 -14 5 C-13.505 5.99 -13.505 5.99 -13 7 C-11.9275 6.690625 -10.855 6.38125 -9.75 6.0625 C-6 5 -6 5 -3.6875 4.625 C-1.77851761 4.11688697 -1.77851761 4.11688697 -0.75 1.9375 C-0.5025 1.298125 -0.255 0.65875 0 0 Z \",fill:\"#50412C\",transform:\"translate(623,557)\"})),_path30||(_path30=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C112.86 0 225.72 0 342 0 C342 1.65 342 3.3 342 5 C341.11716843 5.00142502 340.23433685 5.00285004 339.32475281 5.00431824 C331.01080051 5.02213688 322.69738149 5.06371607 314.38368511 5.13209057 C310.1093155 5.16640341 305.8353049 5.19147713 301.56079102 5.19555664 C297.43669102 5.19983054 293.31340149 5.22821616 289.18955421 5.27343178 C287.6151177 5.28643616 286.04058434 5.29070405 284.46610069 5.28615379 C282.26255831 5.28126803 280.06140338 5.30724261 277.8581543 5.34057617 C275.97618599 5.35056892 275.97618599 5.35056892 274.05619812 5.36076355 C270.79282501 5.68196521 270.79282501 5.68196521 269.19636536 8.54121399 C268.80156479 9.35261337 268.40676422 10.16401276 268 11 C267.34 11 266.68 11 266 11 C267.07401108 8.08482708 267.77810176 6.22189824 270 4 C272.9359436 3.75949097 272.9359436 3.75949097 276.74462891 3.77294922 C277.43742447 3.77265717 278.13022003 3.77236511 278.8440094 3.77206421 C281.13832034 3.77345969 283.43230816 3.78903081 285.7265625 3.8046875 C287.31553978 3.80841686 288.90451936 3.8112642 290.49349976 3.81326294 C294.67914154 3.82090547 298.8646449 3.84055919 303.05023193 3.8626709 C307.31992724 3.88311604 311.58964487 3.8922618 315.859375 3.90234375 C324.23964691 3.92380457 332.61980625 3.95794789 341 4 C341 3.01 341 2.02 341 1 C268.73 1 196.46 1 122 1 C122 4.63 122 8.26 122 12 C118.7 12.66 115.4 13.32 112 14 C112 14.66 112 15.32 112 16 C111.45472656 16.268125 110.90945313 16.53625 110.34765625 16.8125 C104.77672678 19.70747874 100.38778023 23.09384638 95.84765625 27.42578125 C94 29 94 29 92 29 C91.71125 29.639375 91.4225 30.27875 91.125 30.9375 C90 33 90 33 88 34 C88.5425148 29.44287564 89.6893502 25.97431766 92 22 C92.99 21.505 92.99 21.505 94 21 C94.433125 20.236875 94.86625 19.47375 95.3125 18.6875 C97.19158616 15.6948813 99.10729889 14.00263923 102 12 C102.66 12 103.32 12 104 12 C104 11.34 104 10.68 104 10 C106.90548882 7.95830515 108.40142046 7 112 7 C112 6.34 112 5.68 112 5 C69.76 5 27.52 5 -16 5 C-16.33 5.66 -16.66 6.32 -17 7 C-17 6.01 -17 5.02 -17 4 C12.37 3.67 41.74 3.34 72 3 C72 2.34 72 1.68 72 1 C48.24 1 24.48 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#7A613A\",transform:\"translate(360,487)\"})),_path31||(_path31=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.5 1.5625 2.5 1.5625 4 3 C4 3.66 4 4.32 4 5 C4.7425 5.226875 5.485 5.45375 6.25 5.6875 C9.55765809 7.266155 10.94858409 8.99614099 13 12 C14.04976964 15.14930893 14.10131595 17.38814456 14.0625 20.6875 C14.05347656 21.68136719 14.04445313 22.67523437 14.03515625 23.69921875 C14.02355469 24.45847656 14.01195312 25.21773437 14 26 C6.89400281 26.95657654 2.72060794 24.59508201 -3.36328125 21.01953125 C-6.14241858 18.89091791 -7.22603656 16.95660573 -9 14 C-10.92027356 12.85497468 -10.92027356 12.85497468 -13 13 C-14.71547848 14.18519909 -14.71547848 14.18519909 -16.125 15.9375 C-17.04956579 16.98901394 -18.00282632 18.01707166 -19 19 C-19.66 19 -20.32 19 -21 19 C-21 19.66 -21 20.32 -21 21 C-22.91040052 21.8680908 -24.82860737 22.71901783 -26.75 23.5625 C-27.81734375 24.03816406 -28.8846875 24.51382813 -29.984375 25.00390625 C-32.99138891 25.99715566 -34.14356073 26.22132801 -37 25 C-38.52993969 23.47006031 -38.3169616 22.06701177 -38.4375 19.9375 C-38.35546373 14.19496126 -35.96059503 10.9773064 -32 7 C-28.2627407 3.70662974 -24.97028137 0.96092106 -20 0 C-20 -0.66 -20 -1.32 -20 -2 C-12.65852362 -4.97154996 -6.94642203 -3.1185001 0 0 Z \",fill:\"#B08F57\",transform:\"translate(494,507)\"})),_path32||(_path32=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.296875 2.078125 1.296875 2.078125 2 4 C3.3153341 4.70151152 4.65117592 5.36525925 6 6 C8.66037521 8.35633233 9.86406195 9.59218586 11 13 C15.07467725 14.48882438 18.66541415 15.26270217 23 15 C23.495 16.485 23.495 16.485 24 18 C17.63203383 18.05104188 11.26412116 18.08587607 4.89599609 18.10986328 C2.73321562 18.11987167 0.57044851 18.13348251 -1.59228516 18.15087891 C-4.71520298 18.17535544 -7.83794067 18.18653504 -10.9609375 18.1953125 C-11.91551849 18.20563507 -12.87009949 18.21595764 -13.85360718 18.22659302 C-20.12540721 18.22762261 -25.90122322 17.45955666 -32 16 C-32 15.34 -32 14.68 -32 14 C-32.66 14 -33.32 14 -34 14 C-34 13.34 -34 12.68 -34 12 C-36.97 11.505 -36.97 11.505 -40 11 C-40.33 7.7 -40.66 4.4 -41 1 C-38.69 0.34 -36.38 -0.32 -34 -1 C-34 -1.66 -34 -2.32 -34 -3 C-23.73775274 -6.42074909 -9.78454601 -4.24958835 0 0 Z \",fill:\"#D7B37B\",transform:\"translate(282,372)\"})),_path33||(_path33=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.90631656 -0.2691512 12.18755615 2.02360529 18.1640625 7.08984375 C20 9 20 9 20 11 C20.66 11 21.32 11 22 11 C22.33 12.32 22.66 13.64 23 15 C23.66 15 24.32 15 25 15 C25.33 14.01 25.66 13.02 26 12 C27.77734375 10.28125 27.77734375 10.28125 29.9375 8.5 C32.50975192 6.37123979 34.12260763 4.81608855 36 2 C40.41873869 0.38546086 44.30200358 -0.33557117 49 0 C50.63109367 1.63109367 50.24872283 3.44187222 50.3125 5.6875 C50.36857422 6.96173828 50.36857422 6.96173828 50.42578125 8.26171875 C49.6316211 13.36911567 46.86458373 16.29773275 42.94140625 19.484375 C41.82285096 20.25101056 40.6963603 21.00618764 39.5625 21.75 C38.72235352 22.32814453 38.72235352 22.32814453 37.86523438 22.91796875 C34.69480108 25.05625398 31.60792386 26.73216881 28 28 C28 28.66 28 29.32 28 30 C21.79011871 29.55643705 17.39459439 28.08467498 12 25 C12 24.34 12 23.68 12 23 C10.9171875 22.690625 10.9171875 22.690625 9.8125 22.375 C6.18916079 20.60358972 4.48243238 18.13570406 2 15 C1.01 14.34 0.02 13.68 -1 13 C-1.58203125 10.72265625 -1.58203125 10.72265625 -1.8125 8.0625 C-1.90144531 7.18722656 -1.99039062 6.31195313 -2.08203125 5.41015625 C-2 3 -2 3 0 0 Z \",fill:\"#8D6A31\",transform:\"translate(458,127)\"})),_path34||(_path34=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-2.49832711 2.99119436 -4.94380611 3.85854453 -8.625 5 C-9.69234375 5.33773437 -10.7596875 5.67546875 -11.859375 6.0234375 C-12.89578125 6.34570312 -13.9321875 6.66796875 -15 7 C-16.62647256 7.53722881 -18.25166406 8.07836647 -19.875 8.625 C-20.94814453 8.97884766 -20.94814453 8.97884766 -22.04296875 9.33984375 C-23.76947421 9.92223781 -25.48005412 10.55139271 -27.1875 11.1875 C-30.24739602 12.07146996 -32.83131788 12.15088962 -36 12 C-36 12.66 -36 13.32 -36 14 C-37.9363704 14.50435694 -39.87414146 15.00333874 -41.8125 15.5 C-42.89144531 15.7784375 -43.97039062 16.056875 -45.08203125 16.34375 C-48 17 -48 17 -51 17 C-51.2165625 18.1446875 -51.2165625 18.1446875 -51.4375 19.3125 C-52 22 -52 22 -53 25 C-54.31647119 25.69937532 -55.65022151 26.36729133 -57 27 C-57.33 27.66 -57.66 28.32 -58 29 C-58.66 29 -59.32 29 -60 29 C-60.061875 29.5775 -60.12375 30.155 -60.1875 30.75 C-61.34200848 33.94710041 -63.21547979 35.1436532 -66 37 C-66.99 37 -67.98 37 -69 37 C-68.55859564 60.13836768 -67.84495342 83.37940591 -56 104 C-55.60554688 104.72832031 -55.21109375 105.45664062 -54.8046875 106.20703125 C-41.77965326 129.24273467 -22.38074732 145.26959081 1 157 C1 157.66 1 158.32 1 159 C-17.58788255 156.05112024 -37.232087 136.70448651 -47.96484375 122.13671875 C-50 119 -50 119 -50 117 C-50.66 117 -51.32 117 -52 117 C-62.1046489 99.59754911 -62.1046489 99.59754911 -65 91 C-65.61294922 89.25203125 -65.61294922 89.25203125 -66.23828125 87.46875 C-71.53007364 71.9122498 -73.27006635 57.01329905 -73.3125 40.625 C-73.31617584 39.94131348 -73.31985168 39.25762695 -73.32363892 38.55322266 C-73.34810037 29.83604948 -72.75571347 21.54440523 -71 13 C-69.75633667 12.95625244 -69.75633667 12.95625244 -68.48754883 12.91162109 C-46.15547237 12.03754909 -27.02112052 8.7752482 -6.34838867 -0.14404297 C-3.7198671 -1.10210479 -2.58097913 -0.9559182 0 0 Z \",fill:\"#59472C\",transform:\"translate(482,183)\"})),_path35||(_path35=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.93344238 -0.01417969 1.86688477 -0.02835937 2.82861328 -0.04296875 C9.33818065 0.0488608 14.21673426 1.47422101 19.9375 4.5625 C20.3517519 8.62216865 20.25495226 11.72541348 18.1875 15.25 C13.69878294 20.51162959 7.19799385 22.20788436 0.49304199 22.76596069 C-6.27521563 23.05541832 -13.04141973 22.92755843 -19.8125 22.8125 C-21.87758681 22.79240025 -23.94269255 22.77415565 -26.0078125 22.7578125 C-31.0265157 22.71410184 -36.04429517 22.64526664 -41.0625 22.5625 C-38.72396958 20.07739739 -37.45342025 19.21412019 -34.0625 18.6875 C-30.63181391 17.94870793 -30.63181391 17.94870793 -28.3125 15.25 C-27.9 14.363125 -27.4875 13.47625 -27.0625 12.5625 C-25 9.75 -25 9.75 -23.0625 7.5625 C-22.4025 7.5625 -21.7425 7.5625 -21.0625 7.5625 C-21.0625 6.9025 -21.0625 6.2425 -21.0625 5.5625 C-14.55943715 0.53250664 -7.92894813 0.04228068 0 0 Z \",fill:\"#D4B077\",transform:\"translate(703.0625,367.4375)\"})),_path36||(_path36=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.20696128 1.42777089 7.14972107 3.4882949 10.5625 6.3125 C11.49191406 7.07175781 12.42132813 7.83101562 13.37890625 8.61328125 C15.93060138 10.93680692 17.95029666 13.22933761 20 16 C21.09828125 17.39992187 21.09828125 17.39992187 22.21875 18.828125 C24.31822915 22.56667121 24.61402522 25.57057544 24.5 29.75 C24.48936523 30.45229736 24.47873047 31.15459473 24.46777344 31.87817383 C24.17545061 39.9327777 21.80436616 47.19563384 16 53 C11.60848865 56.86871238 8.15430859 57.62610095 2.4765625 57.39453125 C-1.46259817 56.76699935 -3.8022177 55.38132724 -7 53 C-7.495 51.515 -7.495 51.515 -8 50 C-8.66 50 -9.32 50 -10 50 C-11.46728881 42.66355593 -12.23781048 36.5080661 -8 30 C-5.74944697 27.90738051 -4.50411766 27.0572861 -1.421875 26.70703125 C-0.54015625 26.74183594 0.3415625 26.77664062 1.25 26.8125 C2.14203125 26.83957031 3.0340625 26.86664063 3.953125 26.89453125 C4.62859375 26.92933594 5.3040625 26.96414062 6 27 C6 27.66 6 28.32 6 29 C7.65 29.66 9.3 30.32 11 31 C11.36 36.4 11.36 36.4 9.875 38.875 C7.21965017 40.4682099 5.03210482 40.20214032 2 40 C2.875 34.125 2.875 34.125 4 33 C-0.00254456 32.90818866 -0.00254456 32.90818866 -4 33 C-5.31262571 34.08552366 -5.31262571 34.08552366 -5.09765625 36.72265625 C-5.08605469 37.82480469 -5.07445312 38.92695313 -5.0625 40.0625 C-5.05347656 41.16722656 -5.04445313 42.27195313 -5.03515625 43.41015625 C-5.02355469 44.26480469 -5.01195312 45.11945313 -5 46 C-3.35 46.66 -1.7 47.32 0 48 C0 48.99 0 49.98 0 51 C5.82681177 50.74610842 9.74415528 50.38883987 14 46 C16.75362043 40.49275915 14.73426306 33.7788965 12.90234375 28.2578125 C10.98390802 23.45757073 8.33821852 21.12196844 4 18.5625 C0.166494 16.2738397 -1.99664747 14.09017808 -4 10 C-4.25 6.625 -4.25 6.625 -4 4 C0.45673159 4.49871064 2.57687178 6.02004362 5.8125 9.0625 C6.60269531 9.79597656 7.39289063 10.52945313 8.20703125 11.28515625 C8.79871094 11.85105469 9.39039063 12.41695312 10 13 C8.63017895 9.8129289 7.15774857 8.06713092 4.4375 5.9375 C1.80562347 3.87467786 1.09567461 3.28702382 0 0 Z \",fill:\"#84693D\",transform:\"translate(378,208)\"})),_path37||(_path37=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.763125 0.061875 1.52625 0.12375 2.3125 0.1875 C2.3125 0.8475 2.3125 1.5075 2.3125 2.1875 C3.3025 2.1875 4.2925 2.1875 5.3125 2.1875 C5.3125 3.5075 5.3125 4.8275 5.3125 6.1875 C4.42046875 6.45304687 3.5284375 6.71859375 2.609375 6.9921875 C1.43890625 7.34539062 0.2684375 7.69859375 -0.9375 8.0625 C-2.67773438 8.58457031 -2.67773438 8.58457031 -4.453125 9.1171875 C-7.05247817 9.97735992 -9.27433413 10.93370295 -11.6875 12.1875 C-17.94537966 14.08721347 -17.94537966 14.08721347 -21 14.5 C-22.9515715 15.07611777 -22.9515715 15.07611777 -23.8125 17.5 C-24.245625 18.8303125 -24.245625 18.8303125 -24.6875 20.1875 C-25.02910156 20.72761719 -25.37070313 21.26773437 -25.72265625 21.82421875 C-27.17157675 25.37319405 -27.02542471 28.91290816 -27 32.6875 C-26.99798584 33.48687988 -26.99597168 34.28625977 -26.99389648 35.10986328 C-26.88178644 41.78947362 -25.70323053 47.81653821 -23.6875 54.1875 C-23.34468543 55.51842714 -23.00765262 56.85094054 -22.6875 58.1875 C-24.0075 58.1875 -25.3275 58.1875 -26.6875 58.1875 C-26.6875 57.5275 -26.6875 56.8675 -26.6875 56.1875 C-27.28691406 55.92066406 -27.88632813 55.65382813 -28.50390625 55.37890625 C-35.11135819 51.773767 -40.03384729 43.27326211 -42.30859375 36.27734375 C-43.70318524 28.58552473 -43.23977125 21.1604769 -39.6875 14.1875 C-38.6975 13.8575 -37.7075 13.5275 -36.6875 13.1875 C-36.3575 12.1975 -36.0275 11.2075 -35.6875 10.1875 C-33.125 8.5 -33.125 8.5 -30.6875 7.1875 C-31.3475 6.1975 -32.0075 5.2075 -32.6875 4.1875 C-30.22039984 2.95394992 -28.68359852 3.15430263 -25.9375 3.25 C-21.78657147 3.30414255 -18.55990215 2.81798512 -14.6875 1.1875 C-14.0275 1.8475 -13.3675 2.5075 -12.6875 3.1875 C-9.22949641 3.60423207 -9.22949641 3.60423207 -5.6875 3.1875 C-2.41705975 0.16863208 -2.41705975 0.16863208 0 0 Z \",fill:\"#C8A368\",transform:\"translate(276.6875,297.8125)\"})),_path38||(_path38=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.46754912 0.2972185 4.98469519 0.98782572 7.75 3.1875 C10.21461548 6.26826936 10.72903553 8.11617586 11 12 C14.3 12.33 17.6 12.66 21 13 C21 18 21 18 19.35546875 19.84375 C18.64003906 20.3903125 17.92460938 20.936875 17.1875 21.5 C14.00829179 24.07150115 11.81410178 26.25841508 10 30 C9.505 29.01 9.505 29.01 9 28 C8.52691406 28.32613281 8.05382812 28.65226563 7.56640625 28.98828125 C2.54221568 32.3083604 -2.25457909 34.28798064 -8 36 C-9.6892885 36.55710578 -11.37685857 37.11945469 -13.0625 37.6875 C-15.03125 38.34375 -15.03125 38.34375 -17 39 C-17 39.66 -17 40.32 -17 41 C-19.475 41.495 -19.475 41.495 -22 42 C-22.10957031 41.40832031 -22.21914063 40.81664062 -22.33203125 40.20703125 C-23.59884549 33.648905 -23.59884549 33.648905 -27 28 C-29.59122743 27.11341534 -29.59122743 27.11341534 -32 27 C-30.60086451 22.80259353 -28.28265005 22.02261909 -24.48828125 20.01953125 C-20.65797622 18.4501284 -18.10154027 18.43427031 -14 19 C-12 20.1875 -12 20.1875 -11 22 C-11 23.65 -11 25.3 -11 27 C-7.7 27.33 -4.4 27.66 -1 28 C-1.28875 26.39125 -1.5775 24.7825 -1.875 23.125 C-2.03742187 22.22007812 -2.19984375 21.31515625 -2.3671875 20.3828125 C-2.83044703 17.83494012 -2.83044703 17.83494012 -5 16 C-7.32275177 15.59952556 -9.65739357 15.2602896 -12 15 C-10.66727125 11.40163237 -8.49638568 9.70395785 -5.53125 7.37109375 C-3.13178239 5.22259087 -1.66051138 2.74623036 0 0 Z \",fill:\"#735D3B\",transform:\"translate(635,546)\"})),_path39||(_path39=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.99 0 1.98 0 3 C-0.78375 3.61875 -1.5675 4.2375 -2.375 4.875 C-5.18083706 7.14639191 -5.96334332 8.60730542 -7 12 C-6.29875 11.0925 -5.5975 10.185 -4.875 9.25 C-2.28260445 6.14207124 0.45526335 4.0035468 4 2 C4.99 2 5.98 2 7 2 C7.25 8.625 7.25 8.625 5 12 C4.34 12 3.68 12 3 12 C2.814375 12.556875 2.62875 13.11375 2.4375 13.6875 C0.62075833 16.61008442 -1.56755595 17.93161032 -4.44140625 19.75390625 C-6.30648329 21.01360334 -6.30648329 21.01360334 -7 24 C-8.01320313 24.79664063 -8.01320313 24.79664063 -9.046875 25.609375 C-12.02365186 29.25294988 -11.43486539 32.69946723 -11.25 37.25 C-11.22292969 38.51070312 -11.22292969 38.51070312 -11.1953125 39.796875 C-11.14830798 41.86507395 -11.07656724 43.93268441 -11 46 C-9.68 46.33 -8.36 46.66 -7 47 C-7 47.66 -7 48.32 -7 49 C-3.83802147 49.58077157 -1.14623881 49.73179922 2 49 C6.07583212 45.61085698 8.68880375 41.86717748 9.5625 36.625 C9.12227926 33.78469973 9.12227926 33.78469973 7 31 C3.41642759 30.74984127 3.41642759 30.74984127 0 31 C0.33 31.33 0.66 31.66 1 32 C1.04080783 33.99958364 1.04254356 36.00045254 1 38 C-2.375 37.6875 -2.375 37.6875 -6 37 C-8 34 -8 34 -7.8125 31.5 C-6.93740139 28.80738888 -6.22274287 27.70980221 -4 26 C0.08584869 24.63805044 3.74761587 24.08722249 8 25 C11.11698241 27.46519106 13.23219006 30.46438012 15 34 C15.0952699 35.47668337 15.12985959 36.95775457 15.125 38.4375 C15.12886719 39.61119141 15.12886719 39.61119141 15.1328125 40.80859375 C15 43 15 43 14 46 C13.34 46 12.68 46 12 46 C11.71125 46.598125 11.4225 47.19625 11.125 47.8125 C8.65809769 52.6092545 8.65809769 52.6092545 6 54.1875 C0.77075587 55.60375362 -4.30738161 56.45382694 -9.25 53.78515625 C-14.97787125 49.17465383 -19.36905746 43.33220387 -20.25 35.88720703 C-20.4104887 33.50344831 -20.48069686 31.13900546 -20.5 28.75 C-20.50644531 27.98131592 -20.51289062 27.21263184 -20.51953125 26.4206543 C-20.41005704 21.57273609 -19.54509076 18.25084308 -17 14 C-16.34 14 -15.68 14 -15 14 C-14.7525 12.9790625 -14.7525 12.9790625 -14.5 11.9375 C-11.84263539 6.73349431 -7.22959667 3.06834841 -2 0.5625 C-1.01 0.2840625 -1.01 0.2840625 0 0 Z \",fill:\"#C7A470\",transform:\"translate(583,210)\"})),_path40||(_path40=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.73283203 0.00773437 1.46566406 0.01546875 2.22070312 0.0234375 C2.94966797 0.01570313 3.67863281 0.00796875 4.4296875 0 C8.24158536 0.01397579 10.04131422 0.11217823 13.28320312 2.2734375 C12.07664062 2.7065625 12.07664062 2.7065625 10.84570312 3.1484375 C8.15055633 4.00606318 8.15055633 4.00606318 7.28320312 6.2734375 C8.00507812 6.1703125 8.72695313 6.0671875 9.47070312 5.9609375 C13.42085421 6.39984318 14.76783038 8.326858 17.28320312 11.2734375 C17.28320312 11.6034375 17.28320312 11.9334375 17.28320312 12.2734375 C15.30320312 12.6034375 13.32320312 12.9334375 11.28320312 13.2734375 C12.23195313 14.0365625 13.18070313 14.7996875 14.15820312 15.5859375 C16.44930208 17.42877796 17.59545257 18.74181167 19.28320312 21.2734375 C19.42541378 23.87589248 19.47123245 26.36461434 19.40820312 28.9609375 C19.39917969 29.66283203 19.39015625 30.36472656 19.38085938 31.08789062 C19.35734016 32.81655275 19.32147025 34.54503895 19.28320312 36.2734375 C8.6767351 36.24830369 -0.84827594 35.92872474 -9.71679688 29.2734375 C-10.39840179 27.94767849 -11.06650549 26.61483354 -11.71679688 25.2734375 C-15.04314187 22.90837569 -18.47557285 22.88791094 -22.46679688 22.6484375 C-23.63726563 22.57367188 -24.80773437 22.49890625 -26.01367188 22.421875 C-26.90570312 22.37289063 -27.79773438 22.32390625 -28.71679688 22.2734375 C-26.29600533 19.34300563 -24.45817367 18.71584848 -20.71679688 18.2734375 C-18.78028669 18.20810315 -16.84176826 18.18759447 -14.90429688 18.2109375 C-13.92847656 18.21996094 -12.95265625 18.22898437 -11.94726562 18.23828125 C-10.84318359 18.25568359 -10.84318359 18.25568359 -9.71679688 18.2734375 C-9.71679688 17.6134375 -9.71679688 16.9534375 -9.71679688 16.2734375 C-12.02679687 15.9434375 -14.33679688 15.6134375 -16.71679688 15.2734375 C-16.71679688 14.9434375 -16.71679688 14.6134375 -16.71679688 14.2734375 C-9.39052212 13.80077461 -4.3429536 15.17477548 2.28320312 18.2734375 C2.28320312 18.9334375 2.28320312 19.5934375 2.28320312 20.2734375 C2.84007812 20.5209375 3.39695312 20.7684375 3.97070312 21.0234375 C6.6829144 22.48949765 8.91907677 24.30333221 11.28320312 26.2734375 C10.91250605 23.55499227 10.52580533 22.48783015 8.43554688 20.640625 C7.70464844 20.14820313 6.97375 19.65578125 6.22070312 19.1484375 C3.99804688 17.640625 3.99804688 17.640625 2.28320312 16.2734375 C2.28320312 15.6134375 2.28320312 14.9534375 2.28320312 14.2734375 C1.52007813 13.9846875 0.75695312 13.6959375 -0.02929688 13.3984375 C-2.71679688 12.2734375 -2.71679688 12.2734375 -5.71679688 10.2734375 C-5.71679688 9.6134375 -5.71679688 8.9534375 -5.71679688 8.2734375 C-7.03679688 7.9434375 -8.35679687 7.6134375 -9.71679688 7.2734375 C-9.71679688 6.6134375 -9.71679688 5.9534375 -9.71679688 5.2734375 C-6.25179687 4.7784375 -6.25179687 4.7784375 -2.71679688 4.2734375 C-2.71679688 3.6134375 -2.71679688 2.9534375 -2.71679688 2.2734375 C-4.36679687 2.2734375 -6.01679687 2.2734375 -7.71679688 2.2734375 C-5.16630137 -0.27705801 -3.48196933 0.0127896 0 0 Z \",fill:\"#B99B6E\",transform:\"translate(543.716796875,311.7265625)\"})),_path41||(_path41=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.78770347 6.14408709 -1.89516847 9.9731299 -5 15 C-5.598125 16.010625 -6.19625 17.02125 -6.8125 18.0625 C-7.204375 18.701875 -7.59625 19.34125 -8 20 C-6.35 20 -4.7 20 -3 20 C-6.44450737 22.29633824 -8.93812283 22.54016485 -13 23 C-13 23.66 -13 24.32 -13 25 C-13.67804687 25.28230469 -14.35609375 25.56460937 -15.0546875 25.85546875 C-22.15467579 29.20878732 -26.20322986 33.06684021 -30.56201172 39.41674805 C-32.99982153 42.93359692 -35.11010322 45.15912912 -39 47 C-39.66 47 -40.32 47 -41 47 C-41.33 47.99 -41.66 48.98 -42 50 C-43.32 50 -44.64 50 -46 50 C-46.33 50.66 -46.66 51.32 -47 52 C-48.32 51.34 -49.64 50.68 -51 50 C-49.64455078 48.98679687 -49.64455078 48.98679687 -48.26171875 47.953125 C-47.07009546 47.05237039 -45.87870121 46.15131271 -44.6875 45.25 C-44.09259766 44.8065625 -43.49769531 44.363125 -42.88476562 43.90625 C-39.70941688 41.49369453 -37.35008223 39.25513007 -35 36 C-34.34 36 -33.68 36 -33 36 C-32.855625 35.05125 -32.71125 34.1025 -32.5625 33.125 C-32 30 -32 30 -31 28 C-30.85359499 26.35857459 -30.77903411 24.7101859 -30.75 23.0625 C-30.72421875 22.18722656 -30.6984375 21.31195313 -30.671875 20.41015625 C-30.80472964 17.95987325 -30.80472964 17.95987325 -32.328125 16.24609375 C-35.63492968 13.7814426 -38.9642901 13.82603892 -42.96484375 13.671875 C-45.74539908 14.12017951 -47.03869833 14.98651292 -49 17 C-49.48261667 19.50880616 -49.48261667 19.50880616 -49.25 22.1875 C-49.21390625 23.08855469 -49.1778125 23.98960937 -49.140625 24.91796875 C-49.09421875 25.60503906 -49.0478125 26.29210937 -49 27 C-50.9375 26.625 -50.9375 26.625 -53 26 C-54.84206499 22.31587001 -54.3617633 18.03017014 -54 14 C-52.38727433 10.31376989 -51.369675 9.24645 -48 7 C-40.11607329 6.01928537 -33.32518609 7.07757696 -26.6875 11.5625 C-24.03282697 15.39702771 -23.18331879 19.5033886 -22 24 C-22 18.72 -22 13.44 -22 8 C-21.01 7.67 -20.02 7.34 -19 7 C-19 8.32 -19 9.64 -19 11 C-18.34 11 -17.68 11 -17 11 C-16.76925781 10.24332031 -16.53851562 9.48664063 -16.30078125 8.70703125 C-14.72878381 5.43557713 -13.29919885 4.49293846 -10.1875 2.6875 C-9.33542969 2.17574219 -8.48335937 1.66398438 -7.60546875 1.13671875 C-4.83166067 -0.0734434 -2.99009036 -0.23083283 0 0 Z \",fill:\"#8F6F3B\",transform:\"translate(733,242)\"})),_path42||(_path42=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-22.43318683 11.26746061 -42.74588216 15.45133629 -67 15 C-67.90933089 24.12322813 -68.27919059 33.20836081 -68.3125 42.375 C-68.31511841 43.0712146 -68.31773682 43.7674292 -68.32043457 44.48474121 C-68.33070782 70.15759883 -61.81442248 92.00654732 -49.35546875 114.34765625 C-48 117 -48 117 -48 119 C-47.34 119 -46.68 119 -46 119 C-45.11885665 120.33933789 -44.24249913 121.68194581 -43.3828125 123.03515625 C-40.33879221 127.36041672 -36.60888569 131.1466414 -33 135 C-32.26265625 135.79148437 -31.5253125 136.58296875 -30.765625 137.3984375 C-22.90492658 145.56575891 -13.78230318 151.37857231 -4 157 C-2.9275 157.639375 -1.855 158.27875 -0.75 158.9375 C2.7287705 160.28157042 4.38695514 159.86835257 8 159 C23.17549966 151.97569694 39.93154668 139.78002469 49.1796875 125.67578125 C49.78039062 124.79277344 50.38109375 123.90976562 51 123 C51.66 123 52.32 123 53 123 C53.26039063 122.28457031 53.52078125 121.56914062 53.7890625 120.83203125 C55.05825432 117.86376006 56.59283754 115.37630843 58.375 112.6875 C61.26275722 108.23830412 63.73853292 103.79431022 66 99 C66.703125 100.5703125 66.703125 100.5703125 67 103 C66.02562472 105.44796752 65.01750931 107.58583701 63.75 109.875 C63.21560303 110.85823242 63.21560303 110.85823242 62.67041016 111.86132812 C58.54618497 119.18626107 53.37523593 125.56802264 48 132 C47.45601562 132.69738281 46.91203125 133.39476562 46.3515625 134.11328125 C36.58309564 146.39444623 20.33986947 157.66308673 6 164 C0.19707023 163.86504814 -4.17998393 160.93589676 -9 158 C-9.89332031 157.45859375 -10.78664063 156.9171875 -11.70703125 156.359375 C-23.85170433 148.8177878 -23.85170433 148.8177878 -29 144 C-29 143.34 -29 142.68 -29 142 C-29.55171875 141.7834375 -30.1034375 141.566875 -30.671875 141.34375 C-33.80556389 139.53504366 -35.83396506 137.18448326 -38.25 134.5 C-38.93835938 133.75169922 -38.93835938 133.75169922 -39.640625 132.98828125 C-43 129.25897507 -43 129.25897507 -43 127 C-43.66 127 -44.32 127 -45 127 C-47.23093527 124.12260054 -49.03509779 120.96496969 -50.89794922 117.83984375 C-51.65802729 116.57091412 -52.42855801 115.3082072 -53.20751953 114.05078125 C-60.52386064 102.19102338 -64.71450875 90.5013156 -68 77 C-68.185625 76.29133789 -68.37125 75.58267578 -68.5625 74.85253906 C-70.33022791 68.09032991 -71.12647916 61.64538253 -71.1328125 54.66015625 C-71.13376923 53.97553818 -71.13472595 53.2909201 -71.13571167 52.58555603 C-71.13638834 51.14093941 -71.13457007 49.69631966 -71.13037109 48.25170898 C-71.12509046 46.09937229 -71.13029462 43.94725153 -71.13671875 41.79492188 C-71.14085524 32.16228401 -70.70996249 22.6055176 -70 13 C-69.43192627 12.98018066 -68.86385254 12.96036133 -68.27856445 12.93994141 C-47.72204301 12.18774685 -28.38898896 9.69248002 -9.22729492 1.93066406 C-5.85817682 0.584576 -3.69910031 0 0 0 Z \",fill:\"#33220D\",transform:\"translate(478,181)\"})),_path43||(_path43=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.78503906 0.00773437 1.57007813 0.01546875 2.37890625 0.0234375 C3.16394531 0.01570313 3.94898438 0.00796875 4.7578125 0 C10.62559838 0.02012963 10.62559838 0.02012963 12.87890625 2.2734375 C10.56890625 2.2734375 8.25890625 2.2734375 5.87890625 2.2734375 C5.87890625 2.9334375 5.87890625 3.5934375 5.87890625 4.2734375 C8.51890625 4.6034375 11.15890625 4.9334375 13.87890625 5.2734375 C12.67106874 8.89695003 11.58237483 9.42558986 8.44140625 11.4609375 C7.63832031 11.99074219 6.83523438 12.52054687 6.0078125 13.06640625 C3.87890625 14.2734375 3.87890625 14.2734375 1.87890625 14.2734375 C1.87890625 14.9334375 1.87890625 15.5934375 1.87890625 16.2734375 C0.55890625 16.6034375 -0.76109375 16.9334375 -2.12109375 17.2734375 C-2.12109375 17.9334375 -2.12109375 18.5934375 -2.12109375 19.2734375 C-2.94609375 20.0778125 -3.77109375 20.8821875 -4.62109375 21.7109375 C-7.47025568 24.03466166 -7.47025568 24.03466166 -7.12109375 27.2734375 C-6.13109375 26.9434375 -5.14109375 26.6134375 -4.12109375 26.2734375 C-3.85296875 25.6959375 -3.58484375 25.1184375 -3.30859375 24.5234375 C-1.07790026 20.29686036 2.51807817 17.8946851 6.75390625 15.9609375 C10.59308788 15.11631754 13.95305534 15.13806333 17.87890625 15.2734375 C17.21890625 15.9334375 16.55890625 16.5934375 15.87890625 17.2734375 C17.57660156 17.56347656 17.57660156 17.56347656 19.30859375 17.859375 C20.79043827 18.12198036 22.27220517 18.38502398 23.75390625 18.6484375 C24.87345703 18.83792969 24.87345703 18.83792969 26.015625 19.03125 C31.65234375 20.046875 31.65234375 20.046875 33.87890625 22.2734375 C32.87730469 22.26441406 31.87570312 22.25539063 30.84375 22.24609375 C23.36158193 22.17932848 23.36158193 22.17932848 16.53515625 24.7578125 C14.87157302 26.52726011 13.37838234 28.36463367 11.87890625 30.2734375 C7.46878846 33.76478075 4.46117673 34.83040016 -1.12109375 35.2734375 C-2.75498047 35.42619141 -2.75498047 35.42619141 -4.421875 35.58203125 C-11.16891254 36.17930998 -11.16891254 36.17930998 -14.12109375 36.2734375 C-15.97052122 34.42401003 -15.38028135 31.56917319 -15.43359375 29.0859375 C-15.37992766 23.64181123 -15.12518347 20.27752722 -11.12109375 16.2734375 C-7.87109375 14.3984375 -7.87109375 14.3984375 -5.12109375 13.2734375 C-8.09109375 13.2734375 -11.06109375 13.2734375 -14.12109375 13.2734375 C-11.84270887 8.71666775 -10.70610927 8.10744371 -6.12109375 6.2734375 C-4.80109375 6.2734375 -3.48109375 6.2734375 -2.12109375 6.2734375 C-3.5130529 3.4895192 -5.27685154 3.29444753 -8.12109375 2.2734375 C-5.49385551 -0.35380074 -3.57897702 0.01227779 0 0 Z \",fill:\"#CAA670\",transform:\"translate(416.12109375,311.7265625)\"})),_path44||(_path44=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.86625 0.598125 1.7325 1.19625 2.625 1.8125 C5.62619944 3.82044534 8.73775706 5.44655098 12 7 C12 7.66 12 8.32 12 9 C12.86625 9.226875 13.7325 9.45375 14.625 9.6875 C18 11 18 11 20.7109375 13.38671875 C24.15059697 16.34072267 27.74297288 17.69265441 32 19.125 C35.78184207 20.44011425 39.4420761 21.71887555 43.0234375 23.5234375 C46.45978347 25.22808156 49.96632652 26.39022625 53.625 27.5 C54.26050781 27.69980469 54.89601563 27.89960937 55.55078125 28.10546875 C57.69299689 28.76623074 59.84324648 29.38833278 62 30 C63.30904297 30.37862183 63.30904297 30.37862183 64.64453125 30.76489258 C72.92890028 33.01416585 81.22776277 33.93318348 89.75 34.6875 C91.14070435 34.81751333 92.53133031 34.94836808 93.921875 35.08007812 C97.28057751 35.39495648 100.6398159 35.70142364 104 36 C104 37.65 104 39.3 104 41 C112.58 40.67 121.16 40.34 130 40 C125.88620923 42.05689538 123.08945089 42.32038366 118.6484375 42.3359375 C117.92467926 42.34413513 117.20092102 42.35233276 116.45523071 42.36077881 C114.09496259 42.37995597 111.73533504 42.37982406 109.375 42.375 C108.17230469 42.37617828 108.17230469 42.37617828 106.9453125 42.37738037 C72.04067035 42.33643293 72.04067035 42.33643293 60 36 C58.57223477 35.68181232 57.13255211 35.41461527 55.6875 35.1875 C45.28730474 33.20870179 35.4902159 29.71774428 26.3671875 24.33203125 C23.99648114 22.92924646 23.99648114 22.92924646 21.2890625 21.91796875 C18.83565832 20.93409506 17.83940307 19.83940307 16 18 C14.34561387 17.30341637 12.67745682 16.63903117 11 16 C8.1875 14.5 8.1875 14.5 6 13 C6 12.34 6 11.68 6 11 C4.9790625 10.6596875 4.9790625 10.6596875 3.9375 10.3125 C0.20385676 8.64427643 -2.72163421 6.44270392 -6 4 C-3.99967627 2.99983813 -2.16874252 2.50603992 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#8C6D3D\",transform:\"translate(378,530)\"})),_path45||(_path45=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C24.76 4 48.52 4 73 4 C73 4.66 73 5.32 73 6 C51.88 6 30.76 6 9 6 C11.76148156 8.16591371 11.76148156 8.16591371 14.5625 8.3125 C15.366875 8.539375 16.17125 8.76625 17 9 C18.125 11.5 18.125 11.5 19 14 C19.99 14.33 20.98 14.66 22 15 C22 16.32 22 17.64 22 19 C22.66 19 23.32 19 24 19 C24.804375 19.825 25.60875 20.65 26.4375 21.5 C28.76122416 24.34916193 28.76122416 24.34916193 32 24 C32.38091797 24.81404297 32.38091797 24.81404297 32.76953125 25.64453125 C33.11371094 26.35996094 33.45789063 27.07539062 33.8125 27.8125 C34.14894531 28.52019531 34.48539062 29.22789062 34.83203125 29.95703125 C35.91036937 32.05191723 35.91036937 32.05191723 37.609375 33.60546875 C39 35 39 35 39.4375 37.5 C39 40 39 40 37 41.8125 C36.34 42.204375 35.68 42.59625 35 43 C35.2475 41.0509375 35.2475 41.0509375 35.5 39.0625 C35.54474657 33.41548316 32.79771033 30.689401 29.04296875 26.75 C27.02505852 24.79890554 27.02505852 24.79890554 24 24 C24.103125 24.886875 24.20625 25.77375 24.3125 26.6875 C23.90156457 31.04341554 22.25139472 32.21309024 19 35 C18.34 35.66 17.68 36.32 17 37 C13.875 37.125 13.875 37.125 11 37 C11.66 38.65 12.32 40.3 13 42 C11.0625 41.375 11.0625 41.375 9 40 C8.87625 39.030625 8.7525 38.06125 8.625 37.0625 C8.41875 36.051875 8.2125 35.04125 8 34 C5.13343033 32.31668061 5.13343033 32.31668061 2 31 C-0.1521883 28.62517153 -0.9783724 27.06488281 -2 24 C-2.66 24 -3.32 24 -4 24 C-3.79794579 19.65583449 -3.34484946 18.31550057 -0.0625 15.3125 C0.948125 14.549375 1.95875 13.78625 3 13 C3.66 12.01 4.32 11.02 5 10 C5.66 10 6.32 10 7 10 C6.67 8.35 6.34 6.7 6 5 C4.35 5.66 2.7 6.32 1 7 C0 6 0 6 -0.0625 2.9375 C-0.041875 1.968125 -0.02125 0.99875 0 0 Z \",fill:\"#3E3422\",transform:\"translate(263,488)\"})),_path46||(_path46=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.87841747 0.72517016 7.23838043 3.7116375 10.359375 7.30078125 C13.06307498 11.74901146 12.67618979 15.97553422 12 21 C12.81984375 21.02578125 13.6396875 21.0515625 14.484375 21.078125 C15.56203125 21.13484375 16.6396875 21.1915625 17.75 21.25 C18.81734375 21.29640625 19.8846875 21.3428125 20.984375 21.390625 C24.57256648 22.11569996 25.80917362 23.11042085 28 26 C28.31452272 29.14522722 28.42041821 31.15916359 27 34 C19.57142857 34.28571429 19.57142857 34.28571429 16 32 C16 32.99 16 33.98 16 35 C18.31 35.66 20.62 36.32 23 37 C23 37.99 23 38.98 23 40 C15.06673638 41.59010948 15.06673638 41.59010948 11.0625 39.375 C8.97114833 36.96677687 7.92715653 35.03433045 7 32 C6.01 32.66 5.02 33.32 4 34 C4 33.01 4 32.02 4 31 C3.01 31.33 2.02 31.66 1 32 C1 30.68 1 29.36 1 28 C0.319375 27.95875 -0.36125 27.9175 -1.0625 27.875 C-5.3008994 26.61249805 -8.18458501 24.40316915 -11 21 C-12.11565911 18.27446437 -12.54368382 15.94070428 -13 13 C-11.9275 12.773125 -10.855 12.54625 -9.75 12.3125 C-5.58706094 10.85547133 -4.49088535 9.50569049 -2 6 C-1.34 6 -0.68 6 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#52442F\",transform:\"translate(287,512)\"})),_path47||(_path47=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.3663634 0.72772723 5.98913464 2.77053664 8.671875 6.1171875 C12.52036751 11.57299158 12.54219495 17.55622152 12 24 C11 27.625 11 27.625 10 30 C9.34 30 8.68 30 8 30 C7.67 31.65 7.34 33.3 7 35 C5.515 35.495 5.515 35.495 4 36 C3.93941406 37.04800781 3.87882813 38.09601563 3.81640625 39.17578125 C3.73198262 40.55470048 3.64733553 41.93360605 3.5625 43.3125 C3.50352539 44.34793945 3.50352539 44.34793945 3.44335938 45.40429688 C3.25072585 48.47161535 2.97677283 51.06968152 2 54 C1.34 54 0.68 54 0 54 C-0.8320582 48.27959989 -1.12036664 42.77759884 -1 37 C-1.66 37 -2.32 37 -3 37 C-3 36.34 -3 35.68 -3 35 C-3.598125 34.9175 -4.19625 34.835 -4.8125 34.75 C-7.64685403 33.77822147 -8.4454043 32.51696446 -10 30 C-12.20129914 23.39610259 -11.6986654 16.08039929 -8.91796875 9.72265625 C-7.08878904 6.29002539 -5.49625053 3.54031269 -1.75 2.1875 C-1.1725 2.125625 -0.595 2.06375 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#C4A067\",transform:\"translate(602,298)\"})),_path48||(_path48=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C9.56664481 5.41847237 11.69650073 10.86625451 13.5625 16.5625 C13.77519531 17.21114014 13.98789062 17.85978027 14.20703125 18.52807617 C14.51833984 19.47904175 14.51833984 19.47904175 14.8359375 20.44921875 C16.11817174 24.36046346 17.40604238 28.20486282 19 32 C19.66 32.33 20.32 32.66 21 33 C21.07476562 32.46375 21.14953125 31.9275 21.2265625 31.375 C22.55516548 23.45548423 25.39426708 16.26847734 28.30859375 8.83007812 C28.96326757 7.09722681 29.54645764 5.337858 30.125 3.578125 C31 1 31 1 32 0 C34.31 0 36.62 0 39 0 C39 14.19 39 28.38 39 43 C36.69 43 34.38 43 32 43 C31.67 32.11 31.34 21.22 31 10 C29.948125 13.238125 28.89625 16.47625 27.8125 19.8125 C25.29977975 27.44721326 22.64732474 34.82300616 19 42 C18.01 42 17.02 42 16 42 C11.50063771 33.16196694 7.63974135 24.43680982 4.75 14.9375 C3.8425 11.988125 2.935 9.03875 2 6 C2 18.21 2 30.42 2 43 C1.01 43 0.02 43 -1 43 C-0.67 28.81 -0.34 14.62 0 0 Z \",fill:\"#C5A676\",transform:\"translate(283,419)\"})),_path49||(_path49=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.2864296 0.47626996 6.22104119 2.87367133 9 6 C14.04509651 12.58665378 14.52218984 18.9367746 14 27 C13.67 27.99 13.34 28.98 13 30 C12.34 30 11.68 30 11 30 C10.896875 30.763125 10.79375 31.52625 10.6875 32.3125 C9.95288806 35.18416484 9.3283935 36.23042094 7 38 C6.34 38 5.68 38 5 38 C4.13580777 40.59257669 3.82419068 42.34037707 3.68359375 45.01171875 C3.64169922 45.76904297 3.59980469 46.52636719 3.55664062 47.30664062 C3.51732422 48.09232422 3.47800781 48.87800781 3.4375 49.6875 C3.39431641 50.48478516 3.35113281 51.28207031 3.30664062 52.10351562 C3.20072632 54.06881447 3.09987449 56.03438496 3 58 C2.67 58 2.34 58 2 58 C2 55.69 2 53.38 2 51 C1.34 51 0.68 51 0 51 C0 46.38 0 41.76 0 37 C-1.32 36.34 -2.64 35.68 -4 35 C-8.72091794 29.36112579 -8.58924202 23.79114889 -8.390625 16.60546875 C-7.63843823 9.66278483 -4.54070089 5.18937245 0 0 Z \",fill:\"#B9955A\",transform:\"translate(360,298)\"})),_path50||(_path50=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.79151583 -0.08829061 7.58276165 -0.14081946 11.375 -0.1875 C12.96634766 -0.22520508 12.96634766 -0.22520508 14.58984375 -0.26367188 C22.37240842 -0.33529057 30.22022238 0.04992966 36.5625 5 C39.21309536 8.68778485 39.45719949 12.36236909 39.4140625 16.76953125 C38.92879581 19.38356222 38.27623366 20.30521013 36.3125 22.0625 C33.06078363 23.96444731 31.65790882 24.53792777 28 24 C28.16113281 23.28972656 28.32226562 22.57945312 28.48828125 21.84765625 C29.00207886 18.98843136 29.16731573 16.33999826 29.1875 13.4375 C29.20167969 12.50808594 29.21585937 11.57867187 29.23046875 10.62109375 C28.98980788 7.8840862 28.52485688 6.2742746 27 4 C21.73581171 2.42074351 16.54442402 3 11 3 C10.67 21.15 10.34 39.3 10 58 C7.36 58 4.72 58 2 58 C1.9845388 56.95430344 1.9845388 56.95430344 1.96876526 55.88748169 C1.87087547 49.32462134 1.76837326 42.76185125 1.66066074 36.19914436 C1.60544531 32.82501633 1.55202757 29.4508796 1.50268555 26.07666016 C1.44510333 22.19945734 1.38137434 18.3223977 1.31640625 14.4453125 C1.29969376 13.23070343 1.28298126 12.01609436 1.26576233 10.76467896 C1.24581711 9.64366791 1.22587189 8.52265686 1.20532227 7.36767578 C1.18977798 6.37728302 1.1742337 5.38689026 1.15821838 4.3664856 C1.15192022 1.98171457 1.15192022 1.98171457 0 0 Z \",fill:\"#D5B17A\",transform:\"translate(461,229)\"})),_path51||(_path51=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C28.38 0 56.76 0 86 0 C86 0.33 86 0.66 86 1 C76.1 1.495 76.1 1.495 66 2 C90.75 2.33 115.5 2.66 141 3 C141 4.32 141 5.64 141 7 C139.68 7.66 138.36 8.32 137 9 C137.66 7.35 138.32 5.7 139 4 C96.43 4 53.86 4 10 4 C10.87755899 6.26162958 10.87755899 6.26162958 13.5625 7.25 C23.02530696 12.067429 30.48473141 18.84477963 34 29 C34 29.99 34 30.98 34 32 C30.46997646 30.48136287 28.09153315 28.38135506 25.3125 25.75 C17.39109015 18.53503167 10.1943523 14.35510329 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#9E8153\",transform:\"translate(482,488)\"})),_path52||(_path52=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C7.67 6.93 7.34 13.86 7 21 C12.61 21 18.22 21 24 21 C24 14.07 24 7.14 24 0 C26.64 0 29.28 0 32 0 C32 14.19 32 28.38 32 43 C29.36 43 26.72 43 24 43 C24 36.07 24 29.14 24 22 C18.39 22 12.78 22 7 22 C7.33 28.93 7.66 35.86 8 43 C5.03 43 2.06 43 -1 43 C-0.67 28.81 -0.34 14.62 0 0 Z \",fill:\"#CBAB7A\",transform:\"translate(560,419)\"})),_path53||(_path53=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7 6.93 7 13.86 7 21 C12.61 21 18.22 21 24 21 C24 14.07 24 7.14 24 0 C26.31 0 28.62 0 31 0 C31 14.19 31 28.38 31 43 C28.69 43 26.38 43 24 43 C24 36.07 24 29.14 24 22 C18.39 22 12.78 22 7 22 C7 28.93 7 35.86 7 43 C4.69 43 2.38 43 0 43 C0 28.81 0 14.62 0 0 Z \",fill:\"#BCA174\",transform:\"translate(244,419)\"})),_path54||(_path54=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C14.96551724 0 14.96551724 0 19 3 C22.54527046 6.72909929 23.60743176 9.16965564 23.6875 14.3125 C23.52882441 20.3904648 22.02122981 23.40307533 17.7265625 27.609375 C11.94722968 32.26422225 10.10874745 30 0 30 C0 20.1 0 10.2 0 0 Z \",fill:\"#090704\",transform:\"translate(472,256)\"})),_path55||(_path55=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.48919922 1.485 4.48919922 1.485 4.98828125 3 C9.0216821 15.3366205 9.0216821 15.3366205 14 27.3125 C16.30007873 32.37267321 17.67153948 37.61570927 19 43 C16.36 43 13.72 43 11 43 C10.67 40.36 10.34 37.72 10 35 C3.4 35 -3.2 35 -10 35 C-10.33 37.64 -10.66 40.28 -11 43 C-11.99 43 -12.98 43 -14 43 C-12.77963244 36.45439216 -10.76523041 30.60898481 -8.30078125 24.4296875 C-6.58771184 19.91294592 -5.22779973 15.32059652 -3.89453125 10.6796875 C-3 8 -3 8 -1 5 C-0.61500109 3.34450469 -0.27206865 1.6777567 0 0 Z \",fill:\"#AA926B\",transform:\"translate(344,419)\"})),_path56||(_path56=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-3.95 4.98 -3.95 4.98 -9 7 C10.8 7.495 10.8 7.495 31 8 C31 8.33 31 8.66 31 9 C-25.78371631 9.04573229 -82.5674308 9.08099622 -139.35116189 9.10213066 C-146.0480728 9.10463221 -152.74498368 9.10721852 -159.44189453 9.10986328 C-160.44155202 9.11025556 -160.44155202 9.11025556 -161.4614046 9.11065576 C-183.07923763 9.11918497 -204.69706024 9.13421243 -226.31488695 9.15259444 C-249.15096509 9.17197718 -271.98703864 9.18398794 -294.823125 9.18817699 C-308.51034094 9.19092745 -322.19752696 9.19962866 -335.88473369 9.21583293 C-345.2580672 9.22636779 -354.63138513 9.22960861 -364.00472413 9.22700275 C-369.42055508 9.22571598 -374.83633357 9.22775112 -380.2521553 9.23841095 C-385.20278608 9.24808455 -390.15332871 9.24867361 -395.10396339 9.24179779 C-396.90210459 9.24094696 -398.70025112 9.24353376 -400.49838172 9.24976636 C-402.92855044 9.25770502 -405.35839414 9.25352038 -407.78855705 9.24609566 C-408.85398311 9.2539767 -408.85398311 9.2539767 -409.94093293 9.26201695 C-414.7717084 9.2282916 -414.7717084 9.2282916 -417 7 C-416.01509236 7.00092179 -415.03018473 7.00184359 -414.0154314 7.00279331 C-390.06295207 7.02498174 -366.11047407 7.04142048 -342.15798664 7.05181217 C-330.57480314 7.05697094 -318.99162642 7.06400568 -307.40844727 7.07543945 C-297.31388809 7.08539907 -287.21933382 7.09185648 -277.12476987 7.09408849 C-271.77859622 7.09539342 -266.43243662 7.09846557 -261.08626747 7.10573006 C-256.05571159 7.11251039 -251.02517557 7.11461283 -245.99461555 7.11310768 C-244.14711143 7.1133831 -242.29960665 7.11537629 -240.45210648 7.11920547 C-237.93149151 7.12417412 -235.41095175 7.12298652 -232.89033508 7.12025452 C-232.15783722 7.12316736 -231.42533935 7.1260802 -230.67064458 7.12908131 C-226.97756139 7.11824828 -223.59739542 6.82457706 -220 6 C-217.65362952 5.97311851 -215.33230338 6.06166793 -212.98828125 6.16015625 C-210.76519753 6.19723105 -210.76519753 6.19723105 -209 4 C-209.99 3.505 -209.99 3.505 -211 3 C-211 2.34 -211 1.68 -211 1 C-210.41299316 1.13712402 -209.82598633 1.27424805 -209.22119141 1.41552734 C-202.58544369 2.86632597 -196.15389857 3.40778563 -189.375 3.625 C-188.37082031 3.66367187 -187.36664063 3.70234375 -186.33203125 3.7421875 C-183.88818995 3.83528622 -181.44433404 3.92110913 -179 4 C-179 4.33 -179 4.66 -179 5 C-182.96 5 -186.92 5 -191 5 C-191 5.99 -191 6.98 -191 8 C-132.26 7.67 -73.52 7.34 -13 7 C-12.67 6.34 -12.34 5.68 -12 5 C-13.32 5 -14.64 5 -16 5 C-15.67 4.34 -15.34 3.68 -15 3 C-10.38 3 -5.76 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#876D42\",transform:\"translate(673,382)\"})),_path57||(_path57=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.79725937 -0.06661859 7.29278608 -0.11228492 11.05078125 0.484375 C14.2736845 0.90516949 17.29975273 1.1041356 20.5390625 1.17578125 C22.02792969 1.21155273 22.02792969 1.21155273 23.546875 1.24804688 C25.60655638 1.29117472 27.66652154 1.32233805 29.7265625 1.34179688 C34.16651058 1.4660923 37.23736101 1.59685101 41.20703125 3.6953125 C43.46565294 6.59855171 43.42152406 7.94766874 43.0625 11.5625 C42.70378604 14.38701858 42.70378604 14.38701858 43 17 C44.94776285 18.66798199 44.94776285 18.66798199 47 20 C47 20.99 47 21.98 47 23 C39.08 23 31.16 23 23 23 C23.66 21.68 24.32 20.36 25 19 C25.66 19 26.32 19 27 19 C26.505 12.565 26.505 12.565 26 6 C24.68 5.67 23.36 5.34 22 5 C22 5.66 22 6.32 22 7 C21.01 7.495 21.01 7.495 20 8 C19.31270746 10.11846285 19.31270746 10.11846285 18.875 12.5625 C18.70742188 13.38878906 18.53984375 14.21507812 18.3671875 15.06640625 C18.24601562 15.70449219 18.12484375 16.34257813 18 17 C16.02 17 14.04 17 12 17 C12.33 13.04 12.66 9.08 13 5 C12.01 5 11.02 5 10 5 C10.04125 6.093125 10.0825 7.18625 10.125 8.3125 C10 12 10 12 8 15 C8 11.37 8 7.74 8 4 C7.34 4 6.68 4 6 4 C5.97314062 6.14576637 5.95366912 8.29162645 5.9375 10.4375 C5.92589844 11.63246094 5.91429687 12.82742188 5.90234375 14.05859375 C5.66098208 16.88873341 5.66098208 16.88873341 7 18 C9.67058851 18.14115161 12.32432238 18.04247107 15 18 C15 18.99 15 19.98 15 21 C11.7 21 8.4 21 5 21 C5 20.34 5 19.68 5 19 C4.34 19 3.68 19 3 19 C1.54144503 16.08289006 1.68750029 13.30692468 1.5 10.0625 C1.21849611 4.94190165 1.21849611 4.94190165 0 0 Z \",fill:\"#B0976C\",transform:\"translate(443,599)\"})),_path58||(_path58=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C19 0 19 0 23 1 C23 1.66 23 2.32 23 3 C23.78375 3.226875 24.5675 3.45375 25.375 3.6875 C28 5 28 5 29.375 7.125 C30.45703795 12.10237457 29.73226829 16.27916952 27.75 20.9375 C26 23 26 23 23.3125 23.8125 C22.549375 23.874375 21.78625 23.93625 21 24 C21.495 24.78375 21.99 25.5675 22.5 26.375 C24 29 24 29 24 31 C24.66 31 25.32 31 26 31 C26.67154933 32.28913487 27.33708859 33.58140204 28 34.875 C28.37125 35.59429687 28.7425 36.31359375 29.125 37.0546875 C30 39 30 39 30 41 C30.66 41 31.32 41 32 41 C32 41.66 32 42.32 32 43 C29.36 43 26.72 43 24 43 C23.69707031 42.35933594 23.39414063 41.71867187 23.08203125 41.05859375 C21.02987145 36.82167305 18.99344019 32.79202775 16.1875 29 C14 26 14 26 14 24 C14.94875 23.566875 15.8975 23.13375 16.875 22.6875 C20.20041937 21.20697799 20.20041937 21.20697799 22 18 C22.45772063 15.26127045 22.45772063 15.26127045 22.625 12.3125 C22.69976562 11.31863281 22.77453125 10.32476562 22.8515625 9.30078125 C22.90054688 8.54152344 22.94953125 7.78226562 23 7 C22.34 7 21.68 7 21 7 C20.505 6.360625 20.01 5.72125 19.5 5.0625 C16.2454472 1.98781989 16.2454472 1.98781989 7 2 C7.33 15.53 7.66 29.06 8 43 C5.36 43 2.72 43 0 43 C0 28.81 0 14.62 0 0 Z \",fill:\"#C9AD7F\",transform:\"translate(163,419)\"})),_path59||(_path59=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.26611328 1.48193359 3.26611328 1.48193359 4.6953125 3.5234375 C7.82561025 7.83447824 11.23790657 11.7379068 14.875 15.625 C15.73544922 16.56859375 15.73544922 16.56859375 16.61328125 17.53125 C20.20670325 21.38877652 23.94236353 24.64208799 28.23193359 27.70874023 C30 29 30 29 32.75 31.4375 C40.09507891 37.56505224 48.17635043 42.63152033 58 42 C61.52659694 41.28161914 63.31931508 40.68355701 65.8515625 38.140625 C68.09026401 35.91006422 70.39106663 34.21523356 73 32.4375 C75.44332009 30.76516659 77.8570478 29.11206431 80.1875 27.28515625 C82 26 82 26 84 26 C84.37125 25.13375 84.37125 25.13375 84.75 24.25 C86.18299988 21.67060021 87.78424676 19.93878408 90 18 C90.66 18 91.32 18 92 18 C92.2371875 17.43796875 92.474375 16.8759375 92.71875 16.296875 C94.28947697 13.48105958 96.21471464 11.52044584 98.5 9.25 C99.2940625 8.45078125 100.088125 7.6515625 100.90625 6.828125 C103 5 103 5 105 5 C103.52658145 9.62705125 100.84404939 12.85337022 97.6875 16.4375 C96.73287303 17.54019157 95.7784449 18.64305531 94.82421875 19.74609375 C94.3554834 20.28089355 93.88674805 20.81569336 93.40380859 21.36669922 C91.98481526 23.01766712 90.6291839 24.71021623 89.26953125 26.41015625 C88.52058594 27.26480469 87.77164063 28.11945313 87 29 C86.34 29 85.68 29 85 29 C85 29.66 85 30.32 85 31 C83.01493486 32.71342465 81.02995851 34.30279131 78.9375 35.875 C78.37611328 36.30941406 77.81472656 36.74382812 77.23632812 37.19140625 C73.32345382 40.16966258 69.3065483 42.6278351 65 45 C64.29230469 45.41765625 63.58460938 45.8353125 62.85546875 46.265625 C58.22222222 49 58.22222222 49 56 49 C56 49.66 56 50.32 56 51 C51.5394232 50.413082 48.07707317 48.61730318 44.25 46.375 C43.63817871 46.02034668 43.02635742 45.66569336 42.39599609 45.30029297 C37.32510737 42.30416177 32.22600426 39.13656502 28 35 C28 34.34 28 33.68 28 33 C26.9790625 32.7215625 26.9790625 32.7215625 25.9375 32.4375 C20.06553389 29.56398467 16.16555253 25.13573216 14 19 C13.01 18.67 12.02 18.34 11 18 C7 12.62857143 7 12.62857143 7 10 C6.34 10 5.68 10 5 10 C4.67 8.68 4.34 7.36 4 6 C3.34 6 2.68 6 2 6 C1.34 4.02 0.68 2.04 0 0 Z \",fill:\"#77592A\",transform:\"translate(428,286)\"})),_path60||(_path60=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C20.41666667 0 20.41666667 0 26.6875 5.25 C32.11442409 11.70363946 32.58838117 17.31712902 32.4296875 25.61328125 C31.81576135 30.4521355 29.93139946 33.2513619 27 37 C26.73960937 37.68835938 26.47921875 38.37671875 26.2109375 39.0859375 C25 41 25 41 19 43 C12.73 43 6.46 43 0 43 C0 28.81 0 14.62 0 0 Z M7 2 C7 15.2 7 28.4 7 42 C14.9448078 42.2965829 14.9448078 42.2965829 20.5234375 38.578125 C25.38414864 33.38307923 25.29987837 27.14421252 25.4375 20.4375 C25.45997803 19.71723633 25.48245605 18.99697266 25.50561523 18.25488281 C25.48102011 12.74305228 24.17815379 9.5186756 21 5 C16.5 1 16.5 1 7 2 Z \",fill:\"#D0AD7A\",transform:\"translate(675,419)\"})),_path61||(_path61=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.11246094 -0.00515625 2.22492187 -0.0103125 3.37109375 -0.015625 C7.3621325 0.31655448 10.27870353 1.18754775 13.375 3.75 C14.5625 5.25 14.5625 5.25 14.5625 7.25 C15.2225 7.25 15.8825 7.25 16.5625 7.25 C18.43396543 11.9841418 18.8398593 16.21787898 18.75 21.25 C18.74935547 21.93578125 18.74871094 22.6215625 18.74804688 23.328125 C18.71309718 27.39782229 18.34229754 31.25743659 17.5625 35.25 C16.9025 35.25 16.2425 35.25 15.5625 35.25 C15.5625 35.91 15.5625 36.57 15.5625 37.25 C14.5725 37.91 13.5825 38.57 12.5625 39.25 C12.2325 40.24 11.9025 41.23 11.5625 42.25 C5.82693019 44.52032972 -0.38101036 45.45883391 -6.390625 43.66796875 C-11.81490975 41.08553753 -14.04917291 36.55441186 -16.4375 31.25 C-16.80617188 30.44175781 -17.17484375 29.63351562 -17.5546875 28.80078125 C-19.47938219 23.23960587 -19.34398788 16.69314366 -17.0625 11.25 C-15.4375 8.25 -15.4375 8.25 -13.4375 5.25 C-12.7775 5.25 -12.1175 5.25 -11.4375 5.25 C-11.1075 4.26 -10.7775 3.27 -10.4375 2.25 C-7.11195373 -0.09744443 -3.97976899 -0.01840356 0 0 Z M-7.5703125 5.8203125 C-10.54768942 11.12962099 -10.85717636 16.35820583 -10.9375 22.3125 C-10.95586914 23.06797119 -10.97423828 23.82344238 -10.99316406 24.60180664 C-10.92273741 31.08035477 -9.03752487 36.47664014 -4.5625 41.25 C-1.54326711 42.67081548 0.25507839 42.77918746 3.5625 42.25 C8.35000087 39.11971097 10.16752474 36.72011134 11.5625 31.25 C11.7493547 28.59831203 11.84963798 26.0827941 11.8125 23.4375 C11.80428223 22.73262451 11.79606445 22.02774902 11.78759766 21.30151367 C11.80881198 12.45458426 11.80881198 12.45458426 8.3046875 4.6015625 C5.82416834 2.25091345 3.794219 1.28707504 0.4375 0.75 C-3.6089077 1.45372308 -5.17091022 2.49424451 -7.5703125 5.8203125 Z \",fill:\"#A18960\",transform:\"translate(614.4375,418.75)\"})),_path62||(_path62=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.9375 0.8125 1.9375 0.8125 4 2 C4.33 2.99 4.66 3.98 5 5 C5.99 5.33 6.98 5.66 8 6 C9.68873879 7.64429829 11.35305515 9.31384218 13 11 C17.04326894 14.92434926 21.42206155 16.40633349 26.671875 18.16796875 C29 19 29 19 30 20 C38.46247572 21.37558762 43.95806199 18.34215347 51 14 C51.72832031 13.65195313 52.45664062 13.30390625 53.20703125 12.9453125 C55.83975332 11.55725424 57.15333607 9.32152036 59 7 C65.28235294 1 65.28235294 1 68 1 C66.3576964 11.97249215 58.73439995 18.57885186 50.25 25 C46.88485122 27.07086079 43.65970461 28.53611815 40 30 C39.505 30.495 39.505 30.495 39 31 C31.33133105 32.02248919 24.72781116 28.36390558 18 25 C18 24.34 18 23.68 18 23 C17.29875 22.814375 16.5975 22.62875 15.875 22.4375 C12.43692612 20.71846306 10.77052829 18.64240366 8.4296875 15.65625 C6.91075059 13.7473865 6.91075059 13.7473865 4 12 C2.83203125 9.6875 2.83203125 9.6875 1.8125 7 C1.46832031 6.113125 1.12414062 5.22625 0.76953125 4.3125 C0 2 0 2 0 0 Z \",fill:\"#896935\",transform:\"translate(448,139)\"})),_path63||(_path63=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.31453125 0.97839844 3.6290625 1.95679688 3.953125 2.96484375 C6.004482 9.27540835 8.07294515 15.45621689 10.890625 21.47265625 C12.46300502 25.05480369 13.8208029 28.71026621 15.1875 32.375 C15.44974365 33.07810303 15.7119873 33.78120605 15.98217773 34.50561523 C17.02793632 37.32558088 18.04884155 40.14652465 19 43 C16.03 43 13.06 43 10 43 C9.67 40.03 9.34 37.06 9 34 C-0.405 34.495 -0.405 34.495 -10 35 C-10.99 37.64 -11.98 40.28 -13 43 C-13.66 43 -14.32 43 -15 43 C-14.56766547 41.33198595 -14.12880988 39.66566192 -13.6875 38 C-13.44386719 37.071875 -13.20023438 36.14375 -12.94921875 35.1875 C-12.05132872 32.17236312 -10.99131114 29.25694259 -9.86743164 26.31982422 C-7.71070157 20.55195224 -5.77616108 14.69976891 -3.78515625 8.87304688 C-3.44097656 7.87466797 -3.09679687 6.87628906 -2.7421875 5.84765625 C-2.4313623 4.94023682 -2.12053711 4.03281738 -1.80029297 3.09790039 C-1 1 -1 1 0 0 Z \",fill:\"#BDA175\",transform:\"translate(218,419)\"})),_path64||(_path64=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.58007812 0.42152344 1.16015625 0.84304688 1.7578125 1.27734375 C7.81444492 5.53046009 7.81444492 5.53046009 15 7 C15 7.66 15 8.32 15 9 C15.72445313 8.95230469 16.44890625 8.90460938 17.1953125 8.85546875 C20.370229 9.01907865 22.0955059 9.8073107 24.875 11.3125 C28.85987322 13.41231343 32.83819031 15.28099165 37 17 C37 17.66 37 18.32 37 19 C37.556875 19.2475 38.11375 19.495 38.6875 19.75 C43.77056981 22.4976053 47.01596323 26.05662561 50.3125 30.75 C51.00988281 31.73484375 51.70726562 32.7196875 52.42578125 33.734375 C52.94527344 34.48203125 53.46476562 35.2296875 54 36 C53.505 36.99 53.505 36.99 53 38 C52.38511719 37.28972656 51.77023437 36.57945312 51.13671875 35.84765625 C50.32847656 34.92855469 49.52023437 34.00945312 48.6875 33.0625 C47.88699219 32.14597656 47.08648437 31.22945313 46.26171875 30.28515625 C44.13761078 27.79486024 44.13761078 27.79486024 41 27 C41 26.34 41 25.68 41 25 C36.87856943 23.42993121 33.40413729 22.23406308 29 23 C25.633025 26.45557961 24.76482512 29.18284957 24.75 33.875 C24.81358009 35.25105487 24.89014913 36.62686409 25 38 C27.39719432 38.67958603 27.39719432 38.67958603 30 39 C32.18331689 37.23863645 32.18331689 37.23863645 32.1953125 35.0546875 C32.17210937 34.33539063 32.14890625 33.61609375 32.125 32.875 C32.08375 31.59625 32.0425 30.3175 32 29 C33.32 29.66 34.64 30.32 36 31 C36.375 34.1875 36.375 34.1875 36 38 C32.71608448 41.76448853 31.25327112 42.80882305 26.3125 43.5625 C23 43 23 43 21.125 41.1875 C18.96582287 36.98910002 18.68241554 33.68437078 19 29 C20.64761569 24.79857998 22.6485882 22.00471403 26 19 C20.59464656 18.81033848 16.0448548 18.79860881 11 21 C8.9883279 23.00349457 7.22284601 25.07954357 5.48046875 27.3203125 C4.99191406 27.87460937 4.50335938 28.42890625 4 29 C3.34 29 2.68 29 2 29 C2 29.99 2 30.98 2 32 C0.515 32.495 0.515 32.495 -1 33 C-1.28883414 28.93465943 -0.57875609 26.66941645 1.5 23.1875 C1.9640625 22.39730469 2.428125 21.60710937 2.90625 20.79296875 C3.2671875 20.20128906 3.628125 19.60960937 4 19 C4.66 19 5.32 19 6 19 C6 18.34 6 17.68 6 17 C10.38461538 14 10.38461538 14 13 14 C13 13.34 13 12.68 13 12 C11.96875 11.814375 10.9375 11.62875 9.875 11.4375 C5.25504834 10.13902071 2.45423192 7.03644737 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#8C7349\",transform:\"translate(373,269)\"})),_path65||(_path65=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.96073233 1.48036616 5.4592685 2.9066041 8.16015625 4.7578125 C9.34387817 5.56677979 9.34387817 5.56677979 10.55151367 6.39208984 C13.93147749 8.72470853 17.30612992 11.06492487 20.67871094 13.40820312 C22.6649058 14.77021306 24.6681337 16.09094643 26.6953125 17.390625 C33.77522631 22.08592032 33.77522631 22.08592032 34.9375 26.8125 C34 30 34 30 32.125 31.9375 C30 33 30 33 28 33 C28.495 37.455 28.495 37.455 29 42 C25.04864798 41.012162 21.65354588 39.79230553 18 38 C17.67 37.01 17.34 36.02 17 35 C15.515 34.505 15.515 34.505 14 34 C12.515 33.505 12.515 33.505 11 33 C10.505 31.515 10.505 31.515 10 30 C11.65 30 13.3 30 15 30 C15.103125 29.2575 15.20625 28.515 15.3125 27.75 C16 25 16 25 17.5625 23.0625 C19.48599498 20.30270285 19.22407551 18.28644085 19 15 C16.69 15 14.38 15 12 15 C11.731875 15.556875 11.46375 16.11375 11.1875 16.6875 C10.795625 17.450625 10.40375 18.21375 10 19 C9.62875 19.9075 9.2575 20.815 8.875 21.75 C7 24 7 24 5.1328125 24.38671875 C1.14203924 24.48173716 -0.57200004 24.28533331 -4 22 C-4 21.34 -4 20.68 -4 20 C-0.04 19.505 -0.04 19.505 4 19 C4.433125 17.88625 4.433125 17.88625 4.875 16.75 C5.82302644 14.43260203 6.84845911 12.22082885 8 10 C7.608125 10.391875 7.21625 10.78375 6.8125 11.1875 C4.54166667 13.45833333 2.27083333 15.72916667 0 18 C0.57634139 13.24518354 2.55068521 10.02951788 5 6 C4.21625 6.825 3.4325 7.65 2.625 8.5 C0 11 0 11 -2 11 C-1.34 7.37 -0.68 3.74 0 0 Z \",fill:\"#A78E64\",transform:\"translate(321,545)\"})),_path66||(_path66=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.00853989 1.13197571 5.09095568 2.3896741 7 5 C7.625 8.6875 7.625 8.6875 7 12 C4 14 4 14 0 14 C-0.33 10.37 -0.66 6.74 -1 3 C-4.94348569 2.79948378 -8.04058078 2.70151402 -11.8125 3.875 C-16.86219962 8.78042249 -17.18739102 15.9003921 -17.3125 22.625 C-17.17359239 27.74042373 -16.81109083 32.2006093 -15 37 C-13.08235826 38.3762794 -13.08235826 38.3762794 -11 39 C-10.34 39.99 -9.68 40.98 -9 42 C-3.51106402 42.44991279 -1.28475833 42.11390333 4 40 C4 35.38 4 30.76 4 26 C1.03 26 -1.94 26 -5 26 C-5 25.34 -5 24.68 -5 24 C0.28 24 5.56 24 11 24 C11 30.6 11 37.2 11 44 C8.36 43.67 5.72 43.34 3 43 C0.81705637 43.84359624 0.81705637 43.84359624 -1 45 C-7.79223708 45.97844621 -12.50758567 45.0643866 -18 41 C-23.44312187 35.70807596 -25.14904589 28.84263244 -25.375 21.4375 C-25.16554752 14.92625976 -23.84822495 10.18868744 -19.625 5.1875 C-13.23825461 -0.13478783 -8.21976461 -1.13862175 0 0 Z \",fill:\"#C7A877\",transform:\"translate(793,418)\"})),_path67||(_path67=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.99 2 2.98 2 4 2 C4.33 2.99 4.66 3.98 5 5 C5.55349121 5.0093457 6.10698242 5.01869141 6.67724609 5.02832031 C20.31116279 5.31773956 31.12250129 6.01424019 42 15 C42 15.66 42 16.32 42 17 C41.401875 16.835 40.80375 16.67 40.1875 16.5 C37.88655664 15.8885876 37.88655664 15.8885876 35 16 C35.72445312 16.54527344 36.44890625 17.09054687 37.1953125 17.65234375 C43.24284386 22.36941821 48.76559498 26.89229514 52 34 C52.375 37.5625 52.375 37.5625 52 40 C51 38.66666667 50 37.33333333 49 36 C48.443125 35.29875 47.88625 34.5975 47.3125 33.875 C46 32 46 32 46 30 C45.443125 29.731875 44.88625 29.46375 44.3125 29.1875 C41.8027573 27.89871321 39.4130541 26.46053274 37 25 C34.30298183 23.65149091 32.01235081 23.81183052 29 23.6875 C21.4349397 23.16750694 15.3051881 21.20345873 9 17 C9 16.34 9 15.68 9 15 C12.63 15.66 16.26 16.32 20 17 C19.02160156 16.69707031 18.04320312 16.39414062 17.03515625 16.08203125 C9.56725581 13.71467156 2.6565945 11.2392946 -4 7 C-3.30621489 3.73988358 -2.54106009 2.20961747 0 0 Z \",fill:\"#B4925A\",transform:\"translate(391,514)\"})),_path68||(_path68=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.29808594 -0.00773437 2.59617187 -0.01546875 3.93359375 -0.0234375 C7.70920441 0.39110748 9.62622369 1.00297081 12.5625 3.375 C13.625 6.8125 13.625 6.8125 13.5625 10.375 C11.875 12.8125 11.875 12.8125 9.5625 14.375 C8.2425 14.375 6.9225 14.375 5.5625 14.375 C5.2325 10.745 4.9025 7.115 4.5625 3.375 C-1.08253554 2.2782702 -1.08253554 2.2782702 -6.4375 4.375 C-6.4375 7.345 -6.4375 10.315 -6.4375 13.375 C-4.06301803 14.56224098 -1.68721855 15.74686234 0.69140625 16.92578125 C1.82449219 17.50714844 2.95757813 18.08851563 4.125 18.6875 C5.26066406 19.26113281 6.39632812 19.83476562 7.56640625 20.42578125 C10.7381118 22.4892507 11.93379423 24.01339517 13.5625 27.375 C13.8925 28.035 14.2225 28.695 14.5625 29.375 C15.42856085 35.87045634 15.42856085 35.87045634 13.4921875 39.234375 C10.63706516 42.24731817 8.35416557 43.26283193 4.2265625 43.84765625 C-2.27338167 44.00703654 -7.83327124 43.81395856 -13.4375 40.375 C-15.75317384 36.90148925 -16.03337577 35.46100528 -15.4375 31.375 C-12.58675356 29.06358396 -11.1235549 28.375 -7.4375 28.375 C-7.47230469 29.29732422 -7.47230469 29.29732422 -7.5078125 30.23828125 C-7.52585937 31.04652344 -7.54390625 31.85476563 -7.5625 32.6875 C-7.59730469 33.88826172 -7.59730469 33.88826172 -7.6328125 35.11328125 C-7.59567322 37.65888576 -7.59567322 37.65888576 -5.4375 40.375 C-1.50580385 41.57424323 2.28446415 41.8737457 6.125 40.375 C8.34823005 37.28181037 8.08190654 35.0757716 7.5625 31.375 C4.37740805 27.01024436 0.36748001 25.86095616 -4.6875 24.5 C-5.595 24.12875 -6.5025 23.7575 -7.4375 23.375 C-8.3125 21.25 -8.3125 21.25 -8.4375 19.375 C-9.0975 19.375 -9.7575 19.375 -10.4375 19.375 C-12.05078125 18.23046875 -12.05078125 18.23046875 -13.4375 16.375 C-13.73046875 13.67578125 -13.73046875 13.67578125 -13.625 10.6875 C-13.59792969 9.69363281 -13.57085938 8.69976562 -13.54296875 7.67578125 C-13.50816406 6.91652344 -13.47335937 6.15726562 -13.4375 5.375 C-12.7775 5.375 -12.1175 5.375 -11.4375 5.375 C-11.4375 4.715 -11.4375 4.055 -11.4375 3.375 C-8.01686811 -0.19359815 -4.76402782 -0.0283292 0 0 Z \",fill:\"#BEA273\",transform:\"translate(826.4375,418.625)\"})),_path69||(_path69=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.68906064 1.35196195 9.68906064 1.35196195 13.1875 5.75 C17.78786016 13.99892167 18.13768248 22.16873559 16 31.3125 C14.20242373 36.74843978 10.77565327 39.15001337 6 42 C5.01 42.66 4.02 43.32 3 44 C-2.59250394 44.82023391 -7.27107498 44.22426706 -12 41 C-18.83170462 33.85054167 -20.49530515 28.11492998 -20.30078125 18.4296875 C-19.85203322 13.31279438 -18.28573599 9.57147198 -16 5 C-15.34 5 -14.68 5 -14 5 C-13.67 4.01 -13.34 3.02 -13 2 C-9.535 1.505 -9.535 1.505 -6 1 C-6.928125 2.0209375 -6.928125 2.0209375 -7.875 3.0625 C-13.31920563 10.58831366 -12.72468583 20.12041578 -12 29 C-10.70317429 34.21924435 -9.54828683 37.96780878 -5 41 C-1.37343718 41.47302993 0.47544992 41.29277214 3.6875 39.5 C9.24579538 33.49103202 9.44698046 27.0313892 9.2109375 19.1875 C8.92145124 11.57304052 8.92145124 11.57304052 5.30859375 5.15234375 C3.41567743 3.49381737 3.41567743 3.49381737 1.4609375 2.09375 C0.97882813 1.7328125 0.49671875 1.371875 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#CAAA78\",transform:\"translate(472,419)\"})),_path70||(_path70=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 1.98 -0.66 3.96 -1 6 C-0.01 6 0.98 6 2 6 C2 5.34 2 4.68 2 4 C12.37357631 0.55580866 12.37357631 0.55580866 18 1 C16.6875 2.5 16.6875 2.5 15 4 C14.01 4 13.02 4 12 4 C12 4.66 12 5.32 12 6 C10 7.625 10 7.625 8 9 C9.11375 8.835 10.2275 8.67 11.375 8.5 C23.875 6.9375 23.875 6.9375 28 9 C28 9.66 28 10.32 28 11 C28.7425 11.2475 29.485 11.495 30.25 11.75 C33.27490317 13.12495599 34.98280015 14.36212327 37 17 C36.75 19.25 36.75 19.25 36 21 C34.35 20.67 32.7 20.34 31 20 C31 19.34 31 18.68 31 18 C30.01 17.67 29.02 17.34 28 17 C28 16.34 28 15.68 28 15 C26.02 14.67 24.04 14.34 22 14 C22 14.66 22 15.32 22 16 C21.46375 15.96519531 20.9275 15.93039062 20.375 15.89453125 C14.55646489 15.69356211 9.13452591 16.36007989 3.4375 17.4375 C2.72271484 17.57196533 2.00792969 17.70643066 1.27148438 17.8449707 C-2.15396141 18.29728396 -2.15396141 18.29728396 -5 20 C-6.84891946 20.23363881 -8.70488031 20.41303635 -10.5625 20.5625 C-12.08037109 20.68818359 -12.08037109 20.68818359 -13.62890625 20.81640625 C-14.41136719 20.87699219 -15.19382812 20.93757812 -16 21 C-14.02 18.03 -12.04 15.06 -10 12 C-13.52381687 14.54604597 -13.52381687 14.54604597 -16 18 C-16.66 18 -17.32 18 -18 18 C-17.11079249 11.43354453 -13.00164247 7.5483332 -8.0859375 3.375 C-3.57954545 0 -3.57954545 0 0 0 Z \",fill:\"#9F7B42\",transform:\"translate(540,500)\"})),_path71||(_path71=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.38331742 5.22586581 -4.67866461 8.03858796 -9 11 C-12.4375 12.375 -12.4375 12.375 -15 13 C-13.30677659 16.26034685 -13.30677659 16.26034685 -10.125 16.75 C-5.82169918 18.47132033 -4.88889486 20.94977352 -3 25 C-2.5875 25.7425 -2.175 26.485 -1.75 27.25 C-1 29 -1 29 -1 32 C-1.66 32 -2.32 32 -3 32 C-3.2475 31.401875 -3.495 30.80375 -3.75 30.1875 C-5.16444091 27.71222841 -6.72860188 26.66569196 -9 25 C-9 24.34 -9 23.68 -9 23 C-13.45460877 20.69589202 -17.18504144 19.81402914 -22.1875 19.4375 C-23.27417969 19.35371094 -24.36085938 19.26992188 -25.48046875 19.18359375 C-26.31191406 19.12300781 -27.14335938 19.06242187 -28 19 C-27.36771484 19.72316406 -27.36771484 19.72316406 -26.72265625 20.4609375 C-26.17480469 21.09257812 -25.62695312 21.72421875 -25.0625 22.375 C-24.51722656 23.00148438 -23.97195313 23.62796875 -23.41015625 24.2734375 C-19.87911369 28.59676385 -20.60044546 33.66748367 -21 39 C-22 42.1875 -22 42.1875 -24 44 C-28.92242444 44.79393943 -30.843766 44.77082267 -35 42 C-37.68652977 37.97020535 -37.40344574 35.76065969 -37 31 C-35.68 30.67 -34.36 30.34 -33 30 C-33 32.97 -33 35.94 -33 39 C-31.0085944 39.38133299 -29.00720923 39.71325582 -27 40 C-25.71387324 38.94021067 -25.71387324 38.94021067 -25.90234375 36.49609375 C-25.91394531 35.48675781 -25.92554688 34.47742188 -25.9375 33.4375 C-25.94652344 32.42558594 -25.95554687 31.41367187 -25.96484375 30.37109375 C-25.97644531 29.58863281 -25.98804688 28.80617188 -26 28 C-26.66 28 -27.32 28 -28 28 C-28.37125 27.360625 -28.7425 26.72125 -29.125 26.0625 C-32.0125068 22.88624252 -34.80002643 23.2754081 -39 23 C-39 23.66 -39 24.32 -39 25 C-40.32 25.33 -41.64 25.66 -43 26 C-43 26.66 -43 27.32 -43 28 C-44.64453125 29.65625 -44.64453125 29.65625 -46.8125 31.5 C-47.52019531 32.1084375 -48.22789062 32.716875 -48.95703125 33.34375 C-51 35 -51 35 -54 37 C-52.7580393 33.56072421 -51.44259716 30.74792181 -49 28 C-48.34 28 -47.68 28 -47 28 C-46.74347656 27.4121875 -46.48695313 26.824375 -46.22265625 26.21875 C-42.5037222 19.47001345 -35.15128812 15.26609289 -28 13 C-24.35194057 12.17304352 -20.70281327 11.52600712 -17 11 C-17 10.34 -17 9.68 -17 9 C-15.37750059 8.16180842 -13.75191503 7.3295884 -12.125 6.5 C-11.22007812 6.0359375 -10.31515625 5.571875 -9.3828125 5.09375 C-7 4 -7 4 -5 4 C-5 3.34 -5 2.68 -5 2 C-2 0 -2 0 0 0 Z \",fill:\"#816538\",transform:\"translate(593,268)\"})),_path72||(_path72=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.97805311 1.63880917 2.91505716 2.51226372 3.36328125 5.0859375 C3.26586411 9.47720263 3.06047811 13.00782367 1 17 C0.34 17 -0.32 17 -1 17 C-1.37511719 17.89332031 -1.37511719 17.89332031 -1.7578125 18.8046875 C-3.17178592 21.3035965 -4.55685314 22.45418472 -6.875 24.125 C-7.55304687 24.62257813 -8.23109375 25.12015625 -8.9296875 25.6328125 C-10.8975595 26.93235061 -12.86853684 27.99639627 -15 29 C-15 29.66 -15 30.32 -15 31 C-15.66 31.33 -16.32 31.66 -17 32 C-19.7584126 37.29615218 -20.61026207 42.07329556 -21 48 C-21.33 48 -21.66 48 -22 48 C-22.22307542 45.7722603 -22.42788178 43.54268636 -22.625 41.3125 C-22.74101563 40.07113281 -22.85703125 38.82976562 -22.9765625 37.55078125 C-22.99980498 34.02954595 -22.63112413 32.07916291 -21 29 C-19 27 -19 27 -17 26.6875 C-14.7512822 26.17270733 -14.7512822 26.17270733 -13.8125 23.6875 C-13.14095534 21.46623689 -12.50332588 19.26496646 -12 17 C-13.98 17.66 -15.96 18.32 -18 19 C-18.33 18.67 -18.66 18.34 -19 18 C-24.00028314 19.34153938 -28.19067503 21.48370003 -32 25 C-32 25.66 -32 26.32 -32 27 C-32.763125 27.391875 -33.52625 27.78375 -34.3125 28.1875 C-37.87962552 30.59323582 -38.6379499 32.98553656 -40 37 C-40 37.99 -40 38.98 -40 40 C-39.01 40.33 -38.02 40.66 -37 41 C-37.02320313 42.12535156 -37.04640625 43.25070312 -37.0703125 44.41015625 C-37.21139043 54.48179804 -36.64282834 64.05502128 -35 74 C-37.47372477 72.17159474 -37.9912633 71.03839156 -38.68359375 67.99609375 C-39.20446514 63.03410838 -39.10677421 58.04505175 -39.0625 53.0625 C-39.05798828 52.09248047 -39.05347656 51.12246094 -39.04882812 50.12304688 C-39.0371315 47.7486324 -39.02074086 45.37434979 -39 43 C-39.66 43 -40.32 43 -41 43 C-42.15570704 46.46712111 -42.32835293 49.5414956 -42.5625 53.1875 C-42.68818359 55.09595703 -42.68818359 55.09595703 -42.81640625 57.04296875 C-42.90728516 58.50669922 -42.90728516 58.50669922 -43 60 C-45 59 -45 59 -45.6015625 57.37890625 C-47.34677984 46.95893216 -46.34354027 38.17943882 -41 29 C-40.34 29 -39.68 29 -39 29 C-39 28.34 -39 27.68 -39 27 C-38.34 27 -37.68 27 -37 27 C-36.773125 26.4225 -36.54625 25.845 -36.3125 25.25 C-32.58648375 18.86254357 -25.70955421 17.01196806 -19 15 C-16.39596931 14.41068612 -13.78873562 13.90540804 -11.1640625 13.41796875 C-8.52374243 12.90801524 -6.32454563 12.38019897 -4 11 C-2.70957237 8.73398135 -2.70957237 8.73398135 -2 6 C-1.62875 4.906875 -1.2575 3.81375 -0.875 2.6875 C-0.58625 1.800625 -0.2975 0.91375 0 0 Z \",fill:\"#9A7539\",transform:\"translate(695,261)\"})),_path73||(_path73=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 3 2 3 2 5 C2.928125 5.020625 3.85625 5.04125 4.8125 5.0625 C5.864375 5.371875 6.91625 5.68125 8 6 C9.01529541 8.32671865 10.01488198 10.6603447 11 13 C13.97187717 14.46358065 13.97187717 14.46358065 17 15 C17.66 15.33 18.32 15.66 19 16 C19 16.66 19 17.32 19 18 C19.515625 18.2475 20.03125 18.495 20.5625 18.75 C23.77184151 20.39581616 26.87585664 22.1976096 30 24 C30 24.66 30 25.32 30 26 C30.66 26 31.32 26 32 26 C32 26.66 32 27.32 32 28 C33.32 27.67 34.64 27.34 36 27 C36.0825 27.61875 36.165 28.2375 36.25 28.875 C36.80603954 31.13472902 36.80603954 31.13472902 38.8125 32.1875 C40.95803787 33.04747564 40.95803787 33.04747564 43.125 33.4375 C45 34 45 34 47 37 C46.67 37.99 46.34 38.98 46 40 C45.34386719 39.45988281 44.68773437 38.91976562 44.01171875 38.36328125 C40.36741576 35.50361419 36.60522057 32.84538089 32.8125 30.1875 C32.06234619 29.65995117 31.31219238 29.13240234 30.53930664 28.58886719 C28.36076834 27.05748222 26.18067894 25.52833467 24 24 C23.41766602 23.59152832 22.83533203 23.18305664 22.23535156 22.76220703 C19.49238751 20.83838172 16.7475785 18.91722923 14 17 C14.04125 18.0725 14.0825 19.145 14.125 20.25 C14.0114175 23.65747485 13.78726636 25.20739631 12 28 C12.78375 27.175 13.5675 26.35 14.375 25.5 C17 23 17 23 19 23 C18.40072174 26.35595828 17.15377564 28.37801226 15 31 C15.33 31.33 15.66 31.66 16 32 C16.66 32 17.32 32 18 32 C18.66 30.35 19.32 28.7 20 27 C20.66 27 21.32 27 22 27 C21.35334574 30.491933 20.13457576 33.15389899 18 36 C16.68 36 15.36 36 14 36 C13.67 36.66 13.34 37.32 13 38 C11.515 37.505 11.515 37.505 10 37 C11.75864246 39.1793144 12.69396 39.93686419 15.48046875 40.51171875 C16.82044922 40.59873047 16.82044922 40.59873047 18.1875 40.6875 C19.08855469 40.75324219 19.98960937 40.81898438 20.91796875 40.88671875 C21.60503906 40.92410156 22.29210937 40.96148438 23 41 C20.60236815 43.39763185 19.66726502 43.34280586 16.375 43.625 C15.55773437 43.69976563 14.74046875 43.77453125 13.8984375 43.8515625 C13.27195312 43.90054688 12.64546875 43.94953125 12 44 C11.7525 43.360625 11.505 42.72125 11.25 42.0625 C10.18437567 39.81258459 10.18437567 39.81258459 7.875 39.25 C7.25625 39.1675 6.6375 39.085 6 39 C5.7763663 37.58566794 5.57173524 36.16832382 5.375 34.75 C5.25898438 33.96109375 5.14296875 33.1721875 5.0234375 32.359375 C4.99680605 29.67847541 5.63407916 28.27305911 7 26 C7.66 26 8.32 26 9 26 C9 25.34 9 24.68 9 24 C9.66 23.67 10.32 23.34 11 23 C11 21.68 11 20.36 11 19 C7.40643223 21.53075553 7.40643223 21.53075553 5.0625 25.125 C4 27 4 27 1.375 28.5 C-3.35118026 29.20017485 -6.21090218 27.80554477 -10 25 C-11.68018219 23.06638251 -12.76271031 21.26836442 -14 19 C-13.34 17.68 -12.68 16.36 -12 15 C-11.566875 16.11375 -11.13375 17.2275 -10.6875 18.375 C-9.30088881 22.17512334 -9.30088881 22.17512334 -6 24 C-3.71351152 24.24107326 -3.71351152 24.24107326 -1.3125 24.125 C-0.50425781 24.10695313 0.30398438 24.08890625 1.13671875 24.0703125 C1.75160156 24.04710937 2.36648438 24.02390625 3 24 C2.67 23.01 2.34 22.02 2 21 C-1.51190809 19.77030122 -1.51190809 19.77030122 -5 19 C-4.67 17.68 -4.34 16.36 -4 15 C-3.484375 15.309375 -2.96875 15.61875 -2.4375 15.9375 C0.66665423 17.29059287 3.65115007 17.61359424 7 18 C7.0928125 16.1128125 7.0928125 16.1128125 7.1875 14.1875 C7.22230469 13.47980469 7.25710938 12.77210938 7.29296875 12.04296875 C7.14610346 9.93834686 7.14610346 9.93834686 5.8125 8.28125 C3.44501781 6.607685 1.6883812 6.49924553 -1.1875 6.3125 C-2.08855469 6.24675781 -2.98960937 6.18101562 -3.91796875 6.11328125 C-4.60503906 6.07589844 -5.29210937 6.03851562 -6 6 C-5.67 5.34 -5.34 4.68 -5 4 C-4.34 4.33 -3.68 4.66 -3 5 C-2.690625 4.360625 -2.38125 3.72125 -2.0625 3.0625 C-1 1 -1 1 0 0 Z \",fill:\"#51422A\",transform:\"translate(307,528)\"})),_path74||(_path74=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C0.99555878 0.58500778 0.99111755 1.17001556 0.98654175 1.77275085 C0.94191656 7.92212453 0.91197287 14.07145139 0.89013672 20.22094727 C0.88014712 22.50872672 0.86655083 24.79649364 0.84912109 27.08422852 C0.73467773 42.50378837 0.71275716 56.76670983 6 71.4375 C6.26039063 72.18708984 6.52078125 72.93667969 6.7890625 73.70898438 C7.29447547 75.16268481 7.80570965 76.61437791 8.32348633 78.0637207 C8.88704219 79.67669853 9.39416563 81.30925501 9.88671875 82.9453125 C11.47955294 87.31582595 13.63395398 91.3338765 15.8125 95.4375 C16.23853516 96.25798828 16.66457031 97.07847656 17.10351562 97.92382812 C19.1422883 101.78855153 21.23556514 105.44781702 23.82421875 108.97265625 C26 112 26 112 26 114 C26.66 114 27.32 114 28 114 C29.49381291 115.70218367 30.92097016 117.46322891 32.3125 119.25 C34.67411271 122.2812041 36.78739553 124.82991642 39.79296875 127.234375 C40.52128906 127.81703125 41.24960937 128.3996875 42 129 C42 129.66 42 130.32 42 131 C42.55945313 131.25523437 43.11890625 131.51046875 43.6953125 131.7734375 C46.31164905 133.16586068 48.51846295 134.82715562 50.875 136.625 C56.32565446 140.65980478 61.98227887 143.92226031 67.93359375 147.140625 C70.76506832 148.85754461 72.79562803 150.5519014 75 153 C68.44710834 152.63107044 64.10731696 150.0903219 58.625 146.625 C57.80644531 146.13 56.98789062 145.635 56.14453125 145.125 C50.13193053 141.39579159 50.13193053 141.39579159 49 138 C47.68330358 137.30104882 46.34629767 136.64008187 45 136 C30.0710923 124.0830649 15.09484368 107.38444652 9 89 C8.36521404 87.66137187 7.71891537 86.32815561 7.0625 85 C5.08993537 80.5966766 3.74631793 76.07135634 2.4375 71.4375 C2.23970947 70.74849609 2.04191895 70.05949219 1.83813477 69.34960938 C1.17137148 66.91021809 0.57657042 64.46236863 0 62 C-0.2683667 60.87223145 -0.5367334 59.74446289 -0.81323242 58.58251953 C-3.22393193 47.33638226 -3.35215195 36.46557476 -3.1875 25 C-3.17240577 23.14584437 -3.15872586 21.29167666 -3.14648438 19.4375 C-3.11390035 14.95802722 -3.0623882 10.47915271 -3 6 C-2.34 6 -1.68 6 -1 6 C-0.67 4.02 -0.34 2.04 0 0 Z \",fill:\"#796343\",transform:\"translate(407,194)\"})),_path75||(_path75=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.06058594 0.89203125 0.12117188 1.7840625 0.18359375 2.703125 C0.30927734 4.45882813 0.30927734 4.45882813 0.4375 6.25 C0.51871094 7.41015625 0.59992188 8.5703125 0.68359375 9.765625 C0.93247787 12.30977376 1.28114942 14.55953248 2 17 C1.1646875 17.0928125 1.1646875 17.0928125 0.3125 17.1875 C-2.9283878 18.32619031 -4.6312403 20.56890452 -7 23 C-7.66 23 -8.32 23 -9 23 C-9 23.66 -9 24.32 -9 25 C-10.91040052 25.8680908 -12.82860737 26.71901783 -14.75 27.5625 C-15.81734375 28.03816406 -16.8846875 28.51382813 -17.984375 29.00390625 C-20.99138891 29.99715566 -22.14356073 30.22132801 -25 29 C-26.52993969 27.47006031 -26.3169616 26.06701177 -26.4375 23.9375 C-26.35546373 18.19496126 -23.96059503 14.9773064 -20 11 C-16.2627407 7.70662974 -12.97028137 4.96092106 -8 4 C-8 3.34 -8 2.68 -8 2 C-2.25 0 -2.25 0 0 0 Z \",fill:\"#936D31\",transform:\"translate(482,503)\"})),_path76||(_path76=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C11.86365051 0.87537615 11.86365051 0.87537615 15 3 C15.8125 5.5 15.8125 5.5 16 9 C16.07541016 10.13888672 16.07541016 10.13888672 16.15234375 11.30078125 C16.51744724 20.69124304 13.9856911 27.78647483 8 35 C7.34 35 6.68 35 6 35 C6 35.66 6 36.32 6 37 C3.5 38.5 3.5 38.5 1 40 C0.13375 40.886875 -0.7325 41.77375 -1.625 42.6875 C-4 45 -4 45 -7 45 C-5.93490333 42.85494484 -4.85429921 40.72085363 -3.74609375 38.59765625 C-3.31425781 37.76105469 -2.88242187 36.92445313 -2.4375 36.0625 C-2.00308594 35.22847656 -1.56867187 34.39445312 -1.12109375 33.53515625 C0.7961543 29.19963714 1.14040376 24.96349964 1.31640625 20.26171875 C1.35830078 19.19501953 1.40019531 18.12832031 1.44335938 17.02929688 C1.48267578 15.92650391 1.52199219 14.82371094 1.5625 13.6875 C1.60568359 12.56537109 1.64886719 11.44324219 1.69335938 10.28710938 C1.79914787 7.52485431 1.90123672 4.7625137 2 2 C1.34 2 0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#D6B075\",transform:\"translate(714,315)\"})),_path77||(_path77=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7.33 0.99 7.66 1.98 8 3 C8.66 3 9.32 3 10 3 C11.69140625 5.23046875 11.69140625 5.23046875 13.5625 8.1875 C14.18253906 9.15042969 14.80257812 10.11335938 15.44140625 11.10546875 C16.91166708 13.83595315 17.59289154 15.949475 18 19 C18.66 19 19.32 19 20 19 C21.5078125 21.1171875 21.5078125 21.1171875 23.125 23.875 C23.66382813 24.77992188 24.20265625 25.68484375 24.7578125 26.6171875 C26 29 26 29 26 31 C26.66 31 27.32 31 28 31 C28 20.77 28 10.54 28 0 C28.66 0 29.32 0 30 0 C30 14.19 30 28.38 30 43 C28.68 43 27.36 43 26 43 C25.60167969 42.26394531 25.20335937 41.52789062 24.79296875 40.76953125 C24.26316406 39.79371094 23.73335937 38.81789063 23.1875 37.8125 C22.66542969 36.84957031 22.14335938 35.88664062 21.60546875 34.89453125 C18.78425041 29.62121278 18.78425041 29.62121278 15 25.0625 C12.29932242 22.27742625 10 18.98940903 10 15 C9.34 15 8.68 15 8 15 C5 9.25 5 9.25 5 7 C4.34 7 3.68 7 3 7 C2.67 18.88 2.34 30.76 2 43 C1.34 43 0.68 43 0 43 C0 28.81 0 14.62 0 0 Z \",fill:\"#928065\",transform:\"translate(731,419)\"})),_path78||(_path78=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.67143996 0.00635696 7.34288124 0.0068469 11.01432586 0.00802541 C17.93037269 0.01110304 24.84640326 0.01926703 31.76244301 0.0293749 C39.65153216 0.0406485 47.54062219 0.04607449 55.42971742 0.05107033 C71.6245404 0.06145369 87.81934711 0.07898211 104.01415801 0.10139394 C104.01415801 1.09139394 104.01415801 2.08139394 104.01415801 3.10139394 C103.13132644 3.10726018 102.24849486 3.11312642 101.33891082 3.11917043 C93.02504399 3.17703864 84.71144751 3.24908131 76.39784312 3.33710885 C72.12356421 3.38186482 67.84938176 3.42110918 63.57494903 3.44782948 C59.45100379 3.47381067 55.32742875 3.51417562 51.20371222 3.5645802 C49.6292745 3.58128417 48.0547727 3.59277644 46.4802587 3.59900784 C44.27721373 3.608611 42.07512339 3.63662237 39.87231231 3.66902089 C37.990344 3.68567548 37.990344 3.68567548 36.07035613 3.70266652 C32.68410547 4.1444543 32.1875942 4.67858118 30.01415801 7.10139394 C28.69415801 7.10139394 27.37415801 7.10139394 26.01415801 7.10139394 C26.01415801 5.78139394 26.01415801 4.46139394 26.01415801 3.10139394 C1.26415801 3.10139394 -23.48584199 3.10139394 -48.98584199 3.10139394 C-49.31584199 2.44139394 -49.64584199 1.78139394 -49.98584199 1.10139394 C-33.32215425 0.07591499 -16.68975723 -0.03390506 0 0 Z \",fill:\"#C3A36D\",transform:\"translate(596.9858419895172,487.8986060619354)\"})),_path79||(_path79=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.63109367 1.63109367 1.24872283 3.44187222 1.3125 5.6875 C1.34988281 6.53699219 1.38726562 7.38648438 1.42578125 8.26171875 C0.62567837 13.40733451 -2.1411573 16.31807246 -6.12890625 19.484375 C-7.26580309 20.25102811 -8.41052066 21.00620231 -9.5625 21.75 C-10.13935547 22.13542969 -10.71621094 22.52085937 -11.31054688 22.91796875 C-12.86692055 23.9555512 -14.43302244 24.97850224 -16 26 C-16.99 26.66 -17.98 27.32 -19 28 C-22.1875 28.125 -22.1875 28.125 -25 28 C-25.05449838 26.27119018 -25.09301688 24.54187288 -25.125 22.8125 C-25.14820313 21.84957031 -25.17140625 20.88664062 -25.1953125 19.89453125 C-24.91539673 15.74617948 -24.05758967 13.07962278 -21.125 10.0859375 C-20.42375 9.52132812 -19.7225 8.95671875 -19 8.375 C-16.42119682 6.27972242 -14.87299449 4.80949173 -13 2 C-8.58126131 0.38546086 -4.69799642 -0.33557117 0 0 Z \",fill:\"#B49158\",transform:\"translate(507,127)\"})),_path80||(_path80=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.9609375 0.05078125 1.9609375 0.05078125 4.375 0.3125 C5.16648437 0.39113281 5.95796875 0.46976562 6.7734375 0.55078125 C9 1 9 1 12 3 C12 3.66 12 4.32 12 5 C12.56332031 5.06574219 13.12664062 5.13148438 13.70703125 5.19921875 C16.93690793 6.32719953 18.43296782 8.26730086 20.6875 10.8125 C21.47511719 11.68519531 22.26273437 12.55789063 23.07421875 13.45703125 C25 16 25 16 26 20 C17.09 20.99 17.09 20.99 8 22 C9.32 22.99 10.64 23.98 12 25 C12 25.66 12 26.32 12 27 C10.02 27.33 8.04 27.66 6 28 C6 27.01 6 26.02 6 25 C2.34920174 23.38935371 -1.0507432 22.55105909 -5 22 C-5 21.67 -5 21.34 -5 21 C-3.741875 20.731875 -2.48375 20.46375 -1.1875 20.1875 C1.15109221 19.58319122 2.91617348 19.049772 5 17.8125 C6.64274185 14.8350304 6.361005 12.30921251 6 9 C5.01 8.34 4.02 7.68 3 7 C3.33 7.66 3.66 8.32 4 9 C4.44837758 14.26843658 4.44837758 14.26843658 2.8125 16.9375 C1 18 1 18 -1.625 17.75 C-4 17 -4 17 -5 16 C-5.58557893 11.44016405 -5.68515728 7.40547878 -3.0625 3.5 C-1 1 -1 1 0 0 Z \",fill:\"#0B0703\",transform:\"translate(402,291)\"})),_path81||(_path81=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 0.33 17 0.66 17 1 C12.38 1.33 7.76 1.66 3 2 C1.68414319 8.57928407 1.80370627 15.00074944 1.8125 21.6875 C1.81243958 22.38363403 1.81237915 23.07976807 1.81231689 23.79699707 C1.82576487 34.64982861 2.32982601 45.26650421 4 56 C4.19916016 57.48306641 4.19916016 57.48306641 4.40234375 58.99609375 C6.02681761 69.65573647 9.62128359 80.63632217 15 90 C15.39445312 90.72832031 15.78890625 91.45664062 16.1953125 92.20703125 C29.22034674 115.24273467 48.61925268 131.26959081 72 143 C72 143.66 72 144.32 72 145 C53.41211745 142.05112024 33.767913 122.70448651 23.03515625 108.13671875 C21 105 21 105 21 103 C20.34 103 19.68 103 19 103 C8.8953511 85.59754911 8.8953511 85.59754911 6 77 C5.38705078 75.25203125 5.38705078 75.25203125 4.76171875 73.46875 C-0.53750926 57.89039097 -2.2701575 42.97361047 -2.3125 26.5625 C-2.31617584 25.87454346 -2.31985168 25.18658691 -2.32363892 24.4777832 C-2.3471159 16.06021815 -1.7825352 8.23090954 0 0 Z \",fill:\"#6C5937\",transform:\"translate(411,197)\"})),_path82||(_path82=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C4.375 2 4.375 2 5 5 C3.43734681 8.0563658 1.49689322 10.64610067 -1 13 C-1.68835938 13.15984375 -2.37671875 13.3196875 -3.0859375 13.484375 C-5.13809443 13.79587164 -5.13809443 13.79587164 -5.9453125 15.6328125 C-6.29335938 16.41398437 -6.64140625 17.19515625 -7 18 C-8.60059452 20.31444852 -10.21904663 22.60108153 -11.875 24.875 C-18.25971352 33.49598036 -18.25971352 33.49598036 -23.1484375 43 C-25.36103089 48.19654961 -27.86715359 53.30073038 -31 58 C-31.66 58 -32.32 58 -33 58 C-33 57.34 -33 56.68 -33 56 C-33.99 55.67 -34.98 55.34 -36 55 C-32.5492206 43.49740201 -27.15587022 33.60431461 -20 24 C-18.91138672 22.49373047 -18.91138672 22.49373047 -17.80078125 20.95703125 C-13.99570735 15.75654824 -10.1896144 10.89128216 -5.49609375 6.46875 C-3.77240269 4.84536945 -3.77240269 4.84536945 -1.75 2.0625 C-0.88375 1.0415625 -0.88375 1.0415625 0 0 Z \",fill:\"#B99961\",transform:\"translate(358,272)\"})),_path83||(_path83=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 1.65 2 3.3 2 5 C2.66 5 3.32 5 4 5 C4.33 4.34 4.66 3.68 5 3 C5.99 4.485 5.99 4.485 7 6 C6.34 6 5.68 6 5 6 C5.66 7.98 6.32 9.96 7 12 C7.66 12 8.32 12 9 12 C9.33 13.32 9.66 14.64 10 16 C10.66 16 11.32 16 12 16 C13.1484375 17.609375 13.1484375 17.609375 14.375 19.75 C16.31669919 22.97863935 18.24604713 25.40804436 21 28 C22.15102177 29.34975934 23.29631395 30.70441466 24.4375 32.0625 C27.07645814 35.11221282 29.45472761 37.04077052 33 39 C33.73476563 39.75796875 34.46953125 40.5159375 35.2265625 41.296875 C38.17116396 44.16682459 41.28839247 46.38445767 44.75 48.5625 C45.36182129 48.95236084 45.97364258 49.34222168 46.60400391 49.74389648 C51.23741455 52.64419468 55.91092311 54.98191778 61 57 C61 56.34 61 55.68 61 55 C61.52207031 54.72027344 62.04414063 54.44054687 62.58203125 54.15234375 C70.43135966 49.87714036 78.33317059 45.49438289 85.0625 39.5625 C88 37 88 37 90 37 C90 36.34 90 35.68 90 35 C91.62698318 33.29457299 93.3017962 31.63452116 95 30 C100.72238199 24.01832258 105.91256523 18.22113476 110 11 C109.01 10.505 109.01 10.505 108 10 C109.67517239 6.46352496 110.49280817 5.2088437 114.1875 3.6875 C115.115625 3.460625 116.04375 3.23375 117 3 C108.4896828 25.61195392 88.9044405 44.06426743 68.125 55.6875 C67.51889893 56.03893066 66.91279785 56.39036133 66.28833008 56.75244141 C61.78613337 59.14645194 58.88250959 59.33208781 54 58 C51.4403765 56.74813174 49.14383778 55.5060444 46.75 54 C45.77111816 53.39551025 45.77111816 53.39551025 44.77246094 52.77880859 C28.77835969 42.69522981 16.62596425 29.42685171 6 14 C5.41734375 13.16726563 4.8346875 12.33453125 4.234375 11.4765625 C1.71771802 7.70157704 0.34100259 4.54670119 0 0 Z \",fill:\"#2A1A07\",transform:\"translate(423,280)\"})),_path84||(_path84=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.20696128 1.42777089 7.14972107 3.4882949 10.5625 6.3125 C11.49191406 7.07175781 12.42132813 7.83101562 13.37890625 8.61328125 C18.88160331 13.62393386 22.61220374 18.70803873 23.2890625 26.19921875 C23.50904166 35.1283728 23.50904166 35.1283728 21.6015625 38.39453125 C21.07304687 38.92433594 20.54453125 39.45414063 20 40 C19.34 40 18.68 40 18 40 C17.69707031 39.21496094 17.39414062 38.42992187 17.08203125 37.62109375 C13.3695669 28.31137545 10.61396119 22.29949834 1.87109375 17.2421875 C-1.05210681 15.30152408 -2.47271521 13.11820644 -4 10 C-4.25 6.625 -4.25 6.625 -4 4 C0.45673159 4.49871064 2.57687178 6.02004362 5.8125 9.0625 C6.60269531 9.79597656 7.39289063 10.52945313 8.20703125 11.28515625 C9.09455078 12.13400391 9.09455078 12.13400391 10 13 C8.63017895 9.8129289 7.15774857 8.06713092 4.4375 5.9375 C1.80562347 3.87467786 1.09567461 3.28702382 0 0 Z \",fill:\"#BE9D68\",transform:\"translate(378,208)\"})),_path85||(_path85=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.226875 1.19625 -0.45375 2.3925 -0.6875 3.625 C-1.24815181 7.89807594 -0.21615508 10.27685947 2 14 C2 14.66 2 15.32 2 16 C3.32 16.33 4.64 16.66 6 17 C6 17.66 6 18.32 6 19 C-12.69035533 26 -12.69035533 26 -18 26 C-17.96519531 25.41992188 -17.93039062 24.83984375 -17.89453125 24.2421875 C-17.71469722 19.05269113 -17.97085591 15.43553242 -21 11 C-23.05093145 9.59533047 -23.05093145 9.59533047 -25 9 C-25 8.34 -25 7.68 -25 7 C-21.17679443 5.57741188 -18.08718695 4.75957724 -14 5 C-13.34 6.32 -12.68 7.64 -12 9 C-11.34 9 -10.68 9 -10 9 C-10.020625 8.05125 -10.04125 7.1025 -10.0625 6.125 C-10 3 -10 3 -9 1 C-5.8035914 -0.06546953 -3.34252724 -0.07427838 0 0 Z \",fill:\"#B4996F\",transform:\"translate(579,584)\"})),_path86||(_path86=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.45410358 3.68115537 2.23287843 5.65293598 2 10 C1.67 10.99 1.34 11.98 1 13 C1.66 13.33 2.32 13.66 3 14 C2.34 14.33 1.68 14.66 1 15 C1 15.66 1 16.32 1 17 C1.74765625 17.03738281 2.4953125 17.07476562 3.265625 17.11328125 C4.74289062 17.21189453 4.74289062 17.21189453 6.25 17.3125 C7.22453125 17.37050781 8.1990625 17.42851562 9.203125 17.48828125 C12.25341611 18.04636524 13.70711276 18.96369776 16 21 C13.47598256 20.7697175 10.95774797 20.51645793 8.4375 20.25 C7.73302734 20.188125 7.02855469 20.12625 6.30273438 20.0625 C0.98035496 19.47384974 -2.63979764 18.17105626 -7 15 C-8.33984375 12.421875 -8.33984375 12.421875 -8.9375 9.75 C-9.15277344 8.85796875 -9.36804688 7.9659375 -9.58984375 7.046875 C-9.72519531 6.37140625 -9.86054688 5.6959375 -10 5 C-10.66 5 -11.32 5 -12 5 C-12.05406122 6.93719378 -12.09282025 8.87481921 -12.125 10.8125 C-12.14820313 11.89144531 -12.17140625 12.97039062 -12.1953125 14.08203125 C-12.23023717 17.19402868 -12.23023717 17.19402868 -10 20 C-10 20.99 -10 21.98 -10 23 C-9.46375 23.268125 -8.9275 23.53625 -8.375 23.8125 C-5.58333333 25.20833333 -2.79166667 26.60416667 0 28 C0 28.99 0 29.98 0 31 C0.5775 31.226875 1.155 31.45375 1.75 31.6875 C4.5663661 33.33038023 6.08077114 35.39533227 8 38 C6.52307692 42.67692308 6.52307692 42.67692308 3.875 44.3125 C3.25625 44.539375 2.6375 44.76625 2 45 C2.66 44.01 3.32 43.02 4 42 C4.46354221 39.49734643 4.46354221 39.49734643 4 37 C2.51945247 35.31202222 2.51945247 35.31202222 0.4375 34.0625 C-0.29339844 33.55460937 -1.02429688 33.04671875 -1.77734375 32.5234375 C-2.51082031 32.02070313 -3.24429687 31.51796875 -4 31 C-10.31499748 26.29985635 -16.59012831 20.05193386 -18 12 C-18.37734915 7.87818623 -18.62594687 4.25189375 -16.75 0.5 C-12.33153851 -3.28725271 -4.7268198 -3.3262806 0 0 Z \",fill:\"#171007\",transform:\"translate(280,257)\"})),_path87||(_path87=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.625 2.25 5.625 2.25 7 5 C7.64979719 11.72290167 6.72907382 16.85958391 4 23 C3.34 23 2.68 23 2 23 C1.76796875 23.57878906 1.5359375 24.15757812 1.296875 24.75390625 C-0.31736697 27.54965666 -2.19059765 28.97916942 -4.75 30.9375 C-5.64203125 31.63230469 -6.5340625 32.32710938 -7.453125 33.04296875 C-8.29359375 33.68878906 -9.1340625 34.33460938 -10 35 C-14.93060961 38.73013636 -14.93060961 38.73013636 -18 44 C-18.66 43.67 -19.32 43.34 -20 43 C-19.34 41.02 -18.68 39.04 -18 37 C-17.34 37 -16.68 37 -16 37 C-16 36.34 -16 35.68 -16 35 C-14.20703125 33.44921875 -14.20703125 33.44921875 -11.8125 31.6875 C-9.04487209 29.60742745 -6.44615441 27.57538868 -4.0625 25.0625 C-3.381875 24.381875 -2.70125 23.70125 -2 23 C-1.34 23 -0.68 23 0 23 C1.24581251 18.17247654 2.29771645 11.59543291 0 7 C-0.27972656 7.67546875 -0.55945313 8.3509375 -0.84765625 9.046875 C-4.86638076 17.98886009 -4.86638076 17.98886009 -9.90234375 20.32421875 C-15.45133519 22.11188266 -21.30687482 23.85326557 -27 22 C-23.33552568 20.35199144 -20.18796534 19.66419027 -16.1875 19.375 C-15.21167969 19.30023438 -14.23585938 19.22546875 -13.23046875 19.1484375 C-12.12638672 19.07496094 -12.12638672 19.07496094 -11 19 C-11 18.34 -11 17.68 -11 17 C-11.66 17 -12.32 17 -13 17 C-13 16.34 -13 15.68 -13 15 C-13.66 15 -14.32 15 -15 15 C-14.67 14.34 -14.34 13.68 -14 13 C-13.34 13.33 -12.68 13.66 -12 14 C-12.33 13.34 -12.66 12.68 -13 12 C-13.69064748 4.86330935 -13.69064748 4.86330935 -11 1.5 C-7.23861316 -0.38069342 -4.08614795 -0.67836441 0 0 Z \",fill:\"#140E05\",transform:\"translate(696,255)\"})),_path88||(_path88=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 2.64 0 5.28 0 8 C0.66 8 1.32 8 2 8 C4.85823855 12.28735783 5.80748725 17.0311969 7 22 C5.35 22.33 3.7 22.66 2 23 C1.67 24.65 1.34 26.3 1 28 C-0.60568666 27.71682074 -2.20952047 27.42312209 -3.8125 27.125 C-4.70582031 26.96257813 -5.59914063 26.80015625 -6.51953125 26.6328125 C-9 26 -9 26 -12 24 C-14.27912938 23.54605448 -14.27912938 23.54605448 -16.6875 23.375 C-17.49574219 23.30023437 -18.30398438 23.22546875 -19.13671875 23.1484375 C-19.75160156 23.09945312 -20.36648438 23.05046875 -21 23 C-21 22.01 -21 21.02 -21 20 C-20.34 20 -19.68 20 -19 20 C-18.6596875 19.13375 -18.6596875 19.13375 -18.3125 18.25 C-17 16 -17 16 -14.625 14.125 C-11.64970808 11.71643035 -10.10250863 9.18561914 -8 6 C-2.72272727 0 -2.72272727 0 0 0 Z \",fill:\"#A48C64\",transform:\"translate(683,506)\"})),_path89||(_path89=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7.07431132 5.17778402 7.12867808 10.35525569 7.16479492 15.53344727 C7.17985553 17.29391896 7.20030826 19.0543533 7.22631836 20.81469727 C7.26282229 23.34921503 7.27975354 25.88323552 7.29296875 28.41796875 C7.30845261 29.20149216 7.32393646 29.98501556 7.33988953 30.7922821 C7.34128826 35.36261782 6.94626854 38.42371177 4 42 C0.43954823 43.18681726 -2.43808337 43.09689832 -6.1875 43.0625 C-7.45980469 43.05347656 -8.73210937 43.04445313 -10.04296875 43.03515625 C-11.50669922 43.01775391 -11.50669922 43.01775391 -13 43 C-13 42.34 -13 41.68 -13 41 C-13.9590625 40.7215625 -13.9590625 40.7215625 -14.9375 40.4375 C-17 39 -17 39 -17.75 35.375 C-17.87375 33.704375 -17.87375 33.704375 -18 32 C-14.93882432 29.37613513 -14.26826873 29 -10 29 C-9.93941406 29.69867188 -9.87882812 30.39734375 -9.81640625 31.1171875 C-9.73261719 32.02726562 -9.64882813 32.93734375 -9.5625 33.875 C-9.48128906 34.77992188 -9.40007812 35.68484375 -9.31640625 36.6171875 C-9.13010715 39.01110861 -9.13010715 39.01110861 -8 41 C-5.58354218 41.16687448 -5.58354218 41.16687448 -3 41 C0.05080946 37.94919054 -0.64211292 34.37189221 -0.5859375 30.2734375 C-0.56657135 29.41062164 -0.5472052 28.54780579 -0.5272522 27.65884399 C-0.46737796 24.89766384 -0.42104002 22.13644216 -0.375 19.375 C-0.33682741 17.50518995 -0.29777611 15.63539762 -0.2578125 13.765625 C-0.16167008 9.17722691 -0.07766834 4.58874649 0 0 Z \",fill:\"#AE956F\",transform:\"translate(401,419)\"})),_path90||(_path90=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.4659249 -0.36717663 7.4659249 -0.36717663 10 1.375 C11 3 11 3 11 5 C11.66 5 12.32 5 13 5 C14.17673198 7.35346396 14.16623866 8.8806033 14.1875 11.5 C14.20167969 12.2940625 14.21585938 13.088125 14.23046875 13.90625 C14 16 14 16 12 18 C6.43181818 17.43181818 6.43181818 17.43181818 5 16 C4.76271186 9.47457627 4.76271186 9.47457627 6 7 C5.01 7.33 4.02 7.66 3 8 C2.49186144 13.53079464 2.49186144 13.53079464 4.5625 18.4375 C7.68103694 20.43656214 10.34186183 20.71860476 14 21 C14 21.33 14 21.66 14 22 C11.36 22 8.72 22 6 22 C6 22.66 6 23.32 6 24 C3.68198842 23.46507425 1.51867389 22.82296051 -0.71875 22 C-4.18114275 20.94479459 -7.26812247 20.59582924 -10.875 20.375 C-12.02742187 20.30023438 -13.17984375 20.22546875 -14.3671875 20.1484375 C-15.67042969 20.07496094 -15.67042969 20.07496094 -17 20 C-14.19156858 16.65111443 -11.41526376 13.39638813 -8.25 10.375 C-5.85858597 8.15191883 -5.85858597 8.15191883 -4.9375 5.25 C-4.628125 4.5075 -4.31875 3.765 -4 3 C-1.875 2.1875 -1.875 2.1875 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#040202\",transform:\"translate(554,291)\"})),_path91||(_path91=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.11698241 2.46519106 5.23219006 5.46438012 7 9 C7.0952699 10.47668337 7.12985959 11.95775457 7.125 13.4375 C7.12886719 14.61119141 7.12886719 14.61119141 7.1328125 15.80859375 C7 18 7 18 6 21 C5.34 21 4.68 21 4 21 C3.566875 21.8971875 3.566875 21.8971875 3.125 22.8125 C0.65809769 27.6092545 0.65809769 27.6092545 -2 29.1875 C-6.45136179 30.39307715 -10.44082939 30.91321779 -15 30 C-19.27656636 27.47519466 -22.24457291 24.47937805 -24.5 20.0625 C-24.665 19.381875 -24.83 18.70125 -25 18 C-23.68 18.33 -22.36 18.66 -21 19 C-21 15.04 -21 11.08 -21 7 C-20.67 7 -20.34 7 -20 7 C-19.67 11.62 -19.34 16.24 -19 21 C-17.68 21.33 -16.36 21.66 -15 22 C-15 22.66 -15 23.32 -15 24 C-11.83802147 24.58077157 -9.14623881 24.73179922 -6 24 C-1.92416788 20.61085698 0.68880375 16.86717748 1.5625 11.625 C1.12227926 8.78469973 1.12227926 8.78469973 -1 6 C-4.58357241 5.74984127 -4.58357241 5.74984127 -8 6 C-7.67 6.33 -7.34 6.66 -7 7 C-6.95919217 8.99958364 -6.95745644 11.00045254 -7 13 C-10.375 12.6875 -10.375 12.6875 -14 12 C-16 9 -16 9 -15.8125 6.5 C-14.93740139 3.80738888 -14.22274287 2.70980221 -12 1 C-7.91415131 -0.36194956 -4.25238413 -0.91277751 0 0 Z \",fill:\"#8A6A38\",transform:\"translate(591,235)\"})),_path92||(_path92=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C11.9 0 11.9 0 16 2 C18.21888092 4.31352513 18.95566452 5.576744 19.29296875 8.796875 C19.25816406 9.77140625 19.22335937 10.7459375 19.1875 11.75 C19.16042969 12.73484375 19.13335937 13.7196875 19.10546875 14.734375 C19.07066406 15.48203125 19.03585937 16.2296875 19 17 C18.34 17 17.68 17 17 17 C16.67 17.99 16.34 18.98 16 20 C10.34539501 23.91472653 7.66639077 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#0D0805\",transform:\"translate(472,231)\"})),_path93||(_path93=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.94723896 1.97361948 5.40386292 3.34953633 8.1875 6.625 C11.92308489 10.93147162 15.84066234 14.53329808 20.34765625 18.015625 C22.59400698 20.71337009 22.30326211 22.59191152 22 26 C20.22882813 25.96519531 20.22882813 25.96519531 18.421875 25.9296875 C16.86458967 25.91092503 15.30729748 25.89272534 13.75 25.875 C12.58404297 25.84986328 12.58404297 25.84986328 11.39453125 25.82421875 C5.91693064 25.74031699 5.91693064 25.74031699 1 28 C2.08203125 26.046875 2.08203125 26.046875 4 24 C7.13671875 23.390625 7.13671875 23.390625 10.6875 23.25 C11.86699219 23.19328125 13.04648437 23.1365625 14.26171875 23.078125 C15.16535156 23.05234375 16.06898438 23.0265625 17 23 C10.99945246 21.33318124 5.2054142 20.48320848 -1 20 C-0.34 19.34 0.32 18.68 1 18 C-4.72084342 17.41324683 -9.16865253 19.06892278 -14 22 C-15.89447207 23.87489097 -17.37036654 25.87242298 -19 28 C-21.8125 29.875 -21.8125 29.875 -24 31 C-22.08277831 23.18363463 -22.08277831 23.18363463 -19 21 C-18.34 21 -17.68 21 -17 21 C-17 20.34 -17 19.68 -17 19 C-15.68 18.67 -14.36 18.34 -13 18 C-13 17.34 -13 16.68 -13 16 C-11.171875 14.52734375 -11.171875 14.52734375 -8.75 12.9375 C-7.96109375 12.41027344 -7.1721875 11.88304687 -6.359375 11.33984375 C-4 10 -4 10 0 9 C0 6.03 0 3.06 0 0 Z \",fill:\"#140E07\",transform:\"translate(431,310)\"})),_path94||(_path94=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 13.53 8 27.06 8 41 C13.94 41 19.88 41 26 41 C26 41.66 26 42.32 26 43 C17.09 43 8.18 43 -1 43 C-0.67 28.81 -0.34 14.62 0 0 Z \",fill:\"#DDBA83\",transform:\"translate(641,419)\"})),_path95||(_path95=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C6.02558881 3.34939881 6.21738987 5.86962551 6.125 9.75 C6.10695313 10.73484375 6.08890625 11.7196875 6.0703125 12.734375 C6.04710937 13.48203125 6.02390625 14.2296875 6 15 C5.34 15 4.68 15 4 15 C3.67 16.98 3.34 18.96 3 21 C2.34 21 1.68 21 1 21 C0.90460937 21.60457031 0.80921875 22.20914062 0.7109375 22.83203125 C-0.15834029 25.4828509 -1.08385303 26.15523505 -3.375 27.6875 C-4.28378906 28.31205078 -4.28378906 28.31205078 -5.2109375 28.94921875 C-7 30 -7 30 -10 31 C-10.66 31.99 -11.32 32.98 -12 34 C-14.6796875 34.94921875 -14.6796875 34.94921875 -17.875 35.6875 C-18.92429687 35.93886719 -19.97359375 36.19023437 -21.0546875 36.44921875 C-24 37 -24 37 -28 37 C-28 37.66 -28 38.32 -28 39 C-20.08 38.505 -20.08 38.505 -12 38 C-12 38.66 -12 39.32 -12 40 C-17.61 40 -23.22 40 -29 40 C-29.33 38.35 -29.66 36.7 -30 35 C-34.95 35 -39.9 35 -45 35 C-45 34.67 -45 34.34 -45 34 C-44.2471875 33.99742187 -43.494375 33.99484375 -42.71875 33.9921875 C-35.85155732 33.74216835 -29.94937837 32.60194259 -23.5625 30.1875 C-22.57056641 29.8150415 -22.57056641 29.8150415 -21.55859375 29.43505859 C-18.36594764 28.16591714 -15.47545011 26.74011771 -12.65234375 24.80078125 C-10 23 -10 23 -8 23 C-8 22.34 -8 21.68 -8 21 C-7.34 21 -6.68 21 -6 21 C-5.731875 20.278125 -5.46375 19.55625 -5.1875 18.8125 C-4 16 -4 16 -2.4375 13.875 C-0.23105499 9.46210999 -0.24754766 4.874128 0 0 Z \",fill:\"#BE9C66\",transform:\"translate(584,339)\"})),_path96||(_path96=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.02578125 0.86882812 0.0515625 1.73765625 0.078125 2.6328125 C0.43215344 11.551177 0.43215344 11.551177 5 19 C5.7425 19.845625 6.485 20.69125 7.25 21.5625 C15.99841905 29.31678052 25.12778586 32.28676467 36.625 33.0625 C47.61491536 33.84417708 47.61491536 33.84417708 53 36 C53 36.33 53 36.66 53 37 C28.65350258 35.99219292 28.65350258 35.99219292 22.9296875 32.87109375 C20.85438753 31.67156715 20.85438753 31.67156715 18 33 C21.53411321 35.12046792 24.94393835 35.53199289 29 36 C29 36.99 29 37.98 29 39 C23.39 39 17.78 39 12 39 C12 38.67 12 38.34 12 38 C14.64 37.67 17.28 37.34 20 37 C19.2265625 36.70867187 18.453125 36.41734375 17.65625 36.1171875 C8.25927269 32.41887217 0.9939325 28.24165719 -5 20 C-5 19.34 -5 18.68 -5 18 C-5.66 18 -6.32 18 -7 18 C-7.10864945 15.93867858 -7.18588321 13.87568679 -7.25 11.8125 C-7.29640625 10.66394531 -7.3428125 9.51539063 -7.390625 8.33203125 C-6.82638474 3.51906187 -5.17281893 0 0 0 Z \",fill:\"#B19058\",transform:\"translate(382,339)\"})),_path97||(_path97=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6603913 0.49336232 11.88292245 2.41480651 18 5 C36.78699889 12.49243408 55.99504965 14.23522323 76 15 C76.99293483 19.97309304 77.1608941 24.72699981 77.16796875 29.7734375 C77.17296135 31.0355455 77.17296135 31.0355455 77.17805481 32.32315063 C77.18310343 34.10328631 77.18546377 35.88343139 77.18530273 37.66357422 C77.18746505 40.33187403 77.20557534 42.99974328 77.22460938 45.66796875 C77.31299368 71.96734605 77.31299368 71.96734605 73 82 C72.71125 83.216875 72.4225 84.43375 72.125 85.6875 C70.93862853 90.62129882 69.26777639 95.45558872 67 100 C66.01 100.495 66.01 100.495 65 101 C65.67707445 97.23463701 66.69197477 93.6986977 67.875 90.0625 C71.94128018 77.02083048 74.17404424 64.22703107 74.09765625 50.59375 C74.0962413 49.6284436 74.09482635 48.66313721 74.09336853 47.6685791 C74.0878108 44.61235335 74.0752663 41.55620327 74.0625 38.5 C74.05747953 36.41666773 74.05291758 34.3333343 74.04882812 32.25 C74.03785524 27.16663791 74.02062011 22.08333174 74 17 C73.35039307 17.00523682 72.70078613 17.01047363 72.03149414 17.01586914 C69.04183957 17.03686503 66.05220059 17.0497313 63.0625 17.0625 C62.04091797 17.07087891 61.01933594 17.07925781 59.96679688 17.08789062 C44.14701037 17.13843307 44.14701037 17.13843307 38 14 C35.23145192 13.3740179 32.47116558 12.79748156 29.6875 12.25 C22.1442847 10.68220048 15.30622804 8.40022669 8.234375 5.3671875 C5.19202151 4.08116851 2.1460435 3.00101384 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#2A1A07\",transform:\"translate(480,179)\"})),_path98||(_path98=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C9.33957921 2.78871177 10.67058435 5.58143062 12 8.375 C12.3815625 9.1690625 12.763125 9.963125 13.15625 10.78125 C13.5171875 11.54179687 13.878125 12.30234375 14.25 13.0859375 C14.58515625 13.7876709 14.9203125 14.4894043 15.265625 15.21240234 C16 17 16 17 16 19 C16.99 19 17.98 19 19 19 C19.38285156 17.98873047 19.38285156 17.98873047 19.7734375 16.95703125 C21.22868805 13.44867244 22.90947835 10.07321448 24.625 6.6875 C24.94984375 6.04232422 25.2746875 5.39714844 25.609375 4.73242188 C26.40441956 3.15402459 27.20195634 1.57688306 28 0 C28.99 0 29.98 0 31 0 C29.27502493 4.6029598 27.0904129 8.93255824 24.875 13.3125 C24.50246094 14.05306641 24.12992187 14.79363281 23.74609375 15.55664062 C22.83255194 17.37201217 21.91652513 19.18613282 21 21 C20.34 21 19.68 21 19 21 C19 28.26 19 35.52 19 43 C16.36 43 13.72 43 11 43 C11.02618408 42.44650879 11.05236816 41.89301758 11.0793457 41.32275391 C11.98694674 27.54815241 11.98694674 27.54815241 7.19140625 14.97265625 C5.80167155 12.6716201 5.39956352 10.6407934 5 8 C4.01 7.67 3.02 7.34 2 7 C0.8125 3.4375 0.8125 3.4375 0 0 Z \",fill:\"#C5A679\",transform:\"translate(417,419)\"})),_path99||(_path99=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.62780534 1.79302154 3.715612 3.16865978 4.74609375 6.19140625 C5.1333061 10.06352976 4.98792233 13.46592052 3.74609375 17.19140625 C-2.65487243 18.51990867 -2.65487243 18.51990867 -5.19140625 17.12890625 C-6.72271576 14.33651832 -6.65297876 12.31747423 -6.25390625 9.19140625 C-3.25390625 7.19140625 -3.25390625 7.19140625 -0.25390625 7.19140625 C-0.25390625 7.85140625 -0.25390625 8.51140625 -0.25390625 9.19140625 C0.40609375 9.19140625 1.06609375 9.19140625 1.74609375 9.19140625 C1.39822667 7.2160388 1.39822667 7.2160388 0.74609375 5.19140625 C-2.2671482 3.68478528 -4.93677002 4.01370252 -8.25390625 4.19140625 C-10.74896587 6.68646587 -10.61339001 7.86469513 -10.87890625 11.31640625 C-10.95367187 12.22648437 -11.0284375 13.1365625 -11.10546875 14.07421875 C-11.15445312 14.77289063 -11.2034375 15.4715625 -11.25390625 16.19140625 C-11.91390625 15.53140625 -12.57390625 14.87140625 -13.25390625 14.19140625 C-13.25390625 13.20140625 -13.25390625 12.21140625 -13.25390625 11.19140625 C-13.88039063 11.22621094 -14.506875 11.26101563 -15.15234375 11.296875 C-15.96960938 11.32394531 -16.786875 11.35101563 -17.62890625 11.37890625 C-18.44101562 11.41371094 -19.253125 11.44851563 -20.08984375 11.484375 C-20.80398438 11.38769531 -21.518125 11.29101562 -22.25390625 11.19140625 C-24.25390625 8.19140625 -24.25390625 8.19140625 -24.19140625 4.62890625 C-24.21203125 3.49453125 -24.23265625 2.36015625 -24.25390625 1.19140625 C-25.24390625 0.53140625 -26.23390625 -0.12859375 -27.25390625 -0.80859375 C-18.4699821 -4.07703064 -8.41765091 -4.43278131 0 0 Z \",fill:\"#1B1108\",transform:\"translate(473.25390625,358.80859375)\"})),_path100||(_path100=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 2.31 3 4.62 3 7 C3.9075 7.0825 4.815 7.165 5.75 7.25 C9.48108518 8.11101966 10.48036492 9.22840141 13 12 C15.13309192 13.23512079 15.13309192 13.23512079 17 14 C17 14.66 17 15.32 17 16 C17.556875 16.2475 18.11375 16.495 18.6875 16.75 C21.47520651 18.25686838 23.69346503 19.8181426 26 22 C26.8125 24.75 26.8125 24.75 27 27 C26.16855469 26.36771484 26.16855469 26.36771484 25.3203125 25.72265625 C24.59585938 25.17480469 23.87140625 24.62695312 23.125 24.0625 C22.40570312 23.51722656 21.68640625 22.97195313 20.9453125 22.41015625 C19.05642921 20.96035376 19.05642921 20.96035376 17 20 C17 19.34 17 18.68 17 18 C11.17745757 16.03181664 6.16618181 14.59785771 0 15 C2.475 15.495 2.475 15.495 5 16 C5 16.66 5 17.32 5 18 C3.30230469 18.19916016 3.30230469 18.19916016 1.5703125 18.40234375 C0.08851821 18.5805342 -1.39325136 18.75893029 -2.875 18.9375 C-3.62136719 19.02451172 -4.36773438 19.11152344 -5.13671875 19.20117188 C-9.1953231 19.63326063 -9.1953231 19.63326063 -13 21 C-9.04 21.33 -5.08 21.66 -1 22 C-1 22.33 -1 22.66 -1 23 C-6.28 23.33 -11.56 23.66 -17 24 C-17 23.01 -17 22.02 -17 21 C-18.98 21.66 -20.96 22.32 -23 23 C-19.87608257 19.77531104 -16.63668034 16.70607022 -13.3125 13.6875 C-12.54550781 12.99011719 -11.77851562 12.29273438 -10.98828125 11.57421875 C-9 10 -9 10 -7 10 C-6.773125 9.46375 -6.54625 8.9275 -6.3125 8.375 C-4.53064818 5.15069671 -2.51917702 2.70350705 0 0 Z \",fill:\"#100B06\",transform:\"translate(529,312)\"})),_path101||(_path101=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.4540625 0.10054688 1.4540625 0.10054688 2.9375 0.203125 C10.60416667 0.80208333 10.60416667 0.80208333 13 2 C12 3 12 3 8.9375 3.0625 C7.968125 3.041875 6.99875 3.02125 6 3 C6.04125 4.093125 6.0825 5.18625 6.125 6.3125 C6 10 6 10 4 13 C0.92078868 13.25660094 -1.21136993 13.39431504 -4 12 C-4.04898437 12.63808594 -4.09796875 13.27617187 -4.1484375 13.93359375 C-4.22320312 14.75988281 -4.29796875 15.58617187 -4.375 16.4375 C-4.44460938 17.26121094 -4.51421875 18.08492188 -4.5859375 18.93359375 C-4.72257812 19.61550781 -4.85921875 20.29742187 -5 21 C-5.66 21.33 -6.32 21.66 -7 22 C-6.96519531 21.33613281 -6.93039062 20.67226563 -6.89453125 19.98828125 C-6.77153724 15.97633383 -6.76160717 12.70115539 -8.0625 8.875 C-9.98344551 6.66691508 -9.98344551 6.66691508 -13.5 6.375 C-17.15595417 6.62429881 -17.15595417 6.62429881 -18.9375 9.5 C-19.4634375 10.7375 -19.4634375 10.7375 -20 12 C-19.34 12 -18.68 12 -18 12 C-17.67 11.01 -17.34 10.02 -17 9 C-15.68 9 -14.36 9 -13 9 C-10.8357765 12.24633524 -10.62430144 13.24301443 -11 17 C-13 20 -13 20 -14.9453125 20.51171875 C-15.66460937 20.56972656 -16.38390625 20.62773437 -17.125 20.6875 C-18.40375 20.790625 -19.6825 20.89375 -21 21 C-23.48690833 17.2696375 -23.62281125 14.31870433 -23 10 C-21.05883775 5.41179831 -18.73679094 3.59288057 -14.3125 1.625 C-9.36084336 -0.11966265 -5.19103004 -0.44396967 0 0 Z \",fill:\"#130D05\",transform:\"translate(509,356)\"})),_path102||(_path102=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 0.99 29 1.98 29 3 C23.555 2.505 23.555 2.505 18 2 C18 15.53 18 29.06 18 43 C15.36 43 12.72 43 10 43 C10.33 29.47 10.66 15.94 11 2 C5.06 2.495 5.06 2.495 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#D7B986\",transform:\"translate(493,419)\"})),_path103||(_path103=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10 0 10 0 14 3 C14 3.66 14 4.32 14 5 C14.66 5 15.32 5 16 5 C16.62101411 14.84997386 16.62101411 14.84997386 14.3125 19.125 C11.7943912 21.16670984 10.20280069 21.73309994 7 22 C7 22.66 7 23.32 7 24 C5.02 24 3.04 24 1 24 C1 28.95 1 33.9 1 39 C0.67 39 0.34 39 0 39 C0 26.13 0 13.26 0 0 Z \",fill:\"#080504\",transform:\"translate(170,421)\"})),_path104||(_path104=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.86625 0.598125 1.7325 1.19625 2.625 1.8125 C5.62619944 3.82044534 8.73775706 5.44655098 12 7 C12 7.66 12 8.32 12 9 C12.86625 9.226875 13.7325 9.45375 14.625 9.6875 C18 11 18 11 20.73046875 13.3984375 C24.09245165 16.28438281 27.52140593 17.5638529 31.6875 18.9375 C38.52772488 21.33316209 44.76313675 24.27373848 51 28 C51 28.33 51 28.66 51 29 C39.45963681 29.6758998 29.09348988 26.59233899 19 21 C17.97865512 20.02181053 16.97403883 19.02530403 16 18 C14.34561387 17.30341637 12.67745682 16.63903117 11 16 C8.1875 14.5 8.1875 14.5 6 13 C6 12.34 6 11.68 6 11 C4.9790625 10.6596875 4.9790625 10.6596875 3.9375 10.3125 C0.20385676 8.64427643 -2.72163421 6.44270392 -6 4 C-3.99967627 2.99983813 -2.16874252 2.50603992 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#A3814B\",transform:\"translate(378,530)\"})),_path105||(_path105=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.77422298 3.81937838 5.4882816 8.35656499 6.29296875 14.0859375 C6.57215212 18.02468673 6.05920449 20.42885198 3.625 23.4375 C0.02289513 26.95384047 0.02289513 26.95384047 -3.1640625 27.09765625 C-4.38222656 27.08025391 -4.38222656 27.08025391 -5.625 27.0625 C-6.85089844 27.04896484 -6.85089844 27.04896484 -8.1015625 27.03515625 C-8.72804688 27.02355469 -9.35453125 27.01195312 -10 27 C-10 26.01 -10 25.02 -10 24 C-10.804375 23.71125 -11.60875 23.4225 -12.4375 23.125 C-15 22 -15 22 -16 20 C-16.12082534 18.33654418 -16.1753794 16.66779409 -16.1875 15 C-16.20167969 14.113125 -16.21585937 13.22625 -16.23046875 12.3125 C-16 10 -16 10 -14 8 C-11.6171875 7.8046875 -11.6171875 7.8046875 -8.875 7.875 C-7.50988281 7.90207031 -7.50988281 7.90207031 -6.1171875 7.9296875 C-5.41851562 7.95289063 -4.71984375 7.97609375 -4 8 C-4.474375 8.763125 -4.94875 9.52625 -5.4375 10.3125 C-7.10106097 12.96410548 -7.10106097 12.96410548 -8 16 C-4.51400668 15.54086322 -4.51400668 15.54086322 -1 14 C0.54086322 10.48599332 0.54086322 10.48599332 1 7 C-1.475 6.01 -1.475 6.01 -4 5 C-2.68 4.67 -1.36 4.34 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#100A05\",transform:\"translate(388,232)\"})),_path106||(_path106=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.32627475 -0.47266289 12.37384327 0.90133798 19 4 C19 4.66 19 5.32 19 6 C19.86625 6.4021875 19.86625 6.4021875 20.75 6.8125 C23.07363365 8.0388622 25.03824646 9.24843434 27 11 C27 11.99 27 12.98 27 14 C27.66 14 28.32 14 29 14 C29.66 15.65 30.32 17.3 31 19 C31.99 19 32.98 19 34 19 C33.01 17.35 32.02 15.7 31 14 C32.32 12.68 33.64 11.36 35 10 C35 13.3 35 16.6 35 20 C26.20676379 19.7745324 21.18567502 17.92942211 14 13 C12.33910789 11.99043813 10.67392887 10.98779548 9 10 C9 10.99 9 11.98 9 13 C5 11 5 11 3.28125 9.96875 C0.25548609 8.68383656 -2.47673614 8.57139583 -5.75 8.375 C-6.92046875 8.30023438 -8.0909375 8.22546875 -9.296875 8.1484375 C-10.18890625 8.09945313 -11.0809375 8.05046875 -12 8 C-9.57920846 5.06956813 -7.7413768 4.44241098 -4 4 C-2.06348981 3.93466565 -0.12497139 3.91415697 1.8125 3.9375 C2.78832031 3.94652344 3.76414062 3.95554687 4.76953125 3.96484375 C5.87361328 3.98224609 5.87361328 3.98224609 7 4 C7 3.34 7 2.68 7 2 C4.69 1.67 2.38 1.34 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#D1AF7A\",transform:\"translate(527,326)\"})),_path107||(_path107=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.50403768 1.29009643 3.00309926 2.58213789 3.5 3.875 C3.7784375 4.59429687 4.056875 5.31359375 4.34375 6.0546875 C5 8 5 8 5 10 C7.74051101 11.49230412 10.12248263 12.34572869 13.1953125 12.859375 C24.77958486 14.94604878 35.27575201 17.28239769 43 27 C43.8125 29.8125 43.8125 29.8125 44 32 C43.01 31.34 42.02 30.68 41 30 C41 29.34 41 28.68 41 28 C39.35 27.67 37.7 27.34 36 27 C36 25.68 36 24.36 36 23 C35.05125 22.690625 34.1025 22.38125 33.125 22.0625 C30 21 30 21 28 20 C28 19.34 28 18.68 28 18 C25.36 17.67 22.72 17.34 20 17 C19.67 18.32 19.34 19.64 19 21 C17.02 20.01 15.04 19.02 13 18 C12.67 19.32 12.34 20.64 12 22 C12.99 22 13.98 22 15 22 C15.33 23.32 15.66 24.64 16 26 C17.32 26.33 18.64 26.66 20 27 C20 27.66 20 28.32 20 29 C20.99 29.33 21.98 29.66 23 30 C24.46420636 33.50393891 24.16798116 37.38519118 24.1875 41.125 C24.20167969 42.36507812 24.21585937 43.60515625 24.23046875 44.8828125 C24 48 24 48 22 50 C22.05800781 49.2265625 22.11601562 48.453125 22.17578125 47.65625 C22.49155659 40.36635067 21.9575475 35.53369491 17 30 C15.35135455 28.64444707 13.68996005 27.30368347 12 26 C12 25.01 12 24.02 12 23 C11.0925 22.731875 10.185 22.46375 9.25 22.1875 C4.93155949 20.60960828 2.84776645 19.24137229 0.25 15.4375 C-1.39540248 10.91264318 -1.44624357 6.7713736 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#957440\",transform:\"translate(268,262)\"})),_path108||(_path108=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.185625 0.9590625 0.185625 0.9590625 0.375 1.9375 C0.684375 2.9584375 0.684375 2.9584375 1 4 C1.66 4.33 2.32 4.66 3 5 C2.773125 5.763125 2.54625 6.52625 2.3125 7.3125 C1.71610541 9.96509872 1.71610541 9.96509872 3.125 11.75 C5.39019086 13.26012724 7.32142828 13.63803085 10 14 C9.55296014 9.52116304 9.55296014 9.52116304 7 6 C15.21324503 5.38013245 15.21324503 5.38013245 18.0625 7.625 C19.26153277 10.66254968 19.28742835 12.74247865 19 16 C16.90174339 19.86951219 14.266852 23.05242149 11 26 C7.21051634 26.67232775 5.40482627 26.70241314 2 25 C2 24.34 2 23.68 2 23 C1.360625 22.87625 0.72125 22.7525 0.0625 22.625 C-0.9584375 22.315625 -0.9584375 22.315625 -2 22 C-3.56474126 18.87051748 -3.22569951 15.55744398 -3.25 12.125 C-3.270625 11.40441406 -3.29125 10.68382812 -3.3125 9.94140625 C-3.33717261 6.59209927 -3.23691554 4.39200974 -1.484375 1.4921875 C-0.99453125 0.99976563 -0.5046875 0.50734375 0 0 Z \",fill:\"#0D0803\",transform:\"translate(574,234)\"})),_path109||(_path109=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.86724686 0.57344937 3.8614515 0.8614515 6 3 C6.45662153 5.19291082 6.820412 7.40585889 7.125 9.625 C7.37636719 11.40777344 7.37636719 11.40777344 7.6328125 13.2265625 C7.75398438 14.14179687 7.87515625 15.05703125 8 16 C9.32 16.33 10.64 16.66 12 17 C12 18.65 12 20.3 12 22 C2.1 22 -7.8 22 -18 22 C-17.67 20.35 -17.34 18.7 -17 17 C-17.66 17.33 -18.32 17.66 -19 18 C-19.33 18.99 -19.66 19.98 -20 21 C-21.45635371 21.22174933 -22.91522956 21.42698698 -24.375 21.625 C-25.59316406 21.79902344 -25.59316406 21.79902344 -26.8359375 21.9765625 C-27.55007813 21.98429688 -28.26421875 21.99203125 -29 22 C-29.66 21.34 -30.32 20.68 -31 20 C-28.36 20 -25.72 20 -23 20 C-23 18.68 -23 17.36 -23 16 C-23.66 16.33 -24.32 16.66 -25 17 C-28 17.1875 -28 17.1875 -31 17 C-33 15 -33 15 -33.23046875 12.9765625 C-33.21628906 12.20054687 -33.20210938 11.42453125 -33.1875 10.625 C-33.18105469 9.85414063 -33.17460937 9.08328125 -33.16796875 8.2890625 C-33.00595151 6.08110656 -32.60634894 4.12464668 -32 2 C-31.34 2 -30.68 2 -30 2 C-29.67 4.64 -29.34 7.28 -29 10 C-28.67 7.69 -28.34 5.38 -28 3 C-27.01 3 -26.02 3 -25 3 C-25 6.63 -25 10.26 -25 14 C-23.35 14.33 -21.7 14.66 -20 15 C-19.67 12.03 -19.34 9.06 -19 6 C-18.01 5.67 -17.02 5.34 -16 5 C-16 4.34 -16 3.68 -16 3 C-13.525 3.495 -13.525 3.495 -11 4 C-10.89167831 6.08218362 -10.81426459 8.16599129 -10.75 10.25 C-10.70359375 11.41015625 -10.6571875 12.5703125 -10.609375 13.765625 C-11 17 -11 17 -15 21 C-7.08 21 0.84 21 9 21 C9 20.01 9 19.02 9 18 C8.360625 17.773125 7.72125 17.54625 7.0625 17.3125 C5 16 5 16 4.25 13.8125 C4 11 4 11 4.1875 7.4375 C4.33532968 3.91884507 4.33532968 3.91884507 2 1.5625 C1.34 1.046875 0.68 0.53125 0 0 Z \",fill:\"#433826\",transform:\"translate(481,601)\"})),_path110||(_path110=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C1.99 3.33 2.98 3.66 4 4 C4.28875 4.7425 4.5775 5.485 4.875 6.25 C6.30330116 9.74140283 8.24300838 11.42680782 11 14 C15.08260146 17.96813599 18.93339302 22.02861073 22.60546875 26.37890625 C26.21095189 30.57015416 30.25259071 34.11621426 34.546875 37.5703125 C36 39 36 39 37 42 C34.84765625 42.7265625 34.84765625 42.7265625 32 43 C29.24609375 41.5234375 29.24609375 41.5234375 26.4375 39.375 C25.50808594 38.68148437 24.57867187 37.98796875 23.62109375 37.2734375 C21 35 21 35 18.84765625 32.2890625 C17.13409234 29.74492534 17.13409234 29.74492534 14 29 C12.29003579 26.94804294 10.69472273 24.90424411 9.125 22.75 C5.99826903 18.49496856 2.81757403 14.68053291 -1 11 C-3.38754923 8.17031203 -4.74299146 5.48094673 -6 2 C-4.68 2 -3.36 2 -2 2 C-2.33 3.32 -2.66 4.64 -3 6 C-2.34 6 -1.68 6 -1 6 C-0.01 7.485 -0.01 7.485 1 9 C1.33 7.68 1.66 6.36 2 5 C1.34 5 0.68 5 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#AF8F5B\",transform:\"translate(342,491)\"})),_path111||(_path111=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.775 0.74861111 5.775 0.74861111 8.0625 3.375 C9.93206048 7.73730778 10.11006153 11.75839864 9.375 16.4375 C7.48984777 19.01387471 6.18165143 20.03417428 3.375 21.4375 C0.0625 21.9375 0.0625 21.9375 -3.625 21.4375 C-6.60085754 19.00943713 -8.22709917 16.12291735 -9.10546875 12.40234375 C-9.3711095 8.67619381 -8.68101692 5.92876143 -6.5625 2.9375 C-3.625 0.4375 -3.625 0.4375 0 0 Z \",fill:\"#A58E66\",transform:\"translate(542.625,593.5625)\"})),_path112||(_path112=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7 14.19 7 28.38 7 43 C4.69 43 2.38 43 0 43 C0 28.81 0 14.62 0 0 Z \",fill:\"#C8AA77\",transform:\"translate(715,419)\"})),_path113||(_path113=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7 14.19 7 28.38 7 43 C4.69 43 2.38 43 0 43 C0 28.81 0 14.62 0 0 Z \",fill:\"#CAAC7B\",transform:\"translate(530,419)\"})),_path114||(_path114=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.06060606 0 9.06060606 0 15 4 C16 5 16 5 16.1328125 7.21484375 C16.13023437 8.11332031 16.12765625 9.01179688 16.125 9.9375 C16.12886719 11.28134766 16.12886719 11.28134766 16.1328125 12.65234375 C16 15 16 15 15 17 C14.34 17 13.68 17 13 17 C12.34 18.32 11.68 19.64 11 21 C7.37 21 3.74 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#0D0905\",transform:\"translate(133,439)\"})),_path115||(_path115=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.75481646 0.57634139 7.97048212 2.55068521 12 5 C12 5.66 12 6.32 12 7 C12.598125 7.103125 13.19625 7.20625 13.8125 7.3125 C16.28243264 8.08876455 17.32251235 9.07088921 19 11 C19 9.68 19 8.36 19 7 C19.66 7 20.32 7 21 7 C22.09370039 13.54902525 22.56691551 18.21913693 19 24 C16.8125 24.9375 16.8125 24.9375 15 25 C15 24.34 15 23.68 15 23 C14.4121875 22.72414063 13.824375 22.44828125 13.21875 22.1640625 C6.81155847 18.802543 2.20235255 13.95409502 0 7 C-0.28231943 4.55168892 -0.20613558 2.47362691 0 0 Z \",fill:\"#9B763C\",transform:\"translate(232,241)\"})),_path116||(_path116=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.26611328 1.48193359 3.26611328 1.48193359 4.6953125 3.5234375 C7.82561025 7.83447824 11.23790657 11.7379068 14.875 15.625 C15.73544922 16.56859375 15.73544922 16.56859375 16.61328125 17.53125 C20.20854694 21.3907557 23.94693131 24.64572263 28.23803711 27.71484375 C30 29 30 29 32.6875 31.375 C38.83020145 36.58441808 46.44845546 41.25781902 54 44 C54 45.65 54 47.3 54 49 C43.71979764 47.62930635 35.70902378 41.72429446 28 35 C28 34.34 28 33.68 28 33 C26.9790625 32.7215625 26.9790625 32.7215625 25.9375 32.4375 C20.06553389 29.56398467 16.16555253 25.13573216 14 19 C13.01 18.67 12.02 18.34 11 18 C7 12.62857143 7 12.62857143 7 10 C6.34 10 5.68 10 5 10 C4.67 8.68 4.34 7.36 4 6 C3.34 6 2.68 6 2 6 C1.34 4.02 0.68 2.04 0 0 Z \",fill:\"#83683B\",transform:\"translate(428,286)\"})),_path117||(_path117=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C0.55092852 10.05414306 -2.80713552 17.21070328 -8 25 C-8.27328125 25.75539063 -8.5465625 26.51078125 -8.828125 27.2890625 C-10.28423672 30.65753428 -12.35704947 33.33947506 -14.625 36.1875 C-15.07302979 36.75629883 -15.52105957 37.32509766 -15.98266602 37.91113281 C-16.89312057 39.06591885 -17.8056182 40.21909721 -18.72021484 41.37060547 C-19.85368729 42.81371785 -20.95478027 44.28213351 -22.05078125 45.75390625 C-31.73458352 58.5653962 -46.24441998 67.95428338 -60 76 C-60.66 76 -61.32 76 -62 76 C-62 76.66 -62 77.32 -62 78 C-65.47325181 79.1577506 -68.36067448 79.06866652 -72 79 C-72.33 78.34 -72.66 77.68 -73 77 C-72.45472656 76.88914062 -71.90945313 76.77828125 -71.34765625 76.6640625 C-57.61574261 72.77982736 -43.07845832 62.45246102 -33.3125 52.234375 C-32 51 -32 51 -30 51 C-29.75636719 50.43539062 -29.51273438 49.87078125 -29.26171875 49.2890625 C-27.76470019 46.57310932 -25.94366063 44.62720762 -23.8125 42.375 C-13.69496173 31.28462151 -7.32119586 18.95604551 -2 5 C-1.33575358 3.33236727 -0.66970414 1.66544846 0 0 Z \",fill:\"#68532E\",transform:\"translate(550,269)\"})),_path118||(_path118=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.1875 1.6875 2.1875 1.6875 4.1875 4.6875 C4.52772038 8.42992418 4.67904707 10.8161211 2.8125 14.125 C1.1875 15.6875 1.1875 15.6875 -0.8125 15.6875 C-0.8125 16.3475 -0.8125 17.0075 -0.8125 17.6875 C-7.64021306 18.51153433 -7.64021306 18.51153433 -10.6796875 16.375 C-13.59521888 13.25021995 -14.729282 11.30123276 -15.3125 7 C-14.57219962 2.09551001 -14.57219962 2.09551001 -12.8125 -0.3125 C-8.24651671 -1.83449443 -4.41357286 -2.05966734 0 0 Z \",fill:\"#A78F64\",transform:\"translate(664.8125,536.3125)\"})),_path119||(_path119=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.6430916 10.9777569 -9.25357003 17.45613573 -17.625 24 C-22.97931378 27.17292668 -28.65631832 29.61390468 -35 29 C-35 26.69 -35 24.38 -35 22 C-34.46632813 21.78085938 -33.93265625 21.56171875 -33.3828125 21.3359375 C-28.01668034 19.05208195 -23.10437204 16.36702692 -18.1640625 13.26953125 C-16 12 -16 12 -13 11 C-12.4225 10.278125 -11.845 9.55625 -11.25 8.8125 C-4.2 0 -4.2 0 0 0 Z \",fill:\"#AD8C55\",transform:\"translate(516,140)\"})),_path120||(_path120=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.99 0 1.98 0 3 C-1.6796875 4.60546875 -1.6796875 4.60546875 -3.875 6.1875 C-4.59429687 6.71730469 -5.31359375 7.24710938 -6.0546875 7.79296875 C-8 9 -8 9 -10 9 C-10.33 9.99 -10.66 10.98 -11 12 C-17.42017697 11.48638584 -21.51124124 9.73763464 -25.875 4.9375 C-27 3 -27 3 -27 0 C-26.01 0 -25.02 0 -24 0 C-24 -0.66 -24 -1.32 -24 -2 C-15.08362488 -6.54917098 -8.78804347 -3.80166871 0 0 Z \",fill:\"#8B6932\",transform:\"translate(496,192)\"})),_path121||(_path121=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.40507055 2.51679127 4.82464689 3.90404303 5.5 8.125 C4.95624041 11.25161765 4.55757816 12.20022278 2 14 C1.01 14.33 0.02 14.66 -1 15 C-1.928125 16.2684375 -1.928125 16.2684375 -2.875 17.5625 C-5 20 -5 20 -7.5 20.5625 C-10.90886319 19.79550578 -11.9911757 18.869749 -14 16 C-14.77556131 13.2068553 -14.90615118 10.95623776 -15 8 C-14.34 7.01 -13.68 6.02 -13 5 C-11.68 5 -10.36 5 -9 5 C-8.814375 4.0409375 -8.814375 4.0409375 -8.625 3.0625 C-8.41875 2.381875 -8.2125 1.70125 -8 1 C-5.11138291 -0.44430855 -3.20352299 -0.37688506 0 0 Z \",fill:\"#9E855D\",transform:\"translate(278,499)\"})),_path122||(_path122=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.52811793 0.4343145 16.53219681 2.53219681 22 8 C20.6078125 8.6496875 20.6078125 8.6496875 19.1875 9.3125 C15.57557805 11.12040142 15.57557805 11.12040142 13 14 C12.14287817 17.92847503 11.61923821 21.16455058 13 25 C7.94744036 24.36843005 3.70406799 22.86540627 -1 21 C-0.625 19.0625 -0.625 19.0625 0 17 C0.66 16.67 1.32 16.34 2 16 C2.4683265 13.41394668 2.4683265 13.41394668 2.625 10.4375 C2.69976562 9.42558594 2.77453125 8.41367187 2.8515625 7.37109375 C2.90054687 6.58863281 2.94953125 5.80617188 3 5 C2.34 5 1.68 5 1 5 C0.67 3.35 0.34 1.7 0 0 Z \",fill:\"#947F56\",transform:\"translate(396,587)\"})),_path123||(_path123=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C31.02 0 62.04 0 94 0 C94 0.66 94 1.32 94 2 C96.64 2 99.28 2 102 2 C102 2.33 102 2.66 102 3 C70.65 3 39.3 3 7 3 C7 2.34 7 1.68 7 1 C4.69 1 2.38 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#B99964\",transform:\"translate(338,488)\"})),_path124||(_path124=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.58292297 0.04094769 5.05773772 0.20435247 8.25 2 C11.73044886 6.02426899 12.94573486 9.90643935 12.73046875 15.30859375 C11.94232454 18.59573181 10.38316512 20.2446498 7.7109375 22.24609375 C1.48372602 24.94455206 -6.71839708 24.45457593 -13 22 C-15.75 20.3125 -15.75 20.3125 -17.75 17.3125 C-18.1875 14.3125 -18.1875 14.3125 -17.75 11.3125 C-14.89925356 9.00108396 -13.4360549 8.3125 -9.75 8.3125 C-9.78480469 9.23482422 -9.78480469 9.23482422 -9.8203125 10.17578125 C-9.83835937 10.98402344 -9.85640625 11.79226563 -9.875 12.625 C-9.90980469 13.82576172 -9.90980469 13.82576172 -9.9453125 15.05078125 C-9.90817322 17.59638576 -9.90817322 17.59638576 -7.75 20.3125 C-3.81830385 21.51174323 -0.02803585 21.8112457 3.8125 20.3125 C5.48213973 18.2610873 5.48213973 18.2610873 6 15.0625 C5.02044866 10.16474328 2.87109523 8.72989343 -1 5.79296875 C-1.5775 5.30441406 -2.155 4.81585938 -2.75 4.3125 C-2.75 3.6525 -2.75 2.9925 -2.75 2.3125 C-3.74 1.9825 -4.73 1.6525 -5.75 1.3125 C-4.10962605 -0.32787395 -2.25523159 0.06338669 0 0 Z \",fill:\"#DAB881\",transform:\"translate(828.75,438.6875)\"})),_path125||(_path125=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.1875 0.3125 2.1875 0.3125 4 2.0625 C5.1875 4.3125 5.1875 4.3125 5.1875 8.3125 C2.7125 7.8175 2.7125 7.8175 0.1875 7.3125 C0.8475 10.6125 1.5075 13.9125 2.1875 17.3125 C3.1775 17.6425 4.1675 17.9725 5.1875 18.3125 C4.8575 19.3025 4.5275 20.2925 4.1875 21.3125 C-2.2475 21.8075 -2.2475 21.8075 -8.8125 22.3125 C-8.626875 21.075 -8.44125 19.8375 -8.25 18.5625 C-7.86538777 15.54970423 -7.7250406 13.21239173 -8.8125 10.3125 C-9.8025 10.9725 -10.7925 11.6325 -11.8125 12.3125 C-12.8025 12.3125 -13.7925 12.3125 -14.8125 12.3125 C-14.53008359 10.85234709 -14.23623386 9.39440207 -13.9375 7.9375 C-13.77507812 7.12539063 -13.61265625 6.31328125 -13.4453125 5.4765625 C-12.8125 3.3125 -12.8125 3.3125 -10.8125 1.3125 C-7.20455103 0.72103296 -3.62912551 0.40323617 0 0 Z \",fill:\"#AC9669\",transform:\"translate(522.8125,597.6875)\"})),_path126||(_path126=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.66 0.66 -1.32 1.32 -2 2 C-0.30230469 2.29003906 -0.30230469 2.29003906 1.4296875 2.5859375 C2.91153202 2.84854286 4.39329892 3.11158648 5.875 3.375 C6.62136719 3.50132812 7.36773437 3.62765625 8.13671875 3.7578125 C13.7734375 4.7734375 13.7734375 4.7734375 16 7 C14.99839844 6.99097656 13.99679687 6.98195313 12.96484375 6.97265625 C5.44862178 6.91603386 5.44862178 6.91603386 -1.4140625 9.51953125 C-3.08752176 11.27039722 -4.56135165 13.053853 -6 15 C-8.71217276 17.54779865 -9.46979582 17.9694113 -13.25 18.1875 C-14.61125 18.0946875 -14.61125 18.0946875 -16 18 C-13.31158141 15.74754119 -11.35358125 14.11786042 -8 13 C-8 12.34 -8 11.68 -8 11 C-8.53625 11.33 -9.0725 11.66 -9.625 12 C-12.5391061 13.22699204 -14.86867708 13.14233286 -18 13 C-18.33 13.99 -18.66 14.98 -19 16 C-19.99 15.67 -20.98 15.34 -22 15 C-16.58877841 3.32315341 -16.58877841 3.32315341 -11.1875 0.5625 C-7.35419348 -0.11396586 -3.88936951 -0.13411619 0 0 Z \",fill:\"#D6B278\",transform:\"translate(434,327)\"})),_path127||(_path127=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.495 0.99 0.495 2 1 C2.37890625 3.6171875 2.37890625 3.6171875 2.5625 6.875 C2.75886324 10.20115284 2.94375608 12.83126825 4 16 C5.32 16 6.64 16 8 16 C7.505 17.485 7.505 17.485 7 19 C-16.43 19 -39.86 19 -64 19 C-60.51629717 15.51629717 -59.93787856 15.61767461 -55.2434082 15.56762695 C-54.06241043 15.54783279 -52.88141266 15.52803864 -51.66462708 15.50764465 C-49.75202339 15.49805977 -49.75202339 15.49805977 -47.80078125 15.48828125 C-46.49545944 15.47033005 -45.19013763 15.45237885 -43.84526062 15.43388367 C-40.37817404 15.38636947 -36.91115259 15.35656978 -33.44384766 15.33044434 C-29.90449152 15.30064563 -26.36535987 15.25411304 -22.82617188 15.20898438 C-15.88424242 15.12293555 -8.94223826 15.05559746 -2 15 C-1.90912109 13.50146484 -1.90912109 13.50146484 -1.81640625 11.97265625 C-1.73261719 10.68230469 -1.64882813 9.39195312 -1.5625 8.0625 C-1.48128906 6.77472656 -1.40007813 5.48695313 -1.31640625 4.16015625 C-1 1 -1 1 0 0 Z \",fill:\"#CDAA72\",transform:\"translate(653,371)\"})),_path128||(_path128=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-2.3 4.32 -5.6 5.64 -9 7 C10.8 7.495 10.8 7.495 31 8 C31 8.33 31 8.66 31 9 C-42.59 9 -116.18 9 -192 9 C-192 8.67 -192 8.34 -192 8 C-132.93 7.67 -73.86 7.34 -13 7 C-12.67 6.34 -12.34 5.68 -12 5 C-13.32 5 -14.64 5 -16 5 C-15.67 4.34 -15.34 3.68 -15 3 C-10.38 3 -5.76 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#8D764F\",transform:\"translate(673,382)\"})),_path129||(_path129=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7 13.86 7 27.72 7 42 C5.02 42 3.04 42 1 42 C0.505 21.21 0.505 21.21 0 0 Z \",fill:\"#CEAE7D\",transform:\"translate(315,419)\"})),_path130||(_path130=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.42106076 0.25341191 4.30782184 1.30782184 6.8125 3.8125 C9 7 9 7 8.8125 9.375 C8.544375 9.91125 8.27625 10.4475 8 11 C7.566875 10.360625 7.13375 9.72125 6.6875 9.0625 C5.08760823 6.73253997 5.08760823 6.73253997 2 6 C1.79375 6.556875 1.5875 7.11375 1.375 7.6875 C0.03153247 9.94696811 -1.05157702 10.9998656 -3.0625 12.625 C-6.00824713 14.67119397 -6.00824713 14.67119397 -7 17 C-4.22073512 15.45596395 -2.12564331 14.14134872 0 11.75 C0.66 11.1725 1.32 10.595 2 10 C4.75 10.25 4.75 10.25 7 11 C7 11.66 7 12.32 7 13 C7.99 13.33 8.98 13.66 10 14 C9.67 15.98 9.34 17.96 9 20 C8.67 19.34 8.34 18.68 8 18 C7.01 18.33 6.02 18.66 5 19 C5.33 20.32 5.66 21.64 6 23 C-0.16836914 25.38323353 -0.16836914 25.38323353 -4 24 C-8.3115928 21.1256048 -11.63835184 18.14400416 -13 13 C-11.9275 12.773125 -10.855 12.54625 -9.75 12.3125 C-5.58706094 10.85547133 -4.49088535 9.50569049 -2 6 C-1.34 6 -0.68 6 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#AB9168\",transform:\"translate(287,512)\"})),_path131||(_path131=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.763125 2.28875 2.52625 2.5775 3.3125 2.875 C6.93374365 4.39086944 9.24004556 6.48009111 11 10 C11.40921325 14.88695056 11.47401914 19.48906399 10 24.1875 C8 26 8 26 4.125 26.625 C0.85971035 26.39606825 -0.13989073 25.90673952 -3 24 C-5.68652977 19.97020535 -5.40344574 17.76065969 -5 13 C-3.68 12.67 -2.36 12.34 -1 12 C-1 14.97 -1 17.94 -1 21 C0.9914056 21.38133299 2.99279077 21.71325582 5 22 C6.28612676 20.94021067 6.28612676 20.94021067 6.09765625 18.49609375 C6.08605469 17.48675781 6.07445312 16.47742188 6.0625 15.4375 C6.05347656 14.42558594 6.04445313 13.41367187 6.03515625 12.37109375 C6.02355469 11.58863281 6.01195312 10.80617188 6 10 C5.34 10 4.68 10 4 10 C3.62875 9.360625 3.2575 8.72125 2.875 8.0625 C-0.0125068 4.88624252 -2.80002643 5.2754081 -7 5 C-7 5.66 -7 6.32 -7 7 C-8.32 7.33 -9.64 7.66 -11 8 C-11 8.66 -11 9.32 -11 10 C-12.64453125 11.65625 -12.64453125 11.65625 -14.8125 13.5 C-15.52019531 14.1084375 -16.22789062 14.716875 -16.95703125 15.34375 C-19 17 -19 17 -22 19 C-20.7580393 15.56072421 -19.44259716 12.74792181 -17 10 C-16.34 10 -15.68 10 -15 10 C-14.7525 9.4225 -14.505 8.845 -14.25 8.25 C-10.94972908 2.30951234 -6.70716934 0 0 0 Z \",fill:\"#8C7043\",transform:\"translate(561,286)\"})),_path132||(_path132=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.01 2.485 1.01 2.485 0 4 C0.928125 4.0825 1.85625 4.165 2.8125 4.25 C6 5 6 5 7.875 6.9375 C9 9 9 9 9 11 C9.99 11 10.98 11 12 11 C12.0928125 9.39125 12.0928125 9.39125 12.1875 7.75 C13 4 13 4 15.0625 1.5 C19.18432916 -0.60476383 21.51629923 0.08806086 26 1 C26 1.33 26 1.66 26 2 C24.39125 2.0928125 24.39125 2.0928125 22.75 2.1875 C18.98340793 2.69765405 18.98340793 2.69765405 16.625 5 C14.48114905 8.95787867 14.19371646 12.55420722 14 17 C12.35 17.33 10.7 17.66 9 18 C7.89459074 20.78918149 7.89459074 20.78918149 8 23 C8.99 23.66 9.98 24.32 11 25 C10.67 25.99 10.34 26.98 10 28 C3.93184334 28.89898617 -1.86403867 29.08522169 -8 29 C-7.505 24.545 -7.505 24.545 -7 20 C-8.65 20 -10.3 20 -12 20 C-13.45445618 14.50538777 -12.8444029 9.93029836 -10 5 C-8.906875 5.103125 -7.81375 5.20625 -6.6875 5.3125 C-5.470625 5.209375 -4.25375 5.10625 -3 5 C-0.99135641 2.6273026 -0.99135641 2.6273026 0 0 Z M-2.03515625 6.1640625 C-6.48297481 6.49218807 -6.48297481 6.49218807 -10 9 C-10.67651207 11.19704511 -10.67651207 11.19704511 -11.125 13.625 C-11.37636719 14.85089844 -11.37636719 14.85089844 -11.6328125 16.1015625 C-11.75398438 16.72804688 -11.87515625 17.35453125 -12 18 C-9.83125748 17.49396008 -8.00032373 17.00016187 -6 16 C-4.875 23.5 -4.875 23.5 -6 28 C0.435 27.505 0.435 27.505 7 27 C7.33 26.01 7.66 25.02 8 24 C7.01 23.67 6.02 23.34 5 23 C4.34 19.7 3.68 16.4 3 13 C5.475 13.495 5.475 13.495 8 14 C7.45276317 10.62537285 6.9451 8.91765 5 6 C2.59679225 5.71726968 0.36820228 5.97031767 -2.03515625 6.1640625 Z \",fill:\"#3C2F1F\",transform:\"translate(520,592)\"})),_path133||(_path133=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.41805831 0.28482368 2.83440379 0.57818144 4.25 0.875 C5.03890625 1.03742187 5.8278125 1.19984375 6.640625 1.3671875 C9 2 9 2 13 4 C13 7.3 13 10.6 13 14 C11.35 13.34 9.7 12.68 8 12 C7.67 13.32 7.34 14.64 7 16 C8.32 16 9.64 16 11 16 C11 16.66 11 17.32 11 18 C9.35 18.66 7.7 19.32 6 20 C6 20.66 6 21.32 6 22 C1.92737111 22.27102027 -0.62470093 21.52728501 -4.25 19.6875 C-5.12140625 19.25824219 -5.9928125 18.82898438 -6.890625 18.38671875 C-9 17 -9 17 -10 14 C-9.401875 13.7525 -8.80375 13.505 -8.1875 13.25 C-5.71352479 11.83629988 -4.56629745 10.34944617 -3 8 C-3 8.66 -3 9.32 -3 10 C-2.34 10 -1.68 10 -1 10 C-1 10.66 -1 11.32 -1 12 C-1.66 12 -2.32 12 -3 12 C-3.33 13.65 -3.66 15.3 -4 17 C-3.01 17 -2.02 17 -1 17 C-0.9175 16.360625 -0.835 15.72125 -0.75 15.0625 C0.29520372 10.79458483 2.14091826 6.96892333 4 3 C2.68 3.33 1.36 3.66 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#AF966C\",transform:\"translate(364,574)\"})),_path134||(_path134=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C6 13.53 6 27.06 6 41 C4.02 41 2.04 41 0 41 C0 27.47 0 13.94 0 0 Z \",fill:\"#D9B781\",transform:\"translate(164,420)\"})),_path135||(_path135=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.125 5.625 C2.08375 6.73875 2.0425 7.8525 2 9 C1.34 9 0.68 9 0 9 C-0.268125 8.030625 -0.53625 7.06125 -0.8125 6.0625 C-1.204375 5.051875 -1.59625 4.04125 -2 3 C-2.99 2.67 -3.98 2.34 -5 2 C-5 2.66 -5 3.32 -5 4 C-4.34 4 -3.68 4 -3 4 C-2.67 5.65 -2.34 7.3 -2 9 C-3.6875 9.8125 -3.6875 9.8125 -6 10 C-8.75 7.5625 -8.75 7.5625 -11 5 C-10.65066406 5.60328125 -10.30132813 6.2065625 -9.94140625 6.828125 C-9.48636719 7.62734375 -9.03132812 8.4265625 -8.5625 9.25 C-7.88380859 10.43335938 -7.88380859 10.43335938 -7.19140625 11.640625 C-6.10688398 13.78833468 -5.46851284 15.65205061 -5 18 C-4.01 18 -3.02 18 -2 18 C-2.33 17.401875 -2.66 16.80375 -3 16.1875 C-4 14 -4 14 -4 11 C-3.236875 11.309375 -2.47375 11.61875 -1.6875 11.9375 C0.18789677 12.67893593 2.08684652 13.36228217 4 14 C3.67 13.01 3.34 12.02 3 11 C6.3 11 9.6 11 13 11 C13 11.99 13 12.98 13 14 C11.27398621 14.81917642 9.5440353 15.63006016 7.8125 16.4375 C6.36810547 17.11619141 6.36810547 17.11619141 4.89453125 17.80859375 C2.23368414 18.90381422 -0.16784755 19.54954796 -3 20 C-3 20.66 -3 21.32 -3 22 C-4.65 22.33 -6.3 22.66 -8 23 C-8.10957031 22.40832031 -8.21914063 21.81664062 -8.33203125 21.20703125 C-9.59884549 14.648905 -9.59884549 14.648905 -13 9 C-15.59122743 8.11341534 -15.59122743 8.11341534 -18 8 C-16.60096798 3.80290393 -14.28195976 3.02553617 -10.4921875 1.015625 C-6.70632902 -0.52720134 -4.04713175 -0.49701618 0 0 Z \",fill:\"#C1A576\",transform:\"translate(621,565)\"})),_path136||(_path136=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C2.66 2 3.32 2 4 2 C4.495 10.415 4.495 10.415 5 19 C5.66 19 6.32 19 7 19 C7.33 13.72 7.66 8.44 8 3 C8.33 3 8.66 3 9 3 C9.63184722 17.1463571 7.85089715 26.08630829 -0.89453125 37.703125 C-3.7382882 40.80540531 -5.9772005 41.9104918 -10 43 C-5.71 43 -1.42 43 3 43 C1 45 1 45 -2.6953125 45.1953125 C-4.17200108 45.182009 -5.64862358 45.15814835 -7.125 45.125 C-7.87910156 45.11597656 -8.63320313 45.10695313 -9.41015625 45.09765625 C-11.27357254 45.0740687 -13.13682593 45.03819719 -15 45 C-15 44.01 -15 43.02 -15 42 C-17.97 42.495 -17.97 42.495 -21 43 C-18.4345406 40.4345406 -16.52313332 40.45953913 -13 40 C-13 39.34 -13 38.68 -13 38 C-11.390625 36.66796875 -11.390625 36.66796875 -9.25 35.1875 C-5.90039758 32.75357373 -3.37738114 30.43399498 -1 27 C-0.47664062 26.30003906 0.04671875 25.60007812 0.5859375 24.87890625 C2.49443846 20.99336701 2.4045952 17.76584971 2.3125 13.5 C2.31572266 12.75363281 2.31894531 12.00726563 2.32226562 11.23828125 C2.28153097 7.05372112 1.90221586 3.81958882 0 0 Z \",fill:\"#A3875B\",transform:\"translate(597,333)\"})),_path137||(_path137=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.58007812 0.42152344 1.16015625 0.84304688 1.7578125 1.27734375 C7.81444492 5.53046009 7.81444492 5.53046009 15 7 C15 7.66 15 8.32 15 9 C15.680625 8.938125 16.36125 8.87625 17.0625 8.8125 C20.91936125 9.05868263 23.51079594 10.35802162 27 12 C27 12.33 27 12.66 27 13 C23.7 12.67 20.4 12.34 17 12 C17 11.34 17 10.68 17 10 C16.01 10.495 16.01 10.495 15 11 C15 12.32 15 13.64 15 15 C19.29 15.33 23.58 15.66 28 16 C28.33 17.32 28.66 18.64 29 20 C26.69 21.98 24.38 23.96 22 26 C22 23 22 23 24 20.8125 C24.99 19.9153125 24.99 19.9153125 26 19 C20.59464656 18.81033848 16.0448548 18.79860881 11 21 C8.9883279 23.00349457 7.22284601 25.07954357 5.48046875 27.3203125 C4.99191406 27.87460937 4.50335938 28.42890625 4 29 C3.34 29 2.68 29 2 29 C2 29.99 2 30.98 2 32 C0.515 32.495 0.515 32.495 -1 33 C-1.28883414 28.93465943 -0.57875609 26.66941645 1.5 23.1875 C1.9640625 22.39730469 2.428125 21.60710937 2.90625 20.79296875 C3.2671875 20.20128906 3.628125 19.60960937 4 19 C4.66 19 5.32 19 6 19 C6 18.34 6 17.68 6 17 C10.38461538 14 10.38461538 14 13 14 C13 13.34 13 12.68 13 12 C11.96875 11.814375 10.9375 11.62875 9.875 11.4375 C5.25504834 10.13902071 2.45423192 7.03644737 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#7F653A\",transform:\"translate(373,269)\"})),_path138||(_path138=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C4.84155813 7.11806535 2.75701509 11.84099603 0.75 17.625 C0.09380778 19.59811331 -0.55986245 21.57206725 -1.2109375 23.546875 C-1.52385742 24.48982422 -1.83677734 25.43277344 -2.15917969 26.40429688 C-4.56538832 33.83252283 -6.25312395 41.23248912 -7 49 C-7.33 49 -7.66 49 -8 49 C-8.05423638 47.08364783 -8.09289963 45.16685075 -8.125 43.25 C-8.14820313 42.18265625 -8.17140625 41.1153125 -8.1953125 40.015625 C-8.00487687 37.07529894 -7.52670104 35.47638122 -6 33 C-6.66 33 -7.32 33 -8 33 C-8.33 33.99 -8.66 34.98 -9 36 C-9.99 36.495 -9.99 36.495 -11 37 C-11.2816002 31.74346289 -10.93009856 28.19177984 -8.84765625 23.26171875 C-7.83767253 20.56687738 -7.24801547 17.87140977 -6.625 15.0625 C-5.28678767 9.43055828 -3.10542101 4.86065897 0 0 Z \",fill:\"#B49767\",transform:\"translate(322,327)\"})),_path139||(_path139=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.928125 1.0209375 -0.928125 1.0209375 -1.875 2.0625 C-7.82775937 10.29131443 -6.80580257 21.80365608 -5.546875 31.484375 C-5.08924406 34.00788278 -4.592046 36.504949 -4 39 C-7.8046875 38.2109375 -7.8046875 38.2109375 -9.5625 36.3125 C-14.26812982 28.74257377 -14.77313205 22.81571346 -14 14 C-13.11406784 10.4025785 -11.65583054 7.31166108 -10 4 C-9.34 4 -8.68 4 -8 4 C-7.67 3.01 -7.34 2.02 -7 1 C-4.53721199 -0.231394 -2.7204945 -0.07159196 0 0 Z \",fill:\"#CEAD7A\",transform:\"translate(466,420)\"})),_path140||(_path140=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C3 2.66 3 3.32 3 4 C0.69 3.67 -1.62 3.34 -4 3 C-4 4.98 -4 6.96 -4 9 C-3.08734375 8.89171875 -3.08734375 8.89171875 -2.15625 8.78125 C3.73186263 8.15780278 9.58295044 7.8662425 15.5 7.8125 C16.19416016 7.79960937 16.88832031 7.78671875 17.60351562 7.7734375 C21.30229636 7.76617787 22.8378987 7.89193247 26 10 C25.67 10.99 25.34 11.98 25 13 C24.34 12.67 23.68 12.34 23 12 C23 12.66 23 13.32 23 14 C22.42967041 13.99476318 21.85934082 13.98952637 21.27172852 13.98413086 C18.70199677 13.96341779 16.13228253 13.9503581 13.5625 13.9375 C12.66466797 13.92912109 11.76683594 13.92074219 10.84179688 13.91210938 C9.98779297 13.90888672 9.13378906 13.90566406 8.25390625 13.90234375 C7.46314697 13.89710693 6.6723877 13.89187012 5.85766602 13.88647461 C3.98407311 13.79504091 3.98407311 13.79504091 3 15 C-3.83473389 15.44817927 -3.83473389 15.44817927 -7.4375 14.0625 C-9.9382732 10.76147937 -9.83042096 7.04446014 -10 3 C-6.5217919 0.61494302 -4.24627291 -0.55872012 0 0 Z \",fill:\"#9A7E52\",transform:\"translate(449,343)\"})),_path141||(_path141=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 3 2 3 1.84765625 5.71484375 C0.84446417 9.60279094 -0.72904321 13.0148778 -2.5625 16.5625 C-3.09061279 17.59890625 -3.09061279 17.59890625 -3.62939453 18.65625 C-7.049548 25.26905227 -10.60732017 31.97811027 -15 38 C-15.66 38 -16.32 38 -17 38 C-17.26554688 38.58265625 -17.53109375 39.1653125 -17.8046875 39.765625 C-19.90145906 43.68508034 -23.00329506 46.74711551 -26 50 C-26.57621094 50.64195312 -27.15242187 51.28390625 -27.74609375 51.9453125 C-37.40047326 62.20179309 -49.73206368 69.32534771 -62 76 C-62.66 75.01 -63.32 74.02 -64 73 C-62.88882812 72.443125 -61.77765625 71.88625 -60.6328125 71.3125 C-52.02219844 66.92532092 -44.23719095 62.48722298 -37 56 C-36.16082031 55.27941406 -35.32164062 54.55882812 -34.45703125 53.81640625 C-17.42642418 38.95005182 -7.20221766 21.2695279 0 0 Z \",fill:\"#634E2D\",transform:\"translate(546,266)\"})),_path142||(_path142=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-4.92984325 2.03993514 -8.57960425 3.40652968 -14 3 C-14 3.66 -14 4.32 -14 5 C-11.69 5.33 -9.38 5.66 -7 6 C-18.33544315 13.5569621 -36.85479127 11.14168488 -50 11 C-50 9.35 -50 7.7 -50 6 C-49.41734375 5.95512451 -48.8346875 5.91024902 -48.234375 5.86401367 C-34.34888896 4.76829381 -20.7344135 3.40511575 -7.25 -0.25 C-4.07745723 -0.98212525 -2.97626871 -0.90582091 0 0 Z \",fill:\"#A78857\",transform:\"translate(532,560)\"})),_path143||(_path143=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C7.91644453 9.01348164 6.54646971 18.31226282 3.94921875 27.91796875 C3.63597656 28.60503906 3.32273437 29.29210937 3 30 C2.01 30.33 1.02 30.66 0 31 C-4.05404352 23.14529068 -5.10462532 15.78389556 -4 7 C-2.95414974 4.1734995 -1.84285288 2.4187444 0 0 Z \",fill:\"#946E35\",transform:\"translate(481,525)\"})),_path144||(_path144=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.875 0.625 1.875 0.625 4 2 C6.18406033 6.61615275 6.27590823 11.10899597 6.1875 16.125 C6.18685547 16.82753906 6.18621094 17.53007813 6.18554688 18.25390625 C6.15678179 21.63540136 6.04671748 24.76773641 5 28 C4.34 28 3.68 28 3 28 C3 28.66 3 29.32 3 30 C1.68 29.67 0.36 29.34 -1 29 C-1.33 27.35 -1.66 25.7 -2 24 C-2.66 24 -3.32 24 -4 24 C-4.56377723 15.16749011 -3.26258646 8.21472661 0 0 Z \",fill:\"#A5854F\",transform:\"translate(481,104)\"})),_path145||(_path145=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.49644963 -0.31785906 5.397402 -0.39644605 8.375 1.5625 C10.63913895 4.95870843 10.64269755 7.00099302 10 11 C8.1875 13.5 8.1875 13.5 5 15 C2.31506326 15.01804999 -0.22605182 14.71941112 -2.88671875 14.359375 C-7.25503169 13.85512809 -11.56652049 13.97523519 -15.95703125 14.0625 C-19.06385674 13.99868844 -21.95157296 13.58325659 -25 13 C-23.125 9.125 -23.125 9.125 -22 8 C-19.53012766 7.89783983 -17.09482225 7.8593257 -14.625 7.875 C-13.90634766 7.87693359 -13.18769531 7.87886719 -12.44726562 7.88085938 C-6.59496384 7.92784485 -0.81342699 8.31027137 5 9 C4.67 7.35 4.34 5.7 4 4 C2.02 4 0.04 4 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#9A7F52\",transform:\"translate(515,343)\"})),_path146||(_path146=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.89848166 -0.26532622 13.20692992 0.76489635 20 2 C19.34 6.95 18.68 11.9 18 17 C16.02 17 14.04 17 12 17 C12.33 13.04 12.66 9.08 13 5 C12.01 5 11.02 5 10 5 C10.04125 6.093125 10.0825 7.18625 10.125 8.3125 C10 12 10 12 8 15 C8 11.37 8 7.74 8 4 C7.34 4 6.68 4 6 4 C5.97314062 6.14576637 5.95366912 8.29162645 5.9375 10.4375 C5.92589844 11.63246094 5.91429687 12.82742188 5.90234375 14.05859375 C5.66098208 16.88873341 5.66098208 16.88873341 7 18 C9.67058851 18.14115161 12.32432238 18.04247107 15 18 C15 18.99 15 19.98 15 21 C11.7 21 8.4 21 5 21 C5 20.34 5 19.68 5 19 C4.34 19 3.68 19 3 19 C1.54144503 16.08289006 1.68750029 13.30692468 1.5 10.0625 C1.21849611 4.94190165 1.21849611 4.94190165 0 0 Z \",fill:\"#B89D71\",transform:\"translate(443,599)\"})),_path147||(_path147=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.73283203 0.00773437 1.46566406 0.01546875 2.22070312 0.0234375 C2.94966797 0.01570313 3.67863281 0.00796875 4.4296875 0 C8.24158536 0.01397579 10.04131422 0.11217823 13.28320312 2.2734375 C12.07664062 2.7065625 12.07664062 2.7065625 10.84570312 3.1484375 C8.15055633 4.00606318 8.15055633 4.00606318 7.28320312 6.2734375 C8.36601563 6.11875 8.36601563 6.11875 9.47070312 5.9609375 C13.40361901 6.39792815 14.74642235 8.37425947 17.28320312 11.2734375 C13.46563489 12.64776207 10.21064984 11.95318789 6.28320312 11.2734375 C5.95320312 11.9334375 5.62320313 12.5934375 5.28320312 13.2734375 C3.09570312 14.1484375 3.09570312 14.1484375 0.28320312 14.2734375 C-3.02929688 12.4609375 -3.02929688 12.4609375 -5.71679688 10.2734375 C-5.71679688 9.6134375 -5.71679688 8.9534375 -5.71679688 8.2734375 C-7.03679688 7.9434375 -8.35679687 7.6134375 -9.71679688 7.2734375 C-9.71679688 6.6134375 -9.71679688 5.9534375 -9.71679688 5.2734375 C-6.25179687 4.7784375 -6.25179687 4.7784375 -2.71679688 4.2734375 C-2.71679688 3.6134375 -2.71679688 2.9534375 -2.71679688 2.2734375 C-4.36679687 2.2734375 -6.01679687 2.2734375 -7.71679688 2.2734375 C-5.16630137 -0.27705801 -3.48196933 0.0127896 0 0 Z \",fill:\"#C6A46E\",transform:\"translate(543.716796875,311.7265625)\"})),_path148||(_path148=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 14.19 2 28.38 2 43 C0.68 43 -0.64 43 -2 43 C-2.37511719 42.29875 -2.75023437 41.5975 -3.13671875 40.875 C-3.64847656 39.92625 -4.16023437 38.9775 -4.6875 38 C-5.22761719 36.99453125 -5.76773438 35.9890625 -6.32421875 34.953125 C-7.76199055 32.41942925 -9.3096645 30.11553839 -11 27.75 C-12.41462488 25.57641765 -13.03722765 24.55735109 -12.86328125 21.953125 C-12.3125 20 -12.3125 20 -11 17 C-10.67 17.66 -10.34 18.32 -10 19 C-9.34 19 -8.68 19 -8 19 C-6.4921875 21.1171875 -6.4921875 21.1171875 -4.875 23.875 C-4.33617187 24.77992188 -3.79734375 25.68484375 -3.2421875 26.6171875 C-2 29 -2 29 -2 31 C-1.34 31 -0.68 31 0 31 C0 20.77 0 10.54 0 0 Z \",fill:\"#9F8A6C\",transform:\"translate(759,419)\"})),_path149||(_path149=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8.74537745 5.37144425 9.17923957 10.64015324 9.23828125 16.06640625 C9.24793915 16.81467682 9.25759705 17.56294739 9.26754761 18.33389282 C9.29225445 20.74347959 9.30492901 23.1528004 9.3125 25.5625 C9.31545074 26.3848111 9.31840149 27.20712219 9.32144165 28.05435181 C9.33510581 44.81089824 8.29306791 62.23857211 2 78 C1.01 78.495 1.01 78.495 0 79 C0.11534604 77.43675768 0.24275126 75.87440317 0.375 74.3125 C0.44460938 73.44238281 0.51421875 72.57226562 0.5859375 71.67578125 C1 69 1 69 1.95629883 66.77172852 C6.19231662 55.5222525 5.29029264 41.87556874 5.20581055 30.03271484 C5.18728181 27.34332998 5.18530357 24.65428654 5.18554688 21.96484375 C5.18063911 20.23437204 5.17481406 18.50390263 5.16796875 16.7734375 C5.16685593 15.97964691 5.1657431 15.18585632 5.16459656 14.36801147 C5.12873685 10.15954775 5.00223641 6.11261163 4 2 C2.04836882 0.56362302 2.04836882 0.56362302 0 0 Z \",fill:\"#B89F76\",transform:\"translate(551,192)\"})),_path150||(_path150=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.18456484 0.59136443 9.32090009 2.27825371 14 4.4375 C20.40232832 7.35585455 26.50164483 9.8738279 33.5 11 C37.50317761 11.68703183 41.15304079 12.68853663 45 14 C51.76030521 15.24949089 58.57989378 15.33428725 65.4375 15.5625 C66.64599609 15.60568359 67.85449219 15.64886719 69.09960938 15.69335938 C72.06630606 15.79889404 75.03307902 15.90100714 78 16 C75.60996677 18.78506862 75.18064012 18.98078697 71.25390625 19.3984375 C69.69013749 19.41129271 68.12608898 19.40197195 66.5625 19.375 C65.72501221 19.36629883 64.88752441 19.35759766 64.0246582 19.34863281 C46.21911534 18.94475139 29.16660258 15.28021403 12.84375 8.171875 C8.65709115 6.4466035 4.36517724 5.18786903 0 4 C0.66 3.67 1.32 3.34 2 3 C2 2.34 2 1.68 2 1 C1.34 0.67 0.68 0.34 0 0 Z \",fill:\"#67512E\",transform:\"translate(480,175)\"})),_path151||(_path151=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C21.24443288 -0.71166214 21.24443288 -0.71166214 28.5625 5 C31.21309536 8.68778485 31.45719949 12.36236909 31.4140625 16.76953125 C30.92879581 19.38356222 30.27623366 20.30521013 28.3125 22.0625 C25.06078363 23.96444731 23.65790882 24.53792777 20 24 C20.16113281 23.28972656 20.32226562 22.57945312 20.48828125 21.84765625 C21.00207886 18.98843136 21.16731573 16.33999826 21.1875 13.4375 C21.20167969 12.50808594 21.21585937 11.57867187 21.23046875 10.62109375 C20.94619865 6.97165073 20.94619865 6.97165073 19 4 C16.26343206 3.42231319 13.82764324 3.07442106 11.0625 2.875 C3.35113636 2.23409091 3.35113636 2.23409091 0 0 Z \",fill:\"#CFAD76\",transform:\"translate(469,229)\"})),_path152||(_path152=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.33804687 0.04060547 1.33804687 0.04060547 2.703125 0.08203125 C3.37859375 0.11683594 4.0540625 0.15164062 4.75 0.1875 C4.75 0.8475 4.75 1.5075 4.75 2.1875 C6.4 2.8475 8.05 3.5075 9.75 4.1875 C10.11 9.5875 10.11 9.5875 8.625 12.0625 C5.96965017 13.6557099 3.78210482 13.38964032 0.75 13.1875 C1.625 7.3125 1.625 7.3125 2.75 6.1875 C-1.25254456 6.09568866 -1.25254456 6.09568866 -5.25 6.1875 C-6.58054487 7.29049128 -6.58054487 7.29049128 -6.34765625 10.05859375 C-6.33605469 11.23550781 -6.32445312 12.41242188 -6.3125 13.625 C-6.29896484 15.38650391 -6.29896484 15.38650391 -6.28515625 17.18359375 C-6.27355469 18.17488281 -6.26195312 19.16617188 -6.25 20.1875 C-6.25 20.8475 -6.25 21.5075 -6.25 22.1875 C-5.92 22.8475 -5.59 23.5075 -5.25 24.1875 C-7.23 23.8575 -9.21 23.5275 -11.25 23.1875 C-12.71728881 15.85105593 -13.48781048 9.6955661 -9.25 3.1875 C-6.16206452 0.31626175 -4.17590889 -0.16483851 0 0 Z \",fill:\"#8A6F46\",transform:\"translate(379.25,234.8125)\"})),_path153||(_path153=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.21816406 0.03480469 1.21816406 0.03480469 2.4609375 0.0703125 C3.68683594 0.09738281 3.68683594 0.09738281 4.9375 0.125 C5.87722656 0.15980469 5.87722656 0.15980469 6.8359375 0.1953125 C6.8359375 1.1853125 6.8359375 2.1753125 6.8359375 3.1953125 C5.5571875 3.2778125 4.2784375 3.3603125 2.9609375 3.4453125 C-0.29073705 3.78323435 -0.29073705 3.78323435 -2.6640625 5.8828125 C-3.2801733 8.73232497 -3.35780368 11.28919477 -3.1640625 14.1953125 C-2.8340625 14.5253125 -2.5040625 14.8553125 -2.1640625 15.1953125 C-2.04289062 14.56882812 -1.92171875 13.94234375 -1.796875 13.296875 C-1.54550781 12.07097656 -1.54550781 12.07097656 -1.2890625 10.8203125 C-1.12664062 10.00820313 -0.96421875 9.19609375 -0.796875 8.359375 C-0.1640625 6.1953125 -0.1640625 6.1953125 1.8359375 4.1953125 C3.1559375 4.1953125 4.4759375 4.1953125 5.8359375 4.1953125 C5.8359375 7.8253125 5.8359375 11.4553125 5.8359375 15.1953125 C6.4959375 14.8653125 7.1559375 14.5353125 7.8359375 14.1953125 C8.37010904 10.83003177 8.8359375 7.59903734 8.8359375 4.1953125 C9.8259375 4.1953125 10.8159375 4.1953125 11.8359375 4.1953125 C12.62328609 13.20607966 12.62328609 13.20607966 9.3984375 17.2578125 C8.5528125 17.8971875 7.7071875 18.5365625 6.8359375 19.1953125 C6.5059375 19.5253125 6.1759375 19.8553125 5.8359375 20.1953125 C1.80655296 20.23544581 -1.96189708 20.10604388 -5.2265625 17.6328125 C-6.97252479 13.09331056 -6.67312357 8.86794171 -5.2890625 4.3203125 C-3.87695622 1.65300064 -3.11181776 0.28084998 0 0 Z \",fill:\"#A48F6A\",transform:\"translate(425.1640625,595.8046875)\"})),_path154||(_path154=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.703125 1.5703125 0.703125 1.5703125 1 4 C0.02562472 6.44796752 -0.98249069 8.58583701 -2.25 10.875 C-2.60626465 11.53048828 -2.9625293 12.18597656 -3.32958984 12.86132812 C-7.45381503 20.18626107 -12.62476407 26.56802264 -18 33 C-18.54398438 33.69738281 -19.08796875 34.39476562 -19.6484375 35.11328125 C-28.90017301 46.74479844 -43.14642422 55.80566347 -56 63 C-56.69738281 63.391875 -57.39476562 63.78375 -58.11328125 64.1875 C-60.68578956 65.29532967 -62.35881575 64.73366229 -65 64 C-65 63.34 -65 62.68 -65 62 C-63.845 61.71125 -62.69 61.4225 -61.5 61.125 C-43.69139094 55.17007079 -24.88539165 39.65187012 -15 24 C-14.34 24 -13.68 24 -13 24 C-12.60941406 22.92685547 -12.60941406 22.92685547 -12.2109375 21.83203125 C-10.94174568 18.86376006 -9.40716246 16.37630843 -7.625 13.6875 C-4.73724278 9.23830412 -2.26146708 4.79431022 0 0 Z \",fill:\"#2C1805\",transform:\"translate(544,280)\"})),_path155||(_path155=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 1.98 -0.66 3.96 -1 6 C-0.01 6 0.98 6 2 6 C2 5.34 2 4.68 2 4 C12.37357631 0.55580866 12.37357631 0.55580866 18 1 C16.6875 2.5 16.6875 2.5 15 4 C14.01 4 13.02 4 12 4 C12 4.66 12 5.32 12 6 C10 7.625 10 7.625 8 9 C9.32 9.33 10.64 9.66 12 10 C9.62883608 11.49295506 8.54422587 12.12093908 5.75 11.5 C1.7709406 10.77653465 -1.13081034 11.88514874 -5 13 C-4.67 12.01 -4.34 11.02 -4 10 C-6.97021721 9.65438868 -6.97021721 9.65438868 -8.4375 11.375 C-8.953125 11.91125 -9.46875 12.4475 -10 13 C-11.0209375 13.495 -11.0209375 13.495 -12.0625 14 C-14.33242155 14.97325058 -14.33242155 14.97325058 -16 18 C-16.66 18 -17.32 18 -18 18 C-17.11079249 11.43354453 -13.00164247 7.5483332 -8.0859375 3.375 C-3.57954545 0 -3.57954545 0 0 0 Z \",fill:\"#8E6A32\",transform:\"translate(540,500)\"})),_path156||(_path156=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-1.65 2.66 -3.3 3.32 -5 4 C-5 5.65 -5 7.3 -5 9 C-4.01 9.33 -3.02 9.66 -2 10 C-2 10.99 -2 11.98 -2 13 C1.501554 11.5993784 2.46483677 10.37735911 4 7 C5.625 5.25 5.625 5.25 7 4 C7.66 4.33 8.32 4.66 9 5 C8.3503125 5.804375 8.3503125 5.804375 7.6875 6.625 C5.79312397 9.29115885 4.40687194 12.05226832 3 15 C3.66 15 4.32 15 5 15 C5.33 14.34 5.66 13.68 6 13 C8.28515625 12.3671875 8.28515625 12.3671875 11.0625 11.875 C11.98160156 11.70742188 12.90070313 11.53984375 13.84765625 11.3671875 C14.55792969 11.24601562 15.26820313 11.12484375 16 11 C16 11.66 16 12.32 16 13 C14.03852126 14.38938077 12.03833424 15.7260411 10 17 C10.66 17.66 11.32 18.32 12 19 C5.39081775 20.07591339 -1.30621663 20.78657502 -8 21 C-9.84942747 19.15057253 -9.2591876 16.29573569 -9.3125 13.8125 C-9.27518313 8.14655463 -8.96561358 5.07891682 -5 1 C-2 0 -2 0 0 0 Z \",fill:\"#C7A673\",transform:\"translate(410,327)\"})),_path157||(_path157=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.06838077 2.03419038 7.55837988 4.37384747 11.25 7 C11.8996875 7.45117188 12.549375 7.90234375 13.21875 8.3671875 C14.85075709 9.52604968 16.4304825 10.75781503 18 12 C18 12.66 18 13.32 18 14 C16.576875 14.12375 16.576875 14.12375 15.125 14.25 C11.95800853 14.6390434 11.95800853 14.6390434 10.8125 16.75 C10.544375 17.4925 10.27625 18.235 10 19 C8.875 21.75 8.875 21.75 7 24 C4.26719517 24.56599933 1.73677421 24.52418054 -1 24 C-1.99 23.34 -2.98 22.68 -4 22 C-4 21.34 -4 20.68 -4 20 C-0.04 19.505 -0.04 19.505 4 19 C4.433125 17.88625 4.433125 17.88625 4.875 16.75 C5.82302644 14.43260203 6.84845911 12.22082885 8 10 C7.608125 10.391875 7.21625 10.78375 6.8125 11.1875 C4.54166667 13.45833333 2.27083333 15.72916667 0 18 C0.57634139 13.24518354 2.55068521 10.02951788 5 6 C4.21625 6.825 3.4325 7.65 2.625 8.5 C0 11 0 11 -2 11 C-1.34 7.37 -0.68 3.74 0 0 Z \",fill:\"#B69967\",transform:\"translate(321,545)\"})),_path158||(_path158=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C6 13.53 6 27.06 6 41 C4.02 41 2.04 41 0 41 C0 27.47 0 13.94 0 0 Z \",fill:\"#D0AE7B\",transform:\"translate(560,420)\"})),_path159||(_path159=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.53790403 3.69172595 3.59115883 7.09390595 4 12 C4.66 12 5.32 12 6 12 C6.48229332 14.49943204 6.96089426 16.99948243 7.4375 19.5 C7.57220703 20.19609375 7.70691406 20.8921875 7.84570312 21.609375 C9.06474222 28.03162977 10.16500028 34.43998195 10.0625 41 C10.05347656 41.763125 10.04445313 42.52625 10.03515625 43.3125 C10.02355469 43.869375 10.01195312 44.42625 10 45 C9.34 44.67 8.68 44.34 8 44 C7.5859375 41.27734375 7.5859375 41.27734375 7.375 37.9375 C7.30023437 36.83277344 7.22546875 35.72804688 7.1484375 34.58984375 C7.09945312 33.73519531 7.05046875 32.88054687 7 32 C6.67 32 6.34 32 6 32 C5.67 36.62 5.34 41.24 5 46 C4.67 46 4.34 46 4 46 C3.88724731 45.01157104 3.88724731 45.01157104 3.7722168 44.00317383 C1.96730009 27.60327665 1.96730009 27.60327665 -1.44921875 11.48828125 C-2.43443842 7.03732429 -2.33846885 3.94616618 0 0 Z \",fill:\"#C7A56F\",transform:\"translate(647,340)\"})),_path160||(_path160=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.76925058 2.36155536 3.59818059 4.31794978 4.5 7.8125 C5.35994217 10.93832155 6.22524099 13.45048198 7.6875 16.375 C9 19 9 19 9 23 C3.72 23 -1.56 23 -7 23 C-5.875 15.125 -5.875 15.125 -4.58984375 11.81640625 C-4.32236328 11.11708984 -4.05488281 10.41777344 -3.77929688 9.69726562 C-3.36260742 8.64055664 -3.36260742 8.64055664 -2.9375 7.5625 C-2.65583984 6.83095703 -2.37417969 6.09941406 -2.08398438 5.34570312 C-1.39586753 3.56126454 -0.69885394 1.78026095 0 0 Z \",fill:\"#120D08\",transform:\"translate(216,429)\"})),_path161||(_path161=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.465 1.485 3.465 1.485 7 3 C7.1875 5.375 7.1875 5.375 7 8 C6.01 8.66 5.02 9.32 4 10 C3.01 9.67 2.02 9.34 1 9 C1 8.34 1 7.68 1 7 C-0.65 7 -2.3 7 -4 7 C-2.68 4.69 -1.36 2.38 0 0 Z M-16.375 6.75 C-14.58255859 6.77707031 -14.58255859 6.77707031 -12.75390625 6.8046875 C-9.83507473 6.8513888 -6.91798239 6.9168666 -4 7 C-5.28125 8.9765625 -5.28125 8.9765625 -7 11 C-11.37855495 11.46913089 -13.29584707 11.46943529 -17 9 C-17.680625 9.28875 -18.36125 9.5775 -19.0625 9.875 C-23.34275611 11.51424702 -27.4669375 11.15843714 -32 11 C-31.01 12.485 -31.01 12.485 -30 14 C-31.6875 15.5625 -31.6875 15.5625 -34 17 C-34.7425 16.814375 -35.485 16.62875 -36.25 16.4375 C-40.02288641 15.83726807 -41.98395738 17.25863753 -45.23046875 19.08984375 C-47 20 -47 20 -49 20 C-47.25747697 14.7724309 -42.50640538 12.32578875 -37.90087891 9.88964844 C-30.67602415 6.65234889 -24.20387307 6.52307614 -16.375 6.75 Z \",fill:\"#B08D52\",transform:\"translate(278,291)\"})),_path162||(_path162=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C0.99555878 0.58500778 0.99111755 1.17001556 0.98654175 1.77275085 C0.94191656 7.92212453 0.91197287 14.07145139 0.89013672 20.22094727 C0.88014712 22.50872672 0.86655083 24.79649364 0.84912109 27.08422852 C0.73897968 41.92416413 0.78113288 55.59684399 5.40234375 69.83203125 C6.16543652 72.60011288 6.22520343 75.14742324 6 78 C3.43703561 75.43703561 3.05112938 73.36101042 2.0625 69.875 C1.74410156 68.77929688 1.42570312 67.68359375 1.09765625 66.5546875 C0.71957355 65.03944976 0.35597231 63.52058399 0 62 C-0.26095459 60.90333008 -0.52190918 59.80666016 -0.79077148 58.67675781 C-3.20858858 47.39408755 -3.35268623 36.50277973 -3.1875 25 C-3.17240577 23.14584437 -3.15872586 21.29167666 -3.14648438 19.4375 C-3.11390035 14.95802722 -3.0623882 10.47915271 -3 6 C-2.34 6 -1.68 6 -1 6 C-0.67 4.02 -0.34 2.04 0 0 Z \",fill:\"#BAA485\",transform:\"translate(407,194)\"})),_path163||(_path163=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5 13.53 5 27.06 5 41 C3.02 41 1.04 41 -1 41 C-0.67 27.47 -0.34 13.94 0 0 Z \",fill:\"#DFBB84\",transform:\"translate(127,420)\"})),_path164||(_path164=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C5.67 13.53 5.34 27.06 5 41 C3.35 41 1.7 41 0 41 C0 27.47 0 13.94 0 0 Z \",fill:\"#DABA88\",transform:\"translate(676,420)\"})),_path165||(_path165=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5.33 13.53 5.66 27.06 6 41 C4.02 41 2.04 41 0 41 C0 27.47 0 13.94 0 0 Z \",fill:\"#DDBB84\",transform:\"translate(269,420)\"})),_path166||(_path166=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.6849614 -0.51744129 14.483258 1.41217705 21.875 3.375 C24.3093161 4.01003898 26.74420373 4.64289154 29.1796875 5.2734375 C30.9136377 5.72541504 30.9136377 5.72541504 32.68261719 6.18652344 C36.50193528 7.12308275 40.3319581 7.85689734 44.21142578 8.49462891 C44.80165527 8.66140137 45.39188477 8.82817383 46 9 C46.495 9.99 46.495 9.99 47 11 C46.34 11 45.68 11 45 11 C45 12.32 45 13.64 45 15 C44.01 15 43.02 15 42 15 C42 14.34 42 13.68 42 13 C41.41734375 12.96261719 40.8346875 12.92523438 40.234375 12.88671875 C33.25092204 12.32672488 26.75041841 10.82750965 20 9 C19.04609375 8.76152344 18.0921875 8.52304687 17.109375 8.27734375 C11.09598533 6.74040198 5.58162786 4.71501405 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#B2905E\",transform:\"translate(332,369)\"})),_path167||(_path167=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.26431676 1.43436109 7.19015553 3.55620484 10.625 6.4375 C11.56601562 7.21996094 12.50703125 8.00242188 13.4765625 8.80859375 C15.40384688 10.48228808 17.23599472 12.15904147 19 14 C18.67 14.66 18.34 15.32 18 16 C17.34 15.34 16.68 14.68 16 14 C15.34 15.32 14.68 16.64 14 18 C13.34 18 12.68 18 12 18 C11.34 17.34 10.68 16.68 10 16 C10 17.65 10 19.3 10 21 C4.97907861 19.71557825 2.41291151 17.87411577 -1 14 C-1.598125 13.360625 -2.19625 12.72125 -2.8125 12.0625 C-4.40513301 9.29634792 -4.21368373 7.13402799 -4 4 C0.45673159 4.49871064 2.57687178 6.02004362 5.8125 9.0625 C6.60269531 9.79597656 7.39289063 10.52945313 8.20703125 11.28515625 C9.09455078 12.13400391 9.09455078 12.13400391 10 13 C8.63017895 9.8129289 7.15774857 8.06713092 4.4375 5.9375 C1.80562347 3.87467786 1.09567461 3.28702382 0 0 Z \",fill:\"#B4976A\",transform:\"translate(378,208)\"})),_path168||(_path168=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 4 4 6 6 C11.40227629 6.36015175 14.52118671 6.35910997 19 3 C18.67 3.99 18.34 4.98 18 6 C23.94 5.505 23.94 5.505 30 5 C26.84430286 6.57784857 24.21940856 7.60909398 20.875 8.5625 C17.35301984 9.5648391 17.35301984 9.5648391 14 11 C10.19364105 11.27191221 6.37745797 11.23175752 2.5625 11.25 C1.51900391 11.270625 0.47550781 11.29125 -0.59960938 11.3125 C-7.85196342 11.34851417 -14.11481402 10.26910814 -21 8 C-19.68 7.34 -18.36 6.68 -17 6 C-17.33 5.34 -17.66 4.68 -18 4 C-17.01 4.33 -16.02 4.66 -15 5 C-12.77181559 5.06937062 -10.54165476 5.08457084 -8.3125 5.0625 C-7.13300781 5.05347656 -5.95351563 5.04445313 -4.73828125 5.03515625 C-3.83464844 5.02355469 -2.93101562 5.01195312 -2 5 C-1.34 3.35 -0.68 1.7 0 0 Z \",fill:\"#1D1409\",transform:\"translate(482,375)\"})),_path169||(_path169=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.4659249 -0.36717663 7.4659249 -0.36717663 10 1.375 C11 3 11 3 11 5 C11.66 5 12.32 5 13 5 C14.17673198 7.35346396 14.16623866 8.8806033 14.1875 11.5 C14.20167969 12.2940625 14.21585938 13.088125 14.23046875 13.90625 C14 16 14 16 12 18 C6.43181818 17.43181818 6.43181818 17.43181818 5 16 C4.76271186 9.47457627 4.76271186 9.47457627 6 7 C5.01 7.33 4.02 7.66 3 8 C3 11.3 3 14.6 3 18 C0 15 0 15 -0.29296875 12.73828125 C-0.25816406 11.93777344 -0.22335937 11.13726562 -0.1875 10.3125 C-0.16042969 9.50425781 -0.13335938 8.69601562 -0.10546875 7.86328125 C-0.07066406 7.24839844 -0.03585937 6.63351562 0 6 C-1.32 5.67 -2.64 5.34 -4 5 C-4 4.34 -4 3.68 -4 3 C-2.68 2.67 -1.36 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#0C0904\",transform:\"translate(554,291)\"})),_path170||(_path170=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.16681734 3.63280548 4.57115956 7.66310218 6.1875 12.125 C6.46013672 12.85332031 6.73277344 13.58164062 7.01367188 14.33203125 C9 19.71851504 9 19.71851504 9 22 C3.72 22 -1.56 22 -7 22 C-5.875 14.125 -5.875 14.125 -4.58984375 11.03515625 C-4.18862305 10.05385742 -4.18862305 10.05385742 -3.77929688 9.05273438 C-3.50150391 8.39595703 -3.22371094 7.73917969 -2.9375 7.0625 C-2.65583984 6.37865234 -2.37417969 5.69480469 -2.08398438 4.99023438 C-1.3964595 3.32386054 -0.69923825 1.66149273 0 0 Z \",fill:\"#0E0A06\",transform:\"translate(343,430)\"})),_path171||(_path171=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.144375 0.61875 0.28875 1.2375 0.4375 1.875 C0.93152225 4.03258322 0.93152225 4.03258322 2 6 C2.33 6.66 2.66 7.32 3 8 C4.65 8 6.3 8 8 8 C8.33 7.34 8.66 6.68 9 6 C9.66 6.33 10.32 6.66 11 7 C10 10 10 10 8.015625 11.671875 C5.21963694 14.90134958 5.0976439 18.15069898 4.75 22.25 C4.67265625 22.99507812 4.5953125 23.74015625 4.515625 24.5078125 C4.32801641 26.33699628 4.16186597 28.16835874 4 30 C1.625 29.8125 1.625 29.8125 -1 29 C-3.70655746 24.80524479 -3.33221095 19.89168301 -3.3125 15.0625 C-3.32861328 14.27681641 -3.34472656 13.49113281 -3.36132812 12.68164062 C-3.36550294 7.69273901 -2.65918314 4.37116385 0 0 Z \",fill:\"#BC9864\",transform:\"translate(566,224)\"})),_path172||(_path172=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C-0.65 2 -2.3 2 -4 2 C-3.505 2.556875 -3.01 3.11375 -2.5 3.6875 C-0.75245633 6.38162983 -0.73781251 7.85375007 -1 11 C1.31 11.66 3.62 12.32 6 13 C5.34 11.68 4.68 10.36 4 9 C7.3 9 10.6 9 14 9 C12.70395097 12.88814708 10.94949301 13.72837433 7.625 16.0625 C6.64789062 16.75472656 5.67078125 17.44695313 4.6640625 18.16015625 C-0.89596603 22 -0.89596603 22 -4 22 C-4 20.68 -4 19.36 -4 18 C-3.01 17.34 -2.02 16.68 -1 16 C-1.433125 15.37351562 -1.86625 14.74703125 -2.3125 14.1015625 C-2.869375 13.28429687 -3.42625 12.46703125 -4 11.625 C-4.556875 10.81289063 -5.11375 10.00078125 -5.6875 9.1640625 C-7 7 -7 7 -7 5 C-7.99 5 -8.98 5 -10 5 C-10 6.32 -10 7.64 -10 9 C-11.98 9 -13.96 9 -16 9 C-15.34 8.67 -14.68 8.34 -14 8 C-13.31867549 6.33927151 -12.65257873 4.672233 -12 3 C-8.48214012 -0.51785988 -4.80656342 -0.10924008 0 0 Z \",fill:\"#B3996B\",transform:\"translate(641,551)\"})),_path173||(_path173=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8 0 8 0 11 2 C13.68652977 6.02979465 13.40344574 8.23934031 13 13 C12.34 13 11.68 13 11 13 C11 13.66 11 14.32 11 15 C7.57067929 16.71466036 3.78283935 16.05404056 0 16 C0 10.72 0 5.44 0 0 Z \",fill:\"#0D0804\",transform:\"translate(133,421)\"})),_path174||(_path174=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C3 3.32 3 4.64 3 6 C2.34 6 1.68 6 1 6 C1 5.34 1 4.68 1 4 C-0.65 4.66 -2.3 5.32 -4 6 C-4.16681109 8.91652174 -4.16681109 8.91652174 -4 12 C-2.04366025 14.41121859 -2.04366025 14.41121859 1.625 14.125 C2.73875 14.08375 3.8525 14.0425 5 14 C5 9.71 5 5.42 5 1 C5.66 1.33 6.32 1.66 7 2 C6.97679687 2.84304688 6.95359375 3.68609375 6.9296875 4.5546875 C6.91164063 5.65039062 6.89359375 6.74609375 6.875 7.875 C6.85179687 8.96554687 6.82859375 10.05609375 6.8046875 11.1796875 C6.69939466 14.1371051 6.69939466 14.1371051 9 16 C7.23488988 18.22711881 6.31533596 18.94142366 3.4765625 19.46875 C-1.10684508 19.51897912 -4.14368055 19.48692675 -8.1875 17.1875 C-10.78439499 12.62054674 -10.95620086 8.14754794 -10 3 C-7.24971578 -0.80619692 -4.49214135 -0.40108405 0 0 Z \",fill:\"#876939\",transform:\"translate(472,362)\"})),_path175||(_path175=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C24.76 4 48.52 4 73 4 C73 4.66 73 5.32 73 6 C51.88 6 30.76 6 9 6 C11.91765 7.9451 13.62537285 8.45276317 17 9 C17 9.66 17 10.32 17 11 C13.7 11.66 10.4 12.32 7 13 C6.67 13.99 6.34 14.98 6 16 C3.9375 16.6875 3.9375 16.6875 2 17 C0.85157071 22.0202441 0.85157071 22.0202441 2.4375 26.75 C2.953125 27.4925 3.46875 28.235 4 29 C4 29.99 4 30.98 4 32 C-0.875 27.375 -0.875 27.375 -2 24 C-2.66 24 -3.32 24 -4 24 C-3.79794579 19.65583449 -3.34484946 18.31550057 -0.0625 15.3125 C0.948125 14.549375 1.95875 13.78625 3 13 C3.66 12.01 4.32 11.02 5 10 C5.66 10 6.32 10 7 10 C6.67 8.35 6.34 6.7 6 5 C4.35 5.66 2.7 6.32 1 7 C0 6 0 6 -0.0625 2.9375 C-0.041875 1.968125 -0.02125 0.99875 0 0 Z \",fill:\"#221A0F\",transform:\"translate(263,488)\"})),_path176||(_path176=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0 5.94 0 9 0 C12.65221715 19.17414004 12.86123028 40.05796479 8 59 C7.71576172 60.26650391 7.71576172 60.26650391 7.42578125 61.55859375 C6.59449184 65.18301557 5.4903083 68.59358103 4 72 C3.67 72 3.34 72 3 72 C3.38309657 66.38565367 4.20349387 61.09522787 5.53125 55.625 C7.85927947 44.89948752 7.32186503 33.97479935 7.1875 23.0625 C7.17241707 20.91472299 7.15873509 18.76693566 7.14648438 16.61914062 C7.11378531 11.41250076 7.06220462 6.20636751 7 1 C4.69 1 2.38 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#A08B67\",transform:\"translate(544,197)\"})),_path177||(_path177=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.5625 0.3125 3.5625 0.3125 5.4375 1.625 C7.98369471 5.44429206 8.35901188 9.87108047 7.5625 14.3125 C4.18180139 18.49389039 2.06913258 20.13960774 -3.25 20.75 C-5.84927659 20.74528262 -7.0074915 20.68031275 -9.00390625 18.97265625 C-10.19835154 17.45731521 -11.32221737 15.88701665 -12.4375 14.3125 C-13.0975 14.3125 -13.7575 14.3125 -14.4375 14.3125 C-14.1075 13.3225 -13.7775 12.3325 -13.4375 11.3125 C-11 11.6875 -11 11.6875 -8.4375 12.3125 C-8.1075 12.9725 -7.7775 13.6325 -7.4375 14.3125 C-4.7975 14.3125 -2.1575 14.3125 0.5625 14.3125 C0.748125 13.054375 0.93375 11.79625 1.125 10.5 C1.22941406 9.79230469 1.33382813 9.08460938 1.44140625 8.35546875 C1.70154799 6.1099658 1.70154799 6.1099658 0.5625 3.3125 C-1.41286745 3.66036708 -1.41286745 3.66036708 -3.4375 4.3125 C-3.7675 4.9725 -4.0975 5.6325 -4.4375 6.3125 C-5.0975 6.3125 -5.7575 6.3125 -6.4375 6.3125 C-5.55427706 1.8963853 -4.77389749 0.43399068 0 0 Z \",fill:\"#816539\",transform:\"translate(495.4375,361.6875)\"})),_path178||(_path178=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.69988373 3.42239245 4.83234546 6.46316669 5.375 11.4375 C5 15 5 15 2.625 17.375 C-1.55821138 19.96460704 -4.00021005 20.51721965 -9 20 C-11.4375 18.0625 -11.4375 18.0625 -13 15 C-13.30936646 11.96719442 -13.23810226 9.03580379 -13 6 C-12.67 6 -12.34 6 -12 6 C-11.34 8.97 -10.68 11.94 -10 15 C-9.34 15 -8.68 15 -8 15 C-8 15.66 -8 16.32 -8 17 C-7.01 17 -6.02 17 -5 17 C-5.66 16.113125 -6.32 15.22625 -7 14.3125 C-8.98860067 11.01888014 -9.43735074 9.71748127 -9 6 C-8.34 6 -7.68 6 -7 6 C-6.34 8.31 -5.68 10.62 -5 13 C-4.34 13 -3.68 13 -3 13 C-3.33 10.69 -3.66 8.38 -4 6 C-3.34 6 -2.68 6 -2 6 C-1.01 8.64 -0.02 11.28 1 14 C0.87625 12.741875 0.7525 11.48375 0.625 10.1875 C0.55539062 9.47980469 0.48578125 8.77210938 0.4140625 8.04296875 C0.07334609 5.70011858 0.07334609 5.70011858 -2 3 C-5.94726562 2.57094939 -8.61242079 2.91533587 -12 5 C-12 4.01 -12 3.02 -12 2 C-8.01279331 -0.65813779 -4.69025187 -0.84814681 0 0 Z \",fill:\"#A9916B\",transform:\"translate(600,577)\"})),_path179||(_path179=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.375 -0.1875 2.375 -0.1875 5 0 C7.84767055 4.27150583 7.50971259 7.98413261 7 13 C6.21354982 15.83212985 5.19892564 18.3024173 4 21 C3.34 21 2.68 21 2 21 C1.76796875 21.57878906 1.5359375 22.15757812 1.296875 22.75390625 C-0.31736697 25.54965666 -2.19059765 26.97916942 -4.75 28.9375 C-6.08804688 29.97970703 -6.08804688 29.97970703 -7.453125 31.04296875 C-8.29359375 31.68878906 -9.1340625 32.33460938 -10 33 C-14.93060961 36.73013636 -14.93060961 36.73013636 -18 42 C-18.66 41.67 -19.32 41.34 -20 41 C-19.01 38.03 -19.01 38.03 -18 35 C-17.34 35 -16.68 35 -16 35 C-16 34.34 -16 33.68 -16 33 C-14.20703125 31.44921875 -14.20703125 31.44921875 -11.8125 29.6875 C-9.04487209 27.60742745 -6.44615441 25.57538868 -4.0625 23.0625 C-3.381875 22.381875 -2.70125 21.70125 -2 21 C-1.34 21 -0.68 21 0 21 C1.68897489 14.4552223 1.81077396 8.18370272 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#120B03\",transform:\"translate(696,257)\"})),_path180||(_path180=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.01 2.485 1.01 2.485 0 4 C1.093125 3.938125 2.18625 3.87625 3.3125 3.8125 C7 4 7 4 8.6875 5.1875 C10.40109869 7.55389819 10.49939544 9.29068971 10.6875 12.1875 C10.78611328 13.53908203 10.78611328 13.53908203 10.88671875 14.91796875 C10.92410156 15.60503906 10.96148438 16.29210937 11 17 C3.25 17.125 3.25 17.125 1 16 C0.29618843 14.01276732 -0.3711811 12.01222047 -1 10 C-2.20127338 8.58376964 -2.20127338 8.58376964 -5.6875 8.6875 C-10.249919 8.71216172 -12.48972978 10.19178383 -16 13 C-16.66 12.67 -17.32 12.34 -18 12 C-16.68 9.69 -15.36 7.38 -14 5 C-13.67 5.66 -13.34 6.32 -13 7 C-11.9275 6.690625 -10.855 6.38125 -9.75 6.0625 C-6 5 -6 5 -3.6875 4.625 C-1.77851761 4.11688697 -1.77851761 4.11688697 -0.75 1.9375 C-0.5025 1.298125 -0.255 0.65875 0 0 Z \",fill:\"#483C29\",transform:\"translate(623,557)\"})),_path181||(_path181=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.36720387 1.39332574 4.9859524 2.9789286 7 6 C7.66 5.34 8.32 4.68 9 4 C9.93423645 7.01031744 10.04449911 7.86650268 9 11 C5.04 10.67 1.08 10.34 -3 10 C-2.01 11.65 -1.02 13.3 0 15 C-0.99 15.33 -1.98 15.66 -3 16 C-4.37312717 15.07313916 -5.74311115 14.14131171 -7.09765625 13.1875 C-15.77229956 7.77252758 -25.07210113 7.26795948 -35 7 C-35 6.34 -35 5.68 -35 5 C-27.25108591 1.12554295 -16.04329835 4.79463011 -8.03173828 6.5769043 C-3.59487983 7.55249168 0.42150731 8.23861851 5 8 C4.175 7.05125 3.35 6.1025 2.5 5.125 C0 2.25 0 2.25 0 0 Z \",fill:\"#191007\",transform:\"translate(433,512)\"})),_path182||(_path182=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C10.37964731 6.79360575 12.34886481 13.60741743 14 21 C13.34 21 12.68 21 12 21 C11.67 19.68 11.34 18.36 11 17 C9.79438816 17.98267859 9.79438816 17.98267859 9.90234375 19.84765625 C9.91394531 20.57855469 9.92554688 21.30945313 9.9375 22.0625 C9.958125 23.361875 9.97875 24.66125 10 26 C8 25 8 25 7.22216797 23.14233398 C6.98127441 22.35157471 6.74038086 21.56081543 6.4921875 20.74609375 C6.2535498 19.9770874 6.01491211 19.20808105 5.76904297 18.41577148 C5.47400879 17.43294189 5.17897461 16.4501123 4.875 15.4375 C3.92625 12.323125 2.9775 9.20875 2 6 C2 18.21 2 30.42 2 43 C1.01 43 0.02 43 -1 43 C-0.67 28.81 -0.34 14.62 0 0 Z \",fill:\"#CEAE7C\",transform:\"translate(283,419)\"})),_path183||(_path183=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.886875 0.103125 1.77375 0.20625 2.6875 0.3125 C-0.01876 6.401585 -3.76915183 11.32769684 -8.1875 16.25 C-8.68088867 16.8174292 -9.17427734 17.3848584 -9.68261719 17.96948242 C-13.28893773 21.87280098 -16.09765231 23.2734514 -21.3125 24.3125 C-20.10234589 18.66511417 -18.08247347 15.31876797 -14 11.1875 C-13.52626953 10.68863281 -13.05253906 10.18976563 -12.56445312 9.67578125 C-11.6216844 8.68787312 -10.67068465 7.70774716 -9.71118164 6.73608398 C-8.33657613 5.33700478 -6.99981034 3.90106819 -5.6640625 2.46484375 C-3.3125 0.3125 -3.3125 0.3125 0 0 Z \",fill:\"#C2A26E\",transform:\"translate(624.3125,494.6875)\"})),_path184||(_path184=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.99 0 1.98 0 3 C-24.09 3 -48.18 3 -73 3 C-73 2.34 -73 1.68 -73 1 C-48.65934759 0.23815156 -24.35257481 -0.14807459 0 0 Z \",fill:\"#D2B27D\",transform:\"translate(701,488)\"})),_path185||(_path185=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.12375 0.9075 1.2475 1.815 1.375 2.75 C1.92109677 5.58970323 2.57263803 7.52590591 4 10 C2.6875 11.5 2.6875 11.5 1 13 C0.01 13 -0.98 13 -2 13 C-1.505 13.78375 -1.01 14.5675 -0.5 15.375 C1 18 1 18 1 20 C1.66 20 2.32 20 3 20 C3.67154933 21.28913487 4.33708859 22.58140204 5 23.875 C5.37125 24.59429687 5.7425 25.31359375 6.125 26.0546875 C7 28 7 28 7 30 C7.66 30 8.32 30 9 30 C9 30.66 9 31.32 9 32 C6.36 32 3.72 32 1 32 C0.69707031 31.35933594 0.39414063 30.71867187 0.08203125 30.05859375 C-1.97012855 25.82167305 -4.00655981 21.79202775 -6.8125 18 C-9 15 -9 15 -9 13 C-8.05125 12.566875 -7.1025 12.13375 -6.125 11.6875 C-2.79958063 10.20697799 -2.79958063 10.20697799 -1 7 C-0.60612212 4.67612053 -0.26513915 2.34206251 0 0 Z \",fill:\"#CDAF7E\",transform:\"translate(186,430)\"})),_path186||(_path186=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 13.53 8 27.06 8 41 C13.94 41 19.88 41 26 41 C26 41.66 26 42.32 26 43 C17.09 43 8.18 43 -1 43 C-0.67 28.81 -0.34 14.62 0 0 Z M2 1 C2 14.53 2 28.06 2 42 C3.65 42 5.3 42 7 42 C7 28.47 7 14.94 7 1 C5.35 1 3.7 1 2 1 Z \",fill:\"#7D6B4E\",transform:\"translate(641,419)\"})),_path187||(_path187=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.34 1 1.68 1 1 1 C1 1.66 1 2.32 1 3 C4.3 3 7.6 3 11 3 C11 3.66 11 4.32 11 5 C5.63298058 7.00757287 0.80053074 7.38866757 -4.87890625 7.65625 C-7.93893671 7.99327463 -10.21939033 8.71584507 -13 10 C-13 10.66 -13 11.32 -13 12 C-13.66 12 -14.32 12 -15 12 C-15.268125 12.53625 -15.53625 13.0725 -15.8125 13.625 C-17.20833333 16.41666667 -18.60416667 19.20833333 -20 22 C-20.66 22 -21.32 22 -22 22 C-22.33 23.32 -22.66 24.64 -23 26 C-24.30249153 22.40144968 -23.69931441 20.41900527 -22.25 16.9375 C-21.90453125 16.08027344 -21.5590625 15.22304688 -21.203125 14.33984375 C-20.02494041 12.04850423 -19.00154794 10.60650558 -17 9 C-16.34 9 -15.68 9 -15 9 C-14.566875 8.071875 -14.566875 8.071875 -14.125 7.125 C-13 5 -13 5 -11 3 C-8.65234375 2.40234375 -8.65234375 2.40234375 -5.9375 1.9375 C-2.66916048 1.58972434 -2.66916048 1.58972434 0 0 Z \",fill:\"#C09E6C\",transform:\"translate(543,530)\"})),_path188||(_path188=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66784387 5.20918218 -0.8390381 8.73611038 -3.4296875 13.1328125 C-5 15 -5 15 -8.6875 16.1875 C-12 16 -12 16 -14 14 C-14.99 14.66 -15.98 15.32 -17 16 C-17.48554913 9.68786127 -17.48554913 9.68786127 -15.5 6.875 C-5.24137931 -0.81896552 -5.24137931 -0.81896552 0 0 Z \",fill:\"#A07E46\",transform:\"translate(733,242)\"})),_path189||(_path189=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 0.33 17 0.66 17 1 C12.38 1.33 7.76 1.66 3 2 C2.26283534 5.68582329 1.87703162 8.41123826 1.88647461 12.06567383 C1.88655014 13.04631302 1.88662567 14.02695221 1.88670349 15.03730774 C1.89186478 16.0833165 1.89702606 17.12932526 1.90234375 18.20703125 C1.9037587 19.28756271 1.90517365 20.36809418 1.90663147 21.48136902 C1.9122192 24.92510776 1.9247695 28.36878098 1.9375 31.8125 C1.94251658 34.15038968 1.94707921 36.48828039 1.95117188 38.82617188 C1.96218462 44.55080353 1.97891059 50.27539708 2 56 C1.34 56 0.68 56 0 56 C-1.70195272 46.96104153 -2.31711225 38.13347677 -2.26074219 28.95166016 C-2.24997322 26.86982364 -2.26073459 24.7888427 -2.2734375 22.70703125 C-2.28037137 14.90435108 -1.66669282 7.63239488 0 0 Z \",fill:\"#988466\",transform:\"translate(411,197)\"})),_path190||(_path190=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.99 0 -1.98 0 -3 0 C-3 0.99 -3 1.98 -3 3 C-2.45085937 3.0825 -1.90171875 3.165 -1.3359375 3.25 C6.29938034 5.70147329 12.96368529 13.23886279 17.05078125 19.9140625 C18.32142136 22.70633335 18.46382153 24.98516003 18 28 C17 26.66666667 16 25.33333333 15 24 C14.443125 23.29875 13.88625 22.5975 13.3125 21.875 C12 20 12 20 12 18 C11.443125 17.731875 10.88625 17.46375 10.3125 17.1875 C6.9037261 15.43704854 3.67241871 13.42641186 0.4375 11.375 C-1.76911028 10.13024548 -3.52804624 9.45776922 -6 9 C-6 7.68 -6 6.36 -6 5 C-7.32 4.67 -8.64 4.34 -10 4 C-9.25 2.0625 -9.25 2.0625 -8 0 C-5.05360248 -1.27677226 -3.00864103 -0.96706319 0 0 Z \",fill:\"#BE9B63\",transform:\"translate(425,526)\"})),_path191||(_path191=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C2.97679687 1.12019531 2.95359375 2.24039062 2.9296875 3.39453125 C2.91092763 4.86718084 2.89272766 6.33983763 2.875 7.8125 C2.85824219 8.55048828 2.84148437 9.28847656 2.82421875 10.04882812 C2.78925372 13.91246426 2.80602445 15.70903668 5 19 C5 19.99 5 20.98 5 22 C5.53625 22.268125 6.0725 22.53625 6.625 22.8125 C9.41666667 24.20833333 12.20833333 25.60416667 15 27 C15 27.99 15 28.98 15 30 C15.5775 30.226875 16.155 30.45375 16.75 30.6875 C19.5663661 32.33038023 21.08077114 34.39533227 23 37 C21.52307692 41.67692308 21.52307692 41.67692308 18.875 43.3125 C18.25625 43.539375 17.6375 43.76625 17 44 C17.66 43.01 18.32 42.02 19 41 C19.46354221 38.49734643 19.46354221 38.49734643 19 36 C17.51945247 34.31202222 17.51945247 34.31202222 15.4375 33.0625 C14.70660156 32.55460937 13.97570312 32.04671875 13.22265625 31.5234375 C12.48917969 31.02070313 11.75570313 30.51796875 11 30 C4.71504687 25.32221784 -1.64990583 19.03849174 -3 11 C-3.06548492 9.41788427 -3.08578381 7.83329919 -3.0625 6.25 C-3.05347656 5.45078125 -3.04445313 4.6515625 -3.03515625 3.828125 C-3.02355469 3.22484375 -3.01195312 2.6215625 -3 2 C-2.01 2 -1.02 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#0E0802\",transform:\"translate(265,258)\"})),_path192||(_path192=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.00257813 1.14855469 4.00515625 2.29710937 4.0078125 3.48046875 C4.21029788 14.0806354 5.61227449 21.67445675 11 31 C8.18586672 30.61374641 6.44789645 30.34304878 4 29 C1.90200883 26.19028524 0.4393824 23.18805357 -1 20 C-1.33 19.34 -1.66 18.68 -2 18 C-2.40144948 11.76352901 -2.581299 5.80792276 0 0 Z \",fill:\"#D6B581\",transform:\"translate(599,430)\"})),_path193||(_path193=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.81699536 1.87799691 4.51872064 3.96366108 6 7 C6.46420095 9.87005961 6.30847074 12.06952801 6 15 C5.01 15.33 4.02 15.66 3 16 C2.83723958 13.98177083 2.67447917 11.96354167 2.51171875 9.9453125 C2.12606964 7.60480784 2.12606964 7.60480784 -1 6 C-3.33199388 5.92094936 -5.66832622 5.91201231 -8 6 C-7.67 6.33 -7.34 6.66 -7 7 C-6.95919217 8.99958364 -6.95745644 11.00045254 -7 13 C-10.375 12.6875 -10.375 12.6875 -14 12 C-16 9 -16 9 -15.8125 6.5 C-14.93740139 3.80738888 -14.22274287 2.70980221 -12 1 C-7.89481122 -0.36839626 -4.27542222 -0.87253515 0 0 Z \",fill:\"#90784F\",transform:\"translate(591,235)\"})),_path194||(_path194=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.89684158 -0.10829314 5.78961019 -0.18743954 8.6875 -0.25 C9.50412109 -0.28351562 10.32074219 -0.31703125 11.16210938 -0.3515625 C15.16610977 -0.41640461 17.48521922 -0.27935874 21.06640625 1.6640625 C23.47090239 4.56888814 23.51025487 5.91136313 23.25 9.625 C22.88077168 13.45992913 22.88077168 13.45992913 24 17 C23.34 17 22.68 17 22 17 C22 17.66 22 18.32 22 19 C20.68 19 19.36 19 18 19 C15.82542733 16.12645755 15 14.63563409 15 11 C15.66 11 16.32 11 17 11 C16.67 8.03 16.34 5.06 16 2 C13.03 1.67 10.06 1.34 7 1 C7.33 1.66 7.66 2.32 8 3 C8.07116382 5.37402501 8.08409085 7.75000677 8.0625 10.125 C8.05347656 11.40632812 8.04445313 12.68765625 8.03515625 14.0078125 C8.02355469 14.99523437 8.01195312 15.98265625 8 17 C7.67 17 7.34 17 7 17 C6.67 12.71 6.34 8.42 6 4 C4.68 3.67 3.36 3.34 2 3 C2 3.66 2 4.32 2 5 C1.01 5.495 1.01 5.495 0 6 C-0.65772428 9.02934491 -0.65772428 9.02934491 -1 12 C-1.33 12 -1.66 12 -2 12 C-2.26785714 3.96428571 -2.26785714 3.96428571 0 0 Z \",fill:\"#947F5B\",transform:\"translate(463,601)\"})),_path195||(_path195=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 3 2 3 2 5 C4.97 5.495 4.97 5.495 8 6 C8.33730842 7.43657245 8.66969591 8.87430093 9 10.3125 C9.185625 11.11300781 9.37125 11.91351562 9.5625 12.73828125 C10 15 10 15 10 18 C8.69864875 19.69175663 7.36244796 21.35704805 6 23 C5.71125 23.721875 5.4225 24.44375 5.125 25.1875 C4 27 4 27 1.375 28.5 C-3.35118026 29.20017485 -6.21090218 27.80554477 -10 25 C-11.68018219 23.06638251 -12.76271031 21.26836442 -14 19 C-13.34 17.68 -12.68 16.36 -12 15 C-11.566875 16.11375 -11.13375 17.2275 -10.6875 18.375 C-9.30088881 22.17512334 -9.30088881 22.17512334 -6 24 C-3.71351152 24.24107326 -3.71351152 24.24107326 -1.3125 24.125 C-0.50425781 24.10695313 0.30398438 24.08890625 1.13671875 24.0703125 C1.75160156 24.04710937 2.36648438 24.02390625 3 24 C2.67 23.01 2.34 22.02 2 21 C-1.51190809 19.77030122 -1.51190809 19.77030122 -5 19 C-4.67 17.68 -4.34 16.36 -4 15 C-3.484375 15.309375 -2.96875 15.61875 -2.4375 15.9375 C0.66665423 17.29059287 3.65115007 17.61359424 7 18 C7.0928125 16.1128125 7.0928125 16.1128125 7.1875 14.1875 C7.22230469 13.47980469 7.25710938 12.77210938 7.29296875 12.04296875 C7.14610346 9.93834686 7.14610346 9.93834686 5.8125 8.28125 C3.44501781 6.607685 1.6883812 6.49924553 -1.1875 6.3125 C-2.08855469 6.24675781 -2.98960937 6.18101562 -3.91796875 6.11328125 C-4.60503906 6.07589844 -5.29210937 6.03851562 -6 6 C-5.67 5.34 -5.34 4.68 -5 4 C-4.34 4.33 -3.68 4.66 -3 5 C-2.690625 4.360625 -2.38125 3.72125 -2.0625 3.0625 C-1 1 -1 1 0 0 Z \",fill:\"#53432B\",transform:\"translate(307,528)\"})),_path196||(_path196=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C18 0 18 0 21 2 C21 2.99 21 3.98 21 5 C19.68 4.34 18.36 3.68 17 3 C13.7 2.67 10.4 2.34 7 2 C7 15.2 7 28.4 7 42 C13.59700253 41.58806836 13.59700253 41.58806836 18.5 38.9375 C19.325 38.298125 20.15 37.65875 21 37 C21 37.99 21 38.98 21 40 C22.98 39.505 22.98 39.505 25 39 C25 39.66 25 40.32 25 41 C19 43 19 43 0 43 C0 28.81 0 14.62 0 0 Z M1 1 C1 14.53 1 28.06 1 42 C2.65 42 4.3 42 6 42 C6.33 28.47 6.66 14.94 7 1 C5.02 1 3.04 1 1 1 Z \",fill:\"#94805F\",transform:\"translate(675,419)\"})),_path197||(_path197=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 6.6 1 13.2 1 20 C1.66 19.01 2.32 18.02 3 17 C3.33 17.66 3.66 18.32 4 19 C7.18981415 18.29827938 7.18981415 18.29827938 8.5 15.5 C10 13 10 13 13 12 C11.71065782 17.74343333 9.73695244 21.42223326 6 26 C5.34 26 4.68 26 4 26 C4 26.66 4 27.32 4 28 C1.5 29.5 1.5 29.5 -1 31 C-1.86625 31.886875 -2.7325 32.77375 -3.625 33.6875 C-6 36 -6 36 -9 36 C-7.93490333 33.85494484 -6.85429921 31.72085363 -5.74609375 29.59765625 C-5.31425781 28.76105469 -4.88242187 27.92445313 -4.4375 27.0625 C-4.00308594 26.22847656 -3.56867187 25.39445312 -3.12109375 24.53515625 C-0.79488383 19.27484183 -0.72717673 13.85281695 -0.4375 8.1875 C-0.39431641 7.39923828 -0.35113281 6.61097656 -0.30664062 5.79882812 C-0.20121679 3.86605785 -0.10016906 1.93304974 0 0 Z \",fill:\"#A98D5F\",transform:\"translate(716,324)\"})),_path198||(_path198=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0 8.58 0 13 0 C12.02638202 4.86808988 10.95842675 7.1450803 8 11 C7.34 11 6.68 11 6 11 C6 11.66 6 12.32 6 13 C3.4385343 15.29648649 2.52032428 16 -1 16 C-1.02725341 14.2709226 -1.04650987 12.54171824 -1.0625 10.8125 C-1.07410156 9.84957031 -1.08570313 8.88664063 -1.09765625 7.89453125 C-1 5 -1 5 0 0 Z \",fill:\"#C6AB83\",transform:\"translate(416,201)\"})),_path199||(_path199=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.37562854 1.28965176 2.70766393 2.62689293 4 4 C4 4.66 4 5.32 4 6 C4.66 6 5.32 6 6 6 C6 9.63 6 13.26 6 17 C5.01 17.33 4.02 17.66 3 18 C2.26676204 20.01508358 2.26676204 20.01508358 2 22 C3.58298026 22.4803318 5.16639978 22.95921612 6.75 23.4375 C7.63171875 23.70433594 8.5134375 23.97117187 9.421875 24.24609375 C11.60565835 24.88468494 13.78835498 25.46775833 16 26 C15.649375 25.484375 15.29875 24.96875 14.9375 24.4375 C13.6384359 21.05993333 14.32782319 18.49531943 15 15 C16.32 14.67 17.64 14.34 19 14 C20.10643764 19.83394389 20.27137992 22.76579213 17 28 C16.01 28 15.02 28 14 28 C13.01 28.33 12.02 28.66 11 29 C8.3125 28.0625 8.3125 28.0625 6 27 C6 26.34 6 25.68 6 25 C4.824375 24.7834375 4.824375 24.7834375 3.625 24.5625 C1 24 1 24 -1 23 C-1 21.68 -1 20.36 -1 19 C-0.34 19 0.32 19 1 19 C1.33 17.68 1.66 16.36 2 15 C2.66 15 3.32 15 4 15 C2.83962234 7.91369345 2.83962234 7.91369345 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#3E3320\",transform:\"translate(393,586)\"})),_path200||(_path200=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C7.67 6.93 7.34 13.86 7 21 C12.61 21 18.22 21 24 21 C24 14.73 24 8.46 24 2 C24.33 2 24.66 2 25 2 C25 14.87 25 27.74 25 41 C24.67 41 24.34 41 24 41 C24 34.73 24 28.46 24 22 C18.39 22 12.78 22 7 22 C7.33 28.93 7.66 35.86 8 43 C5.03 43 2.06 43 -1 43 C-0.67 42.34 -0.34 41.68 0 41 C1.98 41.33 3.96 41.66 6 42 C5.83773926 41.32654541 5.67547852 40.65309082 5.50830078 39.95922852 C4.91042031 36.47848441 4.87027851 33.1847114 4.8671875 29.65234375 C4.86623077 28.95863174 4.86527405 28.26491974 4.86428833 27.55018616 C4.86361062 26.09034128 4.86543628 24.63049332 4.86962891 23.1706543 C4.87499116 20.94117455 4.86966591 18.71189548 4.86328125 16.48242188 C4.86394195 15.05989539 4.86522293 13.63736903 4.8671875 12.21484375 C4.86831543 10.92698975 4.86944336 9.63913574 4.87060547 8.31225586 C4.97449964 5.65276097 5.20130335 3.51625137 6 1 C4.02 1 2.04 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#A38D6B\",transform:\"translate(560,419)\"})),_path201||(_path201=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0 8.58 0 13 0 C13.91657981 5.38490641 14.11138159 10.54230189 14 16 C10.66415119 15.69674102 9.2526698 15.2419179 6.796875 12.890625 C6.12140625 12.01921875 5.4459375 11.1478125 4.75 10.25 C3.72132813 8.95835937 3.72132813 8.95835937 2.671875 7.640625 C1 5 1 5 0 0 Z \",fill:\"#C9AE86\",transform:\"translate(535,201)\"})),_path202||(_path202=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-20.99160715 10.67192406 -40.26379204 15.49546216 -63 15 C-63 14.67 -63 14.34 -63 14 C-62.38181396 13.93006836 -61.76362793 13.86013672 -61.12670898 13.78808594 C-48.74795572 12.35892872 -36.9413679 10.63488583 -25 7 C-23.48379727 6.5651746 -21.96682848 6.13301403 -20.44921875 5.703125 C-18.90341159 5.26123525 -17.35783423 4.8185408 -15.8125 4.375 C-15.09271973 4.16891113 -14.37293945 3.96282227 -13.63134766 3.75048828 C-10.89728308 2.94727131 -8.30236499 2.15514015 -5.76171875 0.8515625 C-4 0 -4 0 0 0 Z \",fill:\"#35220D\",transform:\"translate(478,181)\"})),_path203||(_path203=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.28 0 10.56 0 16 0 C16 6.6 16 13.2 16 20 C14.68 19.67 13.36 19.34 12 19 C12 18.34 12 17.68 12 17 C11.01 17 10.02 17 9 17 C9 12.05 9 7.1 9 2 C6.03 2 3.06 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#BCA175\",transform:\"translate(788,442)\"})),_path204||(_path204=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C5.90619443 4.75090911 5.80004133 9.50132484 5.68261719 14.25170898 C5.64441928 15.8665417 5.60955055 17.48145684 5.578125 19.09643555 C5.53227391 21.42266217 5.47431416 23.74832592 5.4140625 26.07421875 C5.40251129 26.79212082 5.39096008 27.51002289 5.37905884 28.24967957 C5.26232499 32.24658602 4.75259319 35.39334769 3 39 C0.49557888 35.24336832 0.65114563 32.18991875 0.5859375 27.83203125 C0.56657135 27.03721848 0.5472052 26.2424057 0.5272522 25.42350769 C0.46750558 22.88661405 0.42109117 20.34967491 0.375 17.8125 C0.33681565 16.09177716 0.29776365 14.37107335 0.2578125 12.65039062 C0.16180821 8.43374835 0.07775924 4.2170166 0 0 Z \",fill:\"#DFBA81\",transform:\"translate(402,420)\"})),_path205||(_path205=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C1.67 2.598125 1.34 3.19625 1 3.8125 C-0.20787988 6.05386471 -0.20787988 6.05386471 0 9 C0.99 9.33 1.98 9.66 3 10 C2.97679687 11.12535156 2.95359375 12.25070312 2.9296875 13.41015625 C2.78860957 23.48179804 3.35717166 33.05502128 5 43 C2.52627523 41.17159474 2.0087367 40.03839156 1.31640625 36.99609375 C0.79553486 32.03410838 0.89322579 27.04505175 0.9375 22.0625 C0.94201172 21.09248047 0.94652344 20.12246094 0.95117188 19.12304688 C0.9628685 16.7486324 0.97925914 14.37434979 1 12 C0.34 12 -0.32 12 -1 12 C-2.15570704 15.46712111 -2.32835293 18.5414956 -2.5625 22.1875 C-2.64628906 23.45980469 -2.73007812 24.73210937 -2.81640625 26.04296875 C-2.87699219 27.01878906 -2.93757812 27.99460937 -3 29 C-5 28 -5 28 -5.61328125 26.40234375 C-6.14384718 23.1064039 -6.17096098 19.90007482 -6.1875 16.5625 C-6.20876953 14.61537109 -6.20876953 14.61537109 -6.23046875 12.62890625 C-6.01557702 9.24527201 -5.47166218 7.01894337 -4 4 C-3.01 4 -2.02 4 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#826942\",transform:\"translate(655,292)\"})),_path206||(_path206=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.49152542 0.61016949 5.49152542 0.61016949 7.875 2.4375 C9 4 9 4 9 6 C9.99 6 10.98 6 12 6 C12 6.66 12 7.32 12 8 C10.68 8.33 9.36 8.66 8 9 C8 9.66 8 10.32 8 11 C6.02 11.66 4.04 12.32 2 13 C2.33 12.34 2.66 11.68 3 11 C1.35 11 -0.3 11 -2 11 C-2 10.34 -2 9.68 -2 9 C-6.54791465 8.83103582 -6.54791465 8.83103582 -11 9.5625 C-14.09384361 10.23927829 -16.91444879 9.53403771 -20 9 C-14.81515341 4.41340494 -8.7340594 4.85424634 -2.125 4.9375 C-1.09246094 4.94426758 -1.09246094 4.94426758 -0.0390625 4.95117188 C1.64066335 4.96283664 3.32034375 4.98076729 5 5 C4.67 4.34 4.34 3.68 4 3 C1.97536745 2.34786708 1.97536745 2.34786708 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#A8864F\",transform:\"translate(562,514)\"})),_path207||(_path207=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0.33 3.3 0.66 5 1 C4.67 1.66 4.34 2.32 4 3 C6.31 2.34 8.62 1.68 11 1 C11 1.99 11 2.98 11 4 C13.64 4.33 16.28 4.66 19 5 C19 5.66 19 6.32 19 7 C17.85660156 7.20496094 16.71320312 7.40992188 15.53515625 7.62109375 C14.04423324 7.8930231 12.55334984 8.16516974 11.0625 8.4375 C10.30775391 8.57220703 9.55300781 8.70691406 8.77539062 8.84570312 C5.08046826 9.24272034 5.08046826 9.24272034 2 11 C0.15108054 11.23363881 -1.70488031 11.41303635 -3.5625 11.5625 C-5.08037109 11.68818359 -5.08037109 11.68818359 -6.62890625 11.81640625 C-7.41136719 11.87699219 -8.19382812 11.93757812 -9 12 C-6 8 -3 4 0 0 Z \",fill:\"#A27B3F\",transform:\"translate(533,509)\"})),_path208||(_path208=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C5.85867552 4.73184723 6.33599681 9.02948403 6.3125 14.0625 C6.32861328 14.75666016 6.34472656 15.45082031 6.36132812 16.16601562 C6.36557379 20.63670351 5.65913958 23.4006897 3 27 C2.67 26.01 2.34 25.02 2 24 C1.34 24 0.68 24 0 24 C-0.1958691 20.18788097 -0.38029565 16.37529466 -0.5625 12.5625 C-0.61857422 11.47388672 -0.67464844 10.38527344 -0.73242188 9.26367188 C-0.78076172 8.22919922 -0.82910156 7.19472656 -0.87890625 6.12890625 C-0.9260376 5.17056885 -0.97316895 4.21223145 -1.02172852 3.22485352 C-1 1 -1 1 0 0 Z \",fill:\"#DAB782\",transform:\"translate(627,426)\"})),_path209||(_path209=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 4.62 1 9.24 1 14 C1.66 14 2.32 14 3 14 C3.05607422 12.96939453 3.05607422 12.96939453 3.11328125 11.91796875 C3.21189453 10.56638672 3.21189453 10.56638672 3.3125 9.1875 C3.37050781 8.29417969 3.42851562 7.40085937 3.48828125 6.48046875 C4.07410298 3.64079852 4.91752131 2.90792867 7 1 C6.97381592 1.56396484 6.94763184 2.12792969 6.9206543 2.70898438 C6.81564799 5.30569725 6.75135627 7.9019622 6.6875 10.5 C6.64560547 11.386875 6.60371094 12.27375 6.56054688 13.1875 C6.43757433 19.87720637 7.96572655 23.72684333 12 29 C16 34.74758842 16 34.74758842 16 37 C10.98509861 35.74627465 8.82266515 34.32808657 6 30 C4.55717979 27.37958389 3.22921771 24.72700401 2 22 C1.63390625 21.27425781 1.2678125 20.54851562 0.890625 19.80078125 C-0.3514086 15.89491244 -0.21368028 12.25656053 -0.125 8.1875 C-0.11597656 7.39923828 -0.10695313 6.61097656 -0.09765625 5.79882812 C-0.07422504 3.86575334 -0.03835838 1.9328362 0 0 Z \",fill:\"#A28355\",transform:\"translate(359,335)\"})),_path210||(_path210=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.31566167 0.47951796 6.2019941 1.70235018 9 5 C9.33 5.66 9.66 6.32 10 7 C10.804375 7.226875 11.60875 7.45375 12.4375 7.6875 C15 9 15 9 16.3125 12.625 C16.539375 13.73875 16.76625 14.8525 17 16 C16.34 16.33 15.68 16.66 15 17 C15 16.34 15 15.68 15 15 C13.329375 15.2784375 13.329375 15.2784375 11.625 15.5625 C8 16 8 16 6 15 C5.67 14.01 5.34 13.02 5 12 C4.01 11.67 3.02 11.34 2 11 C-0.52003857 7.55152617 -0.15901 4.13426005 0 0 Z \",fill:\"#A98349\",transform:\"translate(232,241)\"})),_path211||(_path211=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 4.95 0 9.9 0 15 C-6.2720904 13.9546516 -7.08058257 13.46378096 -11 9 C-11.66 8.34 -12.32 7.68 -13 7 C-13 6.01 -13 5.02 -13 4 C-12.01 4 -11.02 4 -10 4 C-10 3.34 -10 2.68 -10 2 C-6.19956554 0.26265853 -4.40285423 0 0 0 Z \",fill:\"#BA9B69\",transform:\"translate(482,188)\"})),_path212||(_path212=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C42.57 0 85.14 0 129 0 C128.67 0.66 128.34 1.32 128 2 C87.41 2 46.82 2 5 2 C5.33 2.66 5.66 3.32 6 4 C4.02 3.34 2.04 2.68 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#1F1304\",transform:\"translate(492,492)\"})),_path213||(_path213=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C42.24 0 84.48 0 128 0 C128 0.66 128 1.32 128 2 C126.35 2.66 124.7 3.32 123 4 C123 3.01 123 2.02 123 1 C83.07 1 43.14 1 2 1 C1.67 1.66 1.34 2.32 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#1C1001\",transform:\"translate(344,492)\"})),_path214||(_path214=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C4.63026438 4.42939755 6.08916247 8.65915575 6.5625 13.375 C6.73443965 17.09025096 6.73443965 17.09025096 9 20 C9.125 22.6875 9.125 22.6875 9 25 C8.34 25.33 7.68 25.66 7 26 C6.01 25.67 5.02 25.34 4 25 C3.15625 23.1796875 3.15625 23.1796875 2.5 20.875 C1.59615878 17.83174739 0.66420967 15.31642683 -0.75 12.4375 C-2.35920906 8.01217509 -1.94587948 5.57175081 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#CEAC79\",transform:\"translate(218,419)\"})),_path215||(_path215=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.625 0.75 6.625 0.75 10 3 C9.67 3.66 9.34 4.32 9 5 C9.19980469 5.90363281 9.39960938 6.80726563 9.60546875 7.73828125 C10.09537137 11.7884663 9.18837086 13.60381451 7.3125 17.1875 C6.79300781 18.21230469 6.27351563 19.23710938 5.73828125 20.29296875 C4.01855675 22.97110151 2.75644721 24.44341805 0 26 C-3.1875 25.8125 -3.1875 25.8125 -6 25 C-6.33 24.34 -6.66 23.68 -7 23 C-7.99 23 -8.98 23 -10 23 C-10 22.34 -10 21.68 -10 21 C-11.0725 20.7525 -12.145 20.505 -13.25 20.25 C-16.99649437 19.00116854 -18.52073882 17.97511342 -21 15 C-17.81680947 15.63663811 -15.04016359 16.859688 -12.08203125 18.16796875 C-8.15184236 19.73856956 -4.06826811 20.84582333 0 22 C0 21.34 0 20.68 0 20 C1.65 19.34 3.3 18.68 5 18 C5 17.34 5 16.68 5 16 C3.68 16 2.36 16 1 16 C1.33 14.68 1.66 13.36 2 12 C3.65 12.66 5.3 13.32 7 14 C7 10.7 7 7.4 7 4 C5.68 3.67 4.36 3.34 3 3 C2.01 2.67 1.02 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#453723\",transform:\"translate(370,574)\"})),_path216||(_path216=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C1.525625 2.391875 1.05125 2.78375 0.5625 3.1875 C-1.35179633 5.40808374 -1.61266988 7.13375709 -2 10 C-1.34 10 -0.68 10 0 10 C0.1546875 9.1028125 0.1546875 9.1028125 0.3125 8.1875 C1.12255514 5.61005181 1.80289005 4.56936425 4 3 C6.6875 2.8125 6.6875 2.8125 9 3 C9 4.65 9 6.3 9 8 C10.32 8.33 11.64 8.66 13 9 C12 10 12 10 9.6875 10.1875 C6.9220797 9.9945637 5.35954949 9.39825155 3 8 C3 8.99 3 9.98 3 11 C5.31 11.66 7.62 12.32 10 13 C10 13.99 10 14.98 10 16 C5.49073517 16.90381779 2.19166979 17.55935521 -2.0625 15.5625 C-4.26599929 12.64819449 -4.65252193 10.61610423 -4.44140625 6.97265625 C-3.76718738 3.95955422 -2.14443056 2.14443056 0 0 Z \",fill:\"#B6986C\",transform:\"translate(300,536)\"})),_path217||(_path217=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.55012695 -0.02484561 11.10022102 -0.04292868 16.65039062 -0.05493164 C18.53581303 -0.05993919 20.4212316 -0.06674715 22.30664062 -0.07543945 C25.02735344 -0.08766253 27.7480146 -0.09326424 30.46875 -0.09765625 C31.71924133 -0.10539818 31.71924133 -0.10539818 32.99499512 -0.11329651 C38.08707816 -0.11377714 42.95937477 0.26870447 48 1 C48 1.66 48 2.32 48 3 C32.16 3 16.32 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#D7B884\",transform:\"translate(264,488)\"})),_path218||(_path218=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.85625 0.0309375 1.85625 0.0309375 3.75 0.0625 C3.42 1.0525 3.09 2.0425 2.75 3.0625 C0.83569336 3.99804688 0.83569336 3.99804688 -1.66015625 4.78125 C-2.56830078 5.07386719 -3.47644531 5.36648438 -4.41210938 5.66796875 C-5.36923828 5.96316406 -6.32636719 6.25835937 -7.3125 6.5625 C-9.17882669 7.15486149 -11.04471915 7.74859298 -12.91015625 8.34375 C-13.8139502 8.62887451 -14.71774414 8.91399902 -15.64892578 9.20776367 C-18.04630604 9.99556434 -20.3936411 10.8576799 -22.74609375 11.76953125 C-25.91625718 12.93934629 -27.92835025 13.37390466 -31.25 13.0625 C-31.25 12.4025 -31.25 11.7425 -31.25 11.0625 C-29.26432292 10.83463542 -27.27864583 10.60677083 -25.29296875 10.37890625 C-23.05603607 10.09079265 -23.05603607 10.09079265 -20.25 9.0625 C-20.25 8.4025 -20.25 7.7425 -20.25 7.0625 C-22.89 7.0625 -25.53 7.0625 -28.25 7.0625 C-24.49276003 4.88056116 -20.43530367 3.99704245 -16.25 3 C-15.5384375 2.82662109 -14.826875 2.65324219 -14.09375 2.47460938 C-12.14664787 2.00054813 -10.19836922 1.53132634 -8.25 1.0625 C-7.14398437 0.75699219 -7.14398437 0.75699219 -6.015625 0.4453125 C-3.9667611 0.00108979 -2.09397428 -0.03489957 0 0 Z \",fill:\"#A88C5E\",transform:\"translate(628.25,368.9375)\"})),_path219||(_path219=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.10633718 1.70828921 2.93801608 2.52148416 3.29296875 5.26171875 C3.25816406 6.06222656 3.22335937 6.86273438 3.1875 7.6875 C3.14689453 8.89986328 3.14689453 8.89986328 3.10546875 10.13671875 C3.05326172 11.05904297 3.05326172 11.05904297 3 12 C2.67 12 2.34 12 2 12 C1.505 8.535 1.505 8.535 1 5 C0.82984375 5.55429687 0.6596875 6.10859375 0.484375 6.6796875 C-1.51972556 12.67066895 -1.51972556 12.67066895 -4.1875 14.5 C-4.785625 14.665 -5.38375 14.83 -6 15 C-6 15.33 -6 15.66 -6 16 C-7.17755859 16.05607422 -7.17755859 16.05607422 -8.37890625 16.11328125 C-18.15813161 16.72523278 -24.30005357 18.87147121 -32 25 C-32 25.66 -32 26.32 -32 27 C-34.63892176 28.78305524 -36.97178863 29.99059621 -40 31 C-40.73323796 33.01508358 -40.73323796 33.01508358 -41 35 C-41.66 35 -42.32 35 -43 35 C-42.01 32.03 -42.01 32.03 -41 29 C-40.34 29 -39.68 29 -39 29 C-39 28.34 -39 27.68 -39 27 C-38.34 27 -37.68 27 -37 27 C-36.773125 26.4225 -36.54625 25.845 -36.3125 25.25 C-32.58648375 18.86254357 -25.70955421 17.01196806 -19 15 C-16.39596931 14.41068612 -13.78873562 13.90540804 -11.1640625 13.41796875 C-8.52374243 12.90801524 -6.32454563 12.38019897 -4 11 C-2.70957237 8.73398135 -2.70957237 8.73398135 -2 6 C-1.62875 4.906875 -1.2575 3.81375 -0.875 2.6875 C-0.58625 1.800625 -0.2975 0.91375 0 0 Z \",fill:\"#7E6438\",transform:\"translate(695,261)\"})),_path220||(_path220=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 0 7.26 0 11 0 C10.01 1.485 10.01 1.485 9 3 C8.34 3 7.68 3 7 3 C7 3.66 7 4.32 7 5 C7.86625 5.2475 8.7325 5.495 9.625 5.75 C13.22930787 7.08492884 15.97975979 8.62695412 19 11 C19 11.99 19 12.98 19 14 C16.75 14.6875 16.75 14.6875 14 15 C12 13.6875 12 13.6875 10 12 C6.17771492 10.13786111 4.48473803 10 0 10 C0 6.7 0 3.4 0 0 Z \",fill:\"#B59359\",transform:\"translate(483,488)\"})),_path221||(_path221=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.75 1.75 5.75 1.75 8 4 C14.22088051 6.80150262 19.85871365 7.6059679 26.625 8.0625 C37.61491536 8.84417708 37.61491536 8.84417708 43 11 C43 11.33 43 11.66 43 12 C18.65350258 10.99219292 18.65350258 10.99219292 12.9296875 7.87109375 C10.85438753 6.67156715 10.85438753 6.67156715 8 8 C11.53411321 10.12046792 14.94393835 10.53199289 19 11 C19 11.99 19 12.98 19 14 C13.39 14 7.78 14 2 14 C2 13.67 2 13.34 2 13 C4.64 12.67 7.28 12.34 10 12 C9.14535156 11.66226562 8.29070312 11.32453125 7.41015625 10.9765625 C6.30542969 10.53054688 5.20070313 10.08453125 4.0625 9.625 C2.96035156 9.18414062 1.85820312 8.74328125 0.72265625 8.2890625 C-2 7 -2 7 -3 5 C-1.02 5 0.96 5 3 5 C3.33 4.34 3.66 3.68 4 3 C3.01 3 2.02 3 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#7F663C\",transform:\"translate(392,364)\"})),_path222||(_path222=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C3 2.99 3 3.98 3 5 C3.78375 4.649375 4.5675 4.29875 5.375 3.9375 C6.24125 3.628125 7.1075 3.31875 8 3 C8.66 3.33 9.32 3.66 10 4 C10.33 3.34 10.66 2.68 11 2 C11.99 2 12.98 2 14 2 C14.144375 2.61875 14.28875 3.2375 14.4375 3.875 C14.93152225 6.03258322 14.93152225 6.03258322 16 8 C13.03 7.01 10.06 6.02 7 5 C7.12375 6.85625 7.12375 6.85625 7.25 8.75 C7.26731616 12.02275432 7.25121458 12.70016324 5.0625 15.3125 C4.381875 15.869375 3.70125 16.42625 3 17 C2.67 17.99 2.34 18.98 2 20 C0.0625 19.625 0.0625 19.625 -2 19 C-3.39431504 16.21136993 -3.25660094 14.07921132 -3 11 C-2.01 10.34 -1.02 9.68 0 9 C0.36362818 6.79274927 0.36362818 6.79274927 0.1875 4.375 C0.14689453 3.14910156 0.14689453 3.14910156 0.10546875 1.8984375 C0.07066406 1.27195312 0.03585937 0.64546875 0 0 Z \",fill:\"#3A3224\",transform:\"translate(354,566)\"})),_path223||(_path223=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.9719385 1.12451727 5.33440687 2.22293791 8 4 C8 4.66 8 5.32 8 6 C8.66 6.33 9.32 6.66 10 7 C9.34 7 8.68 7 8 7 C8 8.98 8 10.96 8 13 C5.36 13 2.72 13 0 13 C0.33 13.99 0.66 14.98 1 16 C-1.97 15.505 -1.97 15.505 -5 15 C-4.34 14.34 -3.68 13.68 -3 13 C-4.10067996 12.18278283 -5.20569731 11.37140549 -6.3125 10.5625 C-6.92738281 10.11003906 -7.54226563 9.65757812 -8.17578125 9.19140625 C-10.09677101 7.82663692 -10.09677101 7.82663692 -13 7 C-13 6.34 -13 5.68 -13 5 C-6.83381819 4.59785771 -1.82254243 6.03181664 4 8 C3.525625 7.236875 3.05125 6.47375 2.5625 5.6875 C1 3 1 3 0 0 Z \",fill:\"#84652F\",transform:\"translate(418,496)\"})),_path224||(_path224=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C14.85 0 29.7 0 45 0 C45 0.66 45 1.32 45 2 C47.64 2 50.28 2 53 2 C53 2.33 53 2.66 53 3 C37.16 3 21.32 3 5 3 C5 2.34 5 1.68 5 1 C3.35 1 1.7 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#A88852\",transform:\"translate(387,488)\"})),_path225||(_path225=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.90775329 1.95387664 5.47622339 3.38892729 8.25 6.625 C8.95640625 7.44226563 9.6628125 8.25953125 10.390625 9.1015625 C10.92171875 9.72804688 11.4528125 10.35453125 12 11 C11.360625 11.103125 10.72125 11.20625 10.0625 11.3125 C9.381875 11.539375 8.70125 11.76625 8 12 C7.67 12.99 7.34 13.98 7 15 C2.38 15.33 -2.24 15.66 -7 16 C-6.01 14.02 -5.02 12.04 -4 10 C-2.68 9.67 -1.36 9.34 0 9 C0 6.03 0 3.06 0 0 Z \",fill:\"#080402\",transform:\"translate(431,310)\"})),_path226||(_path226=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.8125 1.75 1.8125 1.75 3 4 C3 5.32 3 6.64 3 8 C1.35 7.67 -0.3 7.34 -2 7 C-1.90460937 7.61488281 -1.80921875 8.22976563 -1.7109375 8.86328125 C-1.60007812 9.67152344 -1.48921875 10.47976563 -1.375 11.3125 C-1.25898437 12.11300781 -1.14296875 12.91351562 -1.0234375 13.73828125 C-1 16 -1 16 -3 19 C-4.32 19 -5.64 19 -7 19 C-7.19436491 16.54203147 -7.3807742 14.08390706 -7.5625 11.625 C-7.61857422 10.92632813 -7.67464844 10.22765625 -7.73242188 9.5078125 C-8.11328125 4.2265625 -8.11328125 4.2265625 -7 2 C-8.98 2 -10.96 2 -13 2 C-13 1.67 -13 1.34 -13 1 C-2.73913043 -0.39130435 -2.73913043 -0.39130435 0 0 Z \",fill:\"#97815C\",transform:\"translate(525,598)\"})),_path227||(_path227=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.7734375 0.3403125 0.7734375 0.3403125 1.5625 0.6875 C0.54929687 1.07421875 -0.46390625 1.4609375 -1.5078125 1.859375 C-2.85952167 2.38503968 -4.211076 2.91110263 -5.5625 3.4375 C-6.22765625 3.69015625 -6.8928125 3.9428125 -7.578125 4.203125 C-11.93512957 5.91175424 -15.56760478 8.01354907 -19.4375 10.6875 C-22.1875 11.5625 -22.1875 11.5625 -24.4375 11.6875 C-25.0975 11.0275 -25.7575 10.3675 -26.4375 9.6875 C-29.04030568 10.00791397 -29.04030568 10.00791397 -31.4375 10.6875 C-30.9425 11.6775 -30.9425 11.6775 -30.4375 12.6875 C-31.51 12.501875 -32.5825 12.31625 -33.6875 12.125 C-37.13415647 11.48748218 -37.13415647 11.48748218 -39.20996094 12.16772461 C-42.41845122 12.91639578 -45.56102291 12.69642872 -48.828125 12.56640625 C-49.53273865 12.54279526 -50.23735229 12.51918427 -50.96331787 12.49485779 C-53.2049328 12.41853023 -55.44617496 12.33437421 -57.6875 12.25 C-59.2109195 12.1967483 -60.73435698 12.14400812 -62.2578125 12.09179688 C-65.98460155 11.96295752 -69.71109667 11.82709768 -73.4375 11.6875 C-73.4375 11.3575 -73.4375 11.0275 -73.4375 10.6875 C-72.52911377 10.69386475 -71.62072754 10.70022949 -70.68481445 10.70678711 C-48.70340923 10.75238308 -25.75604264 10.369973 -5.390625 0.8984375 C-2.4375 -0.3125 -2.4375 -0.3125 0 0 Z \",fill:\"#372918\",transform:\"translate(542.4375,561.3125)\"})),_path228||(_path228=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.50403768 1.29009643 3.00309926 2.58213789 3.5 3.875 C3.7784375 4.59429687 4.056875 5.31359375 4.34375 6.0546875 C5 8 5 8 5 10 C7.88628401 11.57554035 10.53342384 12.46276373 13.75 13.125 C14.94882812 13.37636719 14.94882812 13.37636719 16.171875 13.6328125 C16.77515625 13.75398438 17.3784375 13.87515625 18 14 C18 14.33 18 14.66 18 15 C17.07767578 14.93039062 17.07767578 14.93039062 16.13671875 14.859375 C13.70254825 14.75067201 11.42063598 14.70815027 9 15 C6.87644433 16.82271927 6.87644433 16.82271927 6 19 C7.32 19.33 8.64 19.66 10 20 C10 20.66 10 21.32 10 22 C6.61348181 21.39526461 4.51871028 20.35621284 2 18 C-1.48058514 12.9034289 -1.55845758 7.97120027 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#987234\",transform:\"translate(268,262)\"})),_path229||(_path229=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.01 1.495 1.01 1.495 0 2 C0 2.99 0 3.98 0 5 C-1.19625 4.814375 -2.3925 4.62875 -3.625 4.4375 C-7.28283707 3.9688803 -10.37862166 4.18518987 -14 5 C-14 5.66 -14 6.32 -14 7 C-17.63 8.98 -21.26 10.96 -25 13 C-24.67 12.01 -24.34 11.02 -24 10 C-24.66 9.34 -25.32 8.68 -26 8 C-24.71186658 7.16121545 -23.41936744 6.32913217 -22.125 5.5 C-21.40570313 5.0359375 -20.68640625 4.571875 -19.9453125 4.09375 C-18 3 -18 3 -16 3 C-16 2.34 -16 1.68 -16 1 C-10.69487426 -1.65256287 -5.57877391 -1.8595913 0 0 Z \",fill:\"#251909\",transform:\"translate(488,500)\"})),_path230||(_path230=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.8389981 2.34951567 3.22751987 4.74420551 3.6875 8.25 C3.790625 9.4875 3.89375 10.725 4 12 C3.01 12.495 3.01 12.495 2 13 C1.34 10.03 0.68 7.06 0 4 C-0.66 4 -1.32 4 -2 4 C-1.67 6.31 -1.34 8.62 -1 11 C-1.66 11 -2.32 11 -3 11 C-4.4606285 8.35261084 -5 7.10551666 -5 4 C-5.66 4 -6.32 4 -7 4 C-5.95902388 7.86648272 -4.96301592 11.49461443 -3 15 C-3.99 15 -4.98 15 -6 15 C-6 14.34 -6 13.68 -6 13 C-6.66 13 -7.32 13 -8 13 C-8.66 11.68 -9.32 10.36 -10 9 C-10.66 9.66 -11.32 10.32 -12 11 C-12 8.36 -12 5.72 -12 3 C-7.84920663 0.62811807 -4.81106927 -0.74838855 0 0 Z \",fill:\"#9B825A\",transform:\"translate(598,579)\"})),_path231||(_path231=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.32739873 0.30249079 5.5627594 0.71234171 8.375 2.5625 C11.20672494 6.81008741 10.32920123 11.10709293 9.5 15.875 C7.0808224 19.30216826 4.03575718 19.28397856 0 20 C0.33 19.21625 0.66 18.4325 1 17.625 C2.42102048 12.47380074 3.19361494 6.70858775 0.984375 1.6953125 C0.65953125 1.13585937 0.3346875 0.57640625 0 0 Z \",fill:\"#C2A678\",transform:\"translate(146,440)\"})),_path232||(_path232=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.80341161 2.02067776 9.52366047 3.71664222 14.5625 5.0625 C14.5625 5.3925 14.5625 5.7225 14.5625 6.0625 C11.2625 5.7325 7.9625 5.4025 4.5625 5.0625 C4.10875 5.84625 3.655 6.63 3.1875 7.4375 C1.5625 10.0625 1.5625 10.0625 -0.4375 12.0625 C-1.4275 11.7325 -2.4175 11.4025 -3.4375 11.0625 C-2.4475 10.7325 -1.4575 10.4025 -0.4375 10.0625 C-0.1075 9.0725 0.2225 8.0825 0.5625 7.0625 C1.2225 7.0625 1.8825 7.0625 2.5625 7.0625 C2.5625 6.0725 2.5625 5.0825 2.5625 4.0625 C1.94761719 3.94132813 1.33273437 3.82015625 0.69921875 3.6953125 C-0.10902344 3.52773437 -0.91726563 3.36015625 -1.75 3.1875 C-2.55050781 3.02507812 -3.35101563 2.86265625 -4.17578125 2.6953125 C-6.4375 2.0625 -6.4375 2.0625 -9.4375 0.0625 C-13.49768078 0.43844266 -17.45100357 1.21687955 -21.4375 2.0625 C-21.4375 2.7225 -21.4375 3.3825 -21.4375 4.0625 C-22.4275 4.0625 -23.4175 4.0625 -24.4375 4.0625 C-24.7675 5.0525 -25.0975 6.0425 -25.4375 7.0625 C-25.4375 5.7425 -25.4375 4.4225 -25.4375 3.0625 C-26.0975 2.7325 -26.7575 2.4025 -27.4375 2.0625 C-25.21173549 1.06357301 -22.98383213 0.07063567 -20.75 -0.91015625 C-19.06834634 -1.65724225 -17.40348547 -2.44248384 -15.75 -3.25 C-10.30388747 -4.86911453 -4.99195887 -2.11764685 0 0 Z \",fill:\"#251507\",transform:\"translate(493.4375,187.9375)\"})),_path233||(_path233=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16306443 3.54950034 0.92365049 6.55823948 0.5625 10.25 C0.46066406 11.32765625 0.35882813 12.4053125 0.25390625 13.515625 C0.17011719 14.33546875 0.08632813 15.1553125 0 16 C0.66 16 1.32 16 2 16 C2.268125 16.804375 2.53625 17.60875 2.8125 18.4375 C3.204375 19.283125 3.59625 20.12875 4 21 C4.99 21.33 5.98 21.66 7 22 C7.33 21.34 7.66 20.68 8 20 C8 20.66 8 21.32 8 22 C8.763125 21.67 9.52625 21.34 10.3125 21 C13 20 13 20 16 20 C15.278125 20.53625 14.55625 21.0725 13.8125 21.625 C11.62202856 23.47473144 10.06588641 25.04783016 8.3125 27.25 C7.549375 28.1575 6.78625 29.065 6 30 C5.34 30 4.68 30 4 30 C3.67 28.68 3.34 27.36 3 26 C2.34 26 1.68 26 1 26 C-1.73397536 23.47107279 -3.93063422 21.10404867 -6 18 C-5.34 18 -4.68 18 -4 18 C-3.67 17.01 -3.34 16.02 -3 15 C-2.67 15 -2.34 15 -2 15 C-1.93941406 14.16855469 -1.87882812 13.33710937 -1.81640625 12.48046875 C-1.73261719 11.39378906 -1.64882813 10.30710937 -1.5625 9.1875 C-1.48128906 8.10855469 -1.40007812 7.02960938 -1.31640625 5.91796875 C-1 3 -1 3 0 0 Z \",fill:\"#180F04\",transform:\"translate(477,112)\"})),_path234||(_path234=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.65 1.98 -3.3 3.96 -5 6 C6.55 6 18.1 6 30 6 C30 6.33 30 6.66 30 7 C12.18 7 -5.64 7 -24 7 C-24 6.01 -24 5.02 -24 4 C-23.20335937 3.96261719 -22.40671875 3.92523438 -21.5859375 3.88671875 C-13.94449798 3.41261484 -7.37776046 -0.52698289 0 0 Z \",fill:\"#BA9A65\",transform:\"translate(506,383)\"})),_path235||(_path235=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.61218429 3.88664099 2.25415198 7.98880926 2.1953125 12.484375 C2.1924826 13.29996887 2.18965271 14.11556274 2.18673706 14.95587158 C2.17556558 17.55406528 2.15046675 20.15191095 2.125 22.75 C2.11496627 24.51431793 2.10584111 26.27864128 2.09765625 28.04296875 C2.07563619 32.36211273 2.04112733 36.68099741 2 41 C3.98 41 5.96 41 8 41 C8 41.33 8 41.66 8 42 C5.69 42 3.38 42 1 42 C0.67 31.11 0.34 20.22 0 9 C-2.21698756 15.729852 -2.21698756 15.729852 -4.42724609 22.46191406 C-4.70648926 23.30463867 -4.98573242 24.14736328 -5.2734375 25.015625 C-5.55622559 25.87446289 -5.83901367 26.73330078 -6.13037109 27.61816406 C-6.94437274 29.84764191 -7.89231124 31.903455 -9 34 C-9.99 34 -10.98 34 -12 34 C-12 33.34 -12 32.68 -12 32 C-11.34 32 -10.68 32 -10 32 C-9.92523438 31.46375 -9.85046875 30.9275 -9.7734375 30.375 C-8.44483593 22.45549263 -5.60131576 15.27488219 -2.6953125 7.83398438 C-1.71529867 5.24906025 -0.84951786 2.63023798 0 0 Z \",fill:\"#74674D\",transform:\"translate(314,420)\"})),_path236||(_path236=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C0.68 1.99 -0.64 2.98 -2 4 C0.97 4 3.94 4 7 4 C6.67 4.66 6.34 5.32 6 6 C3.41796875 6.8515625 3.41796875 6.8515625 0.1875 7.625 C-1.39998047 8.01558594 -1.39998047 8.01558594 -3.01953125 8.4140625 C-6 9 -6 9 -10 9 C-10 9.66 -10 10.32 -10 11 C-2.08 10.505 -2.08 10.505 6 10 C6 10.66 6 11.32 6 12 C0.39 12 -5.22 12 -11 12 C-11.33 10.35 -11.66 8.7 -12 7 C-16.95 7 -21.9 7 -27 7 C-27 6.67 -27 6.34 -27 6 C-25.83597656 5.97873047 -25.83597656 5.97873047 -24.6484375 5.95703125 C-16.57570309 5.60059787 -10.20824433 3.94369794 -2.80078125 0.9609375 C-1.87652344 0.64382813 -0.95226562 0.32671875 0 0 Z \",fill:\"#997E53\",transform:\"translate(566,367)\"})),_path237||(_path237=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 1.32 2 2.64 2 4 C2.66 4 3.32 4 4 4 C4.33 3.01 4.66 2.02 5 1 C6.32 1 7.64 1 9 1 C11.1642235 4.24633524 11.37569856 5.24301443 11 9 C9 12 9 12 7.0546875 12.51171875 C6.33539063 12.56972656 5.61609375 12.62773437 4.875 12.6875 C3.59625 12.790625 2.3175 12.89375 1 13 C-1.70238949 8.94641576 -1.22937614 6.81689896 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#100B04\",transform:\"translate(487,364)\"})),_path238||(_path238=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 0.99 -0.66 1.98 -1 3 C3.29 3.33 7.58 3.66 12 4 C11.67 4.66 11.34 5.32 11 6 C13.31 6.66 15.62 7.32 18 8 C14.73086376 9.03115279 12.13958652 8.9638984 8.75 8.5625 C7.85796875 8.46066406 6.9659375 8.35882813 6.046875 8.25390625 C5.37140625 8.17011719 4.6959375 8.08632813 4 8 C4.66 7.34 5.32 6.68 6 6 C0.27915658 5.41324683 -4.16865253 7.06892278 -9 10 C-10.89447207 11.87489097 -12.37036654 13.87242298 -14 16 C-16.8125 17.875 -16.8125 17.875 -19 19 C-17.08277831 11.18363463 -17.08277831 11.18363463 -14 9 C-13.34 9 -12.68 9 -12 9 C-12 8.34 -12 7.68 -12 7 C-10.68 6.67 -9.36 6.34 -8 6 C-8 5.34 -8 4.68 -8 4 C-2.58823529 0 -2.58823529 0 0 0 Z \",fill:\"#473923\",transform:\"translate(426,322)\"})),_path239||(_path239=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.81552617 1.49895671 5.53745046 3.7986856 8 7 C8.66 7.33 9.32 7.66 10 8 C10.33 6.35 10.66 4.7 11 3 C12.65 4.65 14.3 6.3 16 8 C13.09083887 10.40967639 10.56302424 11.65397951 6.9375 12.6875 C5.65166016 13.06455078 5.65166016 13.06455078 4.33984375 13.44921875 C2 14 2 14 -1 14 C-1.02685938 11.85423363 -1.04633088 9.70837355 -1.0625 7.5625 C-1.07410156 6.36753906 -1.08570313 5.17257812 -1.09765625 3.94140625 C-1 1 -1 1 0 0 Z \",fill:\"#B79868\",transform:\"translate(562,596)\"})),_path240||(_path240=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.56847656 0.19335938 1.13695312 0.38671875 1.72265625 0.5859375 C6.45364938 2.18136423 11.18794425 3.66900586 16 5 C15.34 5.66 14.68 6.32 14 7 C13.59952556 9.32275177 13.2602896 11.65739357 13 14 C16.465 13.505 16.465 13.505 20 13 C19.67 13.66 19.34 14.32 19 15 C11.95620622 15.80043111 6.2359628 13.12271278 0 10 C-0.66 9.34 -1.32 8.68 -2 8 C-0.35 8 1.3 8 3 8 C2.45276317 4.62537285 1.9451 2.91765 0 0 Z \",fill:\"#785A2A\",transform:\"translate(468,155)\"})),_path241||(_path241=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.78503906 0.00773437 1.57007813 0.01546875 2.37890625 0.0234375 C3.16394531 0.01570313 3.94898438 0.00796875 4.7578125 0 C10.62559838 0.02012963 10.62559838 0.02012963 12.87890625 2.2734375 C10.56890625 2.2734375 8.25890625 2.2734375 5.87890625 2.2734375 C5.87890625 2.9334375 5.87890625 3.5934375 5.87890625 4.2734375 C4.88890625 4.2734375 3.89890625 4.2734375 2.87890625 4.2734375 C2.87890625 4.9334375 2.87890625 5.5934375 2.87890625 6.2734375 C1.88890625 6.6034375 0.89890625 6.9334375 -0.12109375 7.2734375 C-0.45109375 7.9334375 -0.78109375 8.5934375 -1.12109375 9.2734375 C-4.18359375 9.8984375 -4.18359375 9.8984375 -7.12109375 10.2734375 C-5.47109375 10.6034375 -3.82109375 10.9334375 -2.12109375 11.2734375 C-2.45109375 12.2634375 -2.78109375 13.2534375 -3.12109375 14.2734375 C-3.78109375 13.9434375 -4.44109375 13.6134375 -5.12109375 13.2734375 C-6.66133371 13.20393209 -8.20444363 13.18891393 -9.74609375 13.2109375 C-10.56335938 13.21996094 -11.380625 13.22898437 -12.22265625 13.23828125 C-12.84914063 13.24988281 -13.475625 13.26148438 -14.12109375 13.2734375 C-12.30409985 9.08569919 -10.38414745 7.97865898 -6.12109375 6.2734375 C-4.80109375 6.2734375 -3.48109375 6.2734375 -2.12109375 6.2734375 C-3.5130529 3.4895192 -5.27685154 3.29444753 -8.12109375 2.2734375 C-5.49385551 -0.35380074 -3.57897702 0.01227779 0 0 Z \",fill:\"#B99963\",transform:\"translate(416.12109375,311.7265625)\"})),_path242||(_path242=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.65850645 0.4932227 11.88580382 2.40970431 18 5 C25.30848665 7.97625478 32.63254084 9.97853936 40.33813477 11.60546875 C45.79350851 12.79350851 45.79350851 12.79350851 48 15 C34.29339374 15.39378095 15.56223973 10.70815982 4 3 C2.34450469 2.61500109 0.6777567 2.27206865 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#251604\",transform:\"translate(480,179)\"})),_path243||(_path243=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.87737336 0.41806057 6.8149909 2.4066564 10 6 C11.11375 7.2375 11.11375 7.2375 12.25 8.5 C14.06824241 11.09748916 14.64344136 12.8801119 15 16 C13.88625 14.7934375 13.88625 14.7934375 12.75 13.5625 C9.76720773 10.70876073 9.76720773 10.70876073 6 10 C4.865625 10.04125 3.73125 10.0825 2.5625 10.125 C-1.27512916 9.99034635 -2.94140973 9.22442929 -6 7 C-5.67 6.34 -5.34 5.68 -5 5 C-3.68 5 -2.36 5 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#9A7537\",transform:\"translate(426,503)\"})),_path244||(_path244=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.64166991 -0.04940499 11.28321413 -0.08572193 16.92504883 -0.10986328 C18.84466749 -0.11992639 20.76427081 -0.13357816 22.68383789 -0.15087891 C25.44160752 -0.17511364 28.19917464 -0.18647992 30.95703125 -0.1953125 C32.24623222 -0.21079636 32.24623222 -0.21079636 33.56147766 -0.22659302 C34.36208115 -0.22674408 35.16268463 -0.22689514 35.98754883 -0.22705078 C36.6914827 -0.231492 37.39541656 -0.23593323 38.12068176 -0.24050903 C40 0 40 0 43 2 C39.485065 3.171645 36.69667536 3.12952928 32.98828125 3.1328125 C31.95769844 3.13424759 31.95769844 3.13424759 30.90629578 3.13571167 C29.45128284 3.13639184 27.99626686 3.13454892 26.54125977 3.13037109 C24.33798193 3.12506141 22.13491178 3.13030026 19.93164062 3.13671875 C18.51302039 3.13605714 17.09440028 3.13477427 15.67578125 3.1328125 C14.39614502 3.13168457 13.11650879 3.13055664 11.7980957 3.12939453 C7.79430445 2.99299231 3.96488864 2.55380302 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#91713A\",transform:\"translate(432,488)\"})),_path245||(_path245=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C13.365 0.495 13.365 0.495 27 1 C27.33 4.96 27.66 8.92 28 13 C27.67 13 27.34 13 27 13 C26.67 15.64 26.34 18.28 26 21 C25.01 20.67 24.02 20.34 23 20 C23.66 20 24.32 20 25 20 C24.67 14.72 24.34 9.44 24 4 C19.71 4 15.42 4 11 4 C11.66 6.31 12.32 8.62 13 11 C12.01 10.67 11.02 10.34 10 10 C9.67 7.36 9.34 4.72 9 2 C6.03 1.67 3.06 1.34 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#4B3B22\",transform:\"translate(524,197)\"})),_path246||(_path246=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.1875 -0.3125 2.1875 -0.3125 5 0 C7.8125 2.25 7.8125 2.25 10 5 C10 6.32 10 7.64 10 9 C9.34 9 8.68 9 8 9 C7.67 9.66 7.34 10.32 7 11 C6.01 11 5.02 11 4 11 C4.33 11.99 4.66 12.98 5 14 C1.49849196 13.70820766 0.21713533 13.21713533 -2.3125 10.6875 C-4 8 -4 8 -4 4 C-1.33333333 4 1.33333333 4 4 4 C4 3.34 4 2.68 4 2 C2.68 1.67 1.36 1.34 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#A48D67\",transform:\"translate(656,537)\"})),_path247||(_path247=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.00105708 -0.61839323 9.00105708 -0.61839323 12.625 1.625 C14.36781772 4.63532152 14.37252607 6.57276017 14 10 C13.67 10.66 13.34 11.32 13 12 C10.525 11.01 10.525 11.01 8 10 C8 8.35 8 6.7 8 5 C3.33999923 6.12397551 3.33999923 6.12397551 0.25 9.625 C-0.1625 10.40875 -0.575 11.1925 -1 12 C-1.66 12 -2.32 12 -3 12 C-3.34943109 7.80682689 -2.58403645 6.23004556 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#A8906C\",transform:\"translate(301,534)\"})),_path248||(_path248=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4 2 4 2 5.8125 3.125 C8.12569477 4.25051917 8.12569477 4.25051917 11.3125 3.625 C15.6388536 4.06496816 16.16864523 4.78190236 18.9375 7.9375 C22 11.75384615 22 11.75384615 22 13 C16.82633685 13.30433313 14.31009437 12.76288101 10 10 C6.80604974 9.28598768 6.80604974 9.28598768 4 9 C4.66 8.01 5.32 7.02 6 6 C2.37 6 -1.26 6 -5 6 C-4.67 5.01 -4.34 4.02 -4 3 C-1.03 3.495 -1.03 3.495 2 4 C1.34 2.68 0.68 1.36 0 0 Z \",fill:\"#A38146\",transform:\"translate(417,508)\"})),_path249||(_path249=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1 2 1 2 -0.1875 5.75 C-1.70819366 9.57266112 -3.47890662 12.74697629 -6 16 C-6.66 16 -7.32 16 -8 16 C-8.185625 17.0828125 -8.185625 17.0828125 -8.375 18.1875 C-8.9904931 20.95721894 -9.88444374 23.3970354 -11 26 C-11.66 26 -12.32 26 -13 26 C-13 26.99 -13 27.98 -13 29 C-12.01 29 -11.02 29 -10 29 C-8.68 26.36 -7.36 23.72 -6 21 C-5.67 21.66 -5.34 22.32 -5 23 C-5.70703125 24.83984375 -5.70703125 24.83984375 -6.8125 26.9375 C-7.16957031 27.62714844 -7.52664063 28.31679688 -7.89453125 29.02734375 C-8.84989011 30.73213606 -9.91598646 32.3739797 -11 34 C-11.66 34 -12.32 34 -13 34 C-13 33.34 -13 32.68 -13 32 C-13.99 31.67 -14.98 31.34 -16 31 C-12.55269115 19.50897051 -7.17414964 9.59383325 0 0 Z \",fill:\"#9E8256\",transform:\"translate(338,296)\"})),_path250||(_path250=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 1 2 1 3.0625 3.8125 C4.58824188 7.73927778 7.0099067 10.52261873 9.6875 13.75 C13.7902748 19.00792499 14.90411013 22.41095283 14.31640625 29.015625 C14.21199219 29.67046875 14.10757812 30.3253125 14 31 C13.01 31 12.02 31 11 31 C11.33 30.34 11.66 29.68 12 29 C9.36 28.67 6.72 28.34 4 28 C4 27.34 4 26.68 4 26 C5.65 25.67 7.3 25.34 9 25 C5.37 24.67 1.74 24.34 -2 24 C-2 23.67 -2 23.34 -2 23 C1.96 23 5.92 23 10 23 C7.57318582 17.06778755 5.20644272 12.79067088 1 8 C1 7.34 1 6.68 1 6 C0.01 5.67 -0.98 5.34 -2 5 C-1.34 4.67 -0.68 4.34 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#322513\",transform:\"translate(418,288)\"})),_path251||(_path251=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.66 2.64 1.32 4 2 C4.0272415 3.41655793 4.04650467 4.83327045 4.0625 6.25 C4.07410156 7.03890625 4.08570313 7.8278125 4.09765625 8.640625 C4.00002622 10.99936653 3.89346622 12.81077387 3 15 C1.68413396 15.70051324 0.34831905 16.36418716 -1 17 C-2.64253223 18.89988868 -2.64253223 18.89988868 -4.0625 21.0625 C-6.6723869 24.89079563 -6.6723869 24.89079563 -10 26 C-9.49180328 21.42622951 -9.49180328 21.42622951 -7.125 19.375 C-4.13383389 16.03193199 -3.37754405 12.52615764 -2.25 8.25 C-2.02957031 7.45722656 -1.80914063 6.66445313 -1.58203125 5.84765625 C-1.04278912 3.90169554 -0.51976609 1.95125303 0 0 Z \",fill:\"#5D4721\",transform:\"translate(562,259)\"})),_path252||(_path252=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.66 4.62 3.32 9.24 4 14 C4.66 14 5.32 14 6 14 C7.25664978 16.90600261 8 18.79604584 8 22 C8.66 22 9.32 22 10 22 C10.66 23.65 11.32 25.3 12 27 C8.16735822 25.4943193 6.462238 23.23168738 4 20 C3.29875 19.360625 2.5975 18.72125 1.875 18.0625 C-1.43173095 14.42509596 -2.11129771 10.53522915 -2.25 5.75 C-2 2 -2 2 0 0 Z \",fill:\"#674E29\",transform:\"translate(401,258)\"})),_path253||(_path253=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.68251777 -0.89723965 8.96604228 1.50385704 13.53515625 4.4921875 C15.96242449 5.97701403 18.33400902 7.02104431 21 8 C21 9.65 21 11.3 21 13 C13.8126297 11.85914757 8.59381834 9.73679441 3 5 C0.9375 2.125 0.9375 2.125 0 0 Z \",fill:\"#A7885B\",transform:\"translate(461,322)\"})),_path254||(_path254=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.66442374 0.36504064 10.00703705 1.0554321 15 4 C13 6 13 6 10.625 7.375 C7.87695641 9.07616984 5.98702471 10.44525394 4 13 C3.19234122 16.64721696 3.19234122 16.64721696 3 20 C1.35 19.67 -0.3 19.34 -2 19 C-1.01 18.67 -0.02 18.34 1 18 C1.02698422 15.56242587 1.04683099 13.12515085 1.0625 10.6875 C1.07087891 9.99720703 1.07925781 9.30691406 1.08789062 8.59570312 C1.10307906 5.4516975 1.00193327 3.00579981 0 0 Z \",fill:\"#AE9467\",transform:\"translate(403,590)\"})),_path255||(_path255=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.09848267 0.00141495 2.19696533 0.0028299 3.32873535 0.00428772 C6.81293543 0.00985368 10.29706958 0.02239986 13.78125 0.03515625 C16.1536449 0.04017565 18.52604082 0.04473779 20.8984375 0.04882812 C26.69273056 0.05981195 32.48698557 0.07651595 38.28125 0.09765625 C38.28125 0.42765625 38.28125 0.75765625 38.28125 1.09765625 C25.74125 1.09765625 13.20125 1.09765625 0.28125 1.09765625 C0.28125 1.75765625 0.28125 2.41765625 0.28125 3.09765625 C0.94125 3.42765625 1.60125 3.75765625 2.28125 4.09765625 C1.03125 5.59765625 1.03125 5.59765625 -0.71875 7.09765625 C-2.03875 7.09765625 -3.35875 7.09765625 -4.71875 7.09765625 C-4.71875 5.77765625 -4.71875 4.45765625 -4.71875 3.09765625 C-5.63398437 3.12085938 -6.54921875 3.1440625 -7.4921875 3.16796875 C-9.27496094 3.19503906 -9.27496094 3.19503906 -11.09375 3.22265625 C-12.86878906 3.25746094 -12.86878906 3.25746094 -14.6796875 3.29296875 C-17.71875 3.09765625 -17.71875 3.09765625 -19.71875 1.09765625 C-13.11202545 0.09904569 -6.67501603 -0.03273632 0 0 Z \",fill:\"#CBA974\",transform:\"translate(627.71875,487.90234375)\"})),_path256||(_path256=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.375 0.25 3.375 0.25 7 1 C8.94083492 3.27837142 8.9964892 4.97249874 9.375 7.9375 C8.893298 11.87139964 7.90462866 13.31880431 5 16 C1.25 17.3125 1.25 17.3125 -2 18 C-2 17.01 -2 16.02 -2 15 C-1.34 15 -0.68 15 0 15 C0 14.34 0 13.68 0 13 C0.66 13 1.32 13 2 13 C1.34 8.71 0.68 4.42 0 0 Z \",fill:\"#CFB07D\",transform:\"translate(144,421)\"})),_path257||(_path257=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.66 2.64 1.32 4 2 C3.67 2.66 3.34 3.32 3 4 C2.67 3.67 2.34 3.34 2 3 C1.16069406 12.02253886 0.87775374 20.9401941 1 30 C-0.5 28.6875 -0.5 28.6875 -2 27 C-2 26.01 -2 25.02 -2 24 C-2.66 24 -3.32 24 -4 24 C-4.56377723 15.16749011 -3.26258646 8.21472661 0 0 Z \",fill:\"#785D30\",transform:\"translate(481,104)\"})),_path258||(_path258=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.59927826 3.35595828 -1.84622436 5.37801226 -4 8 C-3.67 8.33 -3.34 8.66 -3 9 C-2.34 9 -1.68 9 -1 9 C-0.34 7.35 0.32 5.7 1 4 C1.66 4 2.32 4 3 4 C2.35334574 7.491933 1.13457576 10.15389899 -1 13 C-2.32 13 -3.64 13 -5 13 C-5.33 13.66 -5.66 14.32 -6 15 C-7.32 15 -8.64 15 -10 15 C-11.56935594 11.86128812 -11.35201103 9.46144178 -11 6 C-8.5 3.0625 -8.5 3.0625 -6 1 C-6.33 2.32 -6.66 3.64 -7 5 C-6.21625 4.175 -5.4325 3.35 -4.625 2.5 C-2 0 -2 0 0 0 Z \",fill:\"#A78F65\",transform:\"translate(326,551)\"})),_path259||(_path259=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C5.78507796 5.67761693 5.64751268 11.33743531 5 18 C4.30193748 21.14128134 3.48373357 24.13462462 2 27 C1.34 27.33 0.68 27.66 0 28 C0 18.76 0 9.52 0 0 Z \",fill:\"#B48E54\",transform:\"translate(482,526)\"})),_path260||(_path260=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.99 2 2.98 2 4 2 C4.33 2.99 4.66 3.98 5 5 C5.59538574 5.01981934 6.19077148 5.03963867 6.80419922 5.06005859 C9.49492153 5.15516126 12.18485148 5.26489842 14.875 5.375 C15.81214844 5.4059375 16.74929688 5.436875 17.71484375 5.46875 C18.61074219 5.50742187 19.50664062 5.54609375 20.4296875 5.5859375 C21.67081299 5.63306885 21.67081299 5.63306885 22.93701172 5.68115234 C25 6 25 6 27 8 C24.04160645 8.02689449 21.08345573 8.04678741 18.125 8.0625 C16.86236328 8.07506836 16.86236328 8.07506836 15.57421875 8.08789062 C14.76855469 8.09111328 13.96289062 8.09433594 13.1328125 8.09765625 C12.38918457 8.10289307 11.64555664 8.10812988 10.87939453 8.11352539 C9 8 9 8 7 7 C6.7715451 9.24362573 6.7715451 9.24362573 9 11.125 C9.66 11.74375 10.32 12.3625 11 13 C5.14727744 12.54979057 0.91779881 9.96160773 -4 7 C-3.30621489 3.73988358 -2.54106009 2.20961747 0 0 Z \",fill:\"#A8864E\",transform:\"translate(391,514)\"})),_path261||(_path261=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.56460604 5.93446488 0.36703914 8.47991362 -3 12 C-7.3 15 -7.3 15 -10 15 C-10.33 15.99 -10.66 16.98 -11 18 C-12.32 18 -13.64 18 -15 18 C-15.33 18.66 -15.66 19.32 -16 20 C-17.32 19.34 -18.64 18.68 -20 18 C-17.91689914 16.39553069 -15.83352773 14.79141482 -13.75 13.1875 C-13.16347656 12.73568359 -12.57695313 12.28386719 -11.97265625 11.81835938 C-10.83004857 10.93893661 -9.68620256 10.06112 -8.54101562 9.18505859 C-7.25233593 8.19404921 -5.97614086 7.18683296 -4.703125 6.17578125 C-3 5 -3 5 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#8D713F\",transform:\"translate(702,274)\"})),_path262||(_path262=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.11685095 3.40732229 2.11685095 3.40732229 1.6003418 6.02709961 C1.30297119 6.72843018 1.00560059 7.42976074 0.69921875 8.15234375 C0.38146484 8.92900391 0.06371094 9.70566406 -0.26367188 10.50585938 C-0.60978516 11.30830078 -0.95589844 12.11074219 -1.3125 12.9375 C-1.97891523 14.5284219 -2.64178346 16.12083508 -3.30078125 17.71484375 C-3.60153564 18.41730225 -3.90229004 19.11976074 -4.2121582 19.84350586 C-5.21657879 22.42301521 -5.21657879 22.42301521 -6 27 C-0.39 27 5.22 27 11 27 C11 27.33 11 27.66 11 28 C4.73 28 -1.54 28 -8 28 C-8.33 30.64 -8.66 33.28 -9 36 C-9.99 36 -10.98 36 -12 36 C-10.78018617 29.45736217 -8.76671984 23.61443321 -6.3046875 17.4375 C-4.56445104 12.85244585 -3.17034895 8.19021198 -1.796875 3.484375 C-1 1 -1 1 0 0 Z \",fill:\"#665943\",transform:\"translate(342,426)\"})),_path263||(_path263=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 0.99 29 1.98 29 3 C23.555 2.505 23.555 2.505 18 2 C18 15.53 18 29.06 18 43 C15.36 43 12.72 43 10 43 C10.33 42.34 10.66 41.68 11 41 C12.98 41.33 14.96 41.66 17 42 C17 28.47 17 14.94 17 1 C8.09 1.99 8.09 1.99 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#7E6E55\",transform:\"translate(493,419)\"})),_path264||(_path264=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2.37890625 3.6171875 2.37890625 3.6171875 2.5625 6.875 C2.75886324 10.20115284 2.94375608 12.83126825 4 16 C5.32 16 6.64 16 8 16 C7.67 16.99 7.34 17.98 7 19 C0.4 19 -6.2 19 -13 19 C-13 18.34 -13 17.68 -13 17 C-7.555 16.01 -7.555 16.01 -2 15 C-1.93941406 14.00097656 -1.87882813 13.00195312 -1.81640625 11.97265625 C-1.73261719 10.68230469 -1.64882813 9.39195312 -1.5625 8.0625 C-1.48128906 6.77472656 -1.40007813 5.48695313 -1.31640625 4.16015625 C-1 1 -1 1 0 0 Z \",fill:\"#D1AE75\",transform:\"translate(653,371)\"})),_path265||(_path265=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.60444348 -0.05394705 5.20776998 -0.09364469 7.8125 -0.125 C8.55048828 -0.14175781 9.28847656 -0.15851563 10.04882812 -0.17578125 C13.91246426 -0.21074628 15.70903668 -0.19397555 19 2 C18.67 2.99 18.34 3.98 18 5 C17.34 4.67 16.68 4.34 16 4 C16 4.66 16 5.32 16 6 C8.74 5.67 1.48 5.34 -6 5 C-6 4.34 -6 3.68 -6 3 C-4.02 2.67 -2.04 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#B69561\",transform:\"translate(456,351)\"})),_path266||(_path266=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.44392523 1.31775701 9.44392523 1.31775701 13.3125 5.5 C15.54114683 10.12237862 15.3585035 13.96103417 15 19 C14.01 18.67 13.02 18.34 12 18 C12 19.98 12 21.96 12 24 C11.67 24 11.34 24 11 24 C10.89042969 23.20335937 10.78085937 22.40671875 10.66796875 21.5859375 C9.25768036 12.16108338 7.5639859 6.88310015 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#D3B37E\",transform:\"translate(472,419)\"})),_path267||(_path267=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.15855469 0.98097656 1.31710937 1.96195313 1.48046875 2.97265625 C3.7414696 16.29575762 7.0795709 29.27076151 14.171875 40.92578125 C15.17367681 42.58287124 16.09399319 44.28865381 17 46 C16.67 46.99 16.34 47.98 16 49 C14.76152062 47.02724431 13.52611874 45.05274871 12.296875 43.07421875 C11.36226638 41.57940797 10.40644015 40.09778903 9.4375 38.625 C7.2118291 34.56073141 5.58620759 30.34963544 4 26 C3.7745752 25.38592285 3.54915039 24.7718457 3.31689453 24.13916016 C0.38421784 16.00610906 -2.11100035 8.69481333 0 0 Z \",fill:\"#998769\",transform:\"translate(413,248)\"})),_path268||(_path268=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.125 5.625 C2.08375 6.73875 2.0425 7.8525 2 9 C1.34 9 0.68 9 0 9 C-0.268125 8.030625 -0.53625 7.06125 -0.8125 6.0625 C-1.204375 5.051875 -1.59625 4.04125 -2 3 C-2.99 2.67 -3.98 2.34 -5 2 C-5 2.66 -5 3.32 -5 4 C-4.34 4 -3.68 4 -3 4 C-2.67 5.65 -2.34 7.3 -2 9 C-3.32 9.33 -4.64 9.66 -6 10 C-6.433125 9.360625 -6.86625 8.72125 -7.3125 8.0625 C-8.91239177 5.73253997 -8.91239177 5.73253997 -12 5 C-12 5.99 -12 6.98 -12 8 C-13.98 8 -15.96 8 -18 8 C-16.60096798 3.80290393 -14.28195976 3.02553617 -10.4921875 1.015625 C-6.70632902 -0.52720134 -4.04713175 -0.49701618 0 0 Z \",fill:\"#AD9568\",transform:\"translate(621,565)\"})),_path269||(_path269=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.58007812 0.42152344 1.16015625 0.84304688 1.7578125 1.27734375 C7.81444492 5.53046009 7.81444492 5.53046009 15 7 C15 7.66 15 8.32 15 9 C15.680625 8.938125 16.36125 8.87625 17.0625 8.8125 C20.91936125 9.05868263 23.51079594 10.35802162 27 12 C27 12.33 27 12.66 27 13 C23.7 12.67 20.4 12.34 17 12 C17 11.34 17 10.68 17 10 C16.01 10.495 16.01 10.495 15 11 C15 12.32 15 13.64 15 15 C12 17 12 17 9.8125 16.625 C8.9153125 16.315625 8.9153125 16.315625 8 16 C9.65 15.34 11.3 14.68 13 14 C13 13.34 13 12.68 13 12 C11.96875 11.814375 10.9375 11.62875 9.875 11.4375 C5.25504834 10.13902071 2.45423192 7.03644737 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#634D28\",transform:\"translate(373,269)\"})),_path270||(_path270=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.375 2 1.375 2 2 5 C0.32355244 7.94466926 -1.76810274 10.45916781 -4 13 C-4 10 -4 10 -3 8 C-4.32 8 -5.64 8 -7 8 C-7.226875 8.598125 -7.45375 9.19625 -7.6875 9.8125 C-9 12 -9 12 -11.5 13.4375 C-14.52938646 15.33086654 -14.91861558 16.67266331 -16 20 C-18 23 -18 23 -20.125 23.6875 C-20.74375 23.790625 -21.3625 23.89375 -22 24 C-18.64169072 16.7828642 -12.9864169 10.85054335 -7.75 4.9375 C-6.91984375 3.99777344 -6.0896875 3.05804688 -5.234375 2.08984375 C-3 0 -3 0 0 0 Z \",fill:\"#997D4E\",transform:\"translate(361,272)\"})),_path271||(_path271=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.04982839 4.26837643 2.08592015 8.536594 2.10986328 12.80517578 C2.11985586 14.25409906 2.13345453 15.70300251 2.15087891 17.15185547 C2.32450751 31.97156783 2.32450751 31.97156783 0 39 C-0.33 39 -0.66 39 -1 39 C-1.02471188 33.92798214 -1.04286564 28.85599929 -1.05493164 23.78393555 C-1.05996158 22.0583434 -1.06678626 20.33275552 -1.07543945 18.60717773 C-1.08756361 16.1274307 -1.09324169 13.64774 -1.09765625 11.16796875 C-1.10539818 10.01001045 -1.10539818 10.01001045 -1.11329651 8.82865906 C-1.11363318 5.6169772 -1.02326578 3.06979734 0 0 Z \",fill:\"#E1BA7E\",transform:\"translate(678,421)\"})),_path272||(_path272=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.94420606 6.01903347 4.43136021 12.47627542 4 20 C3 23.75 3 23.75 2 26 C1.67 26 1.34 26 1 26 C0.34 19.73 -0.32 13.46 -1 7 C-1.66 7 -2.32 7 -3 7 C-3 12.61 -3 18.22 -3 24 C-3.33 24 -3.66 24 -4 24 C-4 18.06 -4 12.12 -4 6 C-4.66 5.67 -5.32 5.34 -6 5 C-4.35 4.67 -2.7 4.34 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#937A51\",transform:\"translate(312,296)\"})),_path273||(_path273=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.42523816 1.60746056 -0.86570126 3.21089836 -1.3125 4.8125 C-1.55613281 5.70582031 -1.79976562 6.59914062 -2.05078125 7.51953125 C-3.48255113 11.26098753 -4.99808197 12.52167468 -8.59375 14.23828125 C-9.5528125 14.59277344 -10.511875 14.94726562 -11.5 15.3125 C-12.4590625 15.67988281 -13.418125 16.04726562 -14.40625 16.42578125 C-15.2621875 16.61527344 -16.118125 16.80476563 -17 17 C-17.99 16.34 -18.98 15.68 -20 15 C-18.9275 14.443125 -17.855 13.88625 -16.75 13.3125 C-13.30069018 11.3463934 -11.41683555 9.17209666 -9 6 C-2.73049645 0 -2.73049645 0 0 0 Z \",fill:\"#B8975E\",transform:\"translate(516,140)\"})),_path274||(_path274=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.48229332 2.49943204 2.96089426 4.99948243 3.4375 7.5 C3.57220703 8.19609375 3.70691406 8.8921875 3.84570312 9.609375 C5.06474222 16.03162977 6.16500028 22.43998195 6.0625 29 C6.05347656 29.763125 6.04445313 30.52625 6.03515625 31.3125 C6.02355469 31.869375 6.01195312 32.42625 6 33 C5.34 32.67 4.68 32.34 4 32 C3.5859375 29.27734375 3.5859375 29.27734375 3.375 25.9375 C3.30023437 24.83277344 3.22546875 23.72804688 3.1484375 22.58984375 C3.09945312 21.73519531 3.05046875 20.88054687 3 20 C2.67 20 2.34 20 2 20 C1.67 24.62 1.34 29.24 1 34 C0.67 34 0.34 34 0 34 C-0.66 27.07 -1.32 20.14 -2 13 C-1.01 13.495 -1.01 13.495 0 14 C0 14.66 0 15.32 0 16 C0.66 16 1.32 16 2 16 C1.67 13.03 1.34 10.06 1 7 C0.67 7 0.34 7 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#B39668\",transform:\"translate(651,352)\"})),_path275||(_path275=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.49080078 0.02707031 1.49080078 0.02707031 3.01171875 0.0546875 C3.77097656 0.07789063 4.53023437 0.10109375 5.3125 0.125 C5.3125 0.455 5.3125 0.785 5.3125 1.125 C3.6109375 1.558125 3.6109375 1.558125 1.875 2 C0.699375 2.37125 -0.47625 2.7425 -1.6875 3.125 C-2.0175 3.785 -2.3475 4.445 -2.6875 5.125 C-4.6675 5.125 -6.6475 5.125 -8.6875 5.125 C-7.6975 5.455 -6.7075 5.785 -5.6875 6.125 C-4.6975 6.455 -3.7075 6.785 -2.6875 7.125 C-3.66976562 7.70701172 -3.66976562 7.70701172 -4.671875 8.30078125 C-6.92731033 9.95825291 -6.92731033 9.95825291 -7.078125 12.60546875 C-7.03171875 13.49878906 -6.9853125 14.39210938 -6.9375 15.3125 C-6.90140625 16.21355469 -6.8653125 17.11460937 -6.828125 18.04296875 C-6.78171875 18.73003906 -6.7353125 19.41710937 -6.6875 20.125 C-8.625 19.75 -8.625 19.75 -10.6875 19.125 C-12.52956499 15.44087001 -12.0492633 11.15517014 -11.6875 7.125 C-9.15281181 1.331427 -6.16922122 -0.14515815 0 0 Z \",fill:\"#907140\",transform:\"translate(690.6875,248.875)\"})),_path276||(_path276=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 7.26 1 14.52 1 22 C3.041875 21.7525 5.08375 21.505 7.1875 21.25 C8.33605469 21.11078125 9.48460937 20.9715625 10.66796875 20.828125 C14.35340508 19.91216662 16.2406409 18.55669431 19 16 C19 17.32 19 18.64 19 20 C19.66 20.66 20.32 21.32 21 22 C20.67 22.33 20.34 22.66 20 23 C20.99 23.66 21.98 24.32 23 25 C22.34 25.33 21.68 25.66 21 26 C21 26.99 21 27.98 21 29 C20.401875 28.525625 19.80375 28.05125 19.1875 27.5625 C15.25349352 24.75249537 11.52694504 24.74026253 6.8125 24.4375 C3.4403125 24.2209375 3.4403125 24.2209375 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#AE956C\",transform:\"translate(471,232)\"})),_path277||(_path277=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.22315339 0.12900308 4.22315339 0.12900308 6.625 2.3125 C8.03215057 7.00300189 8.81951927 12.92346146 6.5625 17.4375 C5.5725 17.1075 4.5825 16.7775 3.5625 16.4375 C3.68109375 15.83421875 3.7996875 15.2309375 3.921875 14.609375 C4.31505754 12.17164325 4.6092792 9.90829212 4.5625 7.4375 C2.81155348 4.8469273 2.81155348 4.8469273 0.5625 3.4375 C1.0575 4.18 1.0575 4.18 1.5625 4.9375 C2.99886358 8.52840894 2.69101462 11.58206127 2.5625 15.4375 C1.5725 15.7675 0.5825 16.0975 -0.4375 16.4375 C-0.4375 12.8075 -0.4375 9.1775 -0.4375 5.4375 C-1.4275 5.4375 -2.4175 5.4375 -3.4375 5.4375 C-3.4375 4.7775 -3.4375 4.1175 -3.4375 3.4375 C-4.4275 3.1075 -5.4175 2.7775 -6.4375 2.4375 C-4.0454161 0.0454161 -3.28611114 0.09173052 0 0 Z \",fill:\"#AB946B\",transform:\"translate(544.4375,594.5625)\"})),_path278||(_path278=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-0.61520508 2.05534912 -1.23041016 2.11069824 -1.86425781 2.16772461 C-4.65980996 2.42107482 -7.45489762 2.67923694 -10.25 2.9375 C-11.21808594 3.02451172 -12.18617188 3.11152344 -13.18359375 3.20117188 C-14.11816406 3.28818359 -15.05273438 3.37519531 -16.015625 3.46484375 C-16.87446289 3.543396 -17.73330078 3.62194824 -18.61816406 3.70288086 C-20.81641589 3.97709903 -22.86718545 4.41066966 -25 5 C-24.67 4.01 -24.34 3.02 -24 2 C-26.31 2 -28.62 2 -31 2 C-31 1.67 -31 1.34 -31 1 C-28.50159546 0.49061655 -26.00176612 -0.00763114 -23.5 -0.5 C-22.80390625 -0.64308594 -22.1078125 -0.78617188 -21.390625 -0.93359375 C-13.84609794 -2.40058512 -7.33748959 -2.44582986 0 0 Z \",fill:\"#2A190A\",transform:\"translate(567,517)\"})),_path279||(_path279=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.07690223 0.52835511 6.25617734 1.64675717 9.3125 4.375 C10.00988281 4.98085937 10.70726562 5.58671875 11.42578125 6.2109375 C13 8 13 8 13 11 C12.01 11 11.02 11 10 11 C10 11.66 10 12.32 10 13 C6.12294944 12.42562214 3.88456423 10.57271945 1 8 C-0.35439668 5.29120665 -0.06501451 2.99066732 0 0 Z \",fill:\"#D2B686\",transform:\"translate(374,212)\"})),_path280||(_path280=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5.6708712 1.6232687 6.33657029 3.24867578 7 4.875 C7.556875 6.23238281 7.556875 6.23238281 8.125 7.6171875 C9 10 9 10 9 12 C10.32 12.33 11.64 12.66 13 13 C13 13.66 13 14.32 13 15 C8.545 16.485 8.545 16.485 4 18 C4 17.01 4 16.02 4 15 C3.04070823 12.19492809 1.95648154 9.45143727 0.875 6.69140625 C0 4 0 4 0 0 Z \",fill:\"#A58D66\",transform:\"translate(572,588)\"})),_path281||(_path281=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.30513963 0.60961464 5.22826917 1.7785337 7.875 3.8125 C13.71500594 7.87213562 20.17600592 9.34981651 27 11 C27 11.33 27 11.66 27 12 C15.79958062 11.97345872 7.68104545 11.09961823 -2 5 C-2 4.01 -2 3.02 -2 2 C-1.34 2.33 -0.68 2.66 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#8C7147\",transform:\"translate(536,336)\"})),_path282||(_path282=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.33 2.64 2.66 5.28 3 8 C3.33 5.69 3.66 3.38 4 1 C4.99 1 5.98 1 7 1 C7 4.63 7 8.26 7 12 C8.32 12.33 9.64 12.66 11 13 C10.67 13.99 10.34 14.98 10 16 C9.67 15.34 9.34 14.68 9 14 C8.01 14.495 8.01 14.495 7 15 C4 15.1875 4 15.1875 1 15 C-1 13 -1 13 -1.23046875 10.9765625 C-1.21628906 10.20054687 -1.20210938 9.42453125 -1.1875 8.625 C-1.18105469 7.85414063 -1.17460937 7.08328125 -1.16796875 6.2890625 C-1.00595151 4.08110656 -0.60634894 2.12464668 0 0 Z \",fill:\"#7F6741\",transform:\"translate(449,603)\"})),_path283||(_path283=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.33 2.64 0.66 4 1 C4 7.27 4 13.54 4 20 C2.02 20 0.04 20 -2 20 C-1.85953745 17.04132082 -1.71287776 14.08317736 -1.5625 11.125 C-1.52318359 10.28324219 -1.48386719 9.44148438 -1.44335938 8.57421875 C-1.40146484 7.76855469 -1.35957031 6.96289062 -1.31640625 6.1328125 C-1.27974854 5.38918457 -1.24309082 4.64555664 -1.20532227 3.87939453 C-1 2 -1 2 0 0 Z \",fill:\"#E1BD86\",transform:\"translate(431,441)\"})),_path284||(_path284=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.5 2.5 2.5 2.5 5 5 C5.763125 5.721875 6.52625 6.44375 7.3125 7.1875 C9 9 9 9 9 11 C9.99 11 10.98 11 12 11 C11.67 11.99 11.34 12.98 11 14 C5.2733562 13.61175296 2.25363882 13.13210629 -2 9 C-2.598125 8.4225 -3.19625 7.845 -3.8125 7.25 C-4.204375 6.8375 -4.59625 6.425 -5 6 C-4.67 5.34 -4.34 4.68 -4 4 C-3.01 4.33 -2.02 4.66 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#AD8B52\",transform:\"translate(384,356)\"})),_path285||(_path285=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.01 2.32 0.02 3.64 -1 5 C0.65 5.33 2.3 5.66 4 6 C2.33333333 7.66666667 0.66666667 9.33333333 -1 11 C-1.886875 11.928125 -2.77375 12.85625 -3.6875 13.8125 C-6 16 -6 16 -8 16 C-8.28875 16.639375 -8.5775 17.27875 -8.875 17.9375 C-10 20 -10 20 -12 21 C-11.4574852 16.44287564 -10.3106498 12.97431766 -8 9 C-7.34 8.67 -6.68 8.34 -6 8 C-4.9935725 6.33720673 -3.99414593 4.67016516 -3 3 C-1.3125 1.1875 -1.3125 1.1875 0 0 Z \",fill:\"#846634\",transform:\"translate(460,500)\"})),_path286||(_path286=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C2.65913056 2.36901853 4.32778046 2.69574567 6 3 C7.7853143 3.64896826 9.55694608 4.33687105 11.3125 5.0625 C12.19550781 5.42472656 13.07851563 5.78695312 13.98828125 6.16015625 C14.98408203 6.57587891 14.98408203 6.57587891 16 7 C16.33 5.68 16.66 4.36 17 3 C19 5 19 5 19 8 C17.35 8.33 15.7 8.66 14 9 C13.67 10.65 13.34 12.3 13 14 C10.5625 13.625 10.5625 13.625 8 13 C7.67 12.34 7.34 11.68 7 11 C8.65 11 10.3 11 12 11 C10.4077505 7.815501 7.13905856 7.45157492 3.9375 6.375 C3.27427734 6.14554688 2.61105469 5.91609375 1.92773438 5.6796875 C0.28740331 5.11324224 -1.35602157 4.55577077 -3 4 C-3.33 4.99 -3.66 5.98 -4 7 C-4.33 6.01 -4.66 5.02 -5 4 C-3.35 2.68 -1.7 1.36 0 0 Z \",fill:\"#B49C6F\",transform:\"translate(671,520)\"})),_path287||(_path287=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.05181621 0.90729671 4.70474527 1.64147639 6.75 4.125 C8.35580248 7.81834571 8.66029981 10.99153775 9 15 C3.7415998 14.32584613 -1.02638346 12.75734451 -6 11 C-2.25 9.875 -2.25 9.875 0 11 C-0.020625 10.030625 -0.04125 9.06125 -0.0625 8.0625 C0 5 0 5 1 4 C0.59070014 1.94603274 0.59070014 1.94603274 0 0 Z \",fill:\"#CEAA74\",transform:\"translate(687,331)\"})),_path288||(_path288=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C4.14817507 5.80933709 3.75636919 8.75535676 2.0625 13.375 C1.68222656 14.43460937 1.30195313 15.49421875 0.91015625 16.5859375 C0.60980469 17.38257813 0.30945313 18.17921875 0 19 C-0.66 19 -1.32 19 -2 19 C-2.33 19.66 -2.66 20.32 -3 21 C-4.18090579 13.21240505 -4.54546581 6.81819871 0 0 Z \",fill:\"#B09160\",transform:\"translate(322,327)\"})),_path289||(_path289=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.58806317 3.38872633 6.45684799 6.76141332 9 11 C9 11.66 9 12.32 9 13 C9.99 13.33 10.98 13.66 12 14 C11.67 14.66 11.34 15.32 11 16 C10.01 16 9.02 16 8 16 C7.34 17.32 6.68 18.64 6 20 C5.38125 18.6696875 5.38125 18.6696875 4.75 17.3125 C2.19493811 12.47613284 -1.07975469 8.78023654 -5 5 C-4.67 4.34 -4.34 3.68 -4 3 C-2.02 3.99 -0.04 4.98 2 6 C1.34 4.02 0.68 2.04 0 0 Z \",fill:\"#B39665\",transform:\"translate(619,287)\"})),_path290||(_path290=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.67 1.66 1.34 2.32 1 3 C1.66 3.33 2.32 3.66 3 4 C2.67 4.33 2.34 4.66 2 5 C1.92705122 7.1446942 1.91634724 9.29166979 1.9375 11.4375 C1.95103516 13.19900391 1.95103516 13.19900391 1.96484375 14.99609375 C1.97644531 15.98738281 1.98804688 16.97867188 2 18 C2 18.66 2 19.32 2 20 C2.33 20.66 2.66 21.32 3 22 C1.02 21.67 -0.96 21.34 -3 21 C-4.49773879 13.51130607 -5.09639803 7.71809276 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#917345\",transform:\"translate(371,237)\"})),_path291||(_path291=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.99 1.32 1.98 2 3 C1.34 3 0.68 3 0 3 C0.66 3.94875 1.32 4.8975 2 5.875 C4 9 4 9 4 11 C4.99 11.33 5.98 11.66 7 12 C7 12.99 7 13.98 7 15 C3.18084612 13.49961812 1.50053617 11.16734582 -1 8 C-1.66 8 -2.32 8 -3 8 C-3.66 8.66 -4.32 9.32 -5 10 C-5.2475 9.38125 -5.495 8.7625 -5.75 8.125 C-7.20628639 5.64931313 -8.37812506 5.04874998 -11 4 C-11 3.34 -11 2.68 -11 2 C-7.24455129 0.60262373 -4.02603178 -0.55917108 0 0 Z \",fill:\"#AB9168\",transform:\"translate(565,589)\"})),_path292||(_path292=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 1.98 0 3.96 0 6 C-0.33 5.34 -0.66 4.68 -1 4 C-1.66 4 -2.32 4 -3 4 C-2.01 5.98 -1.02 7.96 0 10 C0.66 9.34 1.32 8.68 2 8 C2 8.66 2 9.32 2 10 C2.66 10 3.32 10 4 10 C4 11.32 4 12.64 4 14 C-1.625 14.25 -1.625 14.25 -5 12 C-5 11.34 -5 10.68 -5 10 C-6.65 10.33 -8.3 10.66 -10 11 C-9.72712269 6.36108575 -7.70642674 4.2649533 -4.5703125 1.13671875 C-3 0 -3 0 0 0 Z \",fill:\"#B39669\",transform:\"translate(682,508)\"})),_path293||(_path293=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C2.32 1.67 3.64 1.34 5 1 C4.67 3.97 4.34 6.94 4 10 C-2.40096618 11.32850242 -2.40096618 11.32850242 -4.9375 9.9375 C-6.46880951 7.14511207 -6.39907251 5.12606798 -6 2 C-3 0 -3 0 0 0 Z \",fill:\"#0B0502\",transform:\"translate(473,366)\"})),_path294||(_path294=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.89929697 2.84894545 2.92286594 5.51449766 4.08544922 8.70849609 C5.7591137 12.90203983 7.9308115 16.83769219 10.0625 20.8125 C10.50916016 21.65748047 10.95582031 22.50246094 11.41601562 23.37304688 C13.17555719 26.68435155 14.91786642 29.87679963 17 33 C16.67 33.99 16.34 34.98 16 36 C11.00157015 29.7840039 6.48592145 23.99128769 3.84375 16.3828125 C2.9576803 13.88048604 1.85190277 11.57137865 0.6875 9.1875 C-0.63548644 6.28413675 -1.0164828 5.20191428 -0.75 1.9375 C-0.5025 1.298125 -0.255 0.65875 0 0 Z \",fill:\"#8A795A\",transform:\"translate(413,269)\"})),_path295||(_path295=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C1.91720359 4.24838923 1.10963155 5.04282583 -1.4375 7.1875 C-2.05496094 7.71730469 -2.67242188 8.24710937 -3.30859375 8.79296875 C-5 10 -5 10 -7 10 C-7 10.66 -7 11.32 -7 12 C-7.99 12.495 -7.99 12.495 -9 13 C-11.7584126 18.29615218 -12.61026207 23.07329556 -13 29 C-13.33 29 -13.66 29 -14 29 C-14.22307542 26.7722603 -14.42788178 24.54268636 -14.625 22.3125 C-14.74101563 21.07113281 -14.85703125 19.82976562 -14.9765625 18.55078125 C-14.99980498 15.02954595 -14.63112413 13.07916291 -13 10 C-11 8 -11 8 -9.25 7.6875 C-5.75431518 6.61937408 -3.69535139 4.4557646 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#987A46\",transform:\"translate(687,280)\"})),_path296||(_path296=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 12.54 1.66 25.08 2 38 C0.68 37.67 -0.64 37.34 -2 37 C-2.06158208 29.13411118 -1.88773107 21.29644182 -1.5625 13.4375 C-1.52318359 12.35919922 -1.48386719 11.28089844 -1.44335938 10.16992188 C-1.40146484 9.14318359 -1.35957031 8.11644531 -1.31640625 7.05859375 C-1.27974854 6.13361084 -1.24309082 5.20862793 -1.20532227 4.25561523 C-1 2 -1 2 0 0 Z \",fill:\"#E0B97D\",transform:\"translate(507,421)\"})),_path297||(_path297=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.67 1.66 1.34 2.32 1 3 C2.32 3.33 3.64 3.66 5 4 C5 2.68 5 1.36 5 0 C5.99 0 6.98 0 8 0 C9.859375 2.3359375 9.859375 2.3359375 11.75 5.375 C12.38421875 6.37273438 13.0184375 7.37046875 13.671875 8.3984375 C14.11015625 9.25695312 14.5484375 10.11546875 15 11 C14.67 11.66 14.34 12.32 14 13 C13.01 13 12.02 13 11 13 C11 14.32 11 15.64 11 17 C11.66 17.33 12.32 17.66 13 18 C12.01 18 11.02 18 10 18 C9.7525 16.948125 9.505 15.89625 9.25 14.8125 C8.16709835 11.13063438 6.88019585 8.64666646 4 6 C0.35817665 5.10944264 0.35817665 5.10944264 -3 5 C-1.125 1.125 -1.125 1.125 0 0 Z \",fill:\"#98825C\",transform:\"translate(626,556)\"})),_path298||(_path298=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.75 0.875 4.75 0.875 7 2 C7 2.66 7 3.32 7 4 C7.556875 4.2475 8.11375 4.495 8.6875 4.75 C13.77056981 7.4976053 17.01596323 11.05662561 20.3125 15.75 C21.00988281 16.73484375 21.70726562 17.7196875 22.42578125 18.734375 C22.94527344 19.48203125 23.46476562 20.2296875 24 21 C23.67 21.66 23.34 22.32 23 23 C22.38511719 22.28972656 21.77023437 21.57945312 21.13671875 20.84765625 C20.32847656 19.92855469 19.52023437 19.00945312 18.6875 18.0625 C17.88699219 17.14597656 17.08648437 16.22945313 16.26171875 15.28515625 C14.13761078 12.79486024 14.13761078 12.79486024 11 12 C11 11.34 11 10.68 11 10 C7.37 9.01 3.74 8.02 0 7 C0.99 6.67 1.98 6.34 3 6 C3.73323796 3.98491642 3.73323796 3.98491642 4 2 C2.68 2 1.36 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#8A6F43\",transform:\"translate(403,284)\"})),_path299||(_path299=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C19 0 19 0 23 2 C22.01 2.495 22.01 2.495 21 3 C20.67 3.66 20.34 4.32 20 5 C19.01 4.34 18.02 3.68 17 3 C11.72 2.34 6.44 1.68 1 1 C1 14.53 1 28.06 1 42 C4.465 41.505 4.465 41.505 8 41 C8 41.66 8 42.32 8 43 C5.36 43 2.72 43 0 43 C0 28.81 0 14.62 0 0 Z \",fill:\"#7C6B50\",transform:\"translate(163,419)\"})),_path300||(_path300=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-2.3 4.32 -5.6 5.64 -9 7 C10.8 7.495 10.8 7.495 31 8 C31 8.33 31 8.66 31 9 C12.52 9 -5.96 9 -25 9 C-25 8.67 -25 8.34 -25 8 C-24.14535156 7.95101563 -23.29070313 7.90203125 -22.41015625 7.8515625 C-21.30542969 7.77679688 -20.20070313 7.70203125 -19.0625 7.625 C-17.40927734 7.52058594 -17.40927734 7.52058594 -15.72265625 7.4140625 C-14.37494141 7.20910156 -14.37494141 7.20910156 -13 7 C-12.67 6.34 -12.34 5.68 -12 5 C-13.32 5 -14.64 5 -16 5 C-15.67 4.34 -15.34 3.68 -15 3 C-10.38 3 -5.76 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#98815C\",transform:\"translate(673,382)\"})),_path301||(_path301=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.26328125 0.02707031 2.5265625 0.05414063 3.828125 0.08203125 C4.79234375 0.11683594 5.7565625 0.15164063 6.75 0.1875 C6.75 0.5175 6.75 0.8475 6.75 1.1875 C5.84636719 1.21328125 4.94273437 1.2390625 4.01171875 1.265625 C2.83222656 1.32234375 1.65273438 1.3790625 0.4375 1.4375 C-1.32013672 1.50710938 -1.32013672 1.50710938 -3.11328125 1.578125 C-6.34478682 1.88804149 -6.34478682 1.88804149 -8.16796875 4.234375 C-8.52503906 4.87890625 -8.88210938 5.5234375 -9.25 6.1875 C-8.26 5.8575 -7.27 5.5275 -6.25 5.1875 C-5.26 5.5175 -4.27 5.8475 -3.25 6.1875 C-3.58 7.1775 -3.91 8.1675 -4.25 9.1875 C-5.219375 9.661875 -6.18875 10.13625 -7.1875 10.625 C-10.35211637 12.23960019 -11.12470028 12.92413082 -12.25 16.1875 C-12.91 16.1875 -13.57 16.1875 -14.25 16.1875 C-14.58 16.8475 -14.91 17.5075 -15.25 18.1875 C-15.70295362 11.73291095 -14.99989695 8.49985401 -11.25 3.1875 C-7.7490129 -0.3134871 -4.81684563 -0.13380127 0 0 Z \",fill:\"#977C4F\",transform:\"translate(499.25,349.8125)\"})),_path302||(_path302=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25159912 0.00523682 2.50319824 0.01047363 3.79272461 0.01586914 C4.78942421 0.01799156 4.78942421 0.01799156 5.80625916 0.02015686 C7.93590735 0.02577021 10.06545175 0.03832485 12.19506836 0.05102539 C13.63582205 0.05603868 15.07657739 0.06060188 16.51733398 0.06469727 C20.05577938 0.07574394 23.59416375 0.09301747 27.13256836 0.11352539 C24.25587228 2.99022147 21.52143076 3.05258163 17.54541016 3.22705078 C16.64991455 3.22181396 15.75441895 3.21657715 14.83178711 3.21118164 C13.85532227 3.20795898 12.87885742 3.20473633 11.87280273 3.20141602 C10.86540039 3.19303711 9.85799805 3.1846582 8.82006836 3.17602539 C7.79333008 3.17151367 6.7665918 3.16700195 5.70874023 3.16235352 C3.18328954 3.15060723 0.65795931 3.13418104 -1.86743164 3.11352539 C-2.19743164 5.09352539 -2.52743164 7.07352539 -2.86743164 9.11352539 C-3.19743164 9.11352539 -3.52743164 9.11352539 -3.86743164 9.11352539 C-3.96508789 2.96118164 -3.96508789 2.96118164 -3.86743164 1.11352539 C-2.86743164 0.11352539 -2.86743164 0.11352539 0 0 Z \",fill:\"#7A684A\",transform:\"translate(408.867431640625,190.886474609375)\"})),_path303||(_path303=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 2.64 2 5.28 2 8 C2.66 8 3.32 8 4 8 C6.4851924 11.7277886 7.38440535 14.91322812 6.5625 19.375 C6.376875 19.91125 6.19125 20.4475 6 21 C3.23429673 20.34268039 0.55539497 19.57282028 -2.125 18.625 C-2.80820312 18.39039063 -3.49140625 18.15578125 -4.1953125 17.9140625 C-6 17 -6 17 -8 14 C-3.65535464 14.60825035 0.67551867 15.26167392 5 16 C5 14.68 5 13.36 5 12 C3.68 12.33 2.36 12.66 1 13 C-2 9.375 -2 9.375 -2 6 C-1.34 6 -0.68 6 0 6 C0.33 4.68 0.66 3.36 1 2 C0.34 1.67 -0.32 1.34 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#AB8F62\",transform:\"translate(681,506)\"})),_path304||(_path304=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.5 1.375 1.5 1.375 3 3 C3 3.66 3 4.32 3 5 C2.34 5 1.68 5 1 5 C0.76796875 5.57878906 0.5359375 6.15757812 0.296875 6.75390625 C-1.31736697 9.54965666 -3.19059765 10.97916942 -5.75 12.9375 C-7.08804688 13.97970703 -7.08804688 13.97970703 -8.453125 15.04296875 C-9.29359375 15.68878906 -10.1340625 16.33460938 -11 17 C-15.93060961 20.73013636 -15.93060961 20.73013636 -19 26 C-19.66 25.67 -20.32 25.34 -21 25 C-20.34 23.02 -19.68 21.04 -19 19 C-18.34 19 -17.68 19 -17 19 C-17 18.34 -17 17.68 -17 17 C-15.20703125 15.44921875 -15.20703125 15.44921875 -12.8125 13.6875 C-10.04487209 11.60742745 -7.44615441 9.57538868 -5.0625 7.0625 C-4.381875 6.381875 -3.70125 5.70125 -3 5 C-2.34 5 -1.68 5 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#2D1C0A\",transform:\"translate(697,273)\"})),_path305||(_path305=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.24614162 4.69062342 1.45999775 9.38135209 1.64697266 14.07470703 C1.71445669 15.66330047 1.79000252 17.25157671 1.87451172 18.83935547 C2.57169451 32.10262805 1.22761992 43.61166058 -4 56 C-4.33 56 -4.66 56 -5 56 C-4.60814041 50.25723014 -3.76341592 44.77382859 -2.5 39.15625 C-0.771455 30.96218915 -0.44996105 22.91202277 -0.3125 14.5625 C-0.2791981 13.13734117 -0.2446975 11.71220983 -0.20898438 10.28710938 C-0.12559016 6.85827638 -0.05811396 3.42936606 0 0 Z \",fill:\"#85704F\",transform:\"translate(552,213)\"})),_path306||(_path306=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 2.97 1.66 5.94 2 9 C3.32 9.33 4.64 9.66 6 10 C7.04976964 13.14930893 7.10131595 15.38814456 7.0625 18.6875 C7.05347656 19.68136719 7.04445313 20.67523438 7.03515625 21.69921875 C7.02355469 22.45847656 7.01195312 23.21773437 7 24 C4.625 23.8125 4.625 23.8125 2 23 C-0.81617793 18.72514308 -0.22614366 13.61630819 -0.125 8.6875 C-0.11597656 7.85154297 -0.10695313 7.01558594 -0.09765625 6.15429688 C-0.07420989 4.10274031 -0.03834266 2.05133223 0 0 Z \",fill:\"#B38F56\",transform:\"translate(563,230)\"})),_path307||(_path307=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3 0 3 -2 6 C-0.68 6.33 0.64 6.66 2 7 C-0.62214328 8.50519387 -3.24744208 10.00431319 -5.875 11.5 C-6.62136719 11.92925781 -7.36773437 12.35851562 -8.13671875 12.80078125 C-8.85214844 13.20683594 -9.56757813 13.61289063 -10.3046875 14.03125 C-10.96452637 14.40830078 -11.62436523 14.78535156 -12.30419922 15.17382812 C-14 16 -14 16 -16 16 C-16.4296875 13.79296875 -16.4296875 13.79296875 -16 11 C-13.70567332 9.16993002 -11.64184318 7.75808409 -9.125 6.3125 C-4.28672866 3.52876669 -4.28672866 3.52876669 0 0 Z \",fill:\"#281C0F\",transform:\"translate(502,144)\"})),_path308||(_path308=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C1.33333333 2.66666667 0.66666667 5.33333333 0 8 C2.47266765 7.65555119 2.47266765 7.65555119 5 7 C5.33 6.34 5.66 5.68 6 5 C6.66 5 7.32 5 8 5 C7.49396008 7.16874252 7.00016187 8.99967627 6 11 C5.01 11 4.02 11 3 11 C3 12.98 3 14.96 3 17 C2.01 17 1.02 17 0 17 C-0.33 14.69 -0.66 12.38 -1 10 C-1.433125 10.495 -1.86625 10.99 -2.3125 11.5 C-4 13 -4 13 -7 13 C-5.65846062 7.99971686 -3.51629997 3.80932497 0 0 Z \",fill:\"#77603C\",transform:\"translate(344,565)\"})),_path309||(_path309=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.17015625 1.08796875 3.3403125 2.1759375 3.515625 3.296875 C5.16304368 13.4347471 6.98516144 23.43321836 11.8125 32.625 C12.204375 33.40875 12.59625 34.1925 13 35 C12.67 35.66 12.34 36.32 12 37 C11.34 37 10.68 37 10 37 C8.17341502 34.26012254 7.43263535 32.49561745 6.5625 29.39453125 C6.17964844 28.04198242 6.17964844 28.04198242 5.7890625 26.66210938 C5.52867187 25.72173828 5.26828125 24.78136719 5 23.8125 C4.73960937 22.89146484 4.47921875 21.97042969 4.2109375 21.02148438 C-0.30875363 4.9400581 -0.30875363 4.9400581 0 0 Z \",fill:\"#382910\",transform:\"translate(408,245)\"})),_path310||(_path310=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.66 2.64 1.32 4 2 C3.01 2.495 3.01 2.495 2 3 C2.20625 4.0725 2.4125 5.145 2.625 6.25 C2.9876191 9.87619096 2.98362069 11.08291076 1 14 C0.34 14 -0.32 14 -1 14 C-1 10.37 -1 6.74 -1 3 C-2.65 3.66 -4.3 4.32 -6 5 C-7.03343734 7.39115375 -7.03343734 7.39115375 -7.3125 10.125 C-7.45300781 11.03507813 -7.59351563 11.94515625 -7.73828125 12.8828125 C-7.82464844 13.58148437 -7.91101563 14.28015625 -8 15 C-8.99 14.34 -9.98 13.68 -11 13 C-11.45154468 9.6134149 -11.12164646 7.34973357 -10 4.125 C-8 2 -8 2 -6.01953125 1.69140625 C-4.01038901 1.68785025 -2.00242986 1.83586641 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#947B50\",transform:\"translate(432,597)\"})),_path311||(_path311=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.12148438 0.23396484 1.12148438 0.23396484 2.265625 0.47265625 C3.25046875 0.66730469 4.2353125 0.86195313 5.25 1.0625 C6.22453125 1.25972656 7.1990625 1.45695313 8.203125 1.66015625 C10.90580804 1.98855489 12.44039337 1.76339145 15 1 C17.25 1.4375 17.25 1.4375 19 2 C19 3.32 19 4.64 19 6 C21.97 6.495 21.97 6.495 25 7 C25 7.33 25 7.66 25 8 C15.38153041 8.59495688 8.08689834 7.39126556 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#A38860\",transform:\"translate(400,529)\"})),_path312||(_path312=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.65260542 1.04644067 5.28445748 2.12289482 7.90234375 3.25390625 C8.90394531 3.68574219 9.90554688 4.11757813 10.9375 4.5625 C11.93652344 4.99691406 12.93554688 5.43132812 13.96484375 5.87890625 C16.99166231 6.99692031 19.80836906 7.57666892 23 8 C23 8.33 23 8.66 23 9 C20.4580411 9.05434116 17.91726318 9.0938339 15.375 9.125 C14.66214844 9.14175781 13.94929688 9.15851563 13.21484375 9.17578125 C8.7387836 9.21684602 5.22050722 8.69086567 1 7 C1 6.34 1 5.68 1 5 C-0.65 4.67 -2.3 4.34 -4 4 C-2.68 2.68 -1.36 1.36 0 0 Z \",fill:\"#160D05\",transform:\"translate(385,368)\"})),_path313||(_path313=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-3.22515763 1.73662334 -6.51329166 2.8905928 -10 4 C-9.01 5.485 -9.01 5.485 -8 7 C-9.6875 8.5625 -9.6875 8.5625 -12 10 C-12.7425 9.814375 -13.485 9.62875 -14.25 9.4375 C-18.02288641 8.83726807 -19.98395738 10.25863753 -23.23046875 12.08984375 C-25 13 -25 13 -27 13 C-25.22786906 7.68360717 -20.3291899 5.1702759 -15.59765625 2.79296875 C-10.15054507 0.41772612 -5.92401632 -0.43881602 0 0 Z \",fill:\"#8A7149\",transform:\"translate(256,298)\"})),_path314||(_path314=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.33 2.64 0.66 4 1 C4 1.66 4 2.32 4 3 C4.99 3.33 5.98 3.66 7 4 C6.67 5.98 6.34 7.96 6 10 C5.67 9.34 5.34 8.68 5 8 C4.01 8.33 3.02 8.66 2 9 C1.26676204 11.01508358 1.26676204 11.01508358 1 13 C-0.32 13 -1.64 13 -3 13 C-4 10 -4 10 -3 7 C-3.66 6.67 -4.32 6.34 -5 6 C-3.35 4.02 -1.7 2.04 0 0 Z \",fill:\"#B8996B\",transform:\"translate(290,522)\"})),_path315||(_path315=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-3.08888522 4.05925681 -3.70935927 4.2390374 -7.1875 4.125 C-9.0746875 4.063125 -9.0746875 4.063125 -11 4 C-11 4.99 -11 5.98 -11 7 C-14.63 7.66 -18.26 8.32 -22 9 C-21.34 8.67 -20.68 8.34 -20 8 C-20 6.02 -20 4.04 -20 2 C-18.95199219 1.90912109 -18.95199219 1.90912109 -17.8828125 1.81640625 C-16.97273437 1.73261719 -16.06265625 1.64882813 -15.125 1.5625 C-14.22007812 1.48128906 -13.31515625 1.40007812 -12.3828125 1.31640625 C-2.20170455 -0.03551136 -2.20170455 -0.03551136 0 0 Z \",fill:\"#C9A56B\",transform:\"translate(608,376)\"})),_path316||(_path316=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C0.67 2.66 0.34 3.32 0 4 C1.65 4 3.3 4 5 4 C2.49316923 7.76024616 0.13506066 8.39192086 -4 10 C0.29 10 4.58 10 9 10 C7 12 7 12 3.3046875 12.1953125 C1.82799892 12.182009 0.35137642 12.15814835 -1.125 12.125 C-1.87910156 12.11597656 -2.63320313 12.10695313 -3.41015625 12.09765625 C-5.27357254 12.0740687 -7.13682593 12.03819719 -9 12 C-9 11.01 -9 10.02 -9 9 C-10.98 9.33 -12.96 9.66 -15 10 C-12.4345406 7.4345406 -10.52313332 7.45953913 -7 7 C-7 6.34 -7 5.68 -7 5 C-5.46875 3.7109375 -5.46875 3.7109375 -3.5 2.375 C-2.8503125 1.92898438 -2.200625 1.48296875 -1.53125 1.0234375 C-0.77328125 0.51683594 -0.77328125 0.51683594 0 0 Z \",fill:\"#A08559\",transform:\"translate(591,366)\"})),_path317||(_path317=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.00735217 0.60110283 6.55469371 2.66602028 9.75 5.0625 C10.73484375 5.79597656 11.7196875 6.52945312 12.734375 7.28515625 C13.48203125 7.85105469 14.2296875 8.41695313 15 9 C14.01 9.33 13.02 9.66 12 10 C11.01 9.34 10.02 8.68 9 8 C8.525625 8.804375 8.05125 9.60875 7.5625 10.4375 C6 13 6 13 5 14 C3.65732587 14.08631874 2.31025678 14.10706473 0.96484375 14.09765625 C0.15595703 14.09443359 -0.65292969 14.09121094 -1.48632812 14.08789062 C-2.33646484 14.07951172 -3.18660156 14.07113281 -4.0625 14.0625 C-4.91650391 14.05798828 -5.77050781 14.05347656 -6.65039062 14.04882812 C-8.76695663 14.03700373 -10.88348685 14.01906769 -13 14 C-13 13.67 -13 13.34 -13 13 C-4.09 12.01 -4.09 12.01 5 11 C5.33 10.01 5.66 9.02 6 8 C5.01 7.67 4.02 7.34 3 7 C0.67734388 4.41927097 0 3.54823932 0 0 Z \",fill:\"#886E41\",transform:\"translate(269,284)\"})),_path318||(_path318=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.33 0 0.66 0 1 C-2.31 1.66 -4.62 2.32 -7 3 C-6.34 3.33 -5.68 3.66 -5 4 C-5 4.66 -5 5.32 -5 6 C-4.01 6 -3.02 6 -2 6 C-1.67 8.64 -1.34 11.28 -1 14 C-1.99 14 -2.98 14 -4 14 C-4.33 13.01 -4.66 12.02 -5 11 C-4.67 13.31 -4.34 15.62 -4 18 C-7 17 -7 17 -9 14 C-9.4140625 12.0625 -9.4140625 12.0625 -9.625 10 C-9.69976563 9.319375 -9.77453125 8.63875 -9.8515625 7.9375 C-10.2049059 3.32543878 -10.2049059 3.32543878 -8.9375 1.3125 C-6.02679298 -0.65926927 -3.41970529 -0.19356822 0 0 Z \",fill:\"#8E7754\",transform:\"translate(546,594)\"})),_path319||(_path319=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C4.05096794 3.62001866 4.90585584 6.1133481 5.6875 8.8125 C5.91244141 9.53759766 6.13738281 10.26269531 6.36914062 11.00976562 C7.4220457 14.5077147 8 17.31996854 8 21 C7.01 21 6.02 21 5 21 C2.96564469 17.27034861 2 15.33094958 2 11 C1.34 11 0.68 11 0 11 C-0.19406478 9.35492782 -0.38007935 7.70890406 -0.5625 6.0625 C-0.66691406 5.14597656 -0.77132813 4.22945313 -0.87890625 3.28515625 C-0.91886719 2.53105469 -0.95882813 1.77695312 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#CFAD79\",transform:\"translate(348,427)\"})),_path320||(_path320=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.63001953 0.01353516 1.63001953 0.01353516 3.29296875 0.02734375 C4.12441406 0.03894531 4.95585937 0.05054688 5.8125 0.0625 C5.8125 0.3925 5.8125 0.7225 5.8125 1.0625 C5.05324219 1.09988281 4.29398437 1.13726562 3.51171875 1.17578125 C2.51785156 1.24152344 1.52398437 1.30726563 0.5 1.375 C-0.48613281 1.43300781 -1.47226562 1.49101562 -2.48828125 1.55078125 C-5.43134457 2.10872813 -6.36932999 2.74790132 -8.1875 5.0625 C-5.5475 5.0625 -2.9075 5.0625 -0.1875 5.0625 C-3.1875 7.0625 -3.1875 7.0625 -5.6875 7.625 C-9.27584542 9.68829861 -9.60655569 12.30935805 -10.70703125 16.1640625 C-10.86558594 16.79054688 -11.02414062 17.41703125 -11.1875 18.0625 C-13.1875 16.9375 -13.1875 16.9375 -15.1875 15.0625 C-15.95701511 11.75358503 -15.65560524 9.86370834 -13.94140625 6.9296875 C-9.74442306 1.08949643 -7.28734078 -0.0783585 0 0 Z \",fill:\"#8D703E\",transform:\"translate(272.1875,248.9375)\"})),_path321||(_path321=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C2.31252882 2.70674629 3.65278717 3.36184656 5 4 C7.3473481 5.3096792 9.67160275 6.6566939 12 8 C12 8.66 12 9.32 12 10 C12.66 10 13.32 10 14 10 C14 10.66 14 11.32 14 12 C15.32 11.67 16.64 11.34 18 11 C18.12375 11.928125 18.12375 11.928125 18.25 12.875 C18.80603954 15.13472902 18.80603954 15.13472902 20.8125 16.1875 C22.95803787 17.04747564 22.95803787 17.04747564 25.125 17.4375 C27 18 27 18 29 21 C28.67 21.99 28.34 22.98 28 24 C27.34644531 23.46117187 26.69289063 22.92234375 26.01953125 22.3671875 C22.33530681 19.47890806 18.52478476 16.80468698 14.6875 14.125 C9.04623268 10.18266663 3.48102306 6.16287267 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#55432B\",transform:\"translate(325,544)\"})),_path322||(_path322=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.02976289 2.41190516 11.55439898 5.10983888 16 10 C16.66 10.66 17.32 11.32 18 12 C16.68 12.33 15.36 12.66 14 13 C14.99 14.485 14.99 14.485 16 16 C13.05043472 14.63055898 10.47531189 13.12169591 8 11 C8 10.34 8 9.68 8 9 C7.236875 8.773125 6.47375 8.54625 5.6875 8.3125 C2.4246973 6.71903821 1.53739291 5.23661664 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#8E7045\",transform:\"translate(448,310)\"})),_path323||(_path323=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.73283203 0.00773437 1.46566406 0.01546875 2.22070312 0.0234375 C2.94966797 0.01570313 3.67863281 0.00796875 4.4296875 0 C8.24158536 0.01397579 10.04131422 0.11217823 13.28320312 2.2734375 C12.07664062 2.7065625 12.07664062 2.7065625 10.84570312 3.1484375 C8.15055633 4.00606318 8.15055633 4.00606318 7.28320312 6.2734375 C8.93320312 6.2734375 10.58320312 6.2734375 12.28320312 6.2734375 C12.61320313 6.9334375 12.94320312 7.5934375 13.28320312 8.2734375 C7.65820312 8.5234375 7.65820312 8.5234375 4.28320312 6.2734375 C4.28320312 5.6134375 4.28320312 4.9534375 4.28320312 4.2734375 C-0.17179688 4.7684375 -0.17179688 4.7684375 -4.71679688 5.2734375 C-4.05679688 4.9434375 -3.39679687 4.6134375 -2.71679688 4.2734375 C-2.71679688 3.6134375 -2.71679688 2.9534375 -2.71679688 2.2734375 C-4.36679687 2.2734375 -6.01679687 2.2734375 -7.71679688 2.2734375 C-5.16630137 -0.27705801 -3.48196933 0.0127896 0 0 Z \",fill:\"#B19160\",transform:\"translate(543.716796875,311.7265625)\"})),_path324||(_path324=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C1.27502493 4.6029598 -0.9095871 8.93255824 -3.125 13.3125 C-3.49753906 14.05306641 -3.87007813 14.79363281 -4.25390625 15.55664062 C-5.16744806 17.37201217 -6.08347487 19.18613282 -7 21 C-7.66 21 -8.32 21 -9 21 C-9 28.26 -9 35.52 -9 43 C-11.64 43 -14.28 43 -17 43 C-16.67 42.34 -16.34 41.68 -16 41 C-14.02 41.33 -12.04 41.66 -10 42 C-10.33 34.41 -10.66 26.82 -11 19 C-10.34 19 -9.68 19 -9 19 C-8.74476563 18.32582031 -8.48953125 17.65164063 -8.2265625 16.95703125 C-6.77131195 13.44867244 -5.09052165 10.07321448 -3.375 6.6875 C-3.05015625 6.04232422 -2.7253125 5.39714844 -2.390625 4.73242188 C-1.59558044 3.15402459 -0.79804366 1.57688306 0 0 Z \",fill:\"#8D7A56\",transform:\"translate(445,419)\"})),_path325||(_path325=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.48831242 0.00667405 2.97660807 0.01863442 4.46484375 0.03515625 C5.22345703 0.03966797 5.98207031 0.04417969 6.76367188 0.04882812 C8.64326246 0.06064945 10.52281274 0.07858547 12.40234375 0.09765625 C12.40234375 1.08765625 12.40234375 2.07765625 12.40234375 3.09765625 C14.71234375 3.09765625 17.02234375 3.09765625 19.40234375 3.09765625 C19.40234375 3.42765625 19.40234375 3.75765625 19.40234375 4.09765625 C10.82234375 4.42765625 2.24234375 4.75765625 -6.59765625 5.09765625 C-4.10453572 0.11141519 -4.10453572 0.11141519 0 0 Z \",fill:\"#BC9B65\",transform:\"translate(496.59765625,350.90234375)\"})),_path326||(_path326=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.47851553 0.89570311 5.77175056 1.25000973 9 4 C6.03 3.505 6.03 3.505 3 3 C3.33 3.99 3.66 4.98 4 6 C4.99 6 5.98 6 7 6 C6.34580901 11.06998019 4.1453591 15.41990777 2 20 C1.01 20 0.02 20 -1 20 C-0.67 18.35 -0.34 16.7 0 15 C0.66 15 1.32 15 2 15 C2 14.34 2 13.68 2 13 C1.34 13 0.68 13 0 13 C0 8.71 0 4.42 0 0 Z \",fill:\"#94805D\",transform:\"translate(361,571)\"})),_path327||(_path327=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C24.76 4 48.52 4 73 4 C73 4.66 73 5.32 73 6 C48.66666667 6 24.33333333 6 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#2D2010\",transform:\"translate(263,488)\"})),_path328||(_path328=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C19 0 19 0 24 2 C23.01 2.495 23.01 2.495 22 3 C21.01 2.67 20.02 2.34 19 2 C19 2.66 19 3.32 19 4 C13.39 3.01 7.78 2.02 2 1 C2 14.2 2 27.4 2 41 C1.67 41 1.34 41 1 41 C0.67 27.47 0.34 13.94 0 0 Z \",fill:\"#A78D67\",transform:\"translate(125,419)\"})),_path329||(_path329=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C2.66 1.67 3.32 1.34 4 1 C4 2.32 4 3.64 4 5 C4.99 5 5.98 5 7 5 C6.67 7.64 6.34 10.28 6 13 C8.64 12.67 11.28 12.34 14 12 C11.87330165 14.33936818 9.93775144 15.80653848 7 17 C6.01 17 5.02 17 4 17 C3.67 15.02 3.34 13.04 3 11 C2.01 11.66 1.02 12.32 0 13 C0 8.71 0 4.42 0 0 Z \",fill:\"#3A3022\",transform:\"translate(554,598)\"})),_path330||(_path330=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 3 2 3 1.6003418 5.02124023 C1.30297119 5.77606689 1.00560059 6.53089355 0.69921875 7.30859375 C0.38146484 8.13810547 0.06371094 8.96761719 -0.26367188 9.82226562 C-0.60978516 10.68529297 -0.95589844 11.54832031 -1.3125 12.4375 C-1.97688252 14.14390058 -2.6397002 15.85091143 -3.30078125 17.55859375 C-3.60153564 18.31454834 -3.90229004 19.07050293 -4.2121582 19.84936523 C-5.14379095 22.27491578 -5.14379095 22.27491578 -6 26 C-0.72 26 4.56 26 10 26 C10.33 25.34 10.66 24.68 11 24 C11 24.99 11 25.98 11 27 C5.06 27.33 -0.88 27.66 -7 28 C-7.99 30.64 -8.98 33.28 -10 36 C-10.66 36 -11.32 36 -12 36 C-11.56766547 34.33198595 -11.12880988 32.66566192 -10.6875 31 C-10.44386719 30.071875 -10.20023438 29.14375 -9.94921875 28.1875 C-9.0309763 25.10401918 -7.95778797 22.13923327 -6.80932617 19.13671875 C-5.41204913 15.44773875 -4.1187398 11.72197712 -2.8125 8 C-2.40354492 6.83791016 -2.40354492 6.83791016 -1.98632812 5.65234375 C-1.32348918 3.76848571 -0.66163914 1.88427976 0 0 Z \",fill:\"#8B7F67\",transform:\"translate(215,426)\"})),_path331||(_path331=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.24705882 0.82352941 7.24705882 0.82352941 10 4 C10.4375 7.5625 10.4375 7.5625 10 11 C7 13 7 13 3 13 C2.67 9.37 2.34 5.74 2 2 C1.34 2 0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#D9B984\",transform:\"translate(790,419)\"})),_path332||(_path332=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.56521654 1.78260827 6.71455357 3.75992289 10 6 C9.01 6.99 8.02 7.98 7 9 C7.66 9 8.32 9 9 9 C9 10.65 9 12.3 9 14 C8.34 13.67 7.68 13.34 7 13 C7.33 12.01 7.66 11.02 8 10 C7.608125 10.391875 7.21625 10.78375 6.8125 11.1875 C4.54166667 13.45833333 2.27083333 15.72916667 0 18 C0.57634139 13.24518354 2.55068521 10.02951788 5 6 C3.824375 7.2375 3.824375 7.2375 2.625 8.5 C0 11 0 11 -2 11 C-1.34 7.37 -0.68 3.74 0 0 Z \",fill:\"#AA8F67\",transform:\"translate(321,545)\"})),_path333||(_path333=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C3.32 2 4.64 2 6 2 C6 2.66 6 3.32 6 4 C5.34 4 4.68 4 4 4 C4 7.63 4 11.26 4 15 C3.01 15.33 2.02 15.66 1 16 C-0.33332095 13.3333581 0.32897967 11.83319697 1 9 C0.01 9 -0.98 9 -2 9 C-2.33 9.99 -2.66 10.98 -3 12 C-3.66 11.67 -4.32 11.34 -5 11 C-5 9.68 -5 8.36 -5 7 C-3.02 7 -1.04 7 1 7 C1 6.34 1 5.68 1 5 C-1.31 5.33 -3.62 5.66 -6 6 C-5.67 5.34 -5.34 4.68 -5 4 C-3.68 4 -2.36 4 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#8B714B\",transform:\"translate(270,500)\"})),_path334||(_path334=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 3.3 1 6.6 1 10 C-19.13 10 -39.26 10 -60 10 C-56.09987886 7.07490914 -54.61691161 6.52464905 -50 6 C-50.66 6.66 -51.32 7.32 -52 8 C-34.84 8.33 -17.68 8.66 0 9 C0 6.03 0 3.06 0 0 Z \",fill:\"#3D301B\",transform:\"translate(650,376)\"})),_path335||(_path335=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.07448253 -0.11157151 17.96278689 0.05757182 27 1 C27 1.99 27 2.98 27 4 C23.25006521 4.05811773 19.50024648 4.09363593 15.75 4.125 C14.15478516 4.15013672 14.15478516 4.15013672 12.52734375 4.17578125 C10.99013672 4.18544922 10.99013672 4.18544922 9.421875 4.1953125 C8.00793457 4.21102295 8.00793457 4.21102295 6.56542969 4.22705078 C3.90048059 3.99119213 2.28136908 3.35661659 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#967133\",transform:\"translate(454,566)\"})),_path336||(_path336=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C4.4420792 6.83782175 4.62022758 13.79431807 5 21 C4.01 21 3.02 21 2 21 C1.67 20.34 1.34 19.68 1 19 C0.67 20.98 0.34 22.96 0 25 C-0.33 25 -0.66 25 -1 25 C-0.67 16.75 -0.34 8.5 0 0 Z \",fill:\"#261C0C\",transform:\"translate(309,303)\"})),_path337||(_path337=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C0.22211352 11.26976212 -3.94482775 19.28055196 -10 28 C-11 25 -11 25 -10.14453125 22.87109375 C-9.70496094 22.06800781 -9.26539063 21.26492188 -8.8125 20.4375 C-6.1662875 15.40969625 -4.03866727 10.2969739 -2 5 C-1.33534427 3.33253036 -0.66920731 1.66564816 0 0 Z \",fill:\"#705A36\",transform:\"translate(550,269)\"})),_path338||(_path338=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.9375 0.8125 1.9375 0.8125 4 2 C4.33 2.99 4.66 3.98 5 5 C5.99 5.33 6.98 5.66 8 6 C12.66666667 10.33333333 12.66666667 10.33333333 14 13 C13.01 13 12.02 13 11 13 C11.33 13.99 11.66 14.98 12 16 C11.01 16.33 10.02 16.66 9 17 C4.0037204 12.83643366 1.95046258 8.15648802 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#906F39\",transform:\"translate(448,139)\"})),_path339||(_path339=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.25 3.3125 2.25 3.3125 2 7 C0.125 8.9375 0.125 8.9375 -2 10 C-2.66 10 -3.32 10 -4 10 C-3.67 12.97 -3.34 15.94 -3 19 C-6.93445383 18.01638654 -10.33720381 16.72773405 -14 15 C-14.33 14.34 -14.66 13.68 -15 13 C-12.03 13.33 -9.06 13.66 -6 14 C-6 12.02 -6 10.04 -6 8 C-5.01 8 -4.02 8 -3 8 C-2.690625 7.05125 -2.38125 6.1025 -2.0625 5.125 C-1 2 -1 2 0 0 Z \",fill:\"#AC9269\",transform:\"translate(353,568)\"})),_path340||(_path340=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.79622772 0.00141495 1.59245544 0.0028299 2.41281128 0.00428772 C4.9601413 0.0098928 7.50738397 0.02244611 10.0546875 0.03515625 C11.77994665 0.0401706 13.50520717 0.04473362 15.23046875 0.04882812 C19.46357541 0.05986388 23.69661664 0.07713189 27.9296875 0.09765625 C27.9296875 0.42765625 27.9296875 0.75765625 27.9296875 1.09765625 C23.71835197 2.12126934 19.76778886 2.21254908 15.44140625 2.1953125 C14.73820755 2.19389755 14.03500885 2.1924826 13.3105011 2.19102478 C11.07935206 2.18545734 8.84830586 2.172911 6.6171875 2.16015625 C5.09830875 2.15513704 3.57942841 2.15057487 2.06054688 2.14648438 C-1.64977262 2.13549861 -5.36003251 2.11825659 -9.0703125 2.09765625 C-9.4003125 4.07765625 -9.7303125 6.05765625 -10.0703125 8.09765625 C-10.7303125 7.10765625 -11.3903125 6.11765625 -12.0703125 5.09765625 C-9.39750136 -0.82071127 -5.98616825 -0.03975678 0 0 Z \",fill:\"#120D08\",transform:\"translate(273.0703125,483.90234375)\"})),_path341||(_path341=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.969375 0.28875 -1.93875 0.5775 -2.9375 0.875 C-6.10664203 1.64214682 -6.10664203 1.64214682 -7 4 C-6.01 4.33 -5.02 4.66 -4 5 C-4 6.98 -4 8.96 -4 11 C-7.375 10.6875 -7.375 10.6875 -11 10 C-13 7 -13 7 -12.875 4.4375 C-12 2 -12 2 -10.3125 0.75 C-3.14754098 -1.57377049 -3.14754098 -1.57377049 0 0 Z \",fill:\"#B18F57\",transform:\"translate(588,237)\"})),_path342||(_path342=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.43280987 1.89977566 7.23930149 4.32646327 9.25 8.75 C9.4975 9.4925 9.745 10.235 10 11 C9.01 11.66 8.02 12.32 7 13 C7 11.68 7 10.36 7 9 C5.72125 9.020625 4.4425 9.04125 3.125 9.0625 C-0.75 9.125 -0.75 9.125 -3 8 C-3.625 5.4375 -3.625 5.4375 -4 3 C-3.01 3.33 -2.02 3.66 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#3B3223\",transform:\"translate(649,550)\"})),_path343||(_path343=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33872513 1.41538717 0.67074624 2.83237963 1 4.25 C1.185625 5.03890625 1.37125 5.8278125 1.5625 6.640625 C2 9 2 9 2 13 C1.34 12.67 0.68 12.34 0 12 C0 11.34 0 10.68 0 10 C-0.66 10 -1.32 10 -2 10 C-2 7.36 -2 4.72 -2 2 C-2.54269531 2.5053125 -3.08539062 3.010625 -3.64453125 3.53125 C-4.35996094 4.1809375 -5.07539062 4.830625 -5.8125 5.5 C-6.87404297 6.47453125 -6.87404297 6.47453125 -7.95703125 7.46875 C-10 9 -10 9 -13 9 C-13.375 6.75 -13.375 6.75 -13 4 C-8.75421472 0.16843768 -5.62304969 -0.44984398 0 0 Z \",fill:\"#32281D\",transform:\"translate(685,504)\"})),_path344||(_path344=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.02578125 0.62648438 1.0515625 1.25296875 1.078125 1.8984375 C1.13484375 2.71570313 1.1915625 3.53296875 1.25 4.375 C1.29640625 5.18710937 1.3428125 5.99921875 1.390625 6.8359375 C1.78163979 9.13667221 1.78163979 9.13667221 3.78125 10.15625 C4.5134375 10.4346875 5.245625 10.713125 6 11 C8.66666667 12.33333333 11.33333333 13.66666667 14 15 C14 15.33 14 15.66 14 16 C10.04 16.495 10.04 16.495 6 17 C7.32 18.32 8.64 19.64 10 21 C6.53122824 21 4.17745463 20.38150201 1 19 C0.125 16.875 0.125 16.875 0 15 C0.66 14.67 1.32 14.34 2 14 C2.33 13.01 2.66 12.02 3 11 C2.01 11 1.02 11 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#AB9166\",transform:\"translate(818,423)\"})),_path345||(_path345=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C18 0 18 0 21 2 C21 2.99 21 3.98 21 5 C19.68 4.34 18.36 3.68 17 3 C11.72 2.34 6.44 1.68 1 1 C1 14.2 1 27.4 1 41 C0.67 41 0.34 41 0 41 C0 27.47 0 13.94 0 0 Z \",fill:\"#927E60\",transform:\"translate(675,419)\"})),_path346||(_path346=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.395 0.99 10.395 0.99 21 2 C21 2.66 21 3.32 21 4 C25.62 4 30.24 4 35 4 C35 4.66 35 5.32 35 6 C31.54173658 6.05789006 28.08359707 6.09355821 24.625 6.125 C23.64015625 6.14175781 22.6553125 6.15851563 21.640625 6.17578125 C20.69960938 6.18222656 19.75859375 6.18867188 18.7890625 6.1953125 C17.48509521 6.21102295 17.48509521 6.21102295 16.15478516 6.22705078 C14 6 14 6 12 4 C10.00511766 3.63729412 8.00401011 3.30830925 6 3 C3.98910922 2.36694179 1.98536627 1.70905938 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#C6A36E\",transform:\"translate(292,384)\"})),_path347||(_path347=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.97 1 5.94 1 9 C26.245 8.505 26.245 8.505 52 8 C51.505 7.01 51.505 7.01 51 6 C55.75 6.875 55.75 6.875 58 8 C58 8.66 58 9.32 58 10 C38.86 10 19.72 10 0 10 C0 6.7 0 3.4 0 0 Z \",fill:\"#3B2E1A\",transform:\"translate(314,376)\"})),_path348||(_path348=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.66 2.64 1.32 4 2 C4 2.99 4 3.98 4 5 C4.66 5 5.32 5 6 5 C6.66 6.65 7.32 8.3 8 10 C8.99 10 9.98 10 11 10 C10.01 8.35 9.02 6.7 8 5 C9.32 3.68 10.64 2.36 12 1 C12 4.3 12 7.6 12 11 C10.24908981 10.91245449 8.49920449 10.80426627 6.75 10.6875 C5.77546875 10.62949219 4.8009375 10.57148438 3.796875 10.51171875 C0.74658389 9.95363476 -0.70711276 9.03630224 -3 7 C-2.34 6.67 -1.68 6.34 -1 6 C-0.34227572 2.97065509 -0.34227572 2.97065509 0 0 Z \",fill:\"#C5A46E\",transform:\"translate(550,335)\"})),_path349||(_path349=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.4389165 -0.21755666 9.87080814 -0.10428384 15 2 C13.68 2.33 12.36 2.66 11 3 C11 3.99 11 4.98 11 6 C4.07 5.505 4.07 5.505 -3 5 C-3 5.66 -3 6.32 -3 7 C-1.68 7.33 -0.36 7.66 1 8 C-3.29 8 -7.58 8 -12 8 C-8.27567877 4.27567877 -6.22079116 4.07492548 -1.10546875 3.90234375 C0.33892578 3.91974609 0.33892578 3.91974609 1.8125 3.9375 C2.78832031 3.94652344 3.76414062 3.95554687 4.76953125 3.96484375 C5.87361328 3.98224609 5.87361328 3.98224609 7 4 C7 3.34 7 2.68 7 2 C4.69 1.67 2.38 1.34 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#8D7753\",transform:\"translate(527,326)\"})),_path350||(_path350=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.05649296 0.30308081 4.55309673 0.47364727 6.58203125 2.86328125 C10.02978259 9.7259482 10.58929493 15.37845221 10 23 C9.67 23 9.34 23 9 23 C8.67 18.38 8.34 13.76 8 9 C5.03 8.67 2.06 8.34 -1 8 C-2 4 -2 4 -1.0625 1.75 C-0.711875 1.1725 -0.36125 0.595 0 0 Z \",fill:\"#B0905E\",transform:\"translate(721,309)\"})),_path351||(_path351=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 0.33 8 0.66 8 1 C6.35 1.33 4.7 1.66 3 2 C3.309375 2.99 3.61875 3.98 3.9375 5 C4.74662918 7.7920655 5.23926841 10.48676937 5.5625 13.375 C5.59793141 16.8036937 5.59793141 16.8036937 7 18 C9.67058851 18.14115161 12.32432238 18.04247107 15 18 C15 18.99 15 19.98 15 21 C11.7 21 8.4 21 5 21 C5 20.34 5 19.68 5 19 C4.34 19 3.68 19 3 19 C1.54144503 16.08289006 1.68750029 13.30692468 1.5 10.0625 C1.21849611 4.94190165 1.21849611 4.94190165 0 0 Z \",fill:\"#A38B63\",transform:\"translate(443,599)\"})),_path352||(_path352=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.4391134 0.28359887 2.87625518 0.57721399 4.3125 0.875 C5.11300781 1.03742187 5.91351563 1.19984375 6.73828125 1.3671875 C9 2 9 2 12 4 C12.40843923 6.71203652 12.13336867 9.2437142 12 12 C9.36 11.34 6.72 10.68 4 10 C4 7.69 4 5.38 4 3 C2.68 3.33 1.36 3.66 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#B89C6E\",transform:\"translate(364,574)\"})),_path353||(_path353=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.93619813 3.15506142 1.1057123 5.96586502 1.0625 9.25 C1.05347656 10.14203125 1.04445313 11.0340625 1.03515625 11.953125 C1.02355469 12.62859375 1.01195312 13.3040625 1 14 C8.08490258 12.80984838 13.58152733 11.09769914 19.75 7.3125 C22 6 22 6 24 6 C24 6.66 24 7.32 24 8 C22.03852126 9.38938077 20.03833424 10.7260411 18 12 C18.66 12.66 19.32 13.32 20 14 C13.39081775 15.07591339 6.69378337 15.78657502 0 16 C-1 15 -1 15 -1.1328125 12.12890625 C-1.13023437 10.95199219 -1.12765625 9.77507812 -1.125 8.5625 C-1.12757813 7.38816406 -1.13015625 6.21382813 -1.1328125 5.00390625 C-1 2 -1 2 0 0 Z \",fill:\"#6A5230\",transform:\"translate(402,332)\"})),_path354||(_path354=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.61958899 1.30636575 6.42515311 2.88662998 9.5 5.1875 C15.36892241 9.40745025 21.58527856 12.69209506 28 16 C28 16.66 28 17.32 28 18 C18.07967076 16.453282 8.45723975 9.45285137 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#7D6B4D\",transform:\"translate(455,324)\"})),_path355||(_path355=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2.34342449 2.33076989 2.67619874 3.66431979 3 5 C3.66 5.66 4.32 6.32 5 7 C3.865625 7.28875 2.73125 7.5775 1.5625 7.875 C0.386875 8.24625 -0.78875 8.6175 -2 9 C-2.33 9.66 -2.66 10.32 -3 11 C-1.68 11.33 -0.36 11.66 1 12 C-1.25 12.75 -1.25 12.75 -4 13 C-6.375 11.375 -6.375 11.375 -8 9 C-7.75 6.25 -7.75 6.25 -7 4 C-3.25 2.875 -3.25 2.875 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#A98751\",transform:\"translate(687,290)\"})),_path356||(_path356=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.87467873 1.25665256 6.10609704 2.31187319 8 6 C8.1875 9.75 8.1875 9.75 8 13 C3.57165324 11.60823388 0.96898547 9.56278256 -2 6 C-2 4.68 -2 3.36 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#B69667\",transform:\"translate(603,271)\"})),_path357||(_path357=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8.33 5.28 8.66 10.56 9 16 C8.67 16 8.34 16 8 16 C7.67 24.91 7.34 33.82 7 43 C6.67 43 6.34 43 6 43 C5.97494385 41.97116699 5.9498877 40.94233398 5.92407227 39.88232422 C5.82953948 36.04675933 5.7294328 32.21135629 5.62768555 28.37597656 C5.58450951 26.71943969 5.54282303 25.06286328 5.50268555 23.40625 C5.4445607 21.0181082 5.38099052 18.6301623 5.31640625 16.2421875 C5.29969376 15.50757294 5.28298126 14.77295837 5.26576233 14.01608276 C5.14949802 9.93406385 4.94332971 5.98126726 4 2 C2.04836882 0.56362302 2.04836882 0.56362302 0 0 Z \",fill:\"#877353\",transform:\"translate(551,192)\"})),_path358||(_path358=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-4.92984325 2.03993514 -8.57960425 3.40652968 -14 3 C-14 3.66 -14 4.32 -14 5 C-11.69 5.33 -9.38 5.66 -7 6 C-10.16240582 8.10827055 -11.50657469 8.33817465 -15.1875 8.625 C-16.08855469 8.69976563 -16.98960937 8.77453125 -17.91796875 8.8515625 C-18.60503906 8.90054688 -19.29210937 8.94953125 -20 9 C-20 8.01 -20 7.02 -20 6 C-22.64 5.67 -25.28 5.34 -28 5 C-28 4.67 -28 4.34 -28 4 C-26.9378125 3.80664062 -25.875625 3.61328125 -24.78125 3.4140625 C-23.35406953 3.15156926 -21.92699262 2.88851252 -20.5 2.625 C-19.76620117 2.4899707 -19.03240234 2.35494141 -18.27636719 2.21582031 C-14.55659592 1.52011898 -10.8982179 0.76648819 -7.25 -0.25 C-4.07745723 -0.98212525 -2.97626871 -0.90582091 0 0 Z \",fill:\"#A08457\",transform:\"translate(532,560)\"})),_path359||(_path359=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C0.68 1.33 -0.64 1.66 -2 2 C-2 2.99 -2 3.98 -2 5 C-1.01 5.66 -0.02 6.32 1 7 C-6.4654395 9.77476512 -13.06714481 10.36801906 -21 10 C-21 9.34 -21 8.68 -21 8 C-19.86820313 7.74605469 -18.73640625 7.49210937 -17.5703125 7.23046875 C-16.08839517 6.88343748 -14.60663214 6.53574687 -13.125 6.1875 C-12.37863281 6.02185547 -11.63226562 5.85621094 -10.86328125 5.68554688 C-6.11148872 4.63150798 -6.11148872 4.63150798 -3 1 C-2.01 0.67 -1.02 0.34 0 0 Z \",fill:\"#412F17\",transform:\"translate(577,368)\"})),_path360||(_path360=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C3 8 2 16 1 24 C0.01 24 -0.98 24 -2 24 C-2.26305952 15.7574683 -1.60614551 8.08808989 0 0 Z \",fill:\"#D0AB71\",transform:\"translate(312,360)\"})),_path361||(_path361=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.35439668 2.70879335 1.06501451 5.00933268 1 8 C2.65 8.33 4.3 8.66 6 9 C1.22381734 12.89635954 -0.80401645 14.13469529 -7 14 C-6.44010697 10.00987629 -5.24330232 7.4744948 -2.9375 4.1875 C-2.38964844 3.39730469 -1.84179688 2.60710937 -1.27734375 1.79296875 C-0.64505859 0.90544922 -0.64505859 0.90544922 0 0 Z \",fill:\"#C8A86F\",transform:\"translate(271,335)\"})),_path362||(_path362=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 1.65 3 3.3 3 5 C4.32 5 5.64 5 7 5 C7.433125 5.66 7.86625 6.32 8.3125 7 C9.9267354 9.36851029 9.9267354 9.36851029 13.3125 9.4375 C17.1887846 8.97760183 19.62014431 7.88643108 23 6 C23.66 6 24.32 6 25 6 C25 6.66 25 7.32 25 8 C21.33367864 11.22826738 18.16289083 13 13.25 13 C10.14483279 12.04456394 8.24461383 11.33439838 6 9 C6 8.01 6 7.02 6 6 C5.34 6 4.68 6 4 6 C3.67 6.66 3.34 7.32 3 8 C2.67 7.01 2.34 6.02 2 5 C1.01 5 0.02 5 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#413526\",transform:\"translate(581,587)\"})),_path363||(_path363=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33719047 2.56204544 1.66987153 5.12454318 2 7.6875 C2.09539063 8.40873047 2.19078125 9.12996094 2.2890625 9.87304688 C2.76683735 13.60992871 3.11919794 17.22291531 3 21 C1.02 21 -0.96 21 -3 21 C-2.88588196 18.24915453 -2.75914051 15.49988053 -2.625 12.75 C-2.5940625 11.97269531 -2.563125 11.19539063 -2.53125 10.39453125 C-2.16618114 3.27568856 -2.16618114 3.27568856 0 0 Z \",fill:\"#DDBB84\",transform:\"translate(563,440)\"})),_path364||(_path364=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C1.67 2.33 1.34 2.66 1 3 C7.93 3.33 14.86 3.66 22 4 C22 4.33 22 4.66 22 5 C10.78 5 -0.44 5 -12 5 C-12 4.67 -12 4.34 -12 4 C-18.93 3.505 -18.93 3.505 -26 3 C-26 2.67 -26 2.34 -26 2 C-17.42 2 -8.84 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#B2905C\",transform:\"translate(378,385)\"})),_path365||(_path365=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2.40729228 3.32156597 2.74438677 5.6568787 3 8 C3.66 8 4.32 8 5 8 C5 6.02 5 4.04 5 2 C5.33 2 5.66 2 6 2 C6.02712066 3.43739513 6.04645067 4.87493863 6.0625 6.3125 C6.07410156 7.11300781 6.08570313 7.91351563 6.09765625 8.73828125 C6 11 6 11 5 14 C4.34 14 3.68 14 3 14 C2.773125 14.61875 2.54625 15.2375 2.3125 15.875 C0.62070165 18.61410209 -0.99244161 19.05024472 -4 20 C-3.566875 18.9790625 -3.566875 18.9790625 -3.125 17.9375 C-0.74130111 11.71339735 0.23185869 6.60797258 0 0 Z \",fill:\"#8D6F42\",transform:\"translate(592,242)\"})),_path366||(_path366=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.5775 0.226875 1.155 0.45375 1.75 0.6875 C1.20730469 1.13480469 0.66460938 1.58210937 0.10546875 2.04296875 C-3.73879484 5.29154465 -7.01332678 8.07436148 -9.25 12.6875 C-9.58 12.0275 -9.91 11.3675 -10.25 10.6875 C-10.80429687 11.0484375 -11.35859375 11.409375 -11.9296875 11.78125 C-12.65414062 12.2453125 -13.37859375 12.709375 -14.125 13.1875 C-14.84429688 13.6515625 -15.56359375 14.115625 -16.3046875 14.59375 C-18.25 15.6875 -18.25 15.6875 -20.25 15.6875 C-18.91051893 11.6690568 -16.21976016 10.11088427 -12.9375 7.6875 C-12.35548828 7.24921875 -11.77347656 6.8109375 -11.17382812 6.359375 C-9.53746333 5.12885832 -7.89392482 3.9078984 -6.25 2.6875 C-5.17685547 1.759375 -5.17685547 1.759375 -4.08203125 0.8125 C-2.25 -0.3125 -2.25 -0.3125 0 0 Z \",fill:\"#433623\",transform:\"translate(654.25,563.3125)\"})),_path367||(_path367=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.58265625 0.18175781 1.1653125 0.36351562 1.765625 0.55078125 C8.45691206 2.60235511 15.19880965 4.35228894 22 6 C22 6.33 22 6.66 22 7 C20.02 7.33 18.04 7.66 16 8 C16 7.34 16 6.68 16 6 C9.07 5.505 9.07 5.505 2 5 C2 5.66 2 6.32 2 7 C-3.76044212 6.39363767 -8.72014369 4.24341721 -14 2 C-12 1 -12 1 -9.875 1.4375 C-6.18132067 2.16017639 -2.76206303 2.06376378 1 2 C0.67 1.34 0.34 0.68 0 0 Z \",fill:\"#84673B\",transform:\"translate(426,556)\"})),_path368||(_path368=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C2.32 3 3.64 3 5 3 C2.89285714 8.99725275 2.89285714 8.99725275 0 11 C-2.1875 10.6875 -2.1875 10.6875 -4 10 C-4 9.01 -4 8.02 -4 7 C-5.65 8.32 -7.3 9.64 -9 11 C-9.66 10.67 -10.32 10.34 -11 10 C-10.54109375 9.61328125 -10.0821875 9.2265625 -9.609375 8.828125 C-6.274919 5.99804049 -3.03498697 3.15638645 0 0 Z \",fill:\"#C5A36C\",transform:\"translate(603,515)\"})),_path369||(_path369=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C12.54 0.66 25.08 1.32 38 2 C38 4.64 38 7.28 38 10 C37.67 10 37.34 10 37 10 C37 7.69 37 5.38 37 3 C35.7625 3.165 34.525 3.33 33.25 3.5 C21.96149981 4.71136316 11.1718675 3.58787965 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#6F5835\",transform:\"translate(516,194)\"})),_path370||(_path370=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.54990817 5.63655874 0.18170608 8.49258305 -3 13 C-5.25 13.9375 -5.25 13.9375 -7 14 C-6.01 15.32 -5.02 16.64 -4 18 C-7.48539917 17.35455571 -10.02819057 15.89865603 -13 14 C-12.34 13.67 -11.68 13.34 -11 13 C-11.33 10.03 -11.66 7.06 -12 4 C-11.34 4 -10.68 4 -10 4 C-9.731875 5.134375 -9.46375 6.26875 -9.1875 7.4375 C-8.5996875 9.2009375 -8.5996875 9.2009375 -8 11 C-7.01 11.33 -6.02 11.66 -5 12 C-4.896875 11.21625 -4.79375 10.4325 -4.6875 9.625 C-4 7 -4 7 -1 5 C-0.27034634 2.43717258 -0.27034634 2.43717258 0 0 Z \",fill:\"#463A20\",transform:\"translate(361,574)\"})),_path371||(_path371=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5 0.66 5 1.32 5 2 C4.34 2 3.68 2 3 2 C2.25571021 6.62250843 1.8889069 11.02333906 1.9375 15.703125 C1.94523438 16.9303125 1.95296875 18.1575 1.9609375 19.421875 C1.97382812 20.68515625 1.98671875 21.9484375 2 23.25 C2.0254637 25.77599923 2.04651217 28.30204802 2.0625 30.828125 C2.07410156 31.9409082 2.08570313 33.05369141 2.09765625 34.20019531 C2 37 2 37 1 40 C2.65 40 4.3 40 6 40 C6 40.66 6 41.32 6 42 C3.69 42 1.38 42 -1 42 C-0.67 28.14 -0.34 14.28 0 0 Z \",fill:\"#D8BB87\",transform:\"translate(716,420)\"})),_path372||(_path372=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.68140327 0.00033989 1.68140327 0.00033989 3.39677429 0.00068665 C4.60622208 0.0161705 5.81566986 0.03165436 7.06176758 0.04760742 C8.30050125 0.05185226 9.53923492 0.05609711 10.81550598 0.06047058 C14.10528884 0.07442885 17.39463086 0.10137404 20.68426514 0.13458252 C24.04246629 0.16529685 27.40073201 0.17897878 30.7590332 0.1940918 C37.34579456 0.22720258 43.93226063 0.2774336 50.51879883 0.34057617 C50.51879883 0.67057617 50.51879883 1.00057617 50.51879883 1.34057617 C49.92633362 1.35088364 49.33386841 1.3611911 48.72344971 1.37181091 C42.55909376 1.47996075 36.39488148 1.59455196 30.23071289 1.71289062 C27.92996221 1.75621224 25.62917995 1.7978893 23.32836914 1.83789062 C20.02195722 1.89566012 16.71570383 1.95933567 13.40942383 2.02416992 C12.38012756 2.04088242 11.3508313 2.05759491 10.29034424 2.07481384 C9.32965027 2.09475906 8.3689563 2.11470428 7.37915039 2.13525391 C6.11340179 2.15857033 6.11340179 2.15857033 4.82208252 2.18235779 C2.59755869 2.33516596 0.67246513 2.79276356 -1.48120117 3.34057617 C-3.8142105 3.37945966 -6.14829918 3.38543967 -8.48120117 3.34057617 C-5.92344594 0.07281482 -4.05139303 -0.02731276 0 0 Z \",fill:\"#C3A270\",transform:\"translate(597.481201171875,386.659423828125)\"})),_path373||(_path373=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.34 1 1.68 1 1 1 C1.103125 1.886875 1.20625 2.77375 1.3125 3.6875 C0.90156457 8.04341554 -0.74860528 9.21309024 -4 12 C-4.66 12.66 -5.32 13.32 -6 14 C-9.125 14.125 -9.125 14.125 -12 14 C-11.34 15.65 -10.68 17.3 -10 19 C-11.32 18.34 -12.64 17.68 -14 17 C-14 15.68 -14 14.36 -14 13 C-13.21625 12.9175 -12.4325 12.835 -11.625 12.75 C-8.89809093 12.28891703 -8.89809093 12.28891703 -7.875 10.1875 C-7.58625 9.465625 -7.2975 8.74375 -7 8 C-5.19913364 5.41614827 -3.27977393 3.17121326 -1 1 C-0.67 2.65 -0.34 4.3 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#433727\",transform:\"translate(286,511)\"})),_path374||(_path374=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.23771118 1.08704224 -0.23771118 1.08704224 -0.48022461 2.19604492 C-0.96098223 4.78951662 -1.19757322 7.2319784 -1.31640625 9.86328125 C-1.35830078 10.74951172 -1.40019531 11.63574219 -1.44335938 12.54882812 C-1.50233398 13.9168457 -1.50233398 13.9168457 -1.5625 15.3125 C-1.60568359 16.24384766 -1.64886719 17.17519531 -1.69335938 18.13476562 C-1.79897225 20.42304454 -1.90107752 22.71142372 -2 25 C-2.33 25 -2.66 25 -3 25 C-3 19.06 -3 13.12 -3 7 C-4.32 7 -5.64 7 -7 7 C-7.89405214 11.98114761 -8.47462276 16.9697924 -9 22 C-9.33 22 -9.66 22 -10 22 C-10.41621519 13.47529626 -9.79113638 8.18670456 -5 1 C-2 0 -2 0 0 0 Z \",fill:\"#A28960\",transform:\"translate(606,423)\"})),_path375||(_path375=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.33 0 0.66 0 1 C-1.58086048 1.36504603 -3.16483907 1.71660506 -4.75 2.0625 C-5.63171875 2.25972656 -6.5134375 2.45695312 -7.421875 2.66015625 C-9.98679028 2.99825872 -11.57091639 2.81158635 -14 2 C-14 2.66 -14 3.32 -14 4 C-13.01 4 -12.02 4 -11 4 C-11 4.66 -11 5.32 -11 6 C-15.55744681 8.15212766 -15.55744681 8.15212766 -18 7.3125 C-18.66 7.209375 -19.32 7.10625 -20 7 C-22.77122275 9.35426499 -22.77122275 9.35426499 -25 12 C-24.52653165 7.73878485 -22.03860562 5.81626862 -19 3 C-18.34 2.34 -17.68 1.68 -17 1 C-11.43717452 -0.42636551 -5.69972591 -0.09127675 0 0 Z \",fill:\"#8E6E3B\",transform:\"translate(411,508)\"})),_path376||(_path376=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8.33 1.32 8.66 2.64 9 4 C14.94 4 20.88 4 27 4 C27 4.33 27 4.66 27 5 C17.98865693 5.6331684 9.04028922 6.1723784 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#352918\",transform:\"translate(445,346)\"})),_path377||(_path377=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-4.94 8.445 -4.94 8.445 -11 14 C-8.31907309 16.68092691 -6.60832637 16.38670257 -2.875 16.625 C-1.77929688 16.69976562 -0.68359375 16.77453125 0.4453125 16.8515625 C1.28835938 16.90054687 2.13140625 16.94953125 3 17 C3 17.33 3 17.66 3 18 C-2.28 18.33 -7.56 18.66 -13 19 C-13 18.01 -13 17.02 -13 16 C-14.98 16.66 -16.96 17.32 -19 18 C-15.87608257 14.77531104 -12.63668034 11.70607022 -9.3125 8.6875 C-8.54550781 7.99011719 -7.77851562 7.29273438 -6.98828125 6.57421875 C-5 5 -5 5 -3 5 C-2.690625 4.360625 -2.38125 3.72125 -2.0625 3.0625 C-1 1 -1 1 0 0 Z \",fill:\"#180C01\",transform:\"translate(525,317)\"})),_path378||(_path378=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.66 0.99 3.32 1.98 4 3 C5.32 2.34 6.64 1.68 8 1 C10 3 10 3 10.3125 6.375 C9.99332949 10.07737797 9.63846047 11.46301878 7 14 C6.34 14 5.68 14 5 14 C4.16235732 12.04350603 3.33000941 10.08474444 2.5 8.125 C2.0359375 7.03445312 1.571875 5.94390625 1.09375 4.8203125 C0 2 0 2 0 0 Z \",fill:\"#B79661\",transform:\"translate(391,234)\"})),_path379||(_path379=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 5.61 1 11.22 1 17 C2.65 16.01 4.3 15.02 6 14 C6.66 14.33 7.32 14.66 8 15 C2.375 20 2.375 20 -1 20 C-1 24.95 -1 29.9 -1 35 C-1.33 35 -1.66 35 -2 35 C-2.05899621 31.22923455 -2.09392568 27.45859074 -2.125 23.6875 C-2.14175781 22.63498047 -2.15851563 21.58246094 -2.17578125 20.49804688 C-2.21920196 13.44218197 -1.5223667 6.89012527 0 0 Z \",fill:\"#2B1F11\",transform:\"translate(414,200)\"})),_path380||(_path380=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 0 7.26 0 11 0 C10.50769231 5.53846154 10.50769231 5.53846154 7.9375 7.875 C6.9784375 8.431875 6.9784375 8.431875 6 9 C5.67 8.01 5.34 7.02 5 6 C3.02 6.99 3.02 6.99 1 8 C-0.35439668 5.29120665 -0.06501451 2.99066732 0 0 Z \",fill:\"#E9C799\",transform:\"translate(417,202)\"})),_path381||(_path381=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.5624827 -0.02913821 7.12493454 -0.04684529 10.6875 -0.0625 C12.19860352 -0.07506836 12.19860352 -0.07506836 13.74023438 -0.08789062 C14.71669922 -0.09111328 15.69316406 -0.09433594 16.69921875 -0.09765625 C18.04246216 -0.10551147 18.04246216 -0.10551147 19.4128418 -0.11352539 C22.03641759 0.00159802 24.44293053 0.41765715 27 1 C27 1.66 27 2.32 27 3 C19.08 3 11.16 3 3 3 C3 2.34 3 1.68 3 1 C2.01 0.67 1.02 0.34 0 0 Z \",fill:\"#B1905B\",transform:\"translate(365,488)\"})),_path382||(_path382=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 3.96 -0.66 7.92 -1 12 C-5 11 -5 11 -8 9 C-8.5 6.0625 -8.5 6.0625 -8 3 C-5.14925356 0.68858396 -3.6860549 0 0 0 Z \",fill:\"#DBBA85\",transform:\"translate(819,447)\"})),_path383||(_path383=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.80178062 3.2334275 3.74124175 6.10448769 4.6875 10.25 C5.06455078 11.86648438 5.06455078 11.86648438 5.44921875 13.515625 C5.63097656 14.33546875 5.81273437 15.1553125 6 16 C5.34 16 4.68 16 4 16 C3.67 14.68 3.34 13.36 3 12 C1.79438816 12.98267859 1.79438816 12.98267859 1.90234375 14.84765625 C1.91394531 15.57855469 1.92554688 16.30945313 1.9375 17.0625 C1.958125 18.361875 1.97875 19.66125 2 21 C0 20 0 20 -1.2890625 16.47265625 C-1.74228263 15.00502283 -2.18724847 13.53482128 -2.625 12.0625 C-2.85445313 11.32064453 -3.08390625 10.57878906 -3.3203125 9.81445312 C-5 4.30047898 -5 4.30047898 -5 2 C-4.34 2 -3.68 2 -3 2 C-2.34 3.65 -1.68 5.3 -1 7 C-0.34 6.67 0.32 6.34 1 6 C0.67 4.02 0.34 2.04 0 0 Z \",fill:\"#B3986C\",transform:\"translate(291,424)\"})),_path384||(_path384=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.89156462 3.3285079 1.34485658 6.58154588 1.71875 10 C1.94336416 12.01304162 1.94336416 12.01304162 2.62109375 13.921875 C3.13048526 16.7156511 2.44431198 18.56929157 1.5625 21.25 C1.27503906 22.14203125 0.98757813 23.0340625 0.69140625 23.953125 C0.46324219 24.62859375 0.23507812 25.3040625 0 26 C-0.33 26 -0.66 26 -1 26 C-1.3396019 24.12612523 -1.67138691 22.25083303 -2 20.375 C-2.185625 19.33085937 -2.37125 18.28671875 -2.5625 17.2109375 C-3.48476577 10.44216555 -2.56860692 6.20746672 0 0 Z \",fill:\"#A98B5E\",transform:\"translate(318,334)\"})),_path385||(_path385=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 4.62 2 9.24 2 14 C1.34 14 0.68 14 0 14 C0 15.98 0 17.96 0 20 C-0.99 20.33 -1.98 20.66 -3 21 C-3.33 19.35 -3.66 17.7 -4 16 C-3.67 16 -3.34 16 -3 16 C-2.92652344 14.64455078 -2.92652344 14.64455078 -2.8515625 13.26171875 C-2.77679687 12.08222656 -2.70203125 10.90273438 -2.625 9.6875 C-2.55539062 8.51574219 -2.48578125 7.34398437 -2.4140625 6.13671875 C-2 3 -2 3 0 0 Z \",fill:\"#2D2113\",transform:\"translate(654,304)\"})),_path386||(_path386=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-0.639375 2.598125 -1.27875 3.19625 -1.9375 3.8125 C-4.25174456 6.26700181 -4.63391473 7.70523261 -5 11 C-6.134375 11.12375 -7.26875 11.2475 -8.4375 11.375 C-10.2009375 11.684375 -10.2009375 11.684375 -12 12 C-12.33 12.66 -12.66 13.32 -13 14 C-13.33 13.01 -13.66 12.02 -14 11 C-12.92578125 9.0625 -12.92578125 9.0625 -11.3125 7 C-10.79300781 6.319375 -10.27351562 5.63875 -9.73828125 4.9375 C-6.4795691 1.30531746 -5.02093778 0 0 0 Z \",fill:\"#D1AE78\",transform:\"translate(589,213)\"})),_path387||(_path387=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C27 3 27 3 25.04223633 3.37231445 C23.94818481 3.36784302 23.94818481 3.36784302 22.83203125 3.36328125 C22.02056641 3.36263672 21.20910156 3.36199219 20.37304688 3.36132812 C19.10557617 3.3371582 19.10557617 3.3371582 17.8125 3.3125 C16.98685547 3.31572266 16.16121094 3.31894531 15.31054688 3.32226562 C9.89717815 3.27534123 5.19918823 2.50518598 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#6C5736\",transform:\"translate(528,191)\"})),_path388||(_path388=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.12161334 2.12161334 2.92986249 3.7733159 4.125 6.5 C4.47820312 7.2940625 4.83140625 8.088125 5.1953125 8.90625 C6 11 6 11 6 13 C3.03 13 0.06 13 -3 13 C-3.33 10.69 -3.66 8.38 -4 6 C-3.34 6 -2.68 6 -2 6 C-1.67 5.01 -1.34 4.02 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#BA9F73\",transform:\"translate(231,449)\"})),_path389||(_path389=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.66 2.97 5.32 5.94 6 9 C5.34 9 4.68 9 4 9 C4 11.97 4 14.94 4 18 C0.76169533 14.76169533 -0.02396986 13.39213561 -1 9 C-0.87094278 5.96219147 -0.49312338 2.99872325 0 0 Z \",fill:\"#C2A575\",transform:\"translate(344,419)\"})),_path390||(_path390=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.49644963 -0.31785906 5.397402 -0.39644605 8.375 1.5625 C10.54455002 4.81682503 10.29451507 7.17130414 10 11 C9.01 11.33 8.02 11.66 7 12 C6.01 11.34 5.02 10.68 4 10 C3.8125 6.875 3.8125 6.875 4 4 C2.02 4 0.04 4 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#BB9A68\",transform:\"translate(515,343)\"})),_path391||(_path391=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.03738281 0.87140625 1.07476562 1.7428125 1.11328125 2.640625 C1.56185068 10.7676477 2.77325055 18.18217313 5 26 C5.33857181 27.33201277 5.67404628 28.66484343 6 30 C4.68 30 3.36 30 2 30 C2 29.34 2 28.68 2 28 C1.38125 27.731875 0.7625 27.46375 0.125 27.1875 C-2 26 -2 26 -4 23 C-2.68 23.33 -1.36 23.66 0 24 C0 23.01 0 22.02 0 21 C0 14 0 7 0 0 Z \",fill:\"#A2865C\",transform:\"translate(248,326)\"})),_path392||(_path392=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C0.97679687 0.69867188 0.95359375 1.39734375 0.9296875 2.1171875 C0.91164063 3.02726562 0.89359375 3.93734375 0.875 4.875 C0.85179687 5.77992188 0.82859375 6.68484375 0.8046875 7.6171875 C0.75675164 10.18806994 0.75675164 10.18806994 3 12 C2.34 12.66 1.68 13.32 1 14 C2.32 14.66 3.64 15.32 5 16 C5 16.66 5 17.32 5 18 C3.02 18.33 1.04 18.66 -1 19 C-1 18.01 -1 17.02 -1 16 C-4.65079826 14.38935371 -8.0507432 13.55105909 -12 13 C-12 12.67 -12 12.34 -12 12 C-10.741875 11.731875 -9.48375 11.46375 -8.1875 11.1875 C-5.85668365 10.58626469 -4.12119126 10.07427851 -2.0625 8.8125 C-0.42536335 6.01973748 -0.30001619 3.18017159 0 0 Z \",fill:\"#332615\",transform:\"translate(409,300)\"})),_path393||(_path393=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.54620938 0.3637442 3.68180393 0.57966691 5.265625 2.671875 C8.54945055 9.6043956 8.54945055 9.6043956 8 14 C5.42224929 13.624653 4.25918435 13.28516942 2.48046875 11.328125 C-1.04169526 5.66712423 -1.04169526 5.66712423 -0.8125 2 C-0.544375 1.34 -0.27625 0.68 0 0 Z \",fill:\"#C4A571\",transform:\"translate(627,302)\"})),_path394||(_path394=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.12375 0.61875 0.2475 1.2375 0.375 1.875 C0.87197356 4.19120832 0.87197356 4.19120832 3 6 C-2.61 6 -8.22 6 -14 6 C-14 5.34 -14 4.68 -14 4 C-9.02495953 0.75099398 -6.11774896 -0.49940808 0 0 Z \",fill:\"#9F7A43\",transform:\"translate(576,280)\"})),_path395||(_path395=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 0.33 17 0.66 17 1 C12.38 1.33 7.76 1.66 3 2 C1.36470754 12.35685222 0.48136302 22.53668795 0 33 C-0.33 33 -0.66 33 -1 33 C-1.02473064 28.78247482 -1.04287453 24.56498814 -1.05493164 20.34741211 C-1.05995842 18.91283432 -1.06678079 17.47826164 -1.07543945 16.04370117 C-1.08757752 13.98094418 -1.09324486 11.91825496 -1.09765625 9.85546875 C-1.10289307 8.61434326 -1.10812988 7.37321777 -1.11352539 6.09448242 C-1 3 -1 3 0 0 Z \",fill:\"#C3AD8A\",transform:\"translate(411,197)\"})),_path396||(_path396=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.70125 0.185625 1.4025 0.37125 2.125 0.5625 C5.34208401 1.05205626 7.81385148 0.55411279 11 0 C11.99 0.33 12.98 0.66 14 1 C14 1.66 14 2.32 14 3 C13.25234375 3.01417969 12.5046875 3.02835938 11.734375 3.04296875 C5.63068499 3.24353378 5.63068499 3.24353378 0.375 6 C-1.44382197 9.96833884 -1.81137698 13.67110159 -2 18 C-2.66 18 -3.32 18 -4 18 C-4.05406122 16.06280622 -4.09282025 14.12518079 -4.125 12.1875 C-4.14820313 11.10855469 -4.17140625 10.02960937 -4.1953125 8.91796875 C-4 6 -4 6 -2 3 C-1.34 3 -0.68 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#3D3120\",transform:\"translate(420,593)\"})),_path397||(_path397=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.33944736 0.28730055 4.6739143 0.61936779 7 1 C7 4 7 4 6 6 C5.93049459 7.54023996 5.91547643 9.08334988 5.9375 10.625 C5.94652344 11.44226563 5.95554687 12.25953125 5.96484375 13.1015625 C5.97644531 13.72804688 5.98804688 14.35453125 6 15 C4.4375 13.4375 4.4375 13.4375 3 11 C3.3125 7.25 3.3125 7.25 4 4 C1.36 4 -1.28 4 -4 4 C-4.33 6.64 -4.66 9.28 -5 12 C-5.66 12 -6.32 12 -7 12 C-8.125 10.25 -8.125 10.25 -9 8 C-8.5 5.9375 -8.5 5.9375 -7 4 C-3.9375 2.3125 -3.9375 2.3125 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#5C4A31\",transform:\"translate(574,581)\"})),_path398||(_path398=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.10633718 1.70828921 2.93801608 2.52148416 3.29296875 5.26171875 C3.25816406 6.06222656 3.22335937 6.86273438 3.1875 7.6875 C3.16042969 8.49574219 3.13335938 9.30398438 3.10546875 10.13671875 C3.05326172 11.05904297 3.05326172 11.05904297 3 12 C2.67 12 2.34 12 2 12 C1.67 9.69 1.34 7.38 1 5 C0.82984375 5.55429687 0.6596875 6.10859375 0.484375 6.6796875 C-1.51972556 12.67066895 -1.51972556 12.67066895 -4.1875 14.5 C-4.785625 14.665 -5.38375 14.83 -6 15 C-6 15.33 -6 15.66 -6 16 C-11.28 16.33 -16.56 16.66 -22 17 C-19.03222891 15.02148594 -17.54217187 14.58164628 -14.125 14 C-8.85789186 13.09617168 -8.85789186 13.09617168 -4 11 C-2.70957237 8.73398135 -2.70957237 8.73398135 -2 6 C-1.62875 4.906875 -1.2575 3.81375 -0.875 2.6875 C-0.58625 1.800625 -0.2975 0.91375 0 0 Z \",fill:\"#846538\",transform:\"translate(695,261)\"})),_path399||(_path399=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.556875 0.226875 1.11375 0.45375 1.6875 0.6875 C1.3575 1.3475 1.0275 2.0075 0.6875 2.6875 C1.3475 3.0175 2.0075 3.3475 2.6875 3.6875 C2.6875 5.9975 2.6875 8.3075 2.6875 10.6875 C2.3575 10.6875 2.0275 10.6875 1.6875 10.6875 C1.6875 8.7075 1.6875 6.7275 1.6875 4.6875 C-2.92051456 6.72359946 -5.85766454 9.05083109 -9.3125 12.6875 C-10.62425986 13.71563611 -11.9494893 14.72834432 -13.3125 15.6875 C-12.69972388 12.72574877 -12.05877478 11.30691217 -10.3125 8.6875 C-9.6525 8.6875 -8.9925 8.6875 -8.3125 8.6875 C-7.9825 7.6975 -7.6525 6.7075 -7.3125 5.6875 C-6.6525 5.0275 -5.9925 4.3675 -5.3125 3.6875 C-5.9725 3.3575 -6.6325 3.0275 -7.3125 2.6875 C-2.88173077 -0.38942308 -2.88173077 -0.38942308 0 0 Z \",fill:\"#513E22\",transform:\"translate(588.3125,207.3125)\"})),_path400||(_path400=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 1.98 1 3.96 1 6 C0.34 6 -0.32 6 -1 6 C-1.268125 6.53625 -1.53625 7.0725 -1.8125 7.625 C-3.20833333 10.41666667 -4.60416667 13.20833333 -6 16 C-6.66 16 -7.32 16 -8 16 C-8.33 17.32 -8.66 18.64 -9 20 C-10.30249153 16.40144968 -9.69931441 14.41900527 -8.25 10.9375 C-7.90453125 10.08027344 -7.5590625 9.22304688 -7.203125 8.33984375 C-6.02494041 6.04850423 -5.00154794 4.60650558 -3 3 C-2.34 3 -1.68 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#A58F67\",transform:\"translate(529,536)\"})),_path401||(_path401=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.875 0.3125 1.875 0.3125 4 1 C4.66 1.99 5.32 2.98 6 4 C6.66 3.34 7.32 2.68 8 2 C8.66 2.66 9.32 3.32 10 4 C9.625 7.125 9.625 7.125 9 10 C8.278125 9.154375 7.55625 8.30875 6.8125 7.4375 C4.30425708 4.75774742 4.30425708 4.75774742 1.5 4.875 C-1.70546977 6.3174614 -3.56390359 8.49979579 -6 11 C-6.99 11 -7.98 11 -9 11 C-7.8829081 7.98385187 -6.3874224 6.35491331 -3.9375 4.375 C-0.99175287 2.32880603 -0.99175287 2.32880603 0 0 Z \",fill:\"#A5885E\",transform:\"translate(289,518)\"})),_path402||(_path402=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C0.1875 3 0.1875 3 -2 5 C-2.99 5 -3.98 5 -5 5 C-5 6.32 -5 7.64 -5 9 C-9.22222222 13 -9.22222222 13 -12 13 C-11.88601335 14.62580966 -11.75844341 16.25067157 -11.625 17.875 C-11.55539062 18.77992188 -11.48578125 19.68484375 -11.4140625 20.6171875 C-11.20431868 23.17941903 -11.20431868 23.17941903 -9 25 C-12.875 24.125 -12.875 24.125 -14 23 C-14.68066177 19.06250091 -14.71769559 15.46717105 -12.94140625 11.8359375 C-9.41241975 6.88196729 -5.02307331 3.36571409 0 0 Z \",fill:\"#7A6036\",transform:\"translate(470,508)\"})),_path403||(_path403=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.93 0 13.86 0 21 0 C21 0.66 21 1.32 21 2 C23.64 2 26.28 2 29 2 C29 2.33 29 2.66 29 3 C25.10418244 3.02911003 21.208393 3.04683587 17.3125 3.0625 C16.20970703 3.07087891 15.10691406 3.07925781 13.97070312 3.08789062 C12.3706543 3.09272461 12.3706543 3.09272461 10.73828125 3.09765625 C9.75899658 3.10289307 8.77971191 3.10812988 7.77075195 3.11352539 C5.07530428 3.00308543 2.62454361 2.60534166 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#A0804A\",transform:\"translate(411,488)\"})),_path404||(_path404=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 4.29 0 8.58 0 13 C-2.29633824 9.55549263 -2.54016485 7.06187717 -3 3 C-4.93703061 8.81109182 -4.21715636 15.06636277 -3 21 C-3.66 20.67 -4.32 20.34 -5 20 C-5 19.34 -5 18.68 -5 18 C-5.66 18 -6.32 18 -7 18 C-7.10864945 15.93867858 -7.18588321 13.87568679 -7.25 11.8125 C-7.29640625 10.66394531 -7.3428125 9.51539063 -7.390625 8.33203125 C-6.82638474 3.51906187 -5.17281893 0 0 0 Z \",fill:\"#76603C\",transform:\"translate(382,339)\"})),_path405||(_path405=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.49886719 0.35191406 0.99773437 0.70382812 1.51171875 1.06640625 C8.0834982 5.58524203 14.93937662 9.31145178 22 13 C21.01 14.485 21.01 14.485 20 16 C1.33162612 5.99743918 1.33162612 5.99743918 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#36250E\",transform:\"translate(458,328)\"})),_path406||(_path406=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-1.22354694 8.98211624 -1.22354694 8.98211624 -4 12 C-4.66 12 -5.32 12 -6 12 C-6 12.66 -6 13.32 -6 14 C-7.65 14.66 -9.3 15.32 -11 16 C-10.34 15.01 -9.68 14.02 -9 13 C-9.99 12.67 -10.98 12.34 -12 12 C-12 11.34 -12 10.68 -12 10 C-10.02 9.34 -8.04 8.68 -6 8 C-6 7.34 -6 6.68 -6 6 C-4.34997172 4.64613064 -2.6825613 3.31321858 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#9B8359\",transform:\"translate(286,316)\"})),_path407||(_path407=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C1.99 3.33 2.98 3.66 4 4 C4.28875 4.7425 4.5775 5.485 4.875 6.25 C6.26975012 9.65938917 8.31495257 11.52693 11 14 C10.01 14.495 10.01 14.495 9 15 C8.54625 14.505 8.0925 14.01 7.625 13.5 C6.12364481 11.77390663 6.12364481 11.77390663 4 12 C3.67 12.66 3.34 13.32 3 14 C-1.91970564 10.39221586 -3.96940865 7.75334215 -6 2 C-4.68 2 -3.36 2 -2 2 C-2.33 3.32 -2.66 4.64 -3 6 C-2.34 6 -1.68 6 -1 6 C-0.01 7.485 -0.01 7.485 1 9 C1.33 7.68 1.66 6.36 2 5 C1.34 5 0.68 5 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#9E8254\",transform:\"translate(342,491)\"})),_path408||(_path408=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.66 2 2.32 2 3 2 C3.66 3.98 4.32 5.96 5 8 C4.01 8.33 3.02 8.66 2 9 C2.00523682 9.69561035 2.01047363 10.3912207 2.01586914 11.10791016 C2.03674337 14.28026413 2.04969332 17.45260361 2.0625 20.625 C2.07087891 21.71941406 2.07925781 22.81382812 2.08789062 23.94140625 C2.09111328 25.00488281 2.09433594 26.06835938 2.09765625 27.1640625 C2.10289307 28.13811035 2.10812988 29.1121582 2.11352539 30.11572266 C1.99414506 33.14875321 1.55866724 36.01915268 1 39 C-0.98 39.495 -0.98 39.495 -3 40 C-2.67 38.68 -2.34 37.36 -2 36 C-2 36.66 -2 37.32 -2 38 C-1.34 38 -0.68 38 0 38 C0 25.46 0 12.92 0 0 Z \",fill:\"#180D05\",transform:\"translate(733,424)\"})),_path409||(_path409=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-1.87237371 2.96345444 -3.7480299 3.92053102 -5.625 4.875 C-6.66914063 5.40867188 -7.71328125 5.94234375 -8.7890625 6.4921875 C-14.0162393 8.9467985 -18.20067217 10.27615847 -24 10 C-22.5299265 7.059853 -20.2177098 6.90003799 -17.265625 5.859375 C-14.3127357 4.73931354 -11.55708266 3.33007571 -8.76171875 1.8671875 C-5.59776171 0.30976297 -3.58863759 0 0 0 Z \",fill:\"#9B865F\",transform:\"translate(482,176)\"})),_path410||(_path410=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 1.32 2 2.64 2 4 C3.299375 4.0928125 3.299375 4.0928125 4.625 4.1875 C8.8093013 5.19483179 10.7858646 7.19617976 14 10 C15.66140763 10.67966676 17.32700041 11.34938905 19 12 C19.99 13.485 19.99 13.485 21 15 C20.34 15.66 19.68 16.32 19 17 C18.67 16.34 18.34 15.68 18 15 C17.360625 14.855625 16.72125 14.71125 16.0625 14.5625 C14 14 14 14 12 11 C9.94074861 10.27617533 9.94074861 10.27617533 8 10 C8 9.01 8 8.02 8 7 C7.4225 7.2475 6.845 7.495 6.25 7.75 C4 8 4 8 1.75 6.3125 C0 4 0 4 0 0 Z \",fill:\"#4A3D24\",transform:\"translate(328,574)\"})),_path411||(_path411=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.35439668 2.70879335 1.06501451 5.00933268 1 8 C-5.15234375 8.09765625 -5.15234375 8.09765625 -7 8 C-8 7 -8 7 -8.25 4.5625 C-8.1675 3.716875 -8.085 2.87125 -8 2 C-4.77208445 -0.1519437 -3.71599191 -0.20086443 0 0 Z \",fill:\"#3E3326\",transform:\"translate(633,566)\"})),_path412||(_path412=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25664978 2.90600261 2 4.79604584 2 8 C2.66 8.33 3.32 8.66 4 9 C4 10.32 4 11.64 4 13 C0.625 12.375 0.625 12.375 -3 11 C-4.375 8.0625 -4.375 8.0625 -5 5 C-5.33 4.01 -5.66 3.02 -6 2 C-2.25 0 -2.25 0 0 0 Z \",fill:\"#89714D\",transform:\"translate(643,551)\"})),_path413||(_path413=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.86625 0.598125 1.7325 1.19625 2.625 1.8125 C5.62619944 3.82044534 8.73775706 5.44655098 12 7 C12 7.66 12 8.32 12 9 C12.66 9.33 13.32 9.66 14 10 C13.01 10 12.02 10 11 10 C11 9.34 11 8.68 11 8 C8.36 8 5.72 8 3 8 C3.33 8.66 3.66 9.32 4 10 C-0.43458973 8.6062718 -2.87378374 6.39417765 -6 3 C-4.35 3 -2.7 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#96794A\",transform:\"translate(378,530)\"})),_path414||(_path414=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.33 1.98 2.66 3.96 3 6 C0.75 8.0625 0.75 8.0625 -2 10 C-4.0625 9.6875 -4.0625 9.6875 -6 9 C-8.18703385 9.37907282 -8.18703385 9.37907282 -10 10 C-7.65338645 4.3187251 -7.65338645 4.3187251 -4.4375 2.75 C-3.633125 2.5025 -2.82875 2.255 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#BD9E69\",transform:\"translate(597,522)\"})),_path415||(_path415=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-1.98 2 -3.96 2 -6 2 C-5.34 3.32 -4.68 4.64 -4 6 C-3.67 5.34 -3.34 4.68 -3 4 C-2.01 4 -1.02 4 0 4 C0 6.97 0 9.94 0 13 C-5.58878505 11.54205607 -5.58878505 11.54205607 -7.375 9.1875 C-8.11122591 6.6107093 -8.35052004 4.66395232 -8 2 C-4.77208445 -0.1519437 -3.71599191 -0.20086443 0 0 Z \",fill:\"#B69B70\",transform:\"translate(271,505)\"})),_path416||(_path416=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.33 1.32 4.66 2.64 5 4 C6.65 4.33 8.3 4.66 10 5 C10 4.01 10 3.02 10 2 C10.66 2 11.32 2 12 2 C11.6875 4.375 11.6875 4.375 11 7 C8 9 8 9 4.375 8.6875 C1 8 1 8 0 7 C-0.04092937 4.66702567 -0.04241723 2.33294775 0 0 Z \",fill:\"#867147\",transform:\"translate(449,360)\"})),_path417||(_path417=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.625 0.9375 2.625 0.9375 5 2 C5 2.99 5 3.98 5 5 C10.445 4.505 10.445 4.505 16 4 C15.67 4.66 15.34 5.32 15 6 C12.93359375 6.4140625 12.93359375 6.4140625 10.4375 6.625 C9.61121094 6.69976562 8.78492188 6.77453125 7.93359375 6.8515625 C6.97646484 6.92503906 6.97646484 6.92503906 6 7 C5.67 7.99 5.34 8.98 5 10 C1.64404172 9.40072174 -0.37801226 8.15377564 -3 6 C-2 4 -2 4 -1 3 C-1.33 2.34 -1.66 1.68 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#7A5E31\",transform:\"translate(373,254)\"})),_path418||(_path418=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.29856584 0.66601554 4.52860648 1.44790236 6.77734375 2.265625 C9.84481925 3.27913184 12.79364922 3.65889885 16 4 C10.91255621 7.12238849 5.66303326 5.87230097 0 5 C-3.39663366 4.16186962 -6.700419 3.16069332 -10 2 C-6.20760144 -0.52826571 -4.51916778 -0.36444901 0 0 Z \",fill:\"#664E2A\",transform:\"translate(516,186)\"})),_path419||(_path419=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.66 2 2.32 2 3 2 C4.38938077 3.96147874 5.7260411 5.96166576 7 8 C5.63016497 11.16115776 5.0109362 11.9927092 2 14 C-2.09725159 8.09513742 -2.09725159 8.09513742 -1.8203125 4.9765625 C-1.25 3.0625 -1.25 3.0625 0 0 Z \",fill:\"#C8A876\",transform:\"translate(748,436)\"})),_path420||(_path420=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8.99 2.97 9.98 5.94 11 9 C9.35 9 7.7 9 6 9 C6 8.01 6 7.02 6 6 C5.34 6 4.68 6 4 6 C3.67 6.66 3.34 7.32 3 8 C0 2.25 0 2.25 0 0 Z \",fill:\"#BFA275\",transform:\"translate(417,419)\"})),_path421||(_path421=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C1.76203331 9.16095354 -0.79895371 18.7339737 -5 27 C-5.66 27.33 -6.32 27.66 -7 28 C-6.31012199 24.15232985 -5.26266771 20.53075542 -4.0625 16.8125 C-2.32143674 11.25375985 -0.98445563 5.73834007 0 0 Z \",fill:\"#33230B\",transform:\"translate(552,252)\"})),_path422||(_path422=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C3.20546381 9.75678013 1.0270254 22.31075247 -4 31 C-4.96898381 27.93498739 -4.98290876 25.97652193 -4.1875 22.875 C-3.99671875 22.08996094 -3.8059375 21.30492187 -3.609375 20.49609375 C-3.30773437 19.26052734 -3.30773437 19.26052734 -3 18 C-1.70583704 12.0191183 -0.67580391 6.08223521 0 0 Z \",fill:\"#A28A67\",transform:\"translate(556,240)\"})),_path423||(_path423=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C4 3 4 3 3.875 5.3125 C2.78734094 8.6531671 0.99919339 11.12615951 -1 14 C-1.33 14.99 -1.66 15.98 -2 17 C-3.63264644 18.45961383 -5.32912023 19.84906752 -7.0625 21.1875 C-7.98160156 21.90292969 -8.90070313 22.61835938 -9.84765625 23.35546875 C-10.55792969 23.89816406 -11.26820313 24.44085938 -12 25 C-12 20.63348445 -9.83172717 18.20781593 -7 15 C-5.01231606 13.64837492 -3.0133653 12.31306433 -1 11 C1.11734188 8.75047818 1.11734188 8.75047818 2 6 C1.30059064 2.73185596 1.30059064 2.73185596 0 0 Z \",fill:\"#372A18\",transform:\"translate(360,271)\"})),_path424||(_path424=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.98211624 3.22354694 7.98211624 3.22354694 11 6 C11 6.66 11 7.32 11 8 C9.576875 8.12375 9.576875 8.12375 8.125 8.25 C4.92113898 8.64757088 4.92113898 8.64757088 3.6875 10.9375 C3.460625 11.618125 3.23375 12.29875 3 13 C2.67 13.66 2.34 14.32 2 15 C1.01 14.67 0.02 14.34 -1 14 C0.30208333 12.50260417 1.60416667 11.00520833 2.90625 9.5078125 C4.19572458 8.04063579 4.19572458 8.04063579 4 6 C3.34 6.66 2.68 7.32 2 8 C2 6.35 2 4.7 2 3 C1.34 3 0.68 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#BDA070\",transform:\"translate(328,551)\"})),_path425||(_path425=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.95514876 2.75134539 5.1524809 5.39733775 7 9 C7 9.99 7 10.98 7 12 C5.04020573 11.71831703 3.08217622 11.42433283 1.125 11.125 C-0.51082031 10.88136719 -0.51082031 10.88136719 -2.1796875 10.6328125 C-5 10 -5 10 -7 8 C-3.535 7.505 -3.535 7.505 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#B49769\",transform:\"translate(695,338)\"})),_path426||(_path426=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.0544452 2.20805524 1.09299283 4.41650554 1.125 6.625 C1.14820313 7.85476563 1.17140625 9.08453125 1.1953125 10.3515625 C1.00142767 13.97333121 0.42722425 16.67646381 -1 20 C-3.52475462 21.26237731 -5.31200466 21.09856404 -8.125 21.0625 C-9.03507812 21.05347656 -9.94515625 21.04445313 -10.8828125 21.03515625 C-11.93082031 21.01775391 -11.93082031 21.01775391 -13 21 C-12.40445312 20.72027344 -11.80890625 20.44054687 -11.1953125 20.15234375 C-6.93954657 17.91844526 -3.65400636 14.98100955 -1 11 C-0.54227937 8.26127045 -0.54227937 8.26127045 -0.375 5.3125 C-0.30023438 4.31863281 -0.22546875 3.32476562 -0.1484375 2.30078125 C-0.09945313 1.54152344 -0.05046875 0.78226562 0 0 Z \",fill:\"#B69B72\",transform:\"translate(495,266)\"})),_path427||(_path427=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2.33 1.99 2.66 2.98 3 4 C4.32 3.67 5.64 3.34 7 3 C4.88576944 7.00591053 2.58038219 9.26760307 -1 12 C-1.33 12.66 -1.66 13.32 -2 14 C-2.66 14 -3.32 14 -4 14 C-4.33 14.66 -4.66 15.32 -5 16 C-5 14.68 -5 13.36 -5 12 C-4.34 11.67 -3.68 11.34 -3 11 C-2.60861322 8.93897765 -2.60861322 8.93897765 -2.5 6.5625 C-2.2212693 2.2212693 -2.2212693 2.2212693 0 0 Z \",fill:\"#372D1E\",transform:\"translate(666,512)\"})),_path428||(_path428=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.60294922 0.04060547 1.60294922 0.04060547 3.23828125 0.08203125 C4.04652344 0.11683594 4.85476563 0.15164063 5.6875 0.1875 C4.6975 0.5175 3.7075 0.8475 2.6875 1.1875 C2.3575 1.8475 2.0275 2.5075 1.6875 3.1875 C0.594375 3.31125 -0.49875 3.435 -1.625 3.5625 C-5.80743385 4.27138709 -6.5211234 5.21003162 -9.3125 8.1875 C-11.9375 8.875 -11.9375 8.875 -14.3125 9.1875 C-15.3025 9.6825 -15.3025 9.6825 -16.3125 10.1875 C-13.09219316 3.00373859 -7.9005345 -0.26045718 0 0 Z \",fill:\"#AF996E\",transform:\"translate(787.3125,417.8125)\"})),_path429||(_path429=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 6.93 1 13.86 1 21 C3.97 21 6.94 21 10 21 C9.01 21.33 8.02 21.66 7 22 C7 22.66 7 23.32 7 24 C5.02 24 3.04 24 1 24 C1 28.95 1 33.9 1 39 C0.67 39 0.34 39 0 39 C0 26.13 0 13.26 0 0 Z \",fill:\"#433521\",transform:\"translate(170,421)\"})),_path430||(_path430=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C4.57061311 2.64767793 4.57061311 2.64767793 7 3 C7 4.65 7 6.3 7 8 C5.22950311 8.05410687 3.45853151 8.09284119 1.6875 8.125 C0.20830078 8.15980469 0.20830078 8.15980469 -1.30078125 8.1953125 C-4 8 -4 8 -7 6 C-5.35 6 -3.7 6 -2 6 C-1.855625 5.195625 -1.71125 4.39125 -1.5625 3.5625 C-1 1 -1 1 0 0 Z \",fill:\"#2D2314\",transform:\"translate(513,344)\"})),_path431||(_path431=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.67 1.66 2.34 2.32 2 3 C2.99 3 3.98 3 5 3 C3.4422692 6.82352106 1.08404742 9.29205593 -2 12 C-2.99 12 -3.98 12 -5 12 C-4.52389341 7.00088076 -2.96837781 4.02167317 0 0 Z \",fill:\"#140C04\",transform:\"translate(548,283)\"})),_path432||(_path432=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.625 3.4375 2.625 3.4375 2 6 C1.01 6.495 1.01 6.495 0 7 C0 8.65 0 10.3 0 12 C-1.32 11.67 -2.64 11.34 -4 11 C-4.33 7.7 -4.66 4.4 -5 1 C-2.525 1.495 -2.525 1.495 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#4E402B\",transform:\"translate(528,604)\"})),_path433||(_path433=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.09054687 0.02320313 2.18109375 0.04640625 3.3046875 0.0703125 C4.40039062 0.08835937 5.49609375 0.10640625 6.625 0.125 C7.46804688 0.14820313 8.31109375 0.17140625 9.1796875 0.1953125 C9.1796875 0.5253125 9.1796875 0.8553125 9.1796875 1.1953125 C7.54 1.411875 7.54 1.411875 5.8671875 1.6328125 C2.24845763 2.07819354 2.24845763 2.07819354 -0.8203125 3.1953125 C-1.82528102 6.21021807 -1.92366553 8.23712942 -1.8828125 11.3828125 C-1.86927734 12.73439453 -1.86927734 12.73439453 -1.85546875 14.11328125 C-1.84386719 14.80035156 -1.83226562 15.48742187 -1.8203125 16.1953125 C-2.8103125 16.1953125 -3.8003125 16.1953125 -4.8203125 16.1953125 C-4.8203125 14.5453125 -4.8203125 12.8953125 -4.8203125 11.1953125 C-5.4803125 10.8653125 -6.1403125 10.5353125 -6.8203125 10.1953125 C-6.4903125 9.8653125 -6.1603125 9.5353125 -5.8203125 9.1953125 C-5.6759375 8.0609375 -5.5315625 6.9265625 -5.3828125 5.7578125 C-4.71354809 1.51913788 -4.37823664 0.30320198 0 0 Z \",fill:\"#4E3D27\",transform:\"translate(588.8203125,575.8046875)\"})),_path434||(_path434=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.85625 0.0309375 1.85625 0.0309375 3.75 0.0625 C1.77 1.0525 1.77 1.0525 -0.25 2.0625 C-0.25 2.7225 -0.25 3.3825 -0.25 4.0625 C-1.3225 3.876875 -2.395 3.69125 -3.5 3.5 C-6.94665647 2.86248218 -6.94665647 2.86248218 -9.02246094 3.54272461 C-12.23095122 4.29139578 -15.37352291 4.07142872 -18.640625 3.94140625 C-19.34523865 3.91779526 -20.04985229 3.89418427 -20.77581787 3.86985779 C-23.0174328 3.79353023 -25.25867496 3.70937421 -27.5 3.625 C-29.0234195 3.5717483 -30.54685698 3.51900812 -32.0703125 3.46679688 C-35.79710155 3.33795752 -39.52359667 3.20209768 -43.25 3.0625 C-43.25 2.7325 -43.25 2.4025 -43.25 2.0625 C-42.21069336 2.03744385 -41.17138672 2.0123877 -40.10058594 1.98657227 C-36.23897297 1.89229074 -32.37753117 1.79212092 -28.51611328 1.69018555 C-26.84590666 1.64691511 -25.17565806 1.60523451 -23.50537109 1.56518555 C-21.10241045 1.50729149 -18.69965959 1.4436526 -16.296875 1.37890625 C-15.55193787 1.36219376 -14.80700073 1.34548126 -14.03948975 1.32826233 C-9.24645412 1.19177625 -4.75447099 -0.07924118 0 0 Z \",fill:\"#2A1E0D\",transform:\"translate(512.25,569.9375)\"})),_path435||(_path435=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.63547505 3.17861146 7.66506533 6.9215171 10 12 C10.3125 15.5 10.3125 15.5 10 18 C9 16.66666667 8 15.33333333 7 14 C6.443125 13.29875 5.88625 12.5975 5.3125 11.875 C4 10 4 10 4 8 C3.38125 7.731875 2.7625 7.46375 2.125 7.1875 C0 6 0 6 -2 3 C-1.34 2.67 -0.68 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#A89067\",transform:\"translate(433,536)\"})),_path436||(_path436=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C2.65 4 4.3 4 6 4 C6 4.66 6 5.32 6 6 C3.5 7.5 3.5 7.5 1 9 C0.13375 9.886875 -0.7325 10.77375 -1.625 11.6875 C-4 14 -4 14 -7 14 C-4.66666667 9.33333333 -2.33333333 4.66666667 0 0 Z \",fill:\"#A18558\",transform:\"translate(714,346)\"})),_path437||(_path437=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4 0.66 4 1.32 4 2 C4.7425 2 5.485 2 6.25 2 C10.04512342 3.38004488 10.64997594 5.45567968 12.30078125 8.9921875 C13 11 13 11 13 14 C12.34 14 11.68 14 11 14 C10.7525 13.401875 10.505 12.80375 10.25 12.1875 C8.83555909 9.71222841 7.27139812 8.66569196 5 7 C5 6.34 5 5.68 5 5 C4.360625 4.731875 3.72125 4.46375 3.0625 4.1875 C1 3 1 3 0 0 Z \",fill:\"#967B48\",transform:\"translate(579,286)\"})),_path438||(_path438=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.36439152 5.15436796 -4.72573615 8.06648401 -9 11 C-9.66 11 -10.32 11 -11 11 C-11 10.34 -11 9.68 -11 9 C-12.98 9.33 -14.96 9.66 -17 10 C-14.68118495 7.32098068 -12.68185532 6.33795597 -9.3125 5.3125 C-8.10013672 4.93544922 -8.10013672 4.93544922 -6.86328125 4.55078125 C-5.94095703 4.27814453 -5.94095703 4.27814453 -5 4 C-5 3.34 -5 2.68 -5 2 C-2 0 -2 0 0 0 Z \",fill:\"#6A532E\",transform:\"translate(593,268)\"})),_path439||(_path439=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.33 1.32 3.66 2.64 4 4 C2.76055724 4.86941494 1.50792941 5.72005457 0.25 6.5625 C-0.44609375 7.03816406 -1.1421875 7.51382813 -1.859375 8.00390625 C-4 9 -4 9 -6.140625 8.77734375 C-8 8 -8 8 -10 6 C-8.02 5.34 -6.04 4.68 -4 4 C-4 3.34 -4 2.68 -4 2 C-2.68 2 -1.36 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#C7A369\",transform:\"translate(572,541)\"})),_path440||(_path440=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.33332095 2.6666419 0.67102033 4.16680303 0 7 C-0.33 6.34 -0.66 5.68 -1 5 C-1.99 5 -2.98 5 -4 5 C-4.25265625 5.58265625 -4.5053125 6.1653125 -4.765625 6.765625 C-6.94543664 10.71135999 -10.28564201 13.50312602 -14 16 C-17.5 16.4375 -17.5 16.4375 -20 16 C-17.49981498 13.0650002 -14.930209 11.33616007 -11.5625 9.5625 C-7.71641243 7.51294018 -4.92384552 5.27825103 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#251A0D\",transform:\"translate(598,528)\"})),_path441||(_path441=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.886875 -0.01417969 1.77375 -0.02835937 2.6875 -0.04296875 C5 0.1875 5 0.1875 7 2.1875 C6.34 2.1875 5.68 2.1875 5 2.1875 C5 3.1775 5 4.1675 5 5.1875 C3.865625 4.98125 2.73125 4.775 1.5625 4.5625 C-3.24723573 3.93439498 -7.37541619 4.89218833 -12 6.1875 C-6.01373771 0.04370449 -6.01373771 0.04370449 0 0 Z \",fill:\"#0F0601\",transform:\"translate(483,499.8125)\"})),_path442||(_path442=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.34230808 3.58038159 1.61492668 7.16278181 1.875 10.75 C1.97296875 11.76578125 2.0709375 12.7815625 2.171875 13.828125 C2.65763091 21.21161488 2.65763091 21.21161488 0.66894531 23.59570312 C-0.9921875 24.703125 -0.9921875 24.703125 -4 26 C-4.66 25.67 -5.32 25.34 -6 25 C-5.54625 24.29875 -5.0925 23.5975 -4.625 22.875 C-1.61780848 17.55458424 -0.7185508 12.69439742 -0.375 6.625 C-0.30023437 5.37976563 -0.22546875 4.13453125 -0.1484375 2.8515625 C-0.09945312 1.91054688 -0.05046875 0.96953125 0 0 Z \",fill:\"#C2A77B\",transform:\"translate(700,434)\"})),_path443||(_path443=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.3 0 6.6 0 10 0 C10 0.66 10 1.32 10 2 C10.8353125 2.37125 10.8353125 2.37125 11.6875 2.75 C14.47520651 4.25686838 16.69346503 5.8181426 19 8 C19.8125 10.75 19.8125 10.75 20 13 C19.44570313 12.57847656 18.89140625 12.15695312 18.3203125 11.72265625 C17.59585938 11.17480469 16.87140625 10.62695312 16.125 10.0625 C15.40570312 9.51722656 14.68640625 8.97195313 13.9453125 8.41015625 C12.05642921 6.96035376 12.05642921 6.96035376 10 6 C10 5.34 10 4.68 10 4 C6.7 3.01 3.4 2.02 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#2A1E10\",transform:\"translate(536,326)\"})),_path444||(_path444=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C0.01 4.33 -0.98 4.66 -2 5 C-2.04898438 5.78246094 -2.09796875 6.56492187 -2.1484375 7.37109375 C-2.26058594 8.88896484 -2.26058594 8.88896484 -2.375 10.4375 C-2.44460937 11.44683594 -2.51421875 12.45617187 -2.5859375 13.49609375 C-2.72257813 14.32238281 -2.85921875 15.14867187 -3 16 C-3.66 16.33 -4.32 16.66 -5 17 C-5.40729228 19.32156597 -5.74438677 21.6568787 -6 24 C-6.33 24 -6.66 24 -7 24 C-7.33051117 16.65530728 -7.38164597 10.6380458 -4 4 C-3.01 3.67 -2.02 3.34 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#AD9163\",transform:\"translate(241,308)\"})),_path445||(_path445=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.66 2.64 1.32 4 2 C4.375 5.1875 4.375 5.1875 4 9 C1.21376182 12.04542312 -0.64972247 13.75449499 -4.75 14.5 C-7 14 -7 14 -9 11 C-7.329375 10.814375 -7.329375 10.814375 -5.625 10.625 C-1.96896323 10.3534187 -1.96896323 10.3534187 0 8 C0.24212873 6.01871492 0.24212873 6.01871492 0.125 3.875 C0.08375 2.59625 0.0425 1.3175 0 0 Z \",fill:\"#8D7854\",transform:\"translate(405,298)\"})),_path446||(_path446=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.99 0 1.98 0 3 C-1.63604196 4.37073786 -3.30678061 5.70055256 -5 7 C-5.474375 7.680625 -5.94875 8.36125 -6.4375 9.0625 C-8.5425683 11.6727847 -10.97236775 12.65438567 -14 14 C-13.37141525 8.62929791 -11.09247081 6.83684635 -7.078125 3.515625 C-4.82138687 1.86973328 -2.69448907 0.75782505 0 0 Z \",fill:\"#B59A74\",transform:\"translate(583,210)\"})),_path447||(_path447=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 0 7.26 0 11 0 C11 1.98 11 3.96 11 6 C8.21176345 7.0326802 7.1322726 7.04509293 4.25 6.0625 C3.5075 5.711875 2.765 5.36125 2 5 C2 4.34 2 3.68 2 3 C1.34 3 0.68 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#EDCC99\",transform:\"translate(536,202)\"})),_path448||(_path448=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C1.99 4 2.98 4 4 4 C4.33 3.01 4.66 2.02 5 1 C5.99 0.67 6.98 0.34 8 0 C8 2.31 8 4.62 8 7 C5.34501768 8.0169313 4.30844625 8.13022151 1.640625 7.00390625 C0.85171875 6.52824219 0.0628125 6.05257812 -0.75 5.5625 C-1.54921875 5.08941406 -2.3484375 4.61632812 -3.171875 4.12890625 C-3.77515625 3.75636719 -4.3784375 3.38382813 -5 3 C-5 2.34 -5 1.68 -5 1 C-3.35 0.67 -1.7 0.34 0 0 Z \",fill:\"#B4986D\",transform:\"translate(336,574)\"})),_path449||(_path449=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C18.12970856 -0.19801866 18.12970856 -0.19801866 24 1 C24.33 1.66 24.66 2.32 25 3 C22.33326258 3.02727345 19.66681131 3.04696948 17 3.0625 C15.88431641 3.07506836 15.88431641 3.07506836 14.74609375 3.08789062 C9.73851156 3.10966272 4.95720968 2.71541549 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#997842\",transform:\"translate(432,488)\"})),_path450||(_path450=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.54893166 1.81682865 -2.5489437 2.87741001 -4.8828125 3.51171875 C-13.25021176 4.16769953 -21.61287556 4.08756858 -30 4 C-30 3.67 -30 3.34 -30 3 C-26.31349888 2.49244803 -22.62566225 1.99532488 -18.9375 1.5 C-17.89916016 1.35691406 -16.86082031 1.21382812 -15.79101562 1.06640625 C-10.4778409 0.35798295 -5.36039482 -0.18248153 0 0 Z \",fill:\"#281706\",transform:\"translate(445,192)\"})),_path451||(_path451=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.554717 -0.24965165 20.56612375 0.32098543 31 2 C31 2.33 31 2.66 31 3 C23.41 3 15.82 3 8 3 C8 2.34 8 1.68 8 1 C5.36 1 2.72 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#C8A773\",transform:\"translate(304,488)\"})),_path452||(_path452=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 3.96 0.66 7.92 1 12 C0.34 11.67 -0.32 11.34 -1 11 C-1 10.34 -1 9.68 -1 9 C-1.99 9 -2.98 9 -4 9 C-3.67 7.68 -3.34 6.36 -3 5 C-3.66 4.67 -4.32 4.34 -5 4 C-5 6.31 -5 8.62 -5 11 C-7.22984785 9.23470379 -7.93915901 8.34766278 -8.4375 5.5 C-8 3 -8 3 -6.25 1.1875 C-4 0 -4 0 0 0 Z \",fill:\"#A79066\",transform:\"translate(391,448)\"})),_path453||(_path453=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.25 5.625 3.25 5.625 1 9 C-2.22297721 9.4114439 -4.16812172 9.53669566 -6.9375 7.75 C-8 6 -8 6 -7.6875 3.8125 C-7.460625 3.214375 -7.23375 2.61625 -7 2 C-6.67 2.99 -6.34 3.98 -6 5 C-4.35 4.67 -2.7 4.34 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#876E46\",transform:\"translate(512,360)\"})),_path454||(_path454=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 1.65 1.66 3.3 2 5 C2.33 3.35 2.66 1.7 3 0 C3.33 0.99 3.66 1.98 4 3 C6.31 3.33 8.62 3.66 11 4 C11 4.66 11 5.32 11 6 C9.54462432 6.83848804 8.08559627 7.67063934 6.625 8.5 C5.81289063 8.9640625 5.00078125 9.428125 4.1640625 9.90625 C2 11 2 11 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#795E2C\",transform:\"translate(709,261)\"})),_path455||(_path455=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 1.375 2 1.375 4 3 C4 3.66 4 4.32 4 5 C3.34 5 2.68 5 2 5 C2 5.99 2 6.98 2 8 C0 9.6875 0 9.6875 -2 11 C-3.32 10.34 -4.64 9.68 -6 9 C-6 7.02 -6 5.04 -6 3 C-5.01 3 -4.02 3 -3 3 C-3 3.66 -3 4.32 -3 5 C-2.34 5 -1.68 5 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#C9A672\",transform:\"translate(393,221)\"})),_path456||(_path456=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.27057377 -0.05398987 4.54151288 -0.09278742 6.8125 -0.125 C8.07707031 -0.14820313 9.34164063 -0.17140625 10.64453125 -0.1953125 C14 0 14 0 17 2 C11.21642935 4.01167675 6.09781001 4.22084624 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#BC965C\",transform:\"translate(482,567)\"})),_path457||(_path457=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.69470323 1.90281165 14.17880719 4.99287343 21 9 C21 9.33 21 9.66 21 10 C19.39667209 10.08121924 17.79215974 10.13929134 16.1875 10.1875 C15.29417969 10.22230469 14.40085937 10.25710938 13.48046875 10.29296875 C10.58352485 9.95081002 9.77444972 9.24606427 8 7 C8.66 7 9.32 7 10 7 C9.67 6.34 9.34 5.68 9 5 C6.95475679 4.40494001 4.90666043 4.04533219 2.8125 3.66015625 C2.214375 3.44230469 1.61625 3.22445312 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#937442\",transform:\"translate(408,549)\"})),_path458||(_path458=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0 7.92 0 12 0 C12.33 0.66 12.66 1.32 13 2 C12.07767578 1.98259766 12.07767578 1.98259766 11.13671875 1.96484375 C9.92435547 1.95130859 9.92435547 1.95130859 8.6875 1.9375 C7.88699219 1.92589844 7.08648438 1.91429687 6.26171875 1.90234375 C3.83138666 1.90342145 3.83138666 1.90342145 1 3 C-0.2228253 6.6684759 -0.38634028 9.13659719 0 13 C1.44696109 15.60554182 3.10177509 17.67467449 5 20 C2.50638429 18.79618552 0.31856917 17.54571278 -2 16 C-3.37485395 11.16190637 -3.41220529 7.03947421 -1.5625 2.375 C-1.046875 1.59125 -0.53125 0.8075 0 0 Z \",fill:\"#615136\",transform:\"translate(651,534)\"})),_path459||(_path459=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C-0.98 2.33 -2.96 2.66 -5 3 C-4.01 3.33 -3.02 3.66 -2 4 C-2 4.66 -2 5.32 -2 6 C-3.32 6 -4.64 6 -6 6 C-6.33 6.66 -6.66 7.32 -7 8 C-7.99 7.67 -8.98 7.34 -10 7 C-10.66 7.66 -11.32 8.32 -12 9 C-11.5152439 2.45579268 -11.5152439 2.45579268 -9.375 0.5625 C-6.20862399 -0.18743116 -3.24002269 -0.12461626 0 0 Z \",fill:\"#B29B71\",transform:\"translate(662,535)\"})),_path460||(_path460=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 1.65 2 3.3 2 5 C2.66 5 3.32 5 4 5 C4.33 4.34 4.66 3.68 5 3 C4.67 4.98 4.34 6.96 4 9 C4.66 9 5.32 9 6 9 C6 6.36 6 3.72 6 1 C8 3 8 3 8.01171875 5.0234375 C7.90472656 5.79945313 7.79773438 6.57546875 7.6875 7.375 C7.53861328 8.53128906 7.53861328 8.53128906 7.38671875 9.7109375 C6.84352862 12.92618415 6.0314584 15.9056248 5 19 C3.33657163 17.33657163 3.63951903 15.2174291 3.4375 12.9375 C3.35371094 12.01839844 3.26992188 11.09929687 3.18359375 10.15234375 C3.09271484 9.08693359 3.09271484 9.08693359 3 8 C2.34 8 1.68 8 1 8 C0.67 5.36 0.34 2.72 0 0 Z \",fill:\"#A1865B\",transform:\"translate(640,333)\"})),_path461||(_path461=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.66 0.66 -1.32 1.32 -2 2 C0.64 2.33 3.28 2.66 6 3 C6 3.33 6 3.66 6 4 C0.39 4.66 -5.22 5.32 -11 6 C-11 5.34 -11 4.68 -11 4 C-12.32 3.67 -13.64 3.34 -15 3 C-9.63560356 0.31780178 -5.98993047 -0.3152595 0 0 Z \",fill:\"#A4895E\",transform:\"translate(434,327)\"})),_path462||(_path462=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 2.97 3 5.94 3 9 C5.64 9.66 8.28 10.32 11 11 C11 11.66 11 12.32 11 13 C2.84615385 13.61538462 2.84615385 13.61538462 -0.0625 11.5 C-1.43499236 7.84002036 -1.25592244 4.90281716 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#917B56\",transform:\"translate(557,298)\"})),_path463||(_path463=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.350625 0.66 0.70125 1.32 1.0625 2 C2.96557142 4.41103961 2.96557142 4.41103961 6.6875 4.25 C7.780625 4.1675 8.87375 4.085 10 4 C10.33 6.31 10.66 8.62 11 11 C6.49173499 11 5.99218477 10.5689029 2.8125 7.6875 C2.11769531 7.07261719 1.42289063 6.45773437 0.70703125 5.82421875 C-1 4 -1 4 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#9B7839\",transform:\"translate(237,252)\"})),_path464||(_path464=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.36 5.4 3.36 5.4 1.875 7.875 C-0.78034983 9.4682099 -2.96789518 9.20214032 -6 9 C-5.67 7.02 -5.34 5.04 -5 3 C-4.360625 2.87625 -3.72125 2.7525 -3.0625 2.625 C-2.0415625 2.315625 -2.0415625 2.315625 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#9C8156\",transform:\"translate(386,239)\"})),_path465||(_path465=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.78734859 9.01076716 3.78734859 9.01076716 0.5625 13.0625 C-0.283125 13.701875 -1.12875 14.34125 -2 15 C-2.33 15.33 -2.66 15.66 -3 16 C-5.9375 16.25 -5.9375 16.25 -9 16 C-9.66 15.01 -10.32 14.02 -11 13 C-8.36 13 -5.72 13 -3 13 C-0.33409063 8.44573816 0.31563182 5.26053037 0 0 Z \",fill:\"#A7926A\",transform:\"translate(434,600)\"})),_path466||(_path466=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C-0.16134134 5.00013179 -1.76041654 6.76041654 -4 9 C-5.17574711 11.09989652 -5.17574711 11.09989652 -6 13 C-6.66 13 -7.32 13 -8 13 C-7.67 13.99 -7.34 14.98 -7 16 C-7.66 16 -8.32 16 -9 16 C-9 16.99 -9 17.98 -9 19 C-9.66 19 -10.32 19 -11 19 C-11 18.34 -11 17.68 -11 17 C-11.99 17.33 -12.98 17.66 -14 18 C-12.3867348 14.12266375 -9.85050638 11.48273574 -7 8.4375 C-4.42555742 5.67970322 -2.09363537 3.14045306 0 0 Z \",fill:\"#A5895A\",transform:\"translate(618,497)\"})),_path467||(_path467=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.625 1.9375 2.625 1.9375 5 5 C4.86502119 8.91438555 3.74510184 12.50979631 2 16 C1.32591692 14.73308493 0.66099503 13.46129251 0 12.1875 C-0.37125 11.47980469 -0.7425 10.77210938 -1.125 10.04296875 C-2 8 -2 8 -2 5 C-1.34 5 -0.68 5 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#BC9F70\",transform:\"translate(744,429)\"})),_path468||(_path468=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.928125 1.0209375 -0.928125 1.0209375 -1.875 2.0625 C-4.3319068 5.45881234 -5.04945605 7.96018821 -6 12 C-7.32 10.68 -8.64 9.36 -10 8 C-10.99 8.495 -10.99 8.495 -12 9 C-11.34 7.35 -10.68 5.7 -10 4 C-9.34 4 -8.68 4 -8 4 C-7.67 3.01 -7.34 2.02 -7 1 C-4.53721199 -0.231394 -2.7204945 -0.07159196 0 0 Z \",fill:\"#C0A172\",transform:\"translate(466,420)\"})),_path469||(_path469=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.13566406 -0.00515625 2.27132812 -0.0103125 3.44140625 -0.015625 C6.4375 0.25 6.4375 0.25 9.4375 2.25 C5.6875 3.375 5.6875 3.375 3.4375 2.25 C-0.61392119 1.99139865 -2.10587669 1.94558446 -5.5625 4.25 C-6.78446109 6.42610667 -6.78446109 6.42610667 -7.75 8.875 C-8.26626953 10.10089844 -8.26626953 10.10089844 -8.79296875 11.3515625 C-9.04691406 11.97804688 -9.30085937 12.60453125 -9.5625 13.25 C-10.69833456 9.53272326 -10.22920026 7.77948291 -8.5625 4.25 C-9.5525 4.58 -10.5425 4.91 -11.5625 5.25 C-10.5625 2.25 -10.5625 2.25 -8.91015625 1.078125 C-5.85613299 0.00083227 -3.23398866 -0.01471667 0 0 Z \",fill:\"#8E7A5C\",transform:\"translate(614.5625,418.75)\"})),_path470||(_path470=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.1034375 -0.01417969 2.206875 -0.02835937 3.34375 -0.04296875 C6.48252023 0.18622363 8.67183214 0.85256256 11.5 2.1875 C11.5 2.5175 11.5 2.8475 11.5 3.1875 C3.91 3.1875 -3.68 3.1875 -11.5 3.1875 C-11.5 2.5275 -11.5 1.8675 -11.5 1.1875 C-7.62124073 0.2829386 -3.97997679 0.02324753 0 0 Z \",fill:\"#BB9F75\",transform:\"translate(438.5,330.8125)\"})),_path471||(_path471=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.40316925 6.31631828 -2.71232131 10.64993984 -6 16 C-6.99 16 -7.98 16 -9 16 C-9.33 15.34 -9.66 14.68 -10 14 C-9.67 13.34 -9.34 12.68 -9 12 C-8.34 12 -7.68 12 -7 12 C-6.81824219 11.30132812 -6.63648438 10.60265625 -6.44921875 9.8828125 C-6.19785156 8.97273438 -5.94648438 8.06265625 -5.6875 7.125 C-5.44386719 6.22007812 -5.20023437 5.31515625 -4.94921875 4.3828125 C-4.0044653 2.01120918 -2.9924948 0 0 0 Z \",fill:\"#C6A369\",transform:\"translate(334,310)\"})),_path472||(_path472=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.33 2.64 0.66 4 1 C2.02 1.99 2.02 1.99 0 3 C0 3.99 0 4.98 0 6 C1.65 6.33 3.3 6.66 5 7 C4.34 8.65 3.68 10.3 3 12 C2.34 11.34 1.68 10.68 1 10 C-1.65719837 9.31822002 -1.65719837 9.31822002 -4.625 8.875 C-6.12933594 8.62363281 -6.12933594 8.62363281 -7.6640625 8.3671875 C-8.43492187 8.24601563 -9.20578125 8.12484375 -10 8 C-8 6 -8 6 -4.875 5.875 C-3.92625 5.91625 -2.9775 5.9575 -2 6 C-2 4.68 -2 3.36 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#3F3324\",transform:\"translate(602,568)\"})),_path473||(_path473=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C0.67 2.66 0.34 3.32 0 4 C2.960309 3.58693363 5.57171683 3.19099114 8.3125 1.96875 C11.47119808 0.83014953 13.96556612 0.80144101 17.3125 0.875 C18.38113281 0.89304687 19.44976563 0.91109375 20.55078125 0.9296875 C21.35902344 0.95289063 22.16726563 0.97609375 23 1 C23 1.33 23 1.66 23 2 C21.85660156 2.20496094 20.71320312 2.40992188 19.53515625 2.62109375 C18.04423324 2.8930231 16.55334984 3.16516974 15.0625 3.4375 C13.93038086 3.63956055 13.93038086 3.63956055 12.77539062 3.84570312 C9.08046826 4.24272034 9.08046826 4.24272034 6 6 C4.15108054 6.23363881 2.29511969 6.41303635 0.4375 6.5625 C-1.08037109 6.68818359 -1.08037109 6.68818359 -2.62890625 6.81640625 C-3.41136719 6.87699219 -4.19382812 6.93757812 -5 7 C-3.35 4.69 -1.7 2.38 0 0 Z \",fill:\"#987A4B\",transform:\"translate(529,514)\"})),_path474||(_path474=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.32532111 2.69192661 4.52454943 6.06546515 6 10 C6 10.99 6 11.98 6 13 C2.76138697 11.55575365 0.38030837 9.74227753 -2.25 7.375 C-2.95640625 6.74335937 -3.6628125 6.11171875 -4.390625 5.4609375 C-4.92171875 4.97882813 -5.4528125 4.49671875 -6 4 C-3.50907189 2.75453595 -2.58919267 3.2232422 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#967C51\",transform:\"translate(510,507)\"})),_path475||(_path475=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.2396614 2.87024424 10.10868727 6.66942415 13 13 C12.67 13.99 12.34 14.98 12 16 C10.79557292 14.4375 9.59114583 12.875 8.38671875 11.3125 C6.95508863 9.65629795 6.95508863 9.65629795 4 10 C3.566875 8.2984375 3.566875 8.2984375 3.125 6.5625 C2.75375 5.386875 2.3825 4.21125 2 3 C1.34 2.67 0.68 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#796544\",transform:\"translate(428,503)\"})),_path476||(_path476=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 1 2 1 3.1875 3.3125 C4.03624754 6.11989571 3.99928333 7.301935 3 10 C2.34 9.67 1.68 9.34 1 9 C1 17.91 1 26.82 1 36 C0.67 36 0.34 36 0 36 C0 24.12 0 12.24 0 0 Z \",fill:\"#3E311F\",transform:\"translate(284,424)\"})),_path477||(_path477=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C3 2.66 3 3.32 3 4 C0.69 4 -1.62 4 -4 4 C-4.66 6.31 -5.32 8.62 -6 11 C-6.33 10.01 -6.66 9.02 -7 8 C-7.66 8 -8.32 8 -9 8 C-9 6.02 -9 4.04 -9 2 C-5.87350101 0.14725986 -3.62683775 -0.37198336 0 0 Z \",fill:\"#A18B64\",transform:\"translate(449,343)\"})),_path478||(_path478=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.125 0.375 2.125 0.375 4 1 C4 1.99 4 2.98 4 4 C4.5775 4.226875 5.155 4.45375 5.75 4.6875 C8.5663661 6.33038023 10.08077114 8.39533227 12 11 C10.52307692 15.67692308 10.52307692 15.67692308 7.875 17.3125 C6.946875 17.6528125 6.946875 17.6528125 6 18 C6.66 17.01 7.32 16.02 8 15 C8.48958849 12.50797748 8.48958849 12.50797748 8 10 C6.34934059 8.17668991 6.34934059 8.17668991 4.125 6.8125 C1.86334016 5.2763547 -0.06075062 3.93924938 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#463115\",transform:\"translate(276,284)\"})),_path479||(_path479=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.49361571 1.20381448 4.68143083 2.45428722 7 4 C7 4.66 7 5.32 7 6 C10.16115776 4.63016497 10.9927092 4.0109362 13 1 C13 2.65 13 4.3 13 6 C12.34 6 11.68 6 11 6 C11 6.99 11 7.98 11 9 C5.53262809 7.25192871 0.24175152 5.34205919 -5 3 C-5 2.67 -5 2.34 -5 2 C-3.35 2 -1.7 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#70542A\",transform:\"translate(240,260)\"})),_path480||(_path480=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2.08172936 3.5215021 2.14083373 6.04029917 2.1875 8.5625 C2.22520508 9.61920898 2.22520508 9.61920898 2.26367188 10.69726562 C2.33513039 15.86609829 1.51321672 19.44809 -1 24 C-1.99 24.33 -2.98 24.66 -4 25 C-5.35439668 22.29120665 -5.06501451 19.99066732 -5 17 C-4.67 17.66 -4.34 18.32 -4 19 C-1.85408336 17.48390606 -1.85408336 17.48390606 0 15 C0.2911521 12.26317029 0.38322418 9.96059961 0.25 7.25 C0.23195313 6.55261719 0.21390625 5.85523438 0.1953125 5.13671875 C0.14838554 3.42388461 0.07664605 1.71176176 0 0 Z \",fill:\"#95774A\",transform:\"translate(400,229)\"})),_path481||(_path481=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 6.27 1.66 12.54 2 19 C2.33 19 2.66 19 3 19 C3 22.96 3 26.92 3 31 C1.66666667 31 0.33333333 31 -1 31 C-0.67 20.77 -0.34 10.54 0 0 Z \",fill:\"#3F311B\",transform:\"translate(560,213)\"})),_path482||(_path482=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.25 6.625 3.25 6.625 1 10 C0.34 10 -0.32 10 -1 10 C-1.226875 10.598125 -1.45375 11.19625 -1.6875 11.8125 C-3.33811133 14.56351888 -5.1972081 15.52484637 -8 17 C-7.67 15.68 -7.34 14.36 -7 13 C-5.68 12.67 -4.36 12.34 -3 12 C-3 10.02 -3 8.04 -3 6 C-2.34 6 -1.68 6 -1 6 C-0.67 5.01 -0.34 4.02 0 3 C0.66 3 1.32 3 2 3 C2 2.34 2 1.68 2 1 C1.34 0.67 0.68 0.34 0 0 Z \",fill:\"#BBA074\",transform:\"translate(587,212)\"})),_path483||(_path483=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.165 0.680625 4.33 1.36125 4.5 2.0625 C6.40364157 5.79046475 8.96055063 7.69967165 12.22265625 10.25390625 C14.1802824 12.1771126 14.61921331 13.32277663 15 16 C13.72689688 15.06558465 12.456612 14.12732889 11.1875 13.1875 C10.47980469 12.66542969 9.77210938 12.14335937 9.04296875 11.60546875 C7.21327153 10.16759962 5.64143786 8.64143786 4 7 C1.90010348 5.82425289 1.90010348 5.82425289 0 5 C0.66 5 1.32 5 2 5 C2 4.01 2 3.02 2 2 C1.34 2 0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#5D4624\",transform:\"translate(374,206)\"})),_path484||(_path484=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.47795905 0.10141562 6.73024607 0.82332238 10 2 C12.125 4.625 12.125 4.625 13 7 C8.26765543 7.33016357 5.89436923 6.66456842 2 4 C0.67391178 3.31903578 -0.65686601 2.64669414 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#C8A66F\",transform:\"translate(421,532)\"})),_path485||(_path485=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.66 0.66 -1.32 1.32 -2 2 C-2 3.32 -2 4.64 -2 6 C-2.57492187 5.78472656 -3.14984375 5.56945312 -3.7421875 5.34765625 C-6.73163075 4.88734405 -7.68650365 5.72684382 -10.125 7.4375 C-13.82561308 10 -13.82561308 10 -16 10 C-14.58590577 6.60470083 -12.97643772 4.94087183 -10 2.8125 C-8.948125 2.04873047 -8.948125 2.04873047 -7.875 1.26953125 C-4.72853333 -0.86088889 -3.61813848 -1.08544154 0 0 Z \",fill:\"#786A4B\",transform:\"translate(542,524)\"})),_path486||(_path486=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 0.99 -0.66 1.98 -1 3 C1.31 3.66 3.62 4.32 6 5 C6 5.33 6 5.66 6 6 C0.39 6.66 -5.22 7.32 -11 8 C-10.01 6.68 -9.02 5.36 -8 4 C-7.34 4 -6.68 4 -6 4 C-6 3.34 -6 2.68 -6 2 C-2.25 0 -2.25 0 0 0 Z \",fill:\"#1A0D03\",transform:\"translate(558,502)\"})),_path487||(_path487=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.41834582 -0.09377123 14.66236293 -0.17402193 22 1 C22 1.66 22 2.32 22 3 C6.25512528 3.18451025 6.25512528 3.18451025 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#D2B17A\",transform:\"translate(290,488)\"})),_path488||(_path488=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.60646715 3.90970072 2.41467207 6.99950297 2.65625 11.6015625 C2.82640625 12.78878906 2.82640625 12.78878906 3 14 C3.66 14.33 4.32 14.66 5 15 C5.28571429 22.42857143 5.28571429 22.42857143 3 26 C0.80835056 22.71252584 0.71320614 21.51505175 0.5859375 17.67578125 C0.54726563 16.64775391 0.50859375 15.61972656 0.46875 14.56054688 C0.4378125 13.48869141 0.406875 12.41683594 0.375 11.3125 C0.33632813 10.22904297 0.29765625 9.14558594 0.2578125 8.02929688 C0.16349491 5.35303533 0.07789995 2.67678157 0 0 Z \",fill:\"#DAB982\",transform:\"translate(700,429)\"})),_path489||(_path489=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.0809723 2.43816585 4.14046972 4.87364384 4.1875 7.3125 C4.22520508 8.34793945 4.22520508 8.34793945 4.26367188 9.40429688 C4.33834499 14.55674183 4.33834499 14.55674183 2.48828125 16.98046875 C1.99714844 17.31691406 1.50601563 17.65335937 1 18 C-0.2039337 14.24600202 -0.09877617 10.66782588 -0.0625 6.75 C-0.05347656 5.48671875 -0.04445313 4.2234375 -0.03515625 2.921875 C-0.02355469 1.95765625 -0.01195312 0.9934375 0 0 Z \",fill:\"#DCB87E\",transform:\"translate(599,430)\"})),_path490||(_path490=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.99 2 1.98 2 3 C2.598125 2.79375 3.19625 2.5875 3.8125 2.375 C6 2 6 2 9 4 C9.1875 7.125 9.1875 7.125 9 10 C7 11 7 11 4.984375 10.3515625 C2.44035878 8.61882704 2.08583603 7.30042611 1.25 4.375 C1.00765625 3.55773437 0.7653125 2.74046875 0.515625 1.8984375 C0.34546875 1.27195312 0.1753125 0.64546875 0 0 Z \",fill:\"#D1B17D\",transform:\"translate(421,425)\"})),_path491||(_path491=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C0.67 6.6 0.34 13.2 0 20 C0.99 20 1.98 20 3 20 C3 17.36 3 14.72 3 12 C3.33 12 3.66 12 4 12 C4 15.3 4 18.6 4 22 C2.02 22 0.04 22 -2 22 C-2.30071865 14.44862068 -1.42625566 7.41143564 0 0 Z \",fill:\"#AF9367\",transform:\"translate(310,364)\"})),_path492||(_path492=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-1.65 2.66 -3.3 3.32 -5 4 C-5 5.65 -5 7.3 -5 9 C-4.01 9.33 -3.02 9.66 -2 10 C-2 10.99 -2 11.98 -2 13 C-1.01 12.34 -0.02 11.68 1 11 C-0.39332574 14.36720387 -1.9789286 15.9859524 -5 18 C-7.5023717 13.30805306 -7.91020197 8.1908548 -7 3 C-4.56149148 0.81817659 -3.2678851 0 0 0 Z \",fill:\"#B89969\",transform:\"translate(410,327)\"})),_path493||(_path493=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 1.65 1.66 3.3 2 5 C2.33 5 2.66 5 3 5 C2.98839844 5.86882812 2.97679687 6.73765625 2.96484375 7.6328125 C2.95582031 8.78523438 2.94679688 9.93765625 2.9375 11.125 C2.92589844 12.26195312 2.91429687 13.39890625 2.90234375 14.5703125 C2.994673 17.8129156 3.38610094 20.81932612 4 24 C3.01 24 2.02 24 1 24 C0.01956036 21.05868109 -0.11621202 19.17498335 -0.09765625 16.11328125 C-0.09443359 15.17548828 -0.09121094 14.23769531 -0.08789062 13.27148438 C-0.07532227 11.80678711 -0.07532227 11.80678711 -0.0625 10.3125 C-0.05798828 9.32443359 -0.05347656 8.33636719 -0.04882812 7.31835938 C-0.03704303 4.87884526 -0.02059011 2.43945311 0 0 Z \",fill:\"#C8A873\",transform:\"translate(658,309)\"})),_path494||(_path494=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.84023188 4.35332736 2.10770995 8.44442519 2.0625 12.875 C2.05347656 14.02742187 2.04445313 15.17984375 2.03515625 16.3671875 C2.02355469 17.23601562 2.01195312 18.10484375 2 19 C3.32 19.66 4.64 20.32 6 21 C4.68 24.3 3.36 27.6 2 31 C1.67 31 1.34 31 1 31 C0.67 20.77 0.34 10.54 0 0 Z \",fill:\"#160E06\",transform:\"translate(560,205)\"})),_path495||(_path495=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 4.62 0 9.24 0 14 C-0.66 14 -1.32 14 -2 14 C-2 13.34 -2 12.68 -2 12 C-2.66 11.67 -3.32 11.34 -4 11 C-4 10.01 -4 9.02 -4 8 C-4.66 7.67 -5.32 7.34 -6 7 C-5.6875 4.625 -5.6875 4.625 -5 2 C-2 0 -2 0 0 0 Z \",fill:\"#DEB77E\",transform:\"translate(481,188)\"})),_path496||(_path496=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.433125 0.474375 0.86625 0.94875 1.3125 1.4375 C3.02309613 3.23686957 3.02309613 3.23686957 6 4 C5.67 4.99 5.34 5.98 5 7 C-1.435 7.495 -1.435 7.495 -8 8 C-7.67 6.68 -7.34 5.36 -7 4 C-6.34 4 -5.68 4 -5 4 C-4.67 3.34 -4.34 2.68 -4 2 C-4 2.99 -4 3.98 -4 5 C-2.68 5 -1.36 5 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#AD976D\",transform:\"translate(522,612)\"})),_path497||(_path497=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.86724686 0.57344937 3.8614515 0.8614515 6 3 C6.45662153 5.19291082 6.820412 7.40585889 7.125 9.625 C7.29257812 10.81351563 7.46015625 12.00203125 7.6328125 13.2265625 C7.75398438 14.14179687 7.87515625 15.05703125 8 16 C9.32 16.33 10.64 16.66 12 17 C12 18.65 12 20.3 12 22 C5.37031782 16.96282633 5.37031782 16.96282633 4.0625 13.5625 C4.01270769 11.52101534 4.08017004 9.47676927 4.1875 7.4375 C4.33532968 3.91884507 4.33532968 3.91884507 2 1.5625 C1.34 1.046875 0.68 0.53125 0 0 Z \",fill:\"#3F321F\",transform:\"translate(481,601)\"})),_path498||(_path498=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.42656082 3.09415757 -0.92998438 6.05880129 -2 9 C-4.625 10.5625 -4.625 10.5625 -7 11 C-7.36300778 4.70786517 -7.36300778 4.70786517 -5.75 1.5625 C-4 0 -4 0 0 0 Z \",fill:\"#A78F68\",transform:\"translate(431,600)\"})),_path499||(_path499=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.48206495 0.254496 2.96068615 0.52911762 4.4375 0.8125 C5.67306641 1.03873047 5.67306641 1.03873047 6.93359375 1.26953125 C7.61550781 1.51058594 8.29742187 1.75164063 9 2 C9.33 2.99 9.66 3.98 10 5 C10.66 5.33 11.32 5.66 12 6 C9.07175348 6.97608217 7.04386724 7.08226668 4 7 C4 6.34 4 5.68 4 5 C3.01 4.67 2.02 4.34 1 4 C-0.34090759 3.34870203 -1.67592331 2.68486725 -3 2 C-2.01 2 -1.02 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#B89458\",transform:\"translate(398,521)\"})),_path500||(_path500=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.639375 0.185625 -1.27875 0.37125 -1.9375 0.5625 C-4.3566143 1.92490846 -4.3566143 1.92490846 -4.9375 5.3125 C-5.00664683 9.39216305 -4.27046789 10.73052624 -2 14 C-2 14.99 -2 15.98 -2 17 C-6.875 12.375 -6.875 12.375 -8 9 C-8.66 9 -9.32 9 -10 9 C-9.40425532 3.63829787 -9.40425532 3.63829787 -7.8125 1.125 C-5.19985125 -0.49664405 -3.00479298 -0.20031953 0 0 Z \",fill:\"#2F2415\",transform:\"translate(269,503)\"})),_path501||(_path501=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 5.28 1 10.56 1 16 C3.97 16 6.94 16 10 16 C10 16.66 10 17.32 10 18 C11.32 17.34 12.64 16.68 14 16 C14.33 17.98 14.66 19.96 15 22 C14.195625 21.505 13.39125 21.01 12.5625 20.5 C8.26178219 18.4179145 8.26178219 18.4179145 0 19 C0 12.73 0 6.46 0 0 Z \",fill:\"#7E6B4C\",transform:\"translate(132,421)\"})),_path502||(_path502=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1 2 1 2 -0.1875 5.75 C-1.70819366 9.57266112 -3.47890662 12.74697629 -6 16 C-6.66 16 -7.32 16 -8 16 C-8 16.66 -8 17.32 -8 18 C-8.66 18 -9.32 18 -10 18 C-8.6948802 13.5730861 -6.9640877 10.04331547 -4.4375 6.1875 C-3.81746094 5.23230469 -3.19742187 4.27710938 -2.55859375 3.29296875 C-1 1 -1 1 0 0 Z \",fill:\"#997F55\",transform:\"translate(338,296)\"})),_path503||(_path503=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.34 1.66 0.68 2.32 0 3 C0.66 3.66 1.32 4.32 2 5 C0.68 5.33 -0.64 5.66 -2 6 C-2 6.66 -2 7.32 -2 8 C-3.64453125 9.65625 -3.64453125 9.65625 -5.8125 11.5 C-6.52019531 12.1084375 -7.22789062 12.716875 -7.95703125 13.34375 C-10 15 -10 15 -13 17 C-11.7580393 13.56072421 -10.44259716 10.74792181 -8 8 C-7.34 8 -6.68 8 -6 8 C-5.7525 7.4225 -5.505 6.845 -5.25 6.25 C-3.83316683 3.6997003 -2.12372463 1.98214299 0 0 Z \",fill:\"#7C6644\",transform:\"translate(552,288)\"})),_path504||(_path504=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.61125422 0.95745988 3.79164659 1.65621688 5.25 4.0625 C6.26169251 8.02496234 6.6745935 11.94518533 6 16 C5.01 17.32 4.02 18.64 3 20 C3 14.72 3 9.44 3 4 C2.01 3.67 1.02 3.34 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#A68E66\",transform:\"translate(499,260)\"})),_path505||(_path505=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C4.60018816 3.90028225 4.15085514 7.47434569 4 12 C3.67 11.34 3.34 10.68 3 10 C2.01 10.33 1.02 10.66 0 11 C-1.32 8.36 -2.64 5.72 -4 3 C-3.01 3 -2.02 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#93733D\",transform:\"translate(705,254)\"})),_path506||(_path506=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 4.62 1.66 9.24 2 14 C3.32 14.33 4.64 14.66 6 15 C6 15.66 6 16.32 6 17 C6.66 17.33 7.32 17.66 8 18 C4.84354695 18.9920281 3.41167349 19.17232844 0.3125 17.875 C-2.30234667 15.75485405 -3.05208357 14.18844618 -4 11 C-2.68 11.33 -1.36 11.66 0 12 C0 8.04 0 4.08 0 0 Z \",fill:\"#886B3E\",transform:\"translate(570,242)\"})),_path507||(_path507=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 1.98 17 3.96 17 6 C16.67 4.68 16.34 3.36 16 2 C11.38 2 6.76 2 2 2 C2.66 4.31 3.32 6.62 4 9 C3.01 8.67 2.02 8.34 1 8 C0.67 5.36 0.34 2.72 0 0 Z \",fill:\"#2D2012\",transform:\"translate(533,199)\"})),_path508||(_path508=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.4606285 2.64738916 4 3.89448334 4 7 C4.66 7 5.32 7 6 7 C6 5.02 6 3.04 6 1 C7.32 2.65 8.64 4.3 10 6 C9.01 6 8.02 6 7 6 C7.350625 6.598125 7.70125 7.19625 8.0625 7.8125 C9 10 9 10 8 13 C7.34 12.01 6.68 11.02 6 10 C5.01 9.67 4.02 9.34 3 9 C1.61328125 7.37109375 1.61328125 7.37109375 0.3125 5.4375 C-0.12449219 4.79683594 -0.56148438 4.15617188 -1.01171875 3.49609375 C-1.50091797 2.75552734 -1.50091797 2.75552734 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#A58658\",transform:\"translate(353,511)\"})),_path509||(_path509=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.3125 1.5 -1.3125 1.5 -3 3 C-3.99 3 -4.98 3 -6 3 C-6 3.66 -6 4.32 -6 5 C-8.5 6.625 -8.5 6.625 -11 8 C-11 7.34 -11 6.68 -11 6 C-12.65 5.67 -14.3 5.34 -16 5 C-16 4.34 -16 3.68 -16 3 C-5.62642369 -0.44419134 -5.62642369 -0.44419134 0 0 Z \",fill:\"#80602F\",transform:\"translate(558,501)\"})),_path510||(_path510=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.125 4.875 2.125 4.875 1 6 C1.99 6 2.98 6 4 6 C4.45375 6.495 4.9075 6.99 5.375 7.5 C6.94847465 9.25526844 6.94847465 9.25526844 9.5625 9.25 C12.00546594 9.14460969 12.00546594 9.14460969 14 8 C14 8.66 14 9.32 14 10 C14.66 10.33 15.32 10.66 16 11 C11.38 11 6.76 11 2 11 C2 10.34 2 9.68 2 9 C1.34 9 0.68 9 0 9 C-0.87890625 2.84765625 -0.87890625 2.84765625 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#BAA076\",transform:\"translate(386,451)\"})),_path511||(_path511=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.67 1.99 2.34 2.98 2 4 C1.91481133 6.80426452 1.8841148 9.5829635 1.90234375 12.38671875 C1.9037587 13.20372757 1.90517365 14.02073639 1.90663147 14.86250305 C1.91222706 17.47087268 1.92477871 20.07915634 1.9375 22.6875 C1.94251557 24.45637897 1.94707838 26.22525928 1.95117188 27.99414062 C1.96219504 32.32946019 1.97945662 36.66471552 2 41 C1.01 41 0.02 41 -1 41 C-0.67 27.47 -0.34 13.94 0 0 Z \",fill:\"#9A8B73\",transform:\"translate(283,421)\"})),_path512||(_path512=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.99118241 4.97011673 4.24845695 9.12333135 4.125 14.375 C4.11597656 15.11105469 4.10695313 15.84710938 4.09765625 16.60546875 C4.07430144 18.4037888 4.03843836 20.20193911 4 22 C3.67 22 3.34 22 3 22 C2.67 17.38 2.34 12.76 2 8 C1.67 9.98 1.34 11.96 1 14 C-1.39073445 10.17482487 -1.55966552 6.40334476 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#BFA171\",transform:\"translate(629,426)\"})),_path513||(_path513=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.4125 0.61875 0.825 1.2375 1.25 1.875 C2.81859713 4.08944337 2.81859713 4.08944337 5 4.9375 C7.75290599 6.39998131 8.62767098 8.25534196 10 11 C10 11.66 10 12.32 10 13 C5.05880254 11.76470063 2.72393226 10.33811434 0 6 C-0.8125 3.25 -0.8125 3.25 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#AB8A58\",transform:\"translate(365,359)\"})),_path514||(_path514=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.97306516 0.49730652 8.63799813 1.55302334 13 4 C13 5.65 13 7.3 13 9 C11.02 8.34 9.04 7.68 7 7 C7 6.34 7 5.68 7 5 C6.01 5 5.02 5 4 5 C4 4.34 4 3.68 4 3 C2.68 3 1.36 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#D2AF78\",transform:\"translate(469,326)\"})),_path515||(_path515=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.21678741 5.08975824 1.41369742 10.17974553 1.59204102 15.27099609 C1.65555678 17.00362812 1.72454653 18.73606834 1.79907227 20.46826172 C1.90512254 22.9551051 1.99160736 25.44196912 2.07421875 27.9296875 C2.1302552 29.09538773 2.1302552 29.09538773 2.18742371 30.28463745 C2.2487793 32.46826172 2.2487793 32.46826172 2 36 C1.01 36.66 0.02 37.32 -1 38 C-0.67 25.46 -0.34 12.92 0 0 Z \",fill:\"#39301D\",transform:\"translate(403,208)\"})),_path516||(_path516=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C0.35 3.31 -1.3 5.62 -3 8 C-3.33 7.34 -3.66 6.68 -4 6 C-5.12148438 6.34224609 -5.12148438 6.34224609 -6.265625 6.69140625 C-7.25046875 6.97886719 -8.2353125 7.26632812 -9.25 7.5625 C-10.22453125 7.85253906 -11.1990625 8.14257812 -12.203125 8.44140625 C-14.96243932 8.99249836 -16.3912824 8.93789609 -19 8 C-17.69675781 7.51080078 -17.69675781 7.51080078 -16.3671875 7.01171875 C-15.21476563 6.57472656 -14.06234375 6.13773438 -12.875 5.6875 C-11.73804688 5.25824219 -10.60109375 4.82898438 -9.4296875 4.38671875 C-5.96982346 3.05296923 -5.96982346 3.05296923 -2.6953125 1.26953125 C-1.80585937 0.85058594 -0.91640625 0.43164062 0 0 Z \",fill:\"#302414\",transform:\"translate(563,552)\"})),_path517||(_path517=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.36179774 1.44077046 5.59156268 3.24750021 8 6 C8 6.66 8 7.32 8 8 C12.455 7.505 12.455 7.505 17 7 C17 7.99 17 8.98 17 10 C16.34 10.66 15.68 11.32 15 12 C14.67 12.66 14.34 13.32 14 14 C13.34 14 12.68 14 12 14 C12 12.68 12 11.36 12 10 C11.319375 9.95875 10.63875 9.9175 9.9375 9.875 C5.83867706 8.65407402 2.79259687 6.2352275 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#373123\",transform:\"translate(276,530)\"})),_path518||(_path518=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C0.67 2.66 0.34 3.32 0 4 C-1.93742341 4.02703381 -3.87495479 4.04641125 -5.8125 4.0625 C-6.89144531 4.07410156 -7.97039062 4.08570313 -9.08203125 4.09765625 C-12 4 -12 4 -15 3 C-15 2.34 -15 1.68 -15 1 C-9.92928099 0.28832014 -5.11791642 -0.10662326 0 0 Z \",fill:\"#9B7639\",transform:\"translate(412,509)\"})),_path519||(_path519=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.50769231 -0.36923077 7.50769231 -0.36923077 10 1.5 C10.495 2.2425 10.495 2.2425 11 3 C10.34 3 9.68 3 9 3 C9 4.32 9 5.64 9 7 C8.01 7 7.02 7 6 7 C6 6.34 6 5.68 6 5 C3.36 4.34 0.72 3.68 -2 3 C-1.34 2.67 -0.68 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#B79255\",transform:\"translate(368,377)\"})),_path520||(_path520=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.41176754 3.60296594 2.1535853 4.78402067 0 7.8125 C-0.66 8.534375 -1.32 9.25625 -2 10 C-3.32 9.67 -4.64 9.34 -6 9 C-6 7.35 -6 5.7 -6 4 C-4.02 3.34 -2.04 2.68 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#D8B47C\",transform:\"translate(410,327)\"})),_path521||(_path521=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-5.91684902 6.86214442 -5.91684902 6.86214442 -10.4375 7.4375 C-11.283125 7.293125 -12.12875 7.14875 -13 7 C-12.67 6.34 -12.34 5.68 -12 5 C-12.66 4.34 -13.32 3.68 -14 3 C-13.113125 2.71125 -12.22625 2.4225 -11.3125 2.125 C-8.06962955 1.07817242 -8.06962955 1.07817242 -5.3125 -0.1875 C-3 -1 -3 -1 0 0 Z \",fill:\"#B5935D\",transform:\"translate(509,154)\"})),_path522||(_path522=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.37562854 1.28965176 2.70766393 2.62689293 4 4 C4 4.66 4 5.32 4 6 C4.66 6 5.32 6 6 6 C6 9.63 6 13.26 6 17 C4.35 17.66 2.7 18.32 1 19 C1.33 17.68 1.66 16.36 2 15 C2.66 15 3.32 15 4 15 C2.83962234 7.91369345 2.83962234 7.91369345 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#3D2F1E\",transform:\"translate(393,586)\"})),_path523||(_path523=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.98 0.99 -1.98 0.99 -4 2 C-4 2.66 -4 3.32 -4 4 C-7.41831915 6.5393228 -9.75776898 7.3636198 -14 7 C-14.33 5.68 -14.66 4.36 -15 3 C-14.34 2.67 -13.68 2.34 -13 2 C-13 2.66 -13 3.32 -13 4 C-11.35 3.67 -9.7 3.34 -8 3 C-8 2.34 -8 1.68 -8 1 C-3.375 -1.125 -3.375 -1.125 0 0 Z \",fill:\"#50432E\",transform:\"translate(626,584)\"})),_path524||(_path524=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C11.385 1.485 11.385 1.485 23 3 C23 3.33 23 3.66 23 4 C20.95920995 4.1968121 18.91729993 4.38202831 16.875 4.5625 C15.16957031 4.71912109 15.16957031 4.71912109 13.4296875 4.87890625 C10.11102007 4.99608016 7.2437314 4.6655072 4 4 C4 3.34 4 2.68 4 2 C2.68 1.67 1.36 1.34 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#2B1F0F\",transform:\"translate(445,568)\"})),_path525||(_path525=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.54606742 1.85617978 9.54606742 1.85617978 13 4 C13.33 4.99 13.66 5.98 14 7 C13.01 7 12.02 7 11 7 C10.67 7.66 10.34 8.32 10 9 C8.33043913 7.69118353 6.66441696 6.37785174 5 5.0625 C4.071875 4.33160156 3.14375 3.60070312 2.1875 2.84765625 C1.465625 2.23792969 0.74375 1.62820313 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#42301D\",transform:\"translate(424,528)\"})),_path526||(_path526=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.12375 0.9075 1.2475 1.815 1.375 2.75 C1.92109677 5.58970323 2.57263803 7.52590591 4 10 C2.6875 11.5 2.6875 11.5 1 13 C0.01 13 -0.98 13 -2 13 C-2 13.66 -2 14.32 -2 15 C-2.66 15 -3.32 15 -4 15 C-4 14.34 -4 13.68 -4 13 C-4.66 12.67 -5.32 12.34 -6 12 C-5.195625 11.319375 -4.39125 10.63875 -3.5625 9.9375 C-0.57711289 6.51522698 -0.26218749 4.4571874 0 0 Z \",fill:\"#CBAE80\",transform:\"translate(186,430)\"})),_path527||(_path527=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.33 0 0.66 0 1 C-0.89203125 1.13277344 -1.7840625 1.26554687 -2.703125 1.40234375 C-3.87359375 1.57894531 -5.0440625 1.75554687 -6.25 1.9375 C-7.99023438 2.19853516 -7.99023438 2.19853516 -9.765625 2.46484375 C-12.23106961 2.8727736 -14.59424562 3.33901303 -17 4 C-17 5.32 -17 6.64 -17 8 C-17.66 8 -18.32 8 -19 8 C-19 7.34 -19 6.68 -19 6 C-21.64 6 -24.28 6 -27 6 C-24.24344284 3.24344284 -21.11651391 2.77472255 -17.4375 1.875 C-16.71820312 1.69614258 -15.99890625 1.51728516 -15.2578125 1.33300781 C-10.05401345 0.10237966 -5.3591512 -0.38279651 0 0 Z \",fill:\"#79633F\",transform:\"translate(539,374)\"})),_path528||(_path528=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.375 0.3125 2.375 0.3125 5 1 C5.66 1.99 6.32 2.98 7 4 C10.56769552 4.73606499 10.56769552 4.73606499 14 5 C14 5.66 14 6.32 14 7 C10.86128812 8.56935594 8.46144178 8.35201103 5 8 C2.0625 5.6875 2.0625 5.6875 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#967440\",transform:\"translate(482,373)\"})),_path529||(_path529=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-0.89203125 2.26554687 -1.7840625 2.53109375 -2.703125 2.8046875 C-3.87359375 3.15789062 -5.0440625 3.51109375 -6.25 3.875 C-7.99023438 4.39707031 -7.99023438 4.39707031 -9.765625 4.9296875 C-12.8841429 5.8656715 -12.8841429 5.8656715 -15.171875 7.1328125 C-17 8 -17 8 -21 8 C-21 7.01 -21 6.02 -21 5 C-17.54471009 2.96597466 -14.32409931 2.4679095 -10.375 1.9375 C-6.92557464 1.46853318 -3.33563589 0 0 0 Z \",fill:\"#826B43\",transform:\"translate(282,302)\"})),_path530||(_path530=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.19401633 1.81181405 1.38004375 3.62448532 1.5625 5.4375 C1.66691406 6.44683594 1.77132813 7.45617187 1.87890625 8.49609375 C1.93884766 9.73552734 1.93884766 9.73552734 2 11 C1 12 1 12 -2.375 12.0625 C-3.57125 12.041875 -4.7675 12.02125 -6 12 C-6.99 12 -7.98 12 -9 12 C-7 9 -7 9 -4.5 8.25 C-1.58388053 7.15066394 -1.58388053 7.15066394 -0.6875 3.375 C-0.460625 2.26125 -0.23375 1.1475 0 0 Z \",fill:\"#987B52\",transform:\"translate(430,602)\"})),_path531||(_path531=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.3125 -0.25 2.3125 -0.25 5 0 C6.8125 1.75 6.8125 1.75 8 4 C8 5.32 8 6.64 8 8 C5.03 7.505 5.03 7.505 2 7 C1.67 7.99 1.34 8.98 1 10 C1.04125 9.05125 1.0825 8.1025 1.125 7.125 C1.34973818 3.89755144 1.34973818 3.89755144 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#B1986C\",transform:\"translate(520,598)\"})),_path532||(_path532=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.43836751 0.11458693 2.87570966 0.24209116 4.3125 0.375 C5.51326172 0.47941406 5.51326172 0.47941406 6.73828125 0.5859375 C9 1 9 1 12 3 C12 3.66 12 4.32 12 5 C11.05125 4.938125 10.1025 4.87625 9.125 4.8125 C7.578125 4.9053125 7.578125 4.9053125 6 5 C5.01 6.485 5.01 6.485 4 8 C3.34 8 2.68 8 2 8 C1.34 5.36 0.68 2.72 0 0 Z \",fill:\"#BFA170\",transform:\"translate(403,590)\"})),_path533||(_path533=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3 1 3 1 5 4 C9.17722453 4.34239545 11.92701491 4.42919404 15.8125 2.875 C16.534375 2.58625 17.25625 2.2975 18 2 C18.99 2.66 19.98 3.32 21 4 C14.98913108 6.6714973 9.60847935 7.94582325 3 7 C2.34 6.34 1.68 5.68 1 5 C1 4.34 1 3.68 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#6E5E4A\",transform:\"translate(779,456)\"})),_path534||(_path534=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.99 2.97 3.98 5.94 5 9 C4.01 9.33 3.02 9.66 2 10 C0.79117904 12.00016466 0.79117904 12.00016466 0 14 C-1.24377393 11.51245214 -1.13306235 9.77344699 -1.125 7 C-1.12757813 6.113125 -1.13015625 5.22625 -1.1328125 4.3125 C-1 2 -1 2 0 0 Z \",fill:\"#6E5630\",transform:\"translate(268,262)\"})),_path535||(_path535=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.3125 5.75 C2.23200938 9.75989658 1.07510554 12.54149077 -1 16 C-1.66 16 -2.32 16 -3 16 C-2.98839844 15.30132812 -2.97679687 14.60265625 -2.96484375 13.8828125 C-2.95582031 12.97273438 -2.94679688 12.06265625 -2.9375 11.125 C-2.92589844 10.22007812 -2.91429687 9.31515625 -2.90234375 8.3828125 C-2.83750743 5.9831415 -2.83750743 5.9831415 -4 4 C-3.01 4 -2.02 4 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#7C6137\",transform:\"translate(284,254)\"})),_path536||(_path536=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.31392226 0.4793247 6.16569547 1.7457985 9 5 C8.01 6.485 8.01 6.485 7 8 C5.68 7.01 4.36 6.02 3 5 C3 6.32 3 7.64 3 9 C2.34 9 1.68 9 1 9 C-0.4783226 6.04335481 -0.06032783 3.25770263 0 0 Z \",fill:\"#AC8955\",transform:\"translate(232,241)\"})),_path537||(_path537=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.1297765 8.60490267 7.1297765 8.60490267 6.75 12.6875 C6 15 6 15 5 17 C5.66 17.33 6.32 17.66 7 18 C6.01 18 5.02 18 4 18 C3.89042969 17.41992188 3.78085937 16.83984375 3.66796875 16.2421875 C2.88307524 12.37515119 2.09093381 9.18186761 0.3125 5.625 C-0.120625 4.75875 -0.55375 3.8925 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#9F8963\",transform:\"translate(609,570)\"})),_path538||(_path538=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-1.65 2.66 -3.3 3.32 -5 4 C-4.01 4.99 -3.02 5.98 -2 7 C-3.375 8.5 -3.375 8.5 -5 10 C-5.66 10 -6.32 10 -7 10 C-7 9.34 -7 8.68 -7 8 C-8.98 8.33 -10.96 8.66 -13 9 C-11.72777885 5.18333654 -10.46020423 4.88738412 -7 3 C-6.113125 2.443125 -5.22625 1.88625 -4.3125 1.3125 C-2 0 -2 0 0 0 Z \",fill:\"#AA8B5B\",transform:\"translate(568,543)\"})),_path539||(_path539=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.95409701 1.37154504 5.44008376 2.98863724 8 5 C7.34 5 6.68 5 6 5 C6.33 6.65 6.66 8.3 7 10 C4.69 9.34 2.38 8.68 0 8 C-0.33 6.68 -0.66 5.36 -1 4 C-0.34 4 0.32 4 1 4 C0.67 2.68 0.34 1.36 0 0 Z \",fill:\"#987A48\",transform:\"translate(397,543)\"})),_path540||(_path540=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 1.65 1 3.3 1 5 C0.34 5 -0.32 5 -1 5 C-1.33 6.32 -1.66 7.64 -2 9 C-4.75 9.3125 -4.75 9.3125 -8 9 C-10.375 6.5 -10.375 6.5 -12 4 C-5.25 3.875 -5.25 3.875 -3 5 C-3 4.34 -3 3.68 -3 3 C-2.34 3 -1.68 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#322B1E\",transform:\"translate(280,515)\"})),_path541||(_path541=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C0.8141763 3.37503669 -0.27573689 5.64722731 -3 8 C-0.69 8 1.62 8 4 8 C0.99382731 11.00617269 -1.82381598 10.59585316 -6 11 C-6.33 8.69 -6.66 6.38 -7 4 C-6.67 4.66 -6.34 5.32 -6 6 C-5.34 6 -4.68 6 -4 6 C-3.71125 5.38125 -3.4225 4.7625 -3.125 4.125 C-2 2 -2 2 0 0 Z \",fill:\"#412E15\",transform:\"translate(528,512)\"})),_path542||(_path542=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C2.66 2.66 3.32 3.32 4 4 C3.01 4 2.02 4 1 4 C0.67 5.32 0.34 6.64 0 8 C-2.64 8 -5.28 8 -8 8 C-6.6106395 4.52659875 -5.38754843 3.48205244 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#967237\",transform:\"translate(466,498)\"})),_path543||(_path543=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.99 3.96 1.98 6 3 C6.33 2.01 6.66 1.02 7 0 C7.66 0.99 8.32 1.98 9 3 C13.31887187 4.34063213 16.96845037 4.48419677 21.0625 2.5625 C21.701875 2.046875 22.34125 1.53125 23 1 C22.67 2.65 22.34 4.3 22 6 C6.69080861 6.57329843 6.69080861 6.57329843 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#8D7D65\",transform:\"translate(812,456)\"})),_path544||(_path544=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 3 2 3 2.9375 5.875 C3.9688521 8.90838852 5.26567982 11.31968699 7 14 C3.98342209 13.85969405 1.76158727 13.70648535 -0.51171875 11.59765625 C-1.73256066 10.11095765 -2.87246522 8.55865102 -4 7 C-3.34 6.5875 -2.68 6.175 -2 5.75 C-1.34 5.1725 -0.68 4.595 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#BCA075\",transform:\"translate(775,447)\"})),_path545||(_path545=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.31216727 0.98469838 4.73502323 1.62146175 6.75 4.5 C9.07239966 9.14479933 9.08422571 11.77800572 9 17 C8.01 17.33 7.02 17.66 6 18 C5.96132813 16.62714844 5.96132813 16.62714844 5.921875 15.2265625 C5.86515625 14.03804688 5.8084375 12.84953125 5.75 11.625 C5.70359375 10.44164062 5.6571875 9.25828125 5.609375 8.0390625 C5.40828125 7.03617187 5.2071875 6.03328125 5 5 C3.07255538 3.72354306 3.07255538 3.72354306 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#9D8560\",transform:\"translate(832,439)\"})),_path546||(_path546=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.10930924 4.21861849 2.22613164 6.02546581 2.16015625 10.62890625 C2.14919922 11.91087891 2.13824219 13.19285156 2.12695312 14.51367188 C2.10616959 15.86329222 2.08467764 17.21290184 2.0625 18.5625 C2.02608155 21.20964627 1.99797019 23.85660105 1.97265625 26.50390625 C1.95468994 27.67767822 1.93672363 28.8514502 1.91821289 30.06079102 C1.85969016 33.06193272 1.85969016 33.06193272 3 36 C2.01 36 1.02 36 0 36 C0 24.12 0 12.24 0 0 Z \",fill:\"#DCB77B\",transform:\"translate(318,424)\"})),_path547||(_path547=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.875 0.875 7.875 0.875 9 2 C10.67884238 2.3931648 12.36850045 2.74085452 14.0625 3.0625 C14.98160156 3.23910156 15.90070313 3.41570312 16.84765625 3.59765625 C17.55792969 3.73042969 18.26820313 3.86320312 19 4 C19 4.33 19 4.66 19 5 C16.95863605 5.05451714 14.91684144 5.09302485 12.875 5.125 C11.16957031 5.15980469 11.16957031 5.15980469 9.4296875 5.1953125 C5.94242233 4.99672109 3.2446138 4.2524801 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#A7874E\",transform:\"translate(398,370)\"})),_path548||(_path548=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2.484375 2.9609375 2.484375 2.9609375 2.75 5.375 C2.84796875 6.16648438 2.9459375 6.95796875 3.046875 7.7734375 C3 10 3 10 1 13 C0.34 13 -0.32 13 -1 13 C-2.50930183 16.3863251 -2.50930183 16.3863251 -3 20 C-4.98 19.34 -6.96 18.68 -9 18 C-8.4225 17.5875 -7.845 17.175 -7.25 16.75 C-4.92980716 15.02870249 -4.92980716 15.02870249 -2.875 12.8125 C-1 11 -1 11 1 11 C0.67 7.37 0.34 3.74 0 0 Z \",fill:\"#332616\",transform:\"translate(499,237)\"})),_path549||(_path549=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.83663072 1.34929464 6.65172569 3.07751025 9.8125 5.625 C10.99779297 6.57246094 10.99779297 6.57246094 12.20703125 7.5390625 C12.79871094 8.02117187 13.39039063 8.50328125 14 9 C13.67 10.32 13.34 11.64 13 13 C12.55269531 12.61328125 12.10539062 12.2265625 11.64453125 11.828125 C11.03996094 11.30734375 10.43539063 10.7865625 9.8125 10.25 C9.17699219 9.70214844 8.54148437 9.15429688 7.88671875 8.58984375 C6.3374203 7.28432725 4.73735346 6.03929067 3.125 4.8125 C1 3 1 3 0 0 Z \",fill:\"#A49377\",transform:\"translate(378,208)\"})),_path550||(_path550=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 4.95 3 9.9 3 15 C2.01 15 1.02 15 0 15 C0 10.05 0 5.1 0 0 Z \",fill:\"#5D4726\",transform:\"translate(473,604)\"})),_path551||(_path551=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.32739873 0.30249079 5.5627594 0.71234171 8.375 2.5625 C10.76164755 6.14247133 10.28323532 8.75147026 10 13 C9.67 13 9.34 13 9 13 C8.67 10.69 8.34 8.38 8 6 C7.01 6 6.02 6 5 6 C4.67 8.64 4.34 11.28 4 14 C3.67 14 3.34 14 3 14 C2.92652344 12.98679687 2.92652344 12.98679687 2.8515625 11.953125 C2.77679688 11.06109375 2.70203125 10.1690625 2.625 9.25 C2.55539063 8.36828125 2.48578125 7.4865625 2.4140625 6.578125 C2.00149945 4.00933618 1.28839043 2.24158985 0 0 Z \",fill:\"#B2966E\",transform:\"translate(146,440)\"})),_path552||(_path552=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 1.65 1.66 3.3 2 5 C2.66 5 3.32 5 4 5 C4.33 3.68 4.66 2.36 5 1 C5 4.96 5 8.92 5 13 C3.35 12.67 1.7 12.34 0 12 C0 8.04 0 4.08 0 0 Z \",fill:\"#DEBA83\",transform:\"translate(769,436)\"})),_path553||(_path553=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5 5.94 5 11.88 5 18 C3.68 17.34 2.36 16.68 1 16 C1.01160156 15.18015625 1.02320313 14.3603125 1.03515625 13.515625 C1.04869141 11.89914062 1.04869141 11.89914062 1.0625 10.25 C1.07410156 9.18265625 1.08570313 8.1153125 1.09765625 7.015625 C1.01510087 4.46631499 0.74617558 2.42066409 0 0 Z \",fill:\"#D5B580\",transform:\"translate(127,420)\"})),_path554||(_path554=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 1.32 5.94 2.64 9 4 C9 4.33 9 4.66 9 5 C1.95559921 5.21133202 -4.24112575 5.07965362 -11 3 C-11 2.67 -11 2.34 -11 2 C-7.7 2 -4.4 2 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#382713\",transform:\"translate(371,372)\"})),_path555||(_path555=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.78898419 -0.20674944 10.42932723 0.40837921 16 2 C16 2.33 16 2.66 16 3 C14.02 3 12.04 3 10 3 C10 3.66 10 4.32 10 5 C11.98 5 13.96 5 16 5 C16 5.66 16 6.32 16 7 C10.03435204 6.49228528 5.36190101 4.61407872 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#856E4E\",transform:\"translate(332,369)\"})),_path556||(_path556=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.6028838 0.69319142 6.47899477 2.18545909 9.6875 3.9375 C10.66074219 4.46214844 11.63398438 4.98679687 12.63671875 5.52734375 C15 7 15 7 16 9 C10.05901461 8.62868841 5.5959899 6.87856709 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#9A825D\",transform:\"translate(466,338)\"})),_path557||(_path557=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.98 0.66 -3.96 1.32 -6 2 C-6 2.66 -6 3.32 -6 4 C-2.04 4 1.92 4 6 4 C6 4.33 6 4.66 6 5 C3.03 5 0.06 5 -3 5 C-3 5.66 -3 6.32 -3 7 C-4.32 6.67 -5.64 6.34 -7 6 C-7 5.34 -7 4.68 -7 4 C-9.31 4.66 -11.62 5.32 -14 6 C-10.33829808 1.75242578 -5.68114185 -1.89371395 0 0 Z \",fill:\"#6B552E\",transform:\"translate(568,282)\"})),_path558||(_path558=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2.02698189 2.62490954 2.04638757 4.24994633 2.0625 5.875 C2.07410156 6.77992188 2.08570313 7.68484375 2.09765625 8.6171875 C2 11 2 11 1 13 C0.34 13 -0.32 13 -1 13 C-1.33 13.66 -1.66 14.32 -2 15 C-2 14.01 -2 13.02 -2 12 C-2.66 12 -3.32 12 -4 12 C-2.66666667 8 -1.33333333 4 0 0 Z \",fill:\"#8F6B35\",transform:\"translate(695,265)\"})),_path559||(_path559=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.99 0 1.98 0 3 C-2.10320063 3.50404808 -4.20759791 4.00310508 -6.3125 4.5 C-8.07013672 4.91765625 -8.07013672 4.91765625 -9.86328125 5.34375 C-13 6 -13 6 -16 6 C-16 5.34 -16 4.68 -16 4 C-14.02 3.67 -12.04 3.34 -10 3 C-10 2.34 -10 1.68 -10 1 C-6.78548731 -0.60725635 -3.56387464 -0.05748185 0 0 Z \",fill:\"#A5824A\",transform:\"translate(698,250)\"})),_path560||(_path560=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 4.62 3 9.24 3 14 C0 13 0 13 -2 10 C-2 9.01 -2 8.02 -2 7 C-1.34 7 -0.68 7 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#684F2B\",transform:\"translate(480,605)\"})),_path561||(_path561=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 1.98 -0.66 3.96 -1 6 C-0.34 6.33 0.32 6.66 1 7 C0.071875 6.79375 -0.85625 6.5875 -1.8125 6.375 C-5.15173402 5.63307034 -5.15173402 5.63307034 -8 8 C-10.1875 7.625 -10.1875 7.625 -12 7 C-10.56967163 5.82455195 -9.13046758 4.65989738 -7.6875 3.5 C-6.88699219 2.8503125 -6.08648438 2.200625 -5.26171875 1.53125 C-3 0 -3 0 0 0 Z \",fill:\"#705424\",transform:\"translate(540,500)\"})),_path562||(_path562=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.98941468 1.49470734 3.53778532 4.07557063 5 7 C7.28705831 8.14352916 8.59264762 8.10334439 11.125 8.0625 C12.40375 8.041875 13.6825 8.02125 15 8 C15 8.99 15 9.98 15 11 C9.158256 11.35050464 5.1468192 11.16727335 0 8 C0.66 7.67 1.32 7.34 2 7 C1.34 4.69 0.68 2.38 0 0 Z \",fill:\"#746750\",transform:\"translate(460,452)\"})),_path563||(_path563=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.495 1.98 0.495 4 1 C4 6.94 4 12.88 4 19 C2.68 18.67 1.36 18.34 0 18 C0.99 18 1.98 18 3 18 C2.67 15.03 2.34 12.06 2 9 C1.01 9.495 1.01 9.495 0 10 C-1.125 2.25 -1.125 2.25 0 0 Z \",fill:\"#DAB67E\",transform:\"translate(431,441)\"})),_path564||(_path564=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.68762851 1.6454378 3.3540349 3.31288577 5 5 C5 5.33 5 5.66 5 6 C3.02 6 1.04 6 -1 6 C-1 6.66 -1 7.32 -1 8 C0.32 7.67 1.64 7.34 3 7 C2.67 8.32 2.34 9.64 2 11 C2.99 11.33 3.98 11.66 5 12 C4.01 12.495 4.01 12.495 3 13 C0.18060883 10.79020692 -2.53058944 8.59937954 -5 6 C-4.67 5.34 -4.34 4.68 -4 4 C-3.01 4.33 -2.02 4.66 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#8C7145\",transform:\"translate(384,356)\"})),_path565||(_path565=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.62 0 9.24 0 14 0 C14 0.33 14 0.66 14 1 C12.02 1.33 10.04 1.66 8 2 C8 2.33 8 2.66 8 3 C6.02 3 4.04 3 2 3 C2 4.65 2 6.3 2 8 C1.34 8 0.68 8 0 8 C-0.33 9.65 -0.66 11.3 -1 13 C-1.33 13 -1.66 13 -2 13 C-2.2062504 7.84374012 -1.69930719 5.09792156 0 0 Z \",fill:\"#5A4930\",transform:\"translate(414,198)\"})),_path566||(_path566=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 1.65 3.3 3.3 5 5 C2.44931155 7.35448165 1.28982642 7.98327924 -2.25 8.1875 C-3.1575 8.125625 -4.065 8.06375 -5 8 C-5.33 6.68 -5.66 5.36 -6 4 C-3.525 4.495 -3.525 4.495 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#C0A473\",transform:\"translate(573,599)\"})),_path567||(_path567=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.66 2.31 -1.32 4.62 -2 7 C-5.67410785 8.17571451 -9.16929183 8.07366746 -13 8 C-10.83676753 5.68757908 -8.62352196 3.9843604 -5.9375 2.3125 C-5.24527344 1.87550781 -4.55304687 1.43851563 -3.83984375 0.98828125 C-2 0 -2 0 0 0 Z \",fill:\"#382B1C\",transform:\"translate(578,544)\"})),_path568||(_path568=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C1.95199219 1.83144531 1.95199219 1.83144531 0.8828125 2.6796875 C-0.02726563 3.40414062 -0.93734375 4.12859375 -1.875 4.875 C-2.77992188 5.59429688 -3.68484375 6.31359375 -4.6171875 7.0546875 C-7.00265176 8.93560474 -7.00265176 8.93560474 -9 11 C-9 10.01 -9 9.02 -9 8 C-9.99 8 -10.98 8 -12 8 C-12 7.01 -12 6.02 -12 5 C-11.319375 4.9175 -10.63875 4.835 -9.9375 4.75 C-7.24918057 4.06362057 -5.69303157 3.30223812 -3.375 1.875 C-2.26125 1.25625 -1.1475 0.6375 0 0 Z \",fill:\"#2D1F0D\",transform:\"translate(536,528)\"})),_path569||(_path569=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.54050113 0.56825653 10.03715966 2.62886517 15 5 C15 5.66 15 6.32 15 7 C9.88634986 5.9318153 4.92772031 4.76892524 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#624D2A\",transform:\"translate(668,524)\"})),_path570||(_path570=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.804375 0.495 0.804375 0.495 1.625 1 C5.59671095 2.67229935 8.97077453 2.34307516 13 1 C14.66666667 1 16.33333333 1 18 1 C18 1.66 18 2.32 18 3 C12.16033289 4.98797178 5.59874314 6.61045304 -0.26953125 3.984375 C-0.84058594 3.65953125 -1.41164063 3.3346875 -2 3 C-1.01 2.67 -0.02 2.34 1 2 C0.67 1.34 0.34 0.68 0 0 Z \",fill:\"#706246\",transform:\"translate(608,458)\"})),_path571||(_path571=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.74958984 0.00451172 1.49917969 0.00902344 2.27148438 0.01367188 C4.11852383 0.02543646 5.96552213 0.04337135 7.8125 0.0625 C7.8125 0.3925 7.8125 0.7225 7.8125 1.0625 C7.03003906 1.11148437 6.24757813 1.16046875 5.44140625 1.2109375 C4.42949219 1.28570312 3.41757812 1.36046875 2.375 1.4375 C1.36566406 1.50710938 0.35632813 1.57671875 -0.68359375 1.6484375 C-1.50988281 1.78507812 -2.33617187 1.92171875 -3.1875 2.0625 C-3.5175 2.7225 -3.8475 3.3825 -4.1875 4.0625 C-6.47265625 4.6953125 -6.47265625 4.6953125 -9.25 5.1875 C-10.16910156 5.35507812 -11.08820313 5.52265625 -12.03515625 5.6953125 C-13.10056641 5.87707031 -13.10056641 5.87707031 -14.1875 6.0625 C-13.8575 5.0725 -13.5275 4.0825 -13.1875 3.0625 C-12.5275 3.0625 -11.8675 3.0625 -11.1875 3.0625 C-11.1875 2.4025 -11.1875 1.7425 -11.1875 1.0625 C-7.42449626 -0.19183458 -3.91539091 -0.04445422 0 0 Z \",fill:\"#A98F66\",transform:\"translate(259.1875,367.9375)\"})),_path572||(_path572=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C6.02558881 3.34939881 6.21738987 5.86962551 6.125 9.75 C6.10695313 10.73484375 6.08890625 11.7196875 6.0703125 12.734375 C6.03550781 13.85585938 6.03550781 13.85585938 6 15 C5.67 15 5.34 15 5 15 C5 11.7 5 8.4 5 5 C4.34 5 3.68 5 3 5 C2.34 6.98 1.68 8.96 1 11 C0.67 11 0.34 11 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#766141\",transform:\"translate(584,339)\"})),_path573||(_path573=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.99 0 1.98 0 3 C-1.98 3.33 -3.96 3.66 -6 4 C-6 5.32 -6 6.64 -6 8 C-3.69 8.66 -1.38 9.32 1 10 C1 10.33 1 10.66 1 11 C-0.258125 11.04125 -1.51625 11.0825 -2.8125 11.125 C-3.52019531 11.14820313 -4.22789062 11.17140625 -4.95703125 11.1953125 C-7 11 -7 11 -10 9 C-10 8.01 -10 7.02 -10 6 C-3.27272727 0 -3.27272727 0 0 0 Z \",fill:\"#3D2A13\",transform:\"translate(699,286)\"})),_path574||(_path574=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.12375 0.61875 0.2475 1.2375 0.375 1.875 C0.87197356 4.19120832 0.87197356 4.19120832 3 6 C2.67 6.33 2.34 6.66 2 7 C2.99 7.66 3.98 8.32 5 9 C4.01 9.495 4.01 9.495 3 10 C3 10.99 3 11.98 3 13 C2.401875 12.54625 1.80375 12.0925 1.1875 11.625 C-0.50590652 10.36704087 -2.24477086 9.17015276 -4 8 C-3.01 7.67 -2.02 7.34 -1 7 C-3.97 6.505 -3.97 6.505 -7 6 C-6.401875 5.566875 -5.80375 5.13375 -5.1875 4.6875 C-3.29216913 3.22538761 -1.6471407 1.72949773 0 0 Z \",fill:\"#A38A62\",transform:\"translate(489,248)\"})),_path575||(_path575=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.5 1.8125 2.5 1.8125 5 4 C5 4.99 5 5.98 5 7 C4.01 7 3.02 7 2 7 C2 7.66 2 8.32 2 9 C-0.86724686 8.42655063 -1.8614515 8.1385485 -4 6 C-3.67 5.01 -3.34 4.02 -3 3 C-2.01 2.67 -1.02 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#CEAE7B\",transform:\"translate(382,216)\"})),_path576||(_path576=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.36724448 3.55086672 2.24079681 5.11174259 2.1875 9.3125 C2.18105469 10.42238281 2.17460937 11.53226563 2.16796875 12.67578125 C2.0071722 15.85805714 1.59153978 18.87193763 1 22 C0.34 22 -0.32 22 -1 22 C-1 17.71 -1 13.42 -1 9 C-0.34 9 0.32 9 1 9 C0.67 6.03 0.34 3.06 0 0 Z \",fill:\"#B9965B\",transform:\"translate(484,110)\"})),_path577||(_path577=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.9375 0.75 1.9375 0.75 4 2 C4.75 4.125 4.75 4.125 5 6 C6.32 6 7.64 6 9 6 C9 5.34 9 4.68 9 4 C9.66 4 10.32 4 11 4 C11 4.66 11 5.32 11 6 C11.66 6.33 12.32 6.66 13 7 C11.08364783 7.05423638 9.16685075 7.09289963 7.25 7.125 C5.64898437 7.15980469 5.64898437 7.15980469 4.015625 7.1953125 C1.07529894 7.00487687 -0.52361878 6.52670104 -3 5 C-2.01 5 -1.02 5 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#C1A573\",transform:\"translate(476,614)\"})),_path578||(_path578=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3.18451025 10.41002278 3.18451025 10.41002278 2 15 C1.01 15 0.02 15 -1 15 C-0.67 10.05 -0.34 5.1 0 0 Z \",fill:\"#503B1F\",transform:\"translate(402,592)\"})),_path579||(_path579=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.3 0 6.6 0 10 0 C8.84150783 3.4754765 8.24813275 4.37593362 5 6 C1.25 5.1875 1.25 5.1875 -2 4 C-1.34 3.67 -0.68 3.34 0 3 C0.66 3.33 1.32 3.66 2 4 C1.34 2.68 0.68 1.36 0 0 Z \",fill:\"#B4996F\",transform:\"translate(645,560)\"})),_path580||(_path580=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.485 0.99 1.485 0.99 3 2 C3.328125 4.6796875 3.328125 4.6796875 3.25 7.875 C3.22679687 9.44894531 3.22679687 9.44894531 3.203125 11.0546875 C3.03275976 13.52498345 2.70723334 15.63875322 2 18 C1.34 18 0.68 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#AF9061\",transform:\"translate(484,530)\"})),_path581||(_path581=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.34 1 1.68 1 1 1 C1 3.64 1 6.28 1 9 C-0.32 9 -1.64 9 -3 9 C-3 12.96 -3 16.92 -3 21 C-3.33 21 -3.66 21 -4 21 C-4.738041 6.21867882 -4.738041 6.21867882 0 0 Z \",fill:\"#7A5B2F\",transform:\"translate(481,525)\"})),_path582||(_path582=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.8125 0.0625 1.8125 0.0625 4 1 C5.75 4.5625 5.75 4.5625 7 8 C5 9 5 9 2.4375 8.375 C0 7 0 7 -0.875 4.5 C-1 2 -1 2 0 0 Z \",fill:\"#B89863\",transform:\"translate(504,503)\"})),_path583||(_path583=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.05384521 2.29141286 1.09272087 4.58318188 1.125 6.875 C1.14820313 8.15117187 1.17140625 9.42734375 1.1953125 10.7421875 C1 14 1 14 -1 16 C-1.33 14.02 -1.66 12.04 -2 10 C-2.66 10 -3.32 10 -4 10 C-4 8.68 -4 7.36 -4 6 C-3.34 6 -2.68 6 -2 6 C-1.7834375 5.071875 -1.7834375 5.071875 -1.5625 4.125 C-1 2 -1 2 0 0 Z \",fill:\"#C1A375\",transform:\"translate(706,434)\"})),_path584||(_path584=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.99 3.63 4.98 7.26 6 11 C5.34 11 4.68 11 4 11 C4 9.68 4 8.36 4 7 C2.02 7.66 0.04 8.32 -2 9 C-1.125 1.125 -1.125 1.125 0 0 Z \",fill:\"#BFA679\",transform:\"translate(218,419)\"})),_path585||(_path585=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.75 0.875 7.75 0.875 10 2 C10 3.65 10 5.3 10 7 C9.01 6.01 8.02 5.02 7 4 C6.38125 4.495 5.7625 4.99 5.125 5.5 C3 7 3 7 1 7 C0.31292445 4.50935112 0 2.62113708 0 0 Z \",fill:\"#DFBB80\",transform:\"translate(712,371)\"})),_path586||(_path586=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.598125 0.226875 1.19625 0.45375 1.8125 0.6875 C1.32136719 1.08582031 0.83023437 1.48414063 0.32421875 1.89453125 C-1.61933425 4.1996755 -1.504036 5.4071719 -1.375 8.375 C-1.34792969 9.18324219 -1.32085937 9.99148438 -1.29296875 10.82421875 C-1.25816406 11.43910156 -1.22335937 12.05398438 -1.1875 12.6875 C-2.5075 12.3575 -3.8275 12.0275 -5.1875 11.6875 C-5.26881463 10.25094146 -5.32683559 8.8130517 -5.375 7.375 C-5.40980469 6.57449219 -5.44460938 5.77398437 -5.48046875 4.94921875 C-5.1875 2.6875 -5.1875 2.6875 -3.8125 0.875 C-2.1875 -0.3125 -2.1875 -0.3125 0 0 Z \",fill:\"#A4854E\",transform:\"translate(468.1875,363.3125)\"})),_path587||(_path587=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C0.66 2.33 1.32 2.66 2 3 C-3.91684902 8.88183807 -3.91684902 8.88183807 -8.4375 9.375 C-9.283125 9.25125 -10.12875 9.1275 -11 9 C-8.31158141 6.74754119 -6.35358125 5.11786042 -3 4 C-3 3.34 -3 2.68 -3 2 C-3.66 1.67 -4.32 1.34 -5 1 C-3 0 -3 0 0 0 Z \",fill:\"#A68D6B\",transform:\"translate(429,336)\"})),_path588||(_path588=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C6 1.32 6 2.64 6 4 C4.68 4.33 3.36 4.66 2 5 C2 5.66 2 6.32 2 7 C-2.75 6.25 -2.75 6.25 -5 4 C-3.68 4 -2.36 4 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#8A6C39\",transform:\"translate(482,330)\"})),_path589||(_path589=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.73283203 0.00773437 1.46566406 0.01546875 2.22070312 0.0234375 C2.94966797 0.01570313 3.67863281 0.00796875 4.4296875 0 C8.24158536 0.01397579 10.04131422 0.11217823 13.28320312 2.2734375 C11.63320313 2.6034375 9.98320313 2.9334375 8.28320312 3.2734375 C8.28320312 2.9434375 8.28320312 2.6134375 8.28320312 2.2734375 C5.64320313 1.9434375 3.00320313 1.6134375 0.28320312 1.2734375 C-0.04679688 2.5934375 -0.37679687 3.9134375 -0.71679688 5.2734375 C-2.03679688 4.9434375 -3.35679687 4.6134375 -4.71679688 4.2734375 C-4.05679688 4.2734375 -3.39679687 4.2734375 -2.71679688 4.2734375 C-2.71679688 3.6134375 -2.71679688 2.9534375 -2.71679688 2.2734375 C-4.36679687 2.2734375 -6.01679687 2.2734375 -7.71679688 2.2734375 C-5.16630137 -0.27705801 -3.48196933 0.0127896 0 0 Z \",fill:\"#937C56\",transform:\"translate(543.716796875,311.7265625)\"})),_path590||(_path590=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.17538332 0.34021964 4.02276865 1.02466604 6.25 3.4375 C8 6 8 6 8 8 C8.99 8.33 9.98 8.66 11 9 C11 9.99 11 10.98 11 12 C7.612801 10.5611898 5.6405896 8.77880501 3.25 6 C2.63640625 5.29875 2.0228125 4.5975 1.390625 3.875 C0 2 0 2 0 0 Z \",fill:\"#5B4622\",transform:\"translate(561,592)\"})),_path591||(_path591=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.75 4.75 -0.75 4.75 -3 7 C-4.32 7 -5.64 7 -7 7 C-6.74438677 4.6568787 -6.40729228 2.32156597 -6 0 C-3.50907189 -1.24546405 -2.58919267 -0.7767578 0 0 Z \",fill:\"#3C3225\",transform:\"translate(613,582)\"})),_path592||(_path592=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.3 0 6.6 0 10 0 C10 0.99 10 1.98 10 3 C8.71349294 3.69710731 7.42059335 4.38242876 6.125 5.0625 C5.04605469 5.63677734 5.04605469 5.63677734 3.9453125 6.22265625 C3.30335938 6.47917969 2.66140625 6.73570312 2 7 C1.34 6.67 0.68 6.34 0 6 C0 4 0 2 0 0 Z \",fill:\"#9B845B\",transform:\"translate(624,576)\"})),_path593||(_path593=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.67692308 1.47692308 4.67692308 1.47692308 6.3125 4.125 C6.539375 4.74375 6.76625 5.3625 7 6 C5.68 5.01 4.36 4.02 3 3 C2.67 3.33 2.34 3.66 2 4 C2.33 4.66 2.66 5.32 3 6 C2.01 6.33 1.02 6.66 0 7 C-1.68538601 8.99665314 -1.68538601 8.99665314 -3 11 C-2.67 9.35 -2.34 7.7 -2 6 C-2.99 5.67 -3.98 5.34 -5 5 C-3.35 3.35 -1.7 1.7 0 0 Z \",fill:\"#2C1E0E\",transform:\"translate(481,519)\"})),_path594||(_path594=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.36720387 1.39332574 4.9859524 2.9789286 7 6 C7.66 5.34 8.32 4.68 9 4 C9.93423645 7.01031744 10.04449911 7.86650268 9 11 C6.03 10.505 6.03 10.505 3 10 C3.66 9.34 4.32 8.68 5 8 C4.175 7.05125 3.35 6.1025 2.5 5.125 C0 2.25 0 2.25 0 0 Z \",fill:\"#37260F\",transform:\"translate(433,512)\"})),_path595||(_path595=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.33 0 0.66 0 1 C-6.93 2.485 -6.93 2.485 -14 4 C-14 4.66 -14 5.32 -14 6 C-15.32 6.33 -16.64 6.66 -18 7 C-17.67 6.01 -17.34 5.02 -17 4 C-19.31 4 -21.62 4 -24 4 C-24 3.67 -24 3.34 -24 3 C-21.50159546 2.49061655 -19.00176612 1.99236886 -16.5 1.5 C-15.80390625 1.35691406 -15.1078125 1.21382812 -14.390625 1.06640625 C-9.50912797 0.11722627 -4.97281701 -0.13440046 0 0 Z \",fill:\"#413018\",transform:\"translate(560,515)\"})),_path596||(_path596=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.71567139 0.15847412 1.43134277 0.31694824 2.16870117 0.48022461 C4.91594802 0.98456957 7.5123923 1.20226167 10.30078125 1.31640625 C11.27724609 1.35830078 12.25371094 1.40019531 13.25976562 1.44335938 C14.77086914 1.50233398 14.77086914 1.50233398 16.3125 1.5625 C17.85260742 1.62727539 17.85260742 1.62727539 19.42382812 1.69335938 C21.94909569 1.79906825 24.47445562 1.90116468 27 2 C27 2.33 27 2.66 27 3 C5.09456773 4.92273387 5.09456773 4.92273387 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#755A2F\",transform:\"translate(467,384)\"})),_path597||(_path597=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.435 2.97 6.435 2.97 13 6 C8.70600835 7.07349791 7.80504787 6.79682816 4 5 C3.67 5.66 3.34 6.32 3 7 C4.32 7.33 5.64 7.66 7 8 C6.01 8.495 6.01 8.495 5 9 C-1.70588235 5.58823529 -1.70588235 5.58823529 -3 3 C-0.525 3.99 -0.525 3.99 2 5 C1.34 3.35 0.68 1.7 0 0 Z \",fill:\"#7A613B\",transform:\"translate(373,367)\"})),_path598||(_path598=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.66 2 2.32 2 3 2 C2.6875 4.375 2.6875 4.375 2 7 C-1 9 -1 9 -3.1875 8.625 C-3.785625 8.41875 -4.38375 8.2125 -5 8 C-2.25 2.25 -2.25 2.25 0 0 Z \",fill:\"#B19361\",transform:\"translate(595,362)\"})),_path599||(_path599=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.58682606 5.62256097 5.11470449 7.88832156 5 15 C4.34 15 3.68 15 3 15 C3 13.68 3 12.36 3 11 C2.34 11 1.68 11 1 11 C1 9.35 1 7.7 1 6 C0.34 6 -0.32 6 -1 6 C-0.67 4.02 -0.34 2.04 0 0 Z \",fill:\"#D1AE75\",transform:\"translate(641,327)\"})),_path600||(_path600=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.87362847 0.45336079 7.39042389 1.7089159 11 5 C9.68 5.33 8.36 5.66 7 6 C7.99 7.485 7.99 7.485 9 9 C6.04346256 7.6273219 3.4350144 6.18311636 1 4 C0.25 1.8125 0.25 1.8125 0 0 Z \",fill:\"#89714A\",transform:\"translate(455,317)\"})),_path601||(_path601=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.45201179 9.5592124 1.45201179 9.5592124 0 14.1875 C-2.35433974 16.32112039 -3.10534567 16.27976916 -6.1875 16.3125 C-7.445625 16.209375 -8.70375 16.10625 -10 16 C-10 15.67 -10 15.34 -10 15 C-7.69 15 -5.38 15 -3 15 C-3 14.34 -3 13.68 -3 13 C-3.66 12.67 -4.32 12.34 -5 12 C-4.34 10.02 -3.68 8.04 -3 6 C-2.67 6.99 -2.34 7.98 -2 9 C-1.34 9 -0.68 9 0 9 C0 6.03 0 3.06 0 0 Z \",fill:\"#826C45\",transform:\"translate(571,296)\"})),_path602||(_path602=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 0.66 3 1.32 3 2 C3.85464844 2.04898437 4.70929688 2.09796875 5.58984375 2.1484375 C7.24693359 2.26058594 7.24693359 2.26058594 8.9375 2.375 C10.03964844 2.44460938 11.14179688 2.51421875 12.27734375 2.5859375 C13.62505859 2.79089844 13.62505859 2.79089844 15 3 C15.33 3.66 15.66 4.32 16 5 C13.87562788 5.19448477 11.75046809 5.38038289 9.625 5.5625 C8.44164062 5.66691406 7.25828125 5.77132813 6.0390625 5.87890625 C3 6 3 6 1 5 C0.375 2.4375 0.375 2.4375 0 0 Z \",fill:\"#95743C\",transform:\"translate(387,279)\"})),_path603||(_path603=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.703125 1.70703125 0.703125 1.70703125 1 4 C-0.328125 6.32421875 -0.328125 6.32421875 -2.25 8.6875 C-2.87390625 9.47511719 -3.4978125 10.26273437 -4.140625 11.07421875 C-6 13 -6 13 -9 14 C-8.51126356 9.60137205 -7.22179093 7.94563742 -4 5 C-2.64843325 3.34808509 -1.31037934 1.68477344 0 0 Z \",fill:\"#8C6F3A\",transform:\"translate(561,271)\"})),_path604||(_path604=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-3.72636611 4.1314059 -8.50047322 5.84377958 -14 6.1875 C-14.66 6.125625 -15.32 6.06375 -16 6 C-13.77607902 2.66411852 -12.74205647 2.18823611 -9.125 0.75 C-8.26132812 0.39421875 -7.39765625 0.0384375 -6.5078125 -0.328125 C-3.84601939 -1.04125337 -2.55464981 -0.92680319 0 0 Z \",fill:\"#9B8862\",transform:\"translate(482,183)\"})),_path605||(_path605=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 3.3 1 6.6 1 10 C-1.475 9.01 -1.475 9.01 -4 8 C-4.33 8.66 -4.66 9.32 -5 10 C-5 9.34 -5 8.68 -5 8 C-6.65 7.67 -8.3 7.34 -10 7 C-10 7.99 -10 8.98 -10 10 C-10.66 10 -11.32 10 -12 10 C-10.25 4.25 -10.25 4.25 -8 2 C-7.67 2.99 -7.34 3.98 -7 5 C-3.99152582 6.22520264 -3.99152582 6.22520264 -1 7 C-0.67 4.69 -0.34 2.38 0 0 Z \",fill:\"#9B835B\",transform:\"translate(376,578)\"})),_path606||(_path606=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C2.34580901 5.06998019 0.1453591 9.41990777 -2 14 C-2.99 14 -3.98 14 -5 14 C-4.67 12.35 -4.34 10.7 -4 9 C-3.34 9 -2.68 9 -2 9 C-1.855625 8.071875 -1.71125 7.14375 -1.5625 6.1875 C-1 3 -1 3 0 0 Z \",fill:\"#563E1D\",transform:\"translate(365,577)\"})),_path607||(_path607=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.54527344 0.19335938 1.09054687 0.38671875 1.65234375 0.5859375 C7.0438052 2.44760453 12.40921726 3.87655666 18 5 C18 5.33 18 5.66 18 6 C10.75460274 6.53449652 6.27087737 5.71607548 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#BEA373\",transform:\"translate(400,529)\"})),_path608||(_path608=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.12375 1.670625 1.12375 1.670625 1.25 3.375 C1.57873787 7.05753944 1.57873787 7.05753944 4.0625 8.4375 C4.701875 8.623125 5.34125 8.80875 6 9 C5.01 9.33 4.02 9.66 3 10 C2.071875 11.2684375 2.071875 11.2684375 1.125 12.5625 C-1 15 -1 15 -3.625 15.5 C-6 15 -6 15 -8 12 C-5.525 12.99 -5.525 12.99 -3 14 C-2.67 13.01 -2.34 12.02 -2 11 C-1.34 11 -0.68 11 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#95815C\",transform:\"translate(274,504)\"})),_path609||(_path609=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.67276511 -0.29341888 8.99067246 -0.00559652 14 3 C13.67 3.66 13.34 4.32 13 5 C11.58297487 4.85769192 10.1663904 4.71099254 8.75 4.5625 C7.56664062 4.44068359 7.56664062 4.44068359 6.359375 4.31640625 C4.17635361 4.02365007 2.1226818 3.57935581 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#A27939\",transform:\"translate(556,510)\"})),_path610||(_path610=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.01 2.32 1.02 3.64 0 5 C3.3 5 6.6 5 10 5 C6.99382731 8.00617269 4.17618402 7.59585316 0 8 C0 8.66 0 9.32 0 10 C-0.99 10 -1.98 10 -3 10 C-3.36923077 3.47692308 -3.36923077 3.47692308 -1.5 1.0625 C-1.005 0.711875 -0.51 0.36125 0 0 Z \",fill:\"#301F08\",transform:\"translate(542,496)\"})),_path611||(_path611=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.625 -0.25 6.625 -0.25 10 2 C10 3.32 10 4.64 10 6 C9.34 6 8.68 6 8 6 C8 5.34 8 4.68 8 4 C5.47636012 4.62533375 5.47636012 4.62533375 3 6 C2.10613836 8.54775306 2.10613836 8.54775306 2 11 C1.67 11 1.34 11 1 11 C0.63076923 5.46153846 0.63076923 5.46153846 2.5 3.125 C2.995 2.75375 3.49 2.3825 4 2 C2.35 2 0.7 2 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#57472B\",transform:\"translate(465,362)\"})),_path612||(_path612=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.23260762 0.95607137 8.19480093 2.52988296 12.24609375 4.0625 C14.82688236 4.94106634 17.31776062 5.53267699 20 6 C20 6.33 20 6.66 20 7 C17.20743781 6.88638398 14.41655882 6.7596411 11.625 6.625 C10.8309375 6.5940625 10.036875 6.563125 9.21875 6.53125 C3.2265625 6.2265625 3.2265625 6.2265625 1 4 C1 3.34 1 2.68 1 2 C0.67 1.34 0.34 0.68 0 0 Z \",fill:\"#685235\",transform:\"translate(543,341)\"})),_path613||(_path613=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C1.39816251 2.02045442 0.72693904 4.02111039 0 6 C-0.99 6.495 -0.99 6.495 -2 7 C-1.125 1.125 -1.125 1.125 0 0 Z M-3 7 C-2.67 7 -2.34 7 -2 7 C-2 12.61 -2 18.22 -2 24 C-2.33 24 -2.66 24 -3 24 C-3.90654677 18.67403774 -4.39446773 13.40652829 -4 8 C-3.67 7.67 -3.34 7.34 -3 7 Z \",fill:\"#BD9A60\",transform:\"translate(365,332)\"})),_path614||(_path614=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 1.65 3.3 3.3 5 5 C4.01 5.495 4.01 5.495 3 6 C3.33 7.32 3.66 8.64 4 10 C0.64379729 8.61122646 -1.07298728 7.08322035 -3 4 C-3 3.34 -3 2.68 -3 2 C-2.01 1.34 -1.02 0.68 0 0 Z \",fill:\"#886C3C\",transform:\"translate(266,278)\"})),_path615||(_path615=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.15628906 0.74056641 1.15628906 0.74056641 2.3359375 1.49609375 C3.33882813 2.13675781 4.34171875 2.77742188 5.375 3.4375 C6.37273437 4.07558594 7.37046875 4.71367187 8.3984375 5.37109375 C10.85830521 6.96899211 10.85830521 6.96899211 13 8 C13 8.66 13 9.32 13 10 C4.88055466 8.83760077 4.88055466 8.83760077 1.4375 5.5625 C0 3 0 3 0 0 Z \",fill:\"#755C34\",transform:\"translate(373,269)\"})),_path616||(_path616=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C-2.20380017 6.13586678 -3.01939967 6.23132175 -6.6875 6.125 C-7.89986328 6.09792969 -7.89986328 6.09792969 -9.13671875 6.0703125 C-10.05904297 6.03550781 -10.05904297 6.03550781 -11 6 C-10.67 4.68 -10.34 3.36 -10 2 C-9.04287109 1.90912109 -9.04287109 1.90912109 -8.06640625 1.81640625 C-6.82697266 1.69072266 -6.82697266 1.69072266 -5.5625 1.5625 C-4.73878906 1.48128906 -3.91507812 1.40007812 -3.06640625 1.31640625 C-1.01337975 1.21069185 -1.01337975 1.21069185 0 0 Z \",fill:\"#94713E\",transform:\"translate(389,258)\"})),_path617||(_path617=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.6875 1.6875 0.6875 1.6875 1 4 C-0.4375 6.75 -0.4375 6.75 -2 9 C-0.68 8.67 0.64 8.34 2 8 C1 10 1 10 -1.3125 11.1875 C-4.11989571 12.03624754 -5.301935 11.99928333 -8 11 C-7.01 11 -6.02 11 -5 11 C-5.103125 10.29875 -5.20625 9.5975 -5.3125 8.875 C-4.85789966 4.69267689 -2.83533849 3.04798887 0 0 Z \",fill:\"#765B2F\",transform:\"translate(590,253)\"})),_path618||(_path618=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C1.34215037 3.29680965 0.10579427 5.84117922 -1.5625 8.75 C-2.01753906 9.54921875 -2.47257812 10.3484375 -2.94140625 11.171875 C-3.29074219 11.77515625 -3.64007813 12.3784375 -4 13 C-4.99 13 -5.98 13 -7 13 C-5.65846062 7.99971686 -3.51629997 3.80932497 0 0 Z \",fill:\"#5B4523\",transform:\"translate(344,565)\"})),_path619||(_path619=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C4.82421875 2.40625 4.82421875 2.40625 6.6875 5.5 C7.31011719 6.5209375 7.93273437 7.541875 8.57421875 8.59375 C9.04472656 9.3878125 9.51523437 10.181875 10 11 C9.34 11.66 8.68 12.32 8 13 C7.67386719 12.52949219 7.34773437 12.05898438 7.01171875 11.57421875 C6.57472656 10.95160156 6.13773438 10.32898438 5.6875 9.6875 C5.25824219 9.07261719 4.82898438 8.45773437 4.38671875 7.82421875 C3.05117373 5.95785998 3.05117373 5.95785998 1.33203125 4.45703125 C0 3 0 3 0 0 Z \",fill:\"#5C4523\",transform:\"translate(631,556)\"})),_path620||(_path620=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2 6 C2.66 6 3.32 6 4 6 C4 8.31 4 10.62 4 13 C0.125 11.25 0.125 11.25 -1 9 C-0.91348369 7.45386986 -0.75997364 5.91090613 -0.5625 4.375 C-0.46066406 3.55773437 -0.35882813 2.74046875 -0.25390625 1.8984375 C-0.17011719 1.27195312 -0.08632813 0.64546875 0 0 Z \",fill:\"#DDBA81\",transform:\"translate(293,434)\"})),_path621||(_path621=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.22589844 0.01353516 1.22589844 0.01353516 2.4765625 0.02734375 C3.41628906 0.04474609 3.41628906 0.04474609 4.375 0.0625 C4.045 1.0525 3.715 2.0425 3.375 3.0625 C1.065 3.0625 -1.245 3.0625 -3.625 3.0625 C-3.8725 3.68125 -4.12 4.3 -4.375 4.9375 C-5.83128639 7.41318687 -7.00312506 8.01375002 -9.625 9.0625 C-8.47326645 6.59449953 -7.57716435 5.01466435 -5.625 3.0625 C-5.955 2.4025 -6.285 1.7425 -6.625 1.0625 C-4.21954362 -0.14022819 -2.67503047 -0.03821472 0 0 Z \",fill:\"#534632\",transform:\"translate(470.625,417.9375)\"})),_path622||(_path622=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-2.99481865 4.22797927 -2.99481865 4.22797927 -5 6 C-8.3125 6.375 -8.3125 6.375 -11 6 C-11.33 5.01 -11.66 4.02 -12 3 C-7.77050005 0.58314288 -4.87664009 -0.34833144 0 0 Z \",fill:\"#B08E5C\",transform:\"translate(506,383)\"})),_path623||(_path623=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.34917898 2.15341406 3.82443004 4.21667937 5.25 7.0625 C5.60578125 7.75472656 5.9615625 8.44695312 6.328125 9.16015625 C6.54984375 9.76730469 6.7715625 10.37445313 7 11 C6.67 11.66 6.34 12.32 6 13 C5.01 12.34 4.02 11.68 3 11 C2.34 11 1.68 11 1 11 C0.67 11.99 0.34 12.98 0 14 C-0.66 12.35 -1.32 10.7 -2 9 C-0.68 9.33 0.64 9.66 2 10 C1.505 8.63875 1.505 8.63875 1 7.25 C0 4 0 4 0 0 Z \",fill:\"#937953\",transform:\"translate(633,306)\"})),_path624||(_path624=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.39153744 4.42761914 -3.52071486 6.9556255 -7 10 C-7.66 10 -8.32 10 -9 10 C-10.34882408 10.63474075 -11.6846659 11.29848848 -13 12 C-2.93659942 0 -2.93659942 0 0 0 Z \",fill:\"#604B27\",transform:\"translate(533,291)\"})),_path625||(_path625=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.47899864 5.21849796 5.22231918 10.77855342 6 17 C5.34 17 4.68 17 4 17 C3.12957757 15.11157486 2.27924526 13.21388098 1.4375 11.3125 C0.96183594 10.25675781 0.48617188 9.20101563 -0.00390625 8.11328125 C-1.05322011 4.83366107 -1.00418265 3.24104461 0 0 Z \",fill:\"#998665\",transform:\"translate(413,269)\"})),_path626||(_path626=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3 0 3 -1 5 C-0.01 5 0.98 5 2 5 C2 5.66 2 6.32 2 7 C-2.57420498 11.09270972 -5.97682032 11.3903378 -12.0234375 11.140625 C-12.67570312 11.09421875 -13.32796875 11.0478125 -14 11 C-14 10.67 -14 10.34 -14 10 C-12.02 9.67 -10.04 9.34 -8 9 C-8 8.67 -8 8.34 -8 8 C-6.35 7.67 -4.7 7.34 -3 7 C-2.87625 6.21625 -2.7525 5.4325 -2.625 4.625 C-2 2 -2 2 0 0 Z \",fill:\"#7D6035\",transform:\"translate(392,254)\"})),_path627||(_path627=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 0.99 -0.66 1.98 -1 3 C-5.81087497 4.54926482 -9.91996441 5.25400178 -15 5 C-14 3 -14 3 -11.34765625 1.89453125 C-9.72150391 1.35892578 -9.72150391 1.35892578 -8.0625 0.8125 C-6.44021484 0.26529297 -6.44021484 0.26529297 -4.78515625 -0.29296875 C-2 -1 -2 -1 0 0 Z \",fill:\"#887451\",transform:\"translate(467,188)\"})),_path628||(_path628=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C2.32 2 3.64 2 5 2 C5 2.66 5 3.32 5 4 C5.99 4.33 6.98 4.66 8 5 C7.01 5 6.02 5 5 5 C5.33 5.99 5.66 6.98 6 8 C3.1875 7.8125 3.1875 7.8125 0 7 C-1.875 4.4375 -1.875 4.4375 -3 2 C-2.01 1.34 -1.02 0.68 0 0 Z \",fill:\"#947034\",transform:\"translate(466,156)\"})),_path629||(_path629=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7 4 7 4 4.8125 6.25 C1.81718319 8.11375268 0.44263129 8.39344358 -3 8 C-1.11192137 5.30274481 0.19824644 3.86783571 3 2 C2.01 1.34 1.02 0.68 0 0 Z \",fill:\"#52442A\",transform:\"translate(413,592)\"})),_path630||(_path630=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.50692692 1.5811292 4.00526443 3.16501383 4.5 4.75 C4.7784375 5.63171875 5.056875 6.5134375 5.34375 7.421875 C6 10 6 10 6 14 C5.34 14 4.68 14 4 14 C3.32471777 12.42032193 2.66010306 10.83608097 2 9.25 C1.62875 8.36828125 1.2575 7.4865625 0.875 6.578125 C0 4 0 4 0 0 Z \",fill:\"#5A4323\",transform:\"translate(572,588)\"})),_path631||(_path631=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 3 2 3 2 5 C4.97 5.495 4.97 5.495 8 6 C8 6.99 8 7.98 8 9 C7.44828125 8.68289063 6.8965625 8.36578125 6.328125 8.0390625 C3.71522011 6.87290025 1.59420998 6.59954289 -1.25 6.375 C-2.14203125 6.30023437 -3.0340625 6.22546875 -3.953125 6.1484375 C-4.96632813 6.07496094 -4.96632813 6.07496094 -6 6 C-5.67 5.34 -5.34 4.68 -5 4 C-4.34 4.33 -3.68 4.66 -3 5 C-2.5359375 4.0409375 -2.5359375 4.0409375 -2.0625 3.0625 C-1 1 -1 1 0 0 Z \",fill:\"#423724\",transform:\"translate(307,528)\"})),_path632||(_path632=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2.08131463 2.43655854 2.13933559 3.8744483 2.1875 5.3125 C2.22230469 6.11300781 2.25710937 6.91351563 2.29296875 7.73828125 C1.93801608 10.47851584 1.10633718 11.29171079 -1 13 C-1.66 12.67 -2.32 12.34 -3 12 C-2.88648483 10.18674449 -2.75887039 8.37436643 -2.625 6.5625 C-2.55539063 5.55316406 -2.48578125 4.54382813 -2.4140625 3.50390625 C-2.27742187 2.67761719 -2.14078125 1.85132813 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#E1BD84\",transform:\"translate(152,444)\"})),_path633||(_path633=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0.33 3.3 0.66 5 1 C2 10 2 10 0 12 C0 12.66 0 13.32 0 14 C-2.5 15.625 -2.5 15.625 -5 17 C-3.57250019 13.20950293 -1.83763458 9.72877544 0.125 6.1875 C0.66382813 5.21167969 1.20265625 4.23585938 1.7578125 3.23046875 C2.16773438 2.49441406 2.57765625 1.75835937 3 1 C2.01 0.67 1.02 0.34 0 0 Z \",fill:\"#251C12\",transform:\"translate(445,418)\"})),_path634||(_path634=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 1.32 7.92 2.64 12 4 C10.68 4.33 9.36 4.66 8 5 C8 5.66 8 6.32 8 7 C5.36 7 2.72 7 0 7 C1.32 6.67 2.64 6.34 4 6 C3.67 5.34 3.34 4.68 3 4 C2.01 3.67 1.02 3.34 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#9C7E4D\",transform:\"translate(376,371)\"})),_path635||(_path635=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C4.03115279 3.26913624 3.9638984 5.86041348 3.5625 9.25 C3.46066406 10.14203125 3.35882813 11.0340625 3.25390625 11.953125 C3.17011719 12.62859375 3.08632813 13.3040625 3 14 C2.34 13.34 1.68 12.68 1 12 C1 11.01 1 10.02 1 9 C-1.97 9 -4.94 9 -8 9 C-7.67 8.34 -7.34 7.68 -7 7 C-4.67843403 6.59270772 -2.3431213 6.25561323 0 6 C0.66 4.35 1.32 2.7 2 1 C1.34 0.67 0.68 0.34 0 0 Z \",fill:\"#2D200F\",transform:\"translate(459,361)\"})),_path636||(_path636=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.52634425 5.26290179 -0.92238322 7.21548958 -4 10 C-4.99 10.66 -5.98 11.32 -7 12 C-5.08277831 4.18363463 -5.08277831 4.18363463 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#4C3A20\",transform:\"translate(414,329)\"})),_path637||(_path637=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.99 2.475 0.99 5 2 C5 2.99 5 3.98 5 5 C3.68 5 2.36 5 1 5 C0.67 5.99 0.34 6.98 0 8 C-2.02054804 6.35830472 -4.02043058 4.69088222 -6 3 C-6 2.67 -6 2.34 -6 2 C-4.02 1.67 -2.04 1.34 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#2C1F0D\",transform:\"translate(560,322)\"})),_path638||(_path638=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.66 0.66 -1.32 1.32 -2 2 C-1.67 2.66 -1.34 3.32 -1 4 C-3.31 3.67 -5.62 3.34 -8 3 C-5.525 6.465 -5.525 6.465 -3 10 C-5.95409701 8.62845496 -8.44008376 7.01136276 -11 5 C-10.6875 3.0625 -10.6875 3.0625 -10 1 C-6.52674819 -0.1577506 -3.63932552 -0.06866652 0 0 Z \",fill:\"#A3885F\",transform:\"translate(557,323)\"})),_path639||(_path639=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.02712066 1.43739513 1.04645067 2.87493863 1.0625 4.3125 C1.07410156 5.11300781 1.08570313 5.91351563 1.09765625 6.73828125 C1 9 1 9 0 12 C-0.66 12 -1.32 12 -2 12 C-2.0825 12.763125 -2.165 13.52625 -2.25 14.3125 C-3.14615794 17.52373261 -4.21611025 18.29374499 -7 20 C-6.67 18.35 -6.34 16.7 -6 15 C-5.01 15 -4.02 15 -3 15 C-3.061875 13.39125 -3.061875 13.39125 -3.125 11.75 C-3.00725349 8.2176046 -2.71166537 6.91989975 -1 4 C-0.63215869 2.6757713 -0.28797019 1.34386088 0 0 Z \",fill:\"#8C7049\",transform:\"translate(373,316)\"})),_path640||(_path640=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.5 1.375 1.5 1.375 3 3 C3 3.66 3 4.32 3 5 C3.66 5 4.32 5 5 5 C6.5078125 6.75 6.5078125 6.75 8.125 9 C8.66382813 9.7425 9.20265625 10.485 9.7578125 11.25 C10.16773438 11.8275 10.57765625 12.405 11 13 C10.01 13.33 9.02 13.66 8 14 C6.46690087 12.23977508 4.94881299 10.46646537 3.4375 8.6875 C2.16712891 7.20830078 2.16712891 7.20830078 0.87109375 5.69921875 C0.25363281 4.80847656 -0.36382812 3.91773438 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#6F5B37\",transform:\"translate(430,303)\"})),_path641||(_path641=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.47575128 0.56793322 5.02496366 1.66168245 7.3125 4.3125 C7.84488281 4.90675781 8.37726562 5.50101562 8.92578125 6.11328125 C10 8 10 8 9.66796875 10.23046875 C9.44753906 10.81441406 9.22710938 11.39835937 9 12 C8.69707031 11.43410156 8.39414062 10.86820312 8.08203125 10.28515625 C5.59011363 5.58418046 5.59011363 5.58418046 1.1875 3 C0.465625 3 -0.25625 3 -1 3 C-1 3.66 -1 4.32 -1 5 C-2.32 5.33 -3.64 5.66 -5 6 C-4.67 5.01 -4.34 4.02 -4 3 C-1.9375 2.3125 -1.9375 2.3125 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#8D7852\",transform:\"translate(602,298)\"})),_path642||(_path642=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.9375 0.5625 1.9375 0.5625 4 2 C4.75 5.625 4.75 5.625 5 9 C2.08482708 7.92598892 0.22189824 7.22189824 -2 5 C-2 4.01 -2 3.02 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#160C05\",transform:\"translate(414,284)\"})),_path643||(_path643=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.33 2.64 0.66 4 1 C4 1.66 4 2.32 4 3 C4.598125 3.103125 5.19625 3.20625 5.8125 3.3125 C8.28243264 4.08876455 9.32251235 5.07088921 11 7 C11 5.68 11 4.36 11 3 C11.66 3 12.32 3 13 3 C12.125 7.75 12.125 7.75 11 10 C9.68 9.67 8.36 9.34 7 9 C7 7.68 7 6.36 7 5 C5.5459375 4.5978125 5.5459375 4.5978125 4.0625 4.1875 C3.051875 3.795625 2.04125 3.40375 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#77603B\",transform:\"translate(240,245)\"})),_path644||(_path644=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.5625718 -0.02710123 5.12485365 -0.04688771 7.6875 -0.0625 C8.40873047 -0.07087891 9.12996094 -0.07925781 9.87304688 -0.08789062 C13.71555382 -0.10543632 17.26639526 0.06475779 21 1 C17.2864249 3.4198735 14.26447485 3.09579399 9.9375 2.75 C8.70902344 2.66234375 7.48054688 2.5746875 6.21484375 2.484375 C3 2 3 2 0 0 Z \",fill:\"#AB977A\",transform:\"translate(469,229)\"})),_path645||(_path645=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.37590142 3.70416126 2.20500286 6.92984573 2.125 11.25 C2.10695313 12.51328125 2.08890625 13.7765625 2.0703125 15.078125 C2.04710937 16.04234375 2.02390625 17.0065625 2 18 C1.67 18 1.34 18 1 18 C1 15.03 1 12.06 1 9 C0.01 9 -0.98 9 -2 9 C-2.125 5.625 -2.125 5.625 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#956F33\",transform:\"translate(480,116)\"})),_path646||(_path646=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.61725534 3.00950123 2.67582623 5.97103608 3.625 9.25 C3.88539063 10.14203125 4.14578125 11.0340625 4.4140625 11.953125 C4.60742188 12.62859375 4.80078125 13.3040625 5 14 C4.01 13.34 3.02 12.68 2 12 C1.01 12.495 1.01 12.495 0 13 C-0.99 12.01 -1.98 11.02 -3 10 C-2.34 9.67 -1.68 9.34 -1 9 C-0.53348793 6.87423218 -0.53348793 6.87423218 -0.375 4.4375 C-0.30023437 3.61121094 -0.22546875 2.78492188 -0.1484375 1.93359375 C-0.09945312 1.29550781 -0.05046875 0.65742187 0 0 Z \",fill:\"#A7895E\",transform:\"translate(571,588)\"})),_path647||(_path647=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5 1.65 5 3.3 5 5 C6.32 5.33 7.64 5.66 9 6 C8 7 8 7 5.4375 7.0625 C4.2309375 7.0315625 4.2309375 7.0315625 3 7 C2.34 5.68 1.68 4.36 1 3 C0.34 3 -0.32 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#BFA472\",transform:\"translate(304,539)\"})),_path648||(_path648=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-6.30470733 3.38717911 -12.91911475 4.30131427 -20 4 C-14.28830228 -1.05265568 -7.1922806 -0.12792594 0 0 Z \",fill:\"#90764A\",transform:\"translate(562,519)\"})),_path649||(_path649=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4 1.32 4 2.64 4 4 C4.66 4 5.32 4 6 4 C6 5.32 6 6.64 6 8 C4.02 7.34 2.04 6.68 0 6 C-0.38218767 4.34385343 -0.71395102 2.67542976 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#DFB984\",transform:\"translate(218,426)\"})),_path650||(_path650=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.72985242 0.11512153 3.45888751 0.24255677 5.1875 0.375 C6.15042969 0.44460938 7.11335938 0.51421875 8.10546875 0.5859375 C11.01508938 1.00215853 13.32890774 1.79874096 16 3 C16 3.66 16 4.32 16 5 C17.32 5 18.64 5 20 5 C20 5.99 20 6.98 20 8 C19.34 8 18.68 8 18 8 C18 7.34 18 6.68 18 6 C17.14148438 5.87753906 16.28296875 5.75507813 15.3984375 5.62890625 C11.99313102 4.99872884 8.89657899 4.06437721 5.625 2.9375 C4.56539063 2.57527344 3.50578125 2.21304687 2.4140625 1.83984375 C1.61742187 1.56269531 0.82078125 1.28554688 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#A28354\",transform:\"translate(358,379)\"})),_path651||(_path651=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.66666667 0.66666667 9.33333333 1.33333333 14 2 C14 2.99 14 3.98 14 5 C8.39 5 2.78 5 -3 5 C-3 4.67 -3 4.34 -3 4 C-0.36 3.67 2.28 3.34 5 3 C2.525 2.01 2.525 2.01 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#6B532C\",transform:\"translate(397,373)\"})),_path652||(_path652=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.2039337 3.75399798 1.09877617 7.33217412 1.0625 11.25 C1.05347656 12.51328125 1.04445313 13.7765625 1.03515625 15.078125 C1.02355469 16.04234375 1.01195312 17.0065625 1 18 C1.66 18 2.32 18 3 18 C3.33 20.31 3.66 22.62 4 25 C0.41331917 21.73938107 -0.91302444 19.34590988 -1.23046875 14.43359375 C-1.21628906 13.11488281 -1.20210938 11.79617188 -1.1875 10.4375 C-1.1865332 9.42913086 -1.1865332 9.42913086 -1.18554688 8.40039062 C-1.1581579 5.33586829 -0.9757613 2.9272839 0 0 Z \",fill:\"#9A7E53\",transform:\"translate(353,308)\"})),_path653||(_path653=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.23046875 -0.34375 2.23046875 -0.34375 5 0 C7.23828125 2.40625 7.23828125 2.40625 9.3125 5.5 C10.00988281 6.5209375 10.70726562 7.541875 11.42578125 8.59375 C11.94527344 9.3878125 12.46476562 10.181875 13 11 C12.67 11.66 12.34 12.32 12 13 C11.07767578 11.93458984 11.07767578 11.93458984 10.13671875 10.84765625 C8.92435547 9.46900391 8.92435547 9.46900391 7.6875 8.0625 C6.88699219 7.14597656 6.08648437 6.22945313 5.26171875 5.28515625 C3.13761078 2.79486024 3.13761078 2.79486024 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#705F45\",transform:\"translate(414,294)\"})),_path654||(_path654=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.4540625 0.0309375 1.4540625 0.0309375 2.9375 0.0625 C2.195 0.619375 1.4525 1.17625 0.6875 1.75 C-3.42679357 5.20974687 -5.75511071 7.4999378 -6.8125 12.875 C-6.895 13.926875 -6.9775 14.97875 -7.0625 16.0625 C-7.3925 16.0625 -7.7225 16.0625 -8.0625 16.0625 C-8.57507038 9.65537031 -8.19847047 6.07579753 -4.0625 1.0625 C-3.0625 0.0625 -3.0625 0.0625 0 0 Z \",fill:\"#2C1E0B\",transform:\"translate(405.0625,290.9375)\"})),_path655||(_path655=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C1.32 2 2.64 2 4 2 C3.67 3.32 3.34 4.64 3 6 C1.02 6.33 -0.96 6.66 -3 7 C-3 6.34 -3 5.68 -3 5 C-2.34 5 -1.68 5 -1 5 C-1.33 4.01 -1.66 3.02 -2 2 C-4.97 1.67 -7.94 1.34 -11 1 C-11 0.67 -11 0.34 -11 0 C-3.375 -1.125 -3.375 -1.125 0 0 Z \",fill:\"#A68148\",transform:\"translate(403,284)\"})),_path656||(_path656=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.5 1.3125 1.5 1.3125 3 3 C3 3.99 3 4.98 3 6 C3.598125 6.2475 4.19625 6.495 4.8125 6.75 C7.28647521 8.16370012 8.43370255 9.65055383 10 12 C7.1657676 11.91664022 5.44298455 11.38608745 3.296875 9.515625 C0.13129894 6.05420072 0.13129894 6.05420072 -1 4 C-0.6640625 1.76953125 -0.6640625 1.76953125 0 0 Z \",fill:\"#241405\",transform:\"translate(267,274)\"})),_path657||(_path657=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.60415049 1.2013835 4.14706011 2.26143988 6.1875 5.375 C6.71730469 6.16648437 7.24710938 6.95796875 7.79296875 7.7734375 C9 10 9 10 9 13 C8.01 13 7.02 13 6 13 C5.18162558 11.58671871 4.37053781 10.16921654 3.5625 8.75 C3.11003906 7.96109375 2.65757812 7.1721875 2.19140625 6.359375 C1.10688398 4.21166532 0.46851284 2.34794939 0 0 Z \",fill:\"#513918\",transform:\"translate(610,570)\"})),_path658||(_path658=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.3125 0.1875 2.3125 0.1875 4 1 C3.67 1.66 3.34 2.32 3 3 C6.54518884 1.60240095 6.54518884 1.60240095 10 0 C8.84826645 2.46800047 7.95216435 4.04783565 6 6 C3.875 5.625 3.875 5.625 2 5 C2 4.01 2 3.02 2 2 C0.35 3.32 -1.3 4.64 -3 6 C-3.66 5.67 -4.32 5.34 -5 5 C-2.75 2.4375 -2.75 2.4375 0 0 Z \",fill:\"#91784F\",transform:\"translate(597,520)\"})),_path659||(_path659=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.99 2 2.98 2 4 2 C4.33 3.32 4.66 4.64 5 6 C1.62182575 6.84454356 -0.67465243 7.10844919 -4 6 C-2.84826645 3.53199953 -1.95216435 1.95216435 0 0 Z \",fill:\"#A9864B\",transform:\"translate(391,514)\"})),_path660||(_path660=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.11375 0.598125 2.2275 1.19625 3.375 1.8125 C4.00148438 2.14894531 4.62796875 2.48539062 5.2734375 2.83203125 C7 4 7 4 9 7 C8.33613281 6.83628906 7.67226563 6.67257812 6.98828125 6.50390625 C3.37116663 5.89396143 -0.15860708 5.89204487 -3.8125 5.9375 C-4.50537109 5.94201172 -5.19824219 5.94652344 -5.91210938 5.95117188 C-7.60811068 5.96286844 -9.30406703 5.98080076 -11 6 C-8.41073669 3.41073669 -6.97294721 3.62601957 -3.375 3.375 C-2.37210937 3.30023438 -1.36921875 3.22546875 -0.3359375 3.1484375 C0.43492187 3.09945313 1.20578125 3.05046875 2 3 C1.34 2.67 0.68 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#36230C\",transform:\"translate(407,503)\"})),_path661||(_path661=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.75929472 2.98613386 1.4118332 5.97514219 2 9 C-2.625 13 -2.625 13 -6 13 C-5.71382813 12.43796875 -5.42765625 11.8759375 -5.1328125 11.296875 C-3.98584069 8.97129077 -2.92160206 6.62229799 -1.875 4.25 C-1.52179688 3.45078125 -1.16859375 2.6515625 -0.8046875 1.828125 C-0.53914063 1.22484375 -0.27359375 0.6215625 0 0 Z \",fill:\"#BFA57B\",transform:\"translate(481,448)\"})),_path662||(_path662=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.495 1.98 0.495 4 1 C4.125 3.875 4.125 3.875 4 7 C3.34 7.66 2.68 8.32 2 9 C1.67 8.34 1.34 7.68 1 7 C0.67 9.64 0.34 12.28 0 15 C-0.33 15 -0.66 15 -1 15 C-1.02715383 13.25008666 -1.04646551 11.50005055 -1.0625 9.75 C-1.07410156 8.77546875 -1.08570313 7.8009375 -1.09765625 6.796875 C-1.01195577 4.34241322 -0.70706066 2.33831086 0 0 Z \",fill:\"#E1BE85\",transform:\"translate(454,431)\"})),_path663||(_path663=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C6.0625 1.875 6.0625 1.875 7 4 C6.67 4.66 6.34 5.32 6 6 C5.34 6 4.68 6 4 6 C3.67 6.66 3.34 7.32 3 8 C3 7.34 3 6.68 3 6 C2.34 6 1.68 6 1 6 C0.67 4.02 0.34 2.04 0 0 Z \",fill:\"#D4B07E\",transform:\"translate(738,428)\"})),_path664||(_path664=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C0.68 1.33 -0.64 1.66 -2 2 C-2 2.99 -2 3.98 -2 5 C-1.01 5.66 -0.02 6.32 1 7 C-1.52475462 8.26237731 -3.31200466 8.09856404 -6.125 8.0625 C-7.03507813 8.05347656 -7.94515625 8.04445313 -8.8828125 8.03515625 C-9.58148437 8.02355469 -10.28015625 8.01195312 -11 8 C-10.07380859 7.32324219 -10.07380859 7.32324219 -9.12890625 6.6328125 C-6.91980508 5.02050355 -6.91980508 5.02050355 -4.9375 2.875 C-3 1 -3 1 0 0 Z \",fill:\"#2A1E11\",transform:\"translate(577,368)\"})),_path665||(_path665=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.5 1.25 1.5 1.25 3 3 C3 4.32 3 5.64 3 7 C-1.38889325 6.33501617 -4.9811485 4.81242323 -9 3 C-5.25 1.875 -5.25 1.875 -3 3 C-3 2.34 -3 1.68 -3 1 C-2.01 0.67 -1.02 0.34 0 0 Z \",fill:\"#A48558\",transform:\"translate(475,354)\"})),_path666||(_path666=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C3.8125 2.3125 3.8125 2.3125 3 5 C0.10451959 7.20970874 -1.33157745 8 -5 8 C-3.25 4.125 -3.25 4.125 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#B89D70\",transform:\"translate(296,336)\"})),_path667||(_path667=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 1.98 7.92 3.96 12 6 C11.67 6.66 11.34 7.32 11 8 C5.84535266 7.51675181 2.18449681 4.81389239 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#31240E\",transform:\"translate(469,330)\"})),_path668||(_path668=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.37535717 4.50047623 3.24570873 6.52358552 2.6875 11.75 C2.62626953 12.44738281 2.56503906 13.14476562 2.50195312 13.86328125 C2.34937092 15.57689681 2.17666411 17.2886995 2 19 C1.34 18.67 0.68 18.34 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#A48B5F\",transform:\"translate(650,302)\"})),_path669||(_path669=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-0.328125 5.04296875 -0.328125 5.04296875 -2.25 7.1875 C-3.18585937 8.26064453 -3.18585937 8.26064453 -4.140625 9.35546875 C-6 11 -6 11 -9 11 C-7.44095325 7.17324889 -4.96833913 4.81992217 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#806533\",transform:\"translate(525,299)\"})),_path670||(_path670=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.9252025 3.70090521 6.94580156 7.54959656 10 12 C9.34 12.66 8.68 13.32 8 14 C6.99421411 12.71283353 5.99553202 11.42011342 5 10.125 C4.443125 9.40570313 3.88625 8.68640625 3.3125 7.9453125 C2 6 2 6 2 4 C1.34 4 0.68 4 0 4 C-0.33 3.01 -0.66 2.02 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#655335\",transform:\"translate(430,296)\"})),_path671||(_path671=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.70125 0.268125 1.4025 0.53625 2.125 0.8125 C1.465 2.1325 0.805 3.4525 0.125 4.8125 C-1.195 4.8125 -2.515 4.8125 -3.875 4.8125 C-4.205 5.4725 -4.535 6.1325 -4.875 6.8125 C-6.195 6.1525 -7.515 5.4925 -8.875 4.8125 C-3.58269231 -0.23365385 -3.58269231 -0.23365385 0 0 Z \",fill:\"#967749\",transform:\"translate(690.875,287.1875)\"})),_path672||(_path672=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.28396516 2.28396516 2.80415396 4.01038491 4 7 C4.71823696 8.21486178 5.44798574 9.42297166 6.1875 10.625 C6.785625 11.73875 7.38375 12.8525 8 14 C7.67 14.99 7.34 15.98 7 17 C5.76685219 15.03573689 4.53716686 13.06965416 3.31640625 11.09765625 C2.28804338 9.458989 1.21484356 7.84843722 0.125 6.25 C-1 4 -1 4 -0.6875 1.6875 C-0.460625 1.130625 -0.23375 0.57375 0 0 Z \",fill:\"#7A694A\",transform:\"translate(422,280)\"})),_path673||(_path673=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3 1.66 3 2.32 3 3 C3.99 3.33 4.98 3.66 6 4 C6 4.99 6 5.98 6 7 C6.66 7 7.32 7 8 7 C8.66 8.65 9.32 10.3 10 12 C6.60812721 10.58426179 4.90302459 8.95769034 2.75 6 C2.22921875 5.29875 1.7084375 4.5975 1.171875 3.875 C0 2 0 2 0 0 Z \",fill:\"#7A633A\",transform:\"translate(403,273)\"})),_path674||(_path674=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1 2 1 2 1.3125 3.9375 C2.21590361 6.64771083 3.64609846 7.48135385 6 9 C5.65213292 7.02463255 5.65213292 7.02463255 5 5 C4.34 4.67 3.68 4.34 3 4 C3.33 3.34 3.66 2.68 4 2 C4.99 2.66 5.98 3.32 7 4 C7.1875 7.125 7.1875 7.125 7 10 C3.625 9.6875 3.625 9.6875 0 9 C-2 6 -2 6 -1.6875 3.375 C-1 1 -1 1 0 0 Z \",fill:\"#89704A\",transform:\"translate(577,238)\"})),_path675||(_path675=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-2.35953094 2.35953094 -3.77895617 2.49141413 -7 3 C-7 3.66 -7 4.32 -7 5 C-7.99 5 -8.98 5 -10 5 C-10.33 5.99 -10.66 6.98 -11 8 C-11 6.68 -11 5.36 -11 4 C-11.66 3.67 -12.32 3.34 -13 3 C-11.5903653 2.29819469 -10.17192359 1.61406042 -8.75 0.9375 C-7.96109375 0.55464844 -7.1721875 0.17179688 -6.359375 -0.22265625 C-3.74006478 -1.08564091 -2.55144824 -0.93045933 0 0 Z \",fill:\"#2C1B0D\",transform:\"translate(479,187)\"})),_path676||(_path676=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.58502671 3.17005342 1.60385067 6.49124878 2 10 C-2.19469571 9.40075776 -6.00999834 8.42500059 -10 7 C-9.01 6.67 -8.02 6.34 -7 6 C-6.67 5.01 -6.34 4.02 -6 3 C-6 3.66 -6 4.32 -6 5 C-5.01 5.33 -4.02 5.66 -3 6 C-2.34 6.66 -1.68 7.32 -1 8 C-1.020625 6.865625 -1.04125 5.73125 -1.0625 4.5625 C-1 1 -1 1 0 0 Z \",fill:\"#927C57\",transform:\"translate(407,602)\"})),_path677||(_path677=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.24546405 2.49092811 0.7767578 3.41080733 0 6 C1.65 6.33 3.3 6.66 5 7 C5 8.65 5 10.3 5 12 C4.34 11.67 3.68 11.34 3 11 C3 10.01 3 9.02 3 8 C2.01 8.66 1.02 9.32 0 10 C-0.99 10 -1.98 10 -3 10 C-2.69201674 8.51988629 -2.378482 7.04092675 -2.0625 5.5625 C-1.88847656 4.73878906 -1.71445312 3.91507813 -1.53515625 3.06640625 C-1 1 -1 1 0 0 Z \",fill:\"#7D6A4C\",transform:\"translate(511,600)\"})),_path678||(_path678=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C3.52733235 2.65555119 3.52733235 2.65555119 6 3 C6.33 3.99 6.66 4.98 7 6 C3.62294375 5.46274105 0.303314 4.88935377 -3 4 C-3.33 4.99 -3.66 5.98 -4 7 C-4.33 6.01 -4.66 5.02 -5 4 C-3.35 2.68 -1.7 1.36 0 0 Z \",fill:\"#BEA376\",transform:\"translate(671,520)\"})),_path679||(_path679=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.97306516 0.49730652 8.63799813 1.55302334 13 4 C13 4.66 13 5.32 13 6 C3.40546697 4.44191344 3.40546697 4.44191344 0 0 Z \",fill:\"#503C1F\",transform:\"translate(673,520)\"})),_path680||(_path680=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-0.58199631 3.64910154 -2.16565724 4.29414694 -3.75 4.9375 C-4.63171875 5.29714844 -5.5134375 5.65679687 -6.421875 6.02734375 C-8.61186104 6.85356576 -10.71898271 7.49369943 -13 8 C-12.67 7.01 -12.34 6.02 -12 5 C-13.32 5 -14.64 5 -16 5 C-15.67 4.34 -15.34 3.68 -15 3 C-10.38 3 -5.76 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#B49667\",transform:\"translate(673,382)\"})),_path681||(_path681=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.99 0 1.98 0 3 C5.94 2.505 5.94 2.505 12 2 C8.45429137 3.77285431 5.56675327 4.71229813 1.75 5.625 C0.67234375 5.88539063 -0.4053125 6.14578125 -1.515625 6.4140625 C-2.33546875 6.60742188 -3.1553125 6.80078125 -4 7 C-4 6.34 -4 5.68 -4 5 C-4.66 4.67 -5.32 4.34 -6 4 C-4.02 2.68 -2.04 1.36 0 0 Z \",fill:\"#43321A\",transform:\"translate(500,378)\"})),_path682||(_path682=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.670625 0.061875 1.670625 0.061875 3.375 0.125 C3.705 0.785 4.035 1.445 4.375 2.125 C3.385 2.62 3.385 2.62 2.375 3.125 C2.045 4.115 1.715 5.105 1.375 6.125 C1.045 5.135 0.715 4.145 0.375 3.125 C-1.60036745 3.47286708 -1.60036745 3.47286708 -3.625 4.125 C-3.955 4.785 -4.285 5.445 -4.625 6.125 C-5.285 6.125 -5.945 6.125 -6.625 6.125 C-5.71577947 1.57889733 -4.95184304 0.17075321 0 0 Z \",fill:\"#6F5C40\",transform:\"translate(495.625,361.875)\"})),_path683||(_path683=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.33 2.64 0.66 4 1 C4.33 2.65 4.66 4.3 5 6 C4.34 6 3.68 6 3 6 C3.33 6.99 3.66 7.98 4 9 C3.34 9 2.68 9 2 9 C0.61767557 7.37373596 -0.71937515 5.7074998 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#DAB37C\",transform:\"translate(546,333)\"})),_path684||(_path684=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.4389165 -0.21755666 9.87080814 -0.10428384 15 2 C13.68 2.33 12.36 2.66 11 3 C11 3.99 11 4.98 11 6 C9.02 6 7.04 6 5 6 C6.32 5.34 7.64 4.68 9 4 C6.03 3.01 3.06 2.02 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#9B8662\",transform:\"translate(527,326)\"})),_path685||(_path685=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.16276042 2.01822917 1.32552083 4.03645833 1.48828125 6.0546875 C1.87393036 8.39519216 1.87393036 8.39519216 5 10 C5.40843923 12.71203652 5.13336867 15.2437142 5 18 C1.66766756 14.88265675 0.07266428 13.00844069 -0.09765625 8.30078125 C-0.08605469 7.31464844 -0.07445312 6.32851563 -0.0625 5.3125 C-0.05347656 4.31863281 -0.04445313 3.32476562 -0.03515625 2.30078125 C-0.02355469 1.54152344 -0.01195312 0.78226562 0 0 Z \",fill:\"#9C825A\",transform:\"translate(591,314)\"})),_path686||(_path686=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.455 0.99 4.455 0.99 9 2 C9 2.66 9 3.32 9 4 C6.69 4.33 4.38 4.66 2 5 C2 5.66 2 6.32 2 7 C1.34 7 0.68 7 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#45391F\",transform:\"translate(532,312)\"})),_path687||(_path687=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.265625 4.09375 C2.26046875 4.8878125 2.2553125 5.681875 2.25 6.5 C2.25515625 7.2940625 2.2603125 8.088125 2.265625 8.90625 C2 11 2 11 0 13 C-5.56818182 12.43181818 -5.56818182 12.43181818 -7 11 C-7.04092937 8.66702567 -7.04241723 6.33294775 -7 4 C-6.67 4 -6.34 4 -6 4 C-5.67 5.98 -5.34 7.96 -5 10 C-3.02 10 -1.04 10 1 10 C0.67 6.7 0.34 3.4 0 0 Z \",fill:\"#35220F\",transform:\"translate(566,296)\"})),_path688||(_path688=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.875 4.625 4.875 4.625 6 8 C5.01 8 4.02 8 3 8 C1.92474806 5.34771188 0.90543849 2.71631546 0 0 Z M-5 3 C-1.535 4.98 -1.535 4.98 2 7 C2 8.65 2 10.3 2 12 C1 11 0 10 -1 9 C-1.721875 8.319375 -2.44375 7.63875 -3.1875 6.9375 C-5 5 -5 5 -5 3 Z \",fill:\"#9E845A\",transform:\"translate(619,287)\"})),_path689||(_path689=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C5.67 1.65 5.34 3.3 5 5 C5.66 5 6.32 5 7 5 C6.67 8.3 6.34 11.6 6 15 C5.67 15 5.34 15 5 15 C4.95101563 14.39671875 4.90203125 13.7934375 4.8515625 13.171875 C4.77679688 12.37265625 4.70203125 11.5734375 4.625 10.75 C4.52058594 9.56664062 4.52058594 9.56664062 4.4140625 8.359375 C3.98492887 5.914123 3.21399362 4.15163097 2 2 C1.34 2 0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#C8AA7D\",transform:\"translate(486,231)\"})),_path690||(_path690=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.9375 0.8125 1.9375 0.8125 4 2 C4.33 2.99 4.66 3.98 5 5 C5.99 5.33 6.98 5.66 8 6 C7.01 6.33 6.02 6.66 5 7 C5.33 8.98 5.66 10.96 6 13 C3.19438607 11.59719304 2.99319493 9.9490995 1.875 7.0625 C1.52179688 6.16660156 1.16859375 5.27070313 0.8046875 4.34765625 C0 2 0 2 0 0 Z \",fill:\"#675230\",transform:\"translate(448,139)\"})),_path691||(_path691=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.33 4.62 3.66 9.24 4 14 C3.34 14 2.68 14 2 14 C1.66179834 12.4176994 1.32964061 10.83410625 1 9.25 C0.814375 8.36828125 0.62875 7.4865625 0.4375 6.578125 C0 4 0 4 0 0 Z \",fill:\"#493117\",transform:\"translate(517,602)\"})),_path692||(_path692=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.66 2.97 2.32 5.94 3 9 C3.66 9 4.32 9 5 9 C5 9.99 5 10.98 5 12 C7.97 12.495 7.97 12.495 11 13 C11 13.33 11 13.66 11 14 C4.75539568 14.60044272 4.75539568 14.60044272 1.5625 12.0625 C-0.53622409 7.94900079 -0.35515259 4.52819552 0 0 Z \",fill:\"#9F8864\",transform:\"translate(587,583)\"})),_path693||(_path693=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.21236328 0.02707031 1.21236328 0.02707031 2.44921875 0.0546875 C3.37154297 0.08949219 3.37154297 0.08949219 4.3125 0.125 C4.9725 1.775 5.6325 3.425 6.3125 5.125 C5.77625 4.795 5.24 4.465 4.6875 4.125 C1.6963974 2.86558838 -0.46479983 2.85644165 -3.6875 3.125 C-5.98980766 4.02331016 -5.98980766 4.02331016 -7.6875 5.125 C-7.6875 4.135 -7.6875 3.145 -7.6875 2.125 C-4.48369983 -0.01086678 -3.66810033 -0.10632175 0 0 Z \",fill:\"#AF9871\",transform:\"translate(595.6875,576.875)\"})),_path694||(_path694=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-2.39509338 2.89932357 -4.31245243 3.50168276 -8 4 C-8 3.34 -8 2.68 -8 2 C-11.3 2 -14.6 2 -18 2 C-14.91906662 -0.05395559 -14.43256308 -0.22502666 -11 -0.0625 C-6.94656637 0.11407003 -3.96353561 -1.23006278 0 0 Z \",fill:\"#917852\",transform:\"translate(562,531)\"})),_path695||(_path695=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C5.47007503 2.47007503 6.84109075 4.16572645 7.5 7.625 C7 10 7 10 5 11.8125 C4.34 12.204375 3.68 12.59625 3 13 C3.03480469 12.39671875 3.06960938 11.7934375 3.10546875 11.171875 C3.3514449 6.07474512 3.3514449 6.07474512 1.5 1.4375 C1.005 0.963125 0.51 0.48875 0 0 Z \",fill:\"#453925\",transform:\"translate(295,518)\"})),_path696||(_path696=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.495 1.98 0.495 4 1 C4 1.66 4 2.32 4 3 C4.99 3.33 5.98 3.66 7 4 C7 4.99 7 5.98 7 7 C3.5625 6.1875 3.5625 6.1875 0 5 C-0.33 4.01 -0.66 3.02 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#CCAA76\",transform:\"translate(290,522)\"})),_path697||(_path697=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.66666667 1.33333333 5.33333333 2.66666667 8 4 C7.67 4.66 7.34 5.32 7 6 C3.04 6 -0.92 6 -5 6 C-4.67 5.01 -4.34 4.02 -4 3 C-1.03 3.495 -1.03 3.495 2 4 C1.34 2.68 0.68 1.36 0 0 Z \",fill:\"#9E763E\",transform:\"translate(417,508)\"})),_path698||(_path698=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.495 2.475 0.495 5 1 C5.33 1.99 5.66 2.98 6 4 C6.66 4 7.32 4 8 4 C8 4.66 8 5.32 8 6 C7.34 6 6.68 6 6 6 C5.67 6.66 5.34 7.32 5 8 C2.21611025 6.29374499 1.14615794 5.52373261 0.25 2.3125 C0.1675 1.549375 0.085 0.78625 0 0 Z \",fill:\"#BD9A64\",transform:\"translate(345,502)\"})),_path699||(_path699=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 3.3 2 6.6 2 10 C1.01 10 0.02 10 -1 10 C-1.99 8.02 -2.98 6.04 -4 4 C-2.68 3.34 -1.36 2.68 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#CFB181\",transform:\"translate(758,451)\"})),_path700||(_path700=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C1.57250019 3.79049707 -0.16236542 7.27122456 -2.125 10.8125 C-2.93324219 12.27623047 -2.93324219 12.27623047 -3.7578125 13.76953125 C-4.37269531 14.87361328 -4.37269531 14.87361328 -5 16 C-6.39211215 11.82366356 -4.9535579 10.21039485 -3.0625 6.3125 C-2.49660156 5.13300781 -1.93070312 3.95351563 -1.34765625 2.73828125 C-0.90292969 1.83464844 -0.45820313 0.93101562 0 0 Z \",fill:\"#90836B\",transform:\"translate(445,419)\"})),_path701||(_path701=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.03447266 0.01160156 1.03447266 0.01160156 2.08984375 0.0234375 C2.77949219 0.01570313 3.46914063 0.00796875 4.1796875 0 C9.33651082 0.02010457 9.33651082 0.02010457 11.58984375 2.2734375 C8.41290706 3.13987478 6.38783805 3.2409723 3.08984375 2.7109375 C-0.56486514 2.25409889 -2.19151232 2.6153482 -5.41015625 4.2734375 C-6.07015625 3.6134375 -6.73015625 2.9534375 -7.41015625 2.2734375 C-4.91805186 -0.21866689 -3.40654837 0.01328089 0 0 Z \",fill:\"#87795C\",transform:\"translate(824.41015625,418.7265625)\"})),_path702||(_path702=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.495 0.99 0.495 2 1 C2.47587097 2.59756683 2.94243778 4.19854947 3.359375 5.8125 C4.58288668 9.99034475 6.33468085 13.98221545 8 18 C6.125 17.6875 6.125 17.6875 4 17 C3.34 16.01 2.68 15.02 2 14 C2.66 14 3.32 14 4 14 C3.525625 13.175 3.05125 12.35 2.5625 11.5 C0.76430401 7.47204099 0.3765745 4.36826421 0 0 Z \",fill:\"#4F4129\",transform:\"translate(250,342)\"})),_path703||(_path703=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.75 0.875 5.75 0.875 8 2 C7.34 3.65 6.68 5.3 6 7 C6.66 7 7.32 7 8 7 C7.67 8.32 7.34 9.64 7 11 C6.05598958 9.2421875 5.11197917 7.484375 4.16796875 5.7265625 C2.95236507 3.69497635 2.95236507 3.69497635 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#27180B\",transform:\"translate(722,306)\"})),_path704||(_path704=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.441725 1.39597071 7.01540848 3.43507124 10 7 C10.8125 9.8125 10.8125 9.8125 11 12 C10.01 11.34 9.02 10.68 8 10 C8 9.34 8 8.68 8 8 C6.35 7.67 4.7 7.34 3 7 C3 5.68 3 4.36 3 3 C2.01 2.67 1.02 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#6E5730\",transform:\"translate(301,282)\"})),_path705||(_path705=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.99 1.98 1.98 3 3 C2.67 3.66 2.34 4.32 2 5 C2.99 5.33 3.98 5.66 5 6 C4.01 7.485 4.01 7.485 3 9 C2.54860541 11.0492094 2.54860541 11.0492094 2.375 13.1875 C2.25125 14.445625 2.1275 15.70375 2 17 C1.34 16.67 0.68 16.34 0 16 C0 10.72 0 5.44 0 0 Z \",fill:\"#2D1C05\",transform:\"translate(253,250)\"})),_path706||(_path706=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.61277612 2.96175123 -1.25372522 4.38058783 -3 7 C-3.66 7 -4.32 7 -5 7 C-5.66 4.69 -6.32 2.38 -7 0 C-3.98968256 -0.93423645 -3.13349732 -1.04449911 0 0 Z \",fill:\"#B48F56\",transform:\"translate(401,241)\"})),_path707||(_path707=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.62580966 0.11398665 3.25067157 0.24155659 4.875 0.375 C5.77992188 0.44460937 6.68484375 0.51421875 7.6171875 0.5859375 C10 1 10 1 12 3 C8.7 2.67 5.4 2.34 2 2 C1.54625 2.78375 1.0925 3.5675 0.625 4.375 C-1 7 -1 7 -3 9 C-3.99 8.67 -4.98 8.34 -6 8 C-5.01 7.67 -4.02 7.34 -3 7 C-2.67 6.01 -2.34 5.02 -2 4 C-1.34 4 -0.68 4 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#1B1104\",transform:\"translate(496,191)\"})),_path708||(_path708=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0 8.58 0 13 0 C13 0.66 13 1.32 13 2 C9.37 2 5.74 2 2 2 C1.67 3.98 1.34 5.96 1 8 C0.67 8 0.34 8 0 8 C0 5.36 0 2.72 0 0 Z \",fill:\"#A79576\",transform:\"translate(405,192)\"})),_path709||(_path709=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.67 1.99 2.34 2.98 2 4 C-4.04829486 4.89604368 -9.8894576 5.11269443 -16 5 C-16 4.01 -16 3.02 -16 2 C-15.34 2 -14.68 2 -14 2 C-14 2.66 -14 3.32 -14 4 C-11.85270859 3.71926927 -9.70716807 3.42511501 -7.5625 3.125 C-6.36753906 2.96257813 -5.17257812 2.80015625 -3.94140625 2.6328125 C-2.97074219 2.42398438 -2.00007812 2.21515625 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#52442F\",transform:\"translate(528,616)\"})),_path710||(_path710=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4 2 4 2 5 4 C5.23076923 9.53846154 5.23076923 9.53846154 4 12 C3.34 12 2.68 12 2 12 C1.34 8.04 0.68 4.08 0 0 Z \",fill:\"#5D4523\",transform:\"translate(545,598)\"})),_path711||(_path711=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.875 0.1875 1.875 0.1875 4 1 C5.87679987 4.37823976 6.21849583 7.17632299 6 11 C5.01 11.495 5.01 11.495 4 12 C3.3291288 10.3767313 2.66342971 8.75132422 2 7.125 C1.62875 6.22007812 1.2575 5.31515625 0.875 4.3828125 C0 2 0 2 0 0 Z \",fill:\"#654D29\",transform:\"translate(596,580)\"})),_path712||(_path712=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C3.1875 5.125 3.1875 5.125 3 8 C3.66 8.33 4.32 8.66 5 9 C3.4375 10.125 3.4375 10.125 1 11 C-2.75 10.125 -2.75 10.125 -6 9 C-6 8.67 -6 8.34 -6 8 C-3.69 8 -1.38 8 1 8 C0.67 5.36 0.34 2.72 0 0 Z \",fill:\"#68573B\",transform:\"translate(633,566)\"})),_path713||(_path713=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.8871875 0.061875 1.8871875 0.061875 3.8125 0.125 C4.1425 0.785 4.4725 1.445 4.8125 2.125 C4.4825 2.785 4.1525 3.445 3.8125 4.125 C-0.40628192 4.32122241 -3.35760894 3.92730168 -7.1875 2.125 C-4.09861478 0.06574319 -3.47814073 -0.1140374 0 0 Z \",fill:\"#BC995E\",transform:\"translate(508.1875,564.875)\"})),_path714||(_path714=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.57413417 4.09274885 -4.54102377 7.35956013 -8 10 C-8.99 10 -9.98 10 -11 10 C-9.63088196 6.8510285 -8.1247864 4.9521513 -5.5 2.75 C-4.8915625 2.22921875 -4.283125 1.7084375 -3.65625 1.171875 C-2 0 -2 0 0 0 Z \",fill:\"#463214\",transform:\"translate(291,519)\"})),_path715||(_path715=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.309375 0.639375 0.61875 1.27875 0.9375 1.9375 C1.8345163 3.93610821 1.8345163 3.93610821 3 5 C2.82364548 7.69082872 2.38164079 10.32851446 2 13 C1.01 12.67 0.02 12.34 -1 12 C-1.14285714 3.42857143 -1.14285714 3.42857143 0 0 Z \",fill:\"#E2BC82\",transform:\"translate(188,425)\"})),_path716||(_path716=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.04474365 0.32916148 4.63608594 0.67130343 6.9375 2.75 C8 5 8 5 7.1875 7.75 C6.795625 8.4925 6.40375 9.235 6 10 C3.25722422 6.80009492 1.3697164 3.99500618 0 0 Z \",fill:\"#C5A97D\",transform:\"translate(694,421)\"})),_path717||(_path717=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.51720311 -0.36625971 4.51720311 -0.36625971 6.8125 1.375 C8 3 8 3 8 5 C7.01 5.495 7.01 5.495 6 6 C5.01 7.485 5.01 7.485 4 9 C2.47551369 6.0173094 1.06059933 3.181798 0 0 Z \",fill:\"#B99F75\",transform:\"translate(621,421)\"})),_path718||(_path718=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C5.94 1.505 5.94 1.505 12 1 C7.20451074 3.39774463 4.06686343 4.13245873 -1.25 4.0625 C-2.14203125 4.05347656 -3.0340625 4.04445313 -3.953125 4.03515625 C-4.62859375 4.02355469 -5.3040625 4.01195312 -6 4 C-2.25 0 -2.25 0 0 0 Z \",fill:\"#402F17\",transform:\"translate(592,373)\"})),_path719||(_path719=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.495 2.475 0.495 5 1 C5 3.97 5 6.94 5 10 C4.01 10 3.02 10 2 10 C1.34 6.7 0.68 3.4 0 0 Z \",fill:\"#A48351\",transform:\"translate(497,364)\"})),_path720||(_path720=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.75 -0.125 5.75 -0.125 8 1 C8 1.66 8 2.32 8 3 C7.34 3 6.68 3 6 3 C6 4.98 6 6.96 6 9 C5.67 9 5.34 9 5 9 C4.67 7.35 4.34 5.7 4 4 C2.02 4 0.04 4 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#A48D63\",transform:\"translate(515,343)\"})),_path721||(_path721=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.31554985 0.4495045 2.62738358 0.90989716 3.9375 1.375 C5.03384766 1.75785156 5.03384766 1.75785156 6.15234375 2.1484375 C8 3 8 3 9 5 C6.525 4.01 6.525 4.01 4 3 C4 3.99 4 4.98 4 6 C-3.50769231 5.38461538 -3.50769231 5.38461538 -6 3.4375 C-6.33 2.963125 -6.66 2.48875 -7 2 C-5.68 2 -4.36 2 -3 2 C-3 2.66 -3 3.32 -3 4 C-1.35 4.33 0.3 4.66 2 5 C1.34 3.35 0.68 1.7 0 0 Z \",fill:\"#695538\",transform:\"translate(671,338)\"})),_path722||(_path722=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.85963179 0.60745397 8.7405518 2.72758967 13 5 C13 5.66 13 6.32 13 7 C8.14036821 6.39254603 4.2594482 4.27241033 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#9B8564\",transform:\"translate(470,335)\"})),_path723||(_path723=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4 2 4 2 5 4 C4.01 4 3.02 4 2 4 C2.309375 5.175625 2.309375 5.175625 2.625 6.375 C2.74875 7.24125 2.8725 8.1075 3 9 C0.4345406 11.5654594 -1.47686668 11.54046087 -5 12 C-4.67 11.34 -4.34 10.68 -4 10 C-2.68 9.67 -1.36 9.34 0 9 C0 6.03 0 3.06 0 0 Z \",fill:\"#21170B\",transform:\"translate(431,310)\"})),_path724||(_path724=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.78503906 -0.01224609 1.57007813 -0.02449219 2.37890625 -0.03710938 C4.42063726 -0.04236254 6.46192251 0.0652982 8.5 0.1875 C9.16 0.8475 9.82 1.5075 10.5 2.1875 C8.19 2.1875 5.88 2.1875 3.5 2.1875 C3.17 2.8475 2.84 3.5075 2.5 4.1875 C2.5 3.1975 2.5 2.2075 2.5 1.1875 C-0.47 1.1875 -3.44 1.1875 -6.5 1.1875 C-6.5 1.8475 -6.5 2.5075 -6.5 3.1875 C-7.82 2.5275 -9.14 1.8675 -10.5 1.1875 C-7.21646451 -0.45426774 -3.60480362 0.00295961 0 0 Z \",fill:\"#917B55\",transform:\"translate(418.5,311.8125)\"})),_path725||(_path725=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C0.68 2.65 -0.64 4.3 -2 6 C-1.34 6.33 -0.68 6.66 0 7 C-0.99 8.485 -0.99 8.485 -2 10 C-3.65 9.67 -5.3 9.34 -7 9 C-5.03681826 5.46627288 -2.95929119 2.75520215 0 0 Z \",fill:\"#6C5229\",transform:\"translate(518,304)\"})),_path726||(_path726=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.99 0 1.98 0 3 C-0.66 3.66 -1.32 4.32 -2 5 C-2.68132451 6.66072849 -3.34742127 8.327767 -4 10 C-6 13 -6 13 -8.125 13.6875 C-8.74375 13.790625 -9.3625 13.89375 -10 14 C-8.51872621 10.74715253 -6.65319465 8.11102873 -4.4375 5.3125 C-3.81746094 4.52488281 -3.19742187 3.73726563 -2.55859375 2.92578125 C-1 1 -1 1 0 0 Z \",fill:\"#7F6744\",transform:\"translate(349,282)\"})),_path727||(_path727=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.57781184 2.6498275 2.13675575 4.29483665 1.6875 5.9375 C1.44386719 6.85402344 1.20023438 7.77054687 0.94921875 8.71484375 C0.63597656 9.46894531 0.32273437 10.22304688 0 11 C-0.99 11.33 -1.98 11.66 -3 12 C-2.49202991 7.6822542 -1.80317221 3.96697886 0 0 Z \",fill:\"#7F694A\",transform:\"translate(550,269)\"})),_path728||(_path728=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.95261487 4.76307437 2.08333357 9.1666528 2 14 C1.01 14.495 1.01 14.495 0 15 C-0.13277344 14.38511719 -0.26554688 13.77023437 -0.40234375 13.13671875 C-0.57894531 12.32847656 -0.75554688 11.52023437 -0.9375 10.6875 C-1.11152344 9.88699219 -1.28554688 9.08648437 -1.46484375 8.26171875 C-1.99886159 5.854599 -1.99886159 5.854599 -3 3 C-2.01 3 -1.02 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#342107\",transform:\"translate(710,252)\"})),_path729||(_path729=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 3.63 3 7.26 3 11 C2.67 10.34 2.34 9.68 2 9 C1.34 9 0.68 9 0 9 C-1.125 3.375 -1.125 3.375 0 0 Z \",fill:\"#A48455\",transform:\"translate(368,241)\"})),_path730||(_path730=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.185625 0.9590625 0.185625 0.9590625 0.375 1.9375 C0.684375 2.9584375 0.684375 2.9584375 1 4 C1.66 4.33 2.32 4.66 3 5 C2.34 6.65 1.68 8.3 1 10 C0.34 9.67 -0.32 9.34 -1 9 C-1.66 9.99 -2.32 10.98 -3 12 C-3.36923077 4.61538462 -3.36923077 4.61538462 -1.5 1.5 C-1.005 1.005 -0.51 0.51 0 0 Z \",fill:\"#372A17\",transform:\"translate(574,234)\"})),_path731||(_path731=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C3.48063781 9.41002278 3.48063781 9.41002278 2 14 C1.01 14 0.02 14 -1 14 C-1.02685938 11.85423363 -1.04633088 9.70837355 -1.0625 7.5625 C-1.07410156 6.36753906 -1.08570313 5.17257812 -1.09765625 3.94140625 C-1 1 -1 1 0 0 Z \",fill:\"#BB9E6F\",transform:\"translate(562,596)\"})),_path732||(_path732=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.33 3.3 2.66 6.6 3 10 C3.66 10 4.32 10 5 10 C6.625 12 6.625 12 8 14 C4.51460083 13.35455571 1.97180943 11.89865603 -1 10 C-0.34 9.67 0.32 9.34 1 9 C0.67 6.03 0.34 3.06 0 0 Z \",fill:\"#726142\",transform:\"translate(349,578)\"})),_path733||(_path733=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.093125 0.0825 2.18625 0.165 3.3125 0.25 C2.9825 0.91 2.6525 1.57 2.3125 2.25 C0.9925 2.25 -0.3275 2.25 -1.6875 2.25 C-3.0075 4.56 -4.3275 6.87 -5.6875 9.25 C-6.6775 9.25 -7.6675 9.25 -8.6875 9.25 C-5.48141892 0.37162162 -5.48141892 0.37162162 0 0 Z \",fill:\"#5C4D32\",transform:\"translate(336.6875,559.75)\"})),_path734||(_path734=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C1.42316338 3.89364717 -0.54821777 6.01189041 -3 9 C-3.33 9.99 -3.66 10.98 -4 12 C-4.66 12 -5.32 12 -6 12 C-5.55946315 7.15409462 -3.25494123 3.51858133 0 0 Z \",fill:\"#5A3F21\",transform:\"translate(324,551)\"})),_path735||(_path735=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C6.33 1.32 6.66 2.64 7 4 C4.69 4.33 2.38 4.66 0 5 C-0.33 4.34 -0.66 3.68 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#BC9F70\",transform:\"translate(303,548)\"})),_path736||(_path736=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C1.99 2.67 2.98 2.34 4 2 C4.33 2.99 4.66 3.98 5 5 C4.01 6.485 4.01 6.485 3 8 C2.01 8 1.02 8 0 8 C-2.1875 5.5 -2.1875 5.5 -4 3 C-3.34 3 -2.68 3 -2 3 C-2 2.34 -2 1.68 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#A38659\",transform:\"translate(588,528)\"})),_path737||(_path737=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 0.66 -0.66 1.32 -1 2 C-3.54941373 2.31241371 -6.00361513 2.51303421 -8.5625 2.625 C-9.62887695 2.68300781 -9.62887695 2.68300781 -10.71679688 2.7421875 C-12.47742425 2.83671783 -14.23867728 2.91945817 -16 3 C-13.23371858 1.15581238 -11.13270707 0.23829449 -8 -0.75 C-6.700625 -1.17539062 -6.700625 -1.17539062 -5.375 -1.609375 C-3 -2 -3 -2 0 0 Z \",fill:\"#513D19\",transform:\"translate(565,529)\"})),_path738||(_path738=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.11373372 1.49920512 6.12228205 3.08152136 9 5 C9 5.66 9 6.32 9 7 C8.484375 6.855625 7.96875 6.71125 7.4375 6.5625 C4.31490429 5.84190099 1.17449308 5.42733561 -2 5 C-2 2 -2 2 0 0 Z \",fill:\"#9A8054\",transform:\"translate(424,524)\"})),_path739||(_path739=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.86453858 3.41016497 4.34703566 6.90694544 6 11 C3.69 10.34 1.38 9.68 -1 9 C-0.67 6.03 -0.34 3.06 0 0 Z \",fill:\"#AF966E\",transform:\"translate(604,450)\"})),_path740||(_path740=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.495 2.475 0.495 5 1 C6.16363636 6.67272727 6.16363636 6.67272727 5 9 C2.5 6.75 2.5 6.75 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#DDB881\",transform:\"translate(353,450)\"})),_path741||(_path741=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 2.64 -0.66 5.28 -1 8 C-1.66 7.67 -2.32 7.34 -3 7 C-3 5.68 -3 4.36 -3 3 C-3.99 3.33 -4.98 3.66 -6 4 C-6.33 5.65 -6.66 7.3 -7 9 C-7.33 9 -7.66 9 -8 9 C-8.3125 6.1875 -8.3125 6.1875 -8 3 C-5.14925356 0.68858396 -3.6860549 0 0 0 Z \",fill:\"#AB9269\",transform:\"translate(819,447)\"})),_path742||(_path742=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.55808656 -0.3690205 10.55808656 -0.3690205 15 2 C14.01 2.495 14.01 2.495 13 3 C12.01 2.67 11.02 2.34 10 2 C10 2.66 10 3.32 10 4 C6.37 3.34 2.74 2.68 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#786951\",transform:\"translate(134,419)\"})),_path743||(_path743=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0 7.92 0 12 0 C12 0.66 12 1.32 12 2 C8.0186217 3.3271261 4.14954773 3.06915913 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#B59159\",transform:\"translate(482,387)\"})),_path744||(_path744=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.58877287 3.17754575 1 6.49382922 1 10 C1.33 10.66 1.66 11.32 2 12 C2.66 11.01 3.32 10.02 4 9 C4.99 10.32 5.98 11.64 7 13 C5.68 13 4.36 13 3 13 C3 13.66 3 14.32 3 15 C2.34 15 1.68 15 1 15 C-1.26166232 11.60750652 -1.24515545 10.34798499 -1.1875 6.375 C-1.18105469 5.39273437 -1.17460937 4.41046875 -1.16796875 3.3984375 C-1 1 -1 1 0 0 Z \",fill:\"#866B3E\",transform:\"translate(463,364)\"})),_path745||(_path745=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.93619813 3.15506142 1.1057123 5.96586502 1.0625 9.25 C1.05347656 10.14203125 1.04445313 11.0340625 1.03515625 11.953125 C1.02355469 12.62859375 1.01195312 13.3040625 1 14 C2.98 14 4.96 14 7 14 C6.67 14.66 6.34 15.32 6 16 C4.00045254 16.04254356 1.99958364 16.04080783 0 16 C-1 15 -1 15 -1.1328125 12.12890625 C-1.13023437 10.95199219 -1.12765625 9.77507812 -1.125 8.5625 C-1.12757813 7.38816406 -1.13015625 6.21382813 -1.1328125 5.00390625 C-1 2 -1 2 0 0 Z \",fill:\"#726243\",transform:\"translate(402,332)\"})),_path746||(_path746=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.98 0.66 3.96 1 6 C0.01 6 -0.98 6 -2 6 C-1.67 5.34 -1.34 4.68 -1 4 C-3.64 3.67 -6.28 3.34 -9 3 C-9 2.34 -9 1.68 -9 1 C-2.25 0 -2.25 0 0 0 Z \",fill:\"#5B4626\",transform:\"translate(431,313)\"})),_path747||(_path747=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C1.99 2.01 2.98 1.02 4 0 C4.66 0.33 5.32 0.66 6 1 C4.71937515 2.7074998 3.38232443 4.37373596 2 6 C1.34 6 0.68 6 0 6 C0 6.99 0 7.98 0 9 C-0.99 9.33 -1.98 9.66 -3 10 C-3.36629408 5.72656908 -2.40814077 3.51187196 0 0 Z \",fill:\"#55442B\",transform:\"translate(375,292)\"})),_path748||(_path748=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C5.75 2 5.75 2 7 4 C5.60804085 6.7839183 3.84424221 6.97898997 1 8 C0.40267181 5.23735711 0 2.83967231 0 0 Z \",fill:\"#A9854C\",transform:\"translate(305,290)\"})),_path749||(_path749=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.40234375 1.609375 3.40234375 1.609375 4.9375 3.75 C5.69353516 4.79414063 5.69353516 4.79414063 6.46484375 5.859375 C6.97144531 6.56578125 7.47804688 7.2721875 8 8 C8.99705016 9.33554063 9.9961686 10.66954883 11 12 C9.68 12 8.36 12 7 12 C7 11.34 7 10.68 7 10 C6.34 10 5.68 10 5 10 C4.67 8.68 4.34 7.36 4 6 C3.34 6 2.68 6 2 6 C1.34 4.02 0.68 2.04 0 0 Z \",fill:\"#5D4B32\",transform:\"translate(428,286)\"})),_path750||(_path750=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C2.05125 2.7425 1.1025 3.485 0.125 4.25 C-2.32532401 6.27845219 -3.87325363 7.9577848 -5 11 C-5.66 10.67 -6.32 10.34 -7 10 C-6.34 8.02 -5.68 6.04 -5 4 C-4.34 4 -3.68 4 -3 4 C-3 3.34 -3 2.68 -3 2 C-2.01 1.34 -1.02 0.68 0 0 Z \",fill:\"#3D280C\",transform:\"translate(683,288)\"})),_path751||(_path751=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 3 2 3 1.75 5.875 C1.06189923 8.74208654 0.1882053 11.30673466 -1 14 C-1.66 14 -2.32 14 -3 14 C-2.48594831 9.03083364 -1.76615118 4.70973649 0 0 Z \",fill:\"#6A5737\",transform:\"translate(546,266)\"})),_path752||(_path752=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 2 0 2 -1.375 3.625 C-3 5 -3 5 -5 5 C-5.33 5.66 -5.66 6.32 -6 7 C-6.99 7.33 -7.98 7.66 -9 8 C-8.66896829 4.93795671 -8.39949096 3.39949096 -6.1875 1.1875 C-4 0 -4 0 0 0 Z \",fill:\"#C7AA7F\",transform:\"translate(589,213)\"})),_path753||(_path753=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.84659077 0.59104765 8.60748167 1.97944157 13 4 C13 4.33 13 4.66 13 5 C7.73946963 5.31563182 4.55426184 4.66590937 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#725934\",transform:\"translate(496,182)\"})),_path754||(_path754=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.875 2.625 4.875 2.625 6 6 C6.66 6 7.32 6 8 6 C8.33 7.32 8.66 8.64 9 10 C9.66 10 10.32 10 11 10 C11 10.66 11 11.32 11 12 C9.68 11.67 8.36 11.34 7 11 C7 10.01 7 9.02 7 8 C6.01 7.67 5.02 7.34 4 7 C2.8125 4.4375 2.8125 4.4375 2 2 C1.34 2 0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#806131\",transform:\"translate(472,132)\"})),_path755||(_path755=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C1.67 3.96 1.34 7.92 1 12 C0.01 11.34 -0.98 10.68 -2 10 C-2.42905061 6.05273438 -2.08466413 3.38757921 0 0 Z \",fill:\"#5E4524\",transform:\"translate(423,600)\"})),_path756||(_path756=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.16874252 0.50603992 3.99967627 0.99983813 6 2 C5.67 2.99 5.34 3.98 5 5 C2.36 5 -0.28 5 -3 5 C-3.33 4.34 -3.66 3.68 -4 3 C-2.68 3 -1.36 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#B1966C\",transform:\"translate(595,591)\"})),_path757||(_path757=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.60294922 0.04060547 1.60294922 0.04060547 3.23828125 0.08203125 C4.04652344 0.11683594 4.85476563 0.15164063 5.6875 0.1875 C5.6875 0.5175 5.6875 0.8475 5.6875 1.1875 C1.0675 1.8475 -3.5525 2.5075 -8.3125 3.1875 C-7.9825 4.1775 -7.6525 5.1675 -7.3125 6.1875 C-8.3025 6.6825 -8.3025 6.6825 -9.3125 7.1875 C-9.3125 6.5275 -9.3125 5.8675 -9.3125 5.1875 C-9.9725 5.1875 -10.6325 5.1875 -11.3125 5.1875 C-11.3125 4.5275 -11.3125 3.8675 -11.3125 3.1875 C-7.50830714 0.27259898 -4.72343323 -0.15571758 0 0 Z \",fill:\"#43321D\",transform:\"translate(541.3125,536.8125)\"})),_path758||(_path758=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.485 1.485 -1.485 1.485 -3 3 C-0.69 3 1.62 3 4 3 C1.08291076 4.98362069 -0.12380904 4.9876191 -3.75 4.625 C-4.8225 4.41875 -5.895 4.2125 -7 4 C-7.33 3.01 -7.66 2.02 -8 1 C-3.375 -1.125 -3.375 -1.125 0 0 Z \",fill:\"#CAA76E\",transform:\"translate(546,531)\"})),_path759||(_path759=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4 0 4 0 7 1 C7.6875 3.0625 7.6875 3.0625 8 5 C5.36 5 2.72 5 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#BAA173\",transform:\"translate(355,457)\"})),_path760||(_path760=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.00617269 3.00617269 2.59585316 5.82381598 3 10 C2.01 10 1.02 10 0 10 C-1.25664978 7.09399739 -2 5.20395416 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#D5B67E\",transform:\"translate(353,438)\"})),_path761||(_path761=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.77049689 -0.05410687 3.54146849 -0.09284119 5.3125 -0.125 C6.29863281 -0.14820313 7.28476562 -0.17140625 8.30078125 -0.1953125 C11 0 11 0 14 2 C14 2.99 14 3.98 14 5 C13.44828125 4.68289063 12.8965625 4.36578125 12.328125 4.0390625 C9.71522011 2.87290025 7.59420998 2.59954289 4.75 2.375 C3.85796875 2.30023438 2.9659375 2.22546875 2.046875 2.1484375 C1.03367187 2.07496094 1.03367187 2.07496094 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#776A51\",transform:\"translate(682,419)\"})),_path762||(_path762=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C-0.23104056 6.31334508 -3.49320342 7.15360179 -7.84375 8.58203125 C-10 9 -10 9 -13 8 C-10.6870518 5.6870518 -9.52095125 5.50419025 -6.375 4.875 C-5.55773437 4.70742188 -4.74046875 4.53984375 -3.8984375 4.3671875 C-3.27195312 4.24601562 -2.64546875 4.12484375 -2 4 C-2 3.01 -2 2.02 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#C4A577\",transform:\"translate(719,380)\"})),_path763||(_path763=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 4.29 3 8.58 3 13 C0.70366176 9.55549263 0.45983515 7.06187717 0 3 C-0.99 3.66 -1.98 4.32 -3 5 C-1.125 1.125 -1.125 1.125 0 0 Z \",fill:\"#544126\",transform:\"translate(379,339)\"})),_path764||(_path764=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 1.32 0 2.64 0 4 C-0.99 4.33 -1.98 4.66 -3 5 C-3.33 4.34 -3.66 3.68 -4 3 C-6.57951874 2.30906104 -6.57951874 2.30906104 -9.5625 1.875 C-10.57441406 1.70742188 -11.58632813 1.53984375 -12.62890625 1.3671875 C-13.41136719 1.24601562 -14.19382812 1.12484375 -15 1 C-4.65693224 -1.67649561 -4.65693224 -1.67649561 0 0 Z \",fill:\"#6F5329\",transform:\"translate(492,328)\"})),_path765||(_path765=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.66 2 2.32 2 3 2 C3 5.96 3 9.92 3 14 C2.34 14 1.68 14 1 14 C0.67 9.38 0.34 4.76 0 0 Z \",fill:\"#A38A5B\",transform:\"translate(313,302)\"})),_path766||(_path766=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.90105469 0.01804687 1.80210937 0.03609375 2.73046875 0.0546875 C3.41753906 0.07789063 4.10460937 0.10109375 4.8125 0.125 C4.8125 1.115 4.8125 2.105 4.8125 3.125 C4.1525 2.8775 3.4925 2.63 2.8125 2.375 C-1.07399142 2.05112572 -3.08963522 3.33748545 -6.41796875 5.21484375 C-8.1875 6.125 -8.1875 6.125 -10.1875 6.125 C-7.96735818 1.00159579 -5.45984177 -0.14181407 0 0 Z \",fill:\"#69583C\",transform:\"translate(239.1875,304.875)\"})),_path767||(_path767=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.64950425 4.24208567 2.43778819 5.61527704 -0.0625 7.8125 C-0.701875 8.204375 -1.34125 8.59625 -2 9 C-2.66 8.67 -3.32 8.34 -4 8 C-3.67 7.01 -3.34 6.02 -3 5 C-2.34 5 -1.68 5 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#98753D\",transform:\"translate(702,274)\"})),_path768||(_path768=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 1.98 1.66 3.96 2 6 C2.66 5.34 3.32 4.68 4 4 C4.33 6.97 4.66 9.94 5 13 C3.68 12.67 2.36 12.34 1 12 C-0.26237731 9.47524538 -0.09856404 7.68799534 -0.0625 4.875 C-0.05347656 3.96492188 -0.04445313 3.05484375 -0.03515625 2.1171875 C-0.02355469 1.41851562 -0.01195312 0.71984375 0 0 Z \",fill:\"#6B5630\",transform:\"translate(679,256)\"})),_path769||(_path769=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.37562854 1.28965176 2.70766393 2.62689293 4 4 C4 4.66 4 5.32 4 6 C3.34 6 2.68 6 2 6 C2 7.98 2 9.96 2 12 C1.67 12 1.34 12 1 12 C1 10.35 1 8.7 1 7 C-1.475 6.01 -1.475 6.01 -4 5 C-2.68 4.67 -1.36 4.34 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#342816\",transform:\"translate(388,232)\"})),_path770||(_path770=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-1.2065625 2.9590625 -1.2065625 2.9590625 -2.4375 3.9375 C-5.23720732 5.81035932 -5.23720732 5.81035932 -6 9 C-6.66 9 -7.32 9 -8 9 C-8.36794764 5.68847126 -8.29809215 4.39390748 -6.25 1.6875 C-4 0 -4 0 0 0 Z \",fill:\"#5D4522\",transform:\"translate(306,537)\"})),_path771||(_path771=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.42857143 -0.36190476 5.42857143 -0.36190476 7.875 1.1875 C9.34781139 3.56036279 9.22223194 5.25913944 9 8 C8.01 8 7.02 8 6 8 C6 6.35 6 4.7 6 3 C5.01 3 4.02 3 3 3 C3 2.34 3 1.68 3 1 C2.01 0.67 1.02 0.34 0 0 Z \",fill:\"#8E7044\",transform:\"translate(303,536)\"})),_path772||(_path772=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.75 0.875 5.75 0.875 8 2 C8 2.66 8 3.32 8 4 C9.175625 3.9071875 9.175625 3.9071875 10.375 3.8125 C11.674375 3.9053125 11.674375 3.9053125 13 4 C13.99 5.485 13.99 5.485 15 7 C9.14727744 6.54979057 4.91779881 3.96160773 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#977B50\",transform:\"translate(387,520)\"})),_path773||(_path773=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.33 2.64 0.66 4 1 C4 1.66 4 2.32 4 3 C4.99 3.33 5.98 3.66 7 4 C7 5.32 7 6.64 7 8 C7.66 8 8.32 8 9 8 C9 8.66 9 9.32 9 10 C7.68 10.33 6.36 10.66 5 11 C4.731875 9.9275 4.46375 8.855 4.1875 7.75 C3.13772173 4.43491072 2.25387672 2.56122354 0 0 Z \",fill:\"#3F3121\",transform:\"translate(278,499)\"})),_path774||(_path774=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.74592649 4.11888974 2.5266022 7.65010589 2.75 12.5 C2.80542969 13.36753906 2.86085938 14.23507812 2.91796875 15.12890625 C2.98177734 16.37994141 2.98177734 16.37994141 3.046875 17.65625 C3.08651367 18.41744141 3.12615234 19.17863281 3.16699219 19.96289062 C3 22 3 22 1 25 C0.10250178 21.9317362 -0.11711768 19.20730024 -0.09765625 16.015625 C-0.09443359 15.08105469 -0.09121094 14.14648438 -0.08789062 13.18359375 C-0.07951172 12.21550781 -0.07113281 11.24742187 -0.0625 10.25 C-0.05798828 9.26644531 -0.05347656 8.28289062 -0.04882812 7.26953125 C-0.03706483 4.84629209 -0.02062684 2.42317727 0 0 Z \",fill:\"#CFB382\",transform:\"translate(481,431)\"})),_path775||(_path775=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2 3.31 2 5.62 2 8 C0.35 8.66 -1.3 9.32 -3 10 C-3 8.35 -3 6.7 -3 5 C-2.34 5 -1.68 5 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#BD9D70\",transform:\"translate(798,422)\"})),_path776||(_path776=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.02703381 1.93742341 1.04641125 3.87495479 1.0625 5.8125 C1.07410156 6.89144531 1.08570313 7.97039062 1.09765625 9.08203125 C1 12 1 12 0 15 C-0.66 15 -1.32 15 -2 15 C-2.05429959 13.25034642 -2.09292823 11.50020213 -2.125 9.75 C-2.15980469 8.28820312 -2.15980469 8.28820312 -2.1953125 6.796875 C-1.99862781 3.9803502 -1.44568916 2.39050964 0 0 Z \",fill:\"#CDA870\",transform:\"translate(604,337)\"})),_path777||(_path777=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C1.66 3 2.32 3 3 3 C2.25 10.75 2.25 10.75 0 13 C-0.19551338 11.39679026 -0.38111983 9.79237014 -0.5625 8.1875 C-0.71912109 6.84751953 -0.71912109 6.84751953 -0.87890625 5.48046875 C-1 3 -1 3 0 0 Z \",fill:\"#C9A570\",transform:\"translate(319,335)\"})),_path778||(_path778=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C2.66 2 3.32 2 4 2 C4 4.97 4 7.94 4 11 C3.34 11 2.68 11 2 11 C0.80712589 7.12315913 0 4.08378077 0 0 Z \",fill:\"#AB8A57\",transform:\"translate(567,294)\"})),_path779||(_path779=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.01746725 0.76419214 9.01746725 0.76419214 13 4 C13 4.99 13 5.98 13 7 C10.525 6.01 10.525 6.01 8 5 C8 4.34 8 3.68 8 3 C7.05125 2.87625 6.1025 2.7525 5.125 2.625 C2 2 2 2 0 0 Z \",fill:\"#8A6D41\",transform:\"translate(288,277)\"})),_path780||(_path780=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.99 2.475 0.99 5 2 C5 2.66 5 3.32 5 4 C4.01 4.33 3.02 4.66 2 5 C1.01 6.485 1.01 6.485 0 8 C-0.66 7.34 -1.32 6.68 -2 6 C-2 4.68 -2 3.36 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#9C835B\",transform:\"translate(603,271)\"})),_path781||(_path781=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.10633718 1.70828921 2.93801608 2.52148416 3.29296875 5.26171875 C3.25816406 6.06222656 3.22335937 6.86273438 3.1875 7.6875 C3.16042969 8.49574219 3.13335938 9.30398438 3.10546875 10.13671875 C3.07066406 10.75160156 3.03585937 11.36648438 3 12 C2.67 12 2.34 12 2 12 C1.67 9.69 1.34 7.38 1 5 C0.5978125 6.2065625 0.5978125 6.2065625 0.1875 7.4375 C-0.4003125 8.7059375 -0.4003125 8.7059375 -1 10 C-1.99 10.33 -2.98 10.66 -4 11 C-3.71125 10.29875 -3.4225 9.5975 -3.125 8.875 C-1.97866412 5.94547497 -0.97374346 2.99078347 0 0 Z \",fill:\"#604A26\",transform:\"translate(695,261)\"})),_path782||(_path782=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C2.36843005 5.05255964 0.86540627 9.29593201 -1 14 C-2.13732426 10.59598052 -1.83989957 8.22543336 -1.0625 4.75 C-0.86785156 3.85796875 -0.67320312 2.9659375 -0.47265625 2.046875 C-0.31667969 1.37140625 -0.16070313 0.6959375 0 0 Z \",fill:\"#3D2A12\",transform:\"translate(552,252)\"})),_path783||(_path783=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 0 7.26 0 11 0 C11 0.33 11 0.66 11 1 C9.2984375 1.433125 9.2984375 1.433125 7.5625 1.875 C6.386875 2.24625 5.21125 2.6175 4 3 C3.67 3.66 3.34 4.32 3 5 C1.68 5 0.36 5 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#876C43\",transform:\"translate(685,249)\"})),_path784||(_path784=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C7.67 0.99 7.34 1.98 7 3 C3.7 3.33 0.4 3.66 -3 4 C-2.34 3.67 -1.68 3.34 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#A98249\",transform:\"translate(265,251)\"})),_path785||(_path785=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.455 0.99 4.455 0.99 9 2 C9 2.99 9 3.98 9 5 C6.36 5 3.72 5 1 5 C0.67 3.35 0.34 1.7 0 0 Z \",fill:\"#180F04\",transform:\"translate(477,155)\"})),_path786||(_path786=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.04882866 2.1725131 0.08882991 3.33787015 -0.875 4.5 C-1.67550781 5.47453125 -1.67550781 5.47453125 -2.4921875 6.46875 C-2.98976563 6.9740625 -3.48734375 7.479375 -4 8 C-4.66 8 -5.32 8 -6 8 C-6.33 8.99 -6.66 9.98 -7 11 C-8.32 10.34 -9.64 9.68 -11 9 C-9.9275 8.443125 -8.855 7.88625 -7.75 7.3125 C-4.35083445 5.3888343 -2.24604279 3.23430162 0 0 Z \",fill:\"#8D774D\",transform:\"translate(507,146)\"})),_path787||(_path787=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.44876616 1.64846769 -0.90930488 3.29373455 -1.375 4.9375 C-1.63023437 5.85402344 -1.88546875 6.77054688 -2.1484375 7.71484375 C-3 10 -3 10 -5 11 C-5 7 -5 7 -4 6 C-4.99 5.67 -5.98 5.34 -7 5 C-2.25 0 -2.25 0 0 0 Z \",fill:\"#88734C\",transform:\"translate(516,140)\"})),_path788||(_path788=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C0.67 4.95 0.34 9.9 0 15 C-0.66 15 -1.32 15 -2 15 C-2.05406122 13.06280622 -2.09282025 11.12518079 -2.125 9.1875 C-2.14820313 8.10855469 -2.17140625 7.02960937 -2.1953125 5.91796875 C-2 3 -2 3 0 0 Z \",fill:\"#352A1C\",transform:\"translate(418,596)\"})),_path789||(_path789=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0 7.92 0 12 0 C12 0.33 12 0.66 12 1 C10.3603125 1.2165625 10.3603125 1.2165625 8.6875 1.4375 C5.06877013 1.88288104 5.06877013 1.88288104 2 3 C1.67 3.99 1.34 4.98 1 6 C0.01 5.34 -0.98 4.68 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#594931\",transform:\"translate(586,576)\"})),_path790||(_path790=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0.33 3.3 0.66 5 1 C5 1.99 5 2.98 5 4 C4.34 4 3.68 4 3 4 C3 4.66 3 5.32 3 6 C1.68 5.34 0.36 4.68 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#3A3325\",transform:\"translate(335,561)\"})),_path791||(_path791=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.36644578 1.55966592 1.71760862 3.12292651 2.0625 4.6875 C2.25972656 5.55761719 2.45695312 6.42773438 2.66015625 7.32421875 C3.02509476 10.1975852 2.84691238 12.2366459 2 15 C1.01 15.495 1.01 15.495 0 16 C0 10.72 0 5.44 0 0 Z \",fill:\"#AB894F\",transform:\"translate(482,538)\"})),_path792||(_path792=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0.99 5.94 1.98 9 3 C8.01 3.495 8.01 3.495 7 4 C6.67 4.66 6.34 5.32 6 6 C3.69 5.34 1.38 4.68 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#806841\",transform:\"translate(303,543)\"})),_path793||(_path793=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0.33 5.94 0.66 9 1 C9 1.66 9 2.32 9 3 C9.99 3.33 10.98 3.66 12 4 C10.02 4.33 8.04 4.66 6 5 C6 4.34 6 3.68 6 3 C5.195625 2.87625 4.39125 2.7525 3.5625 2.625 C2.716875 2.41875 1.87125 2.2125 1 2 C0.67 1.34 0.34 0.68 0 0 Z \",fill:\"#B39058\",transform:\"translate(380,537)\"})),_path794||(_path794=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.1875 -0.3125 2.1875 -0.3125 5 0 C7.8125 2.25 7.8125 2.25 10 5 C10 6.32 10 7.64 10 9 C9.34 9 8.68 9 8 9 C7.566875 8.236875 7.13375 7.47375 6.6875 6.6875 C4.79619522 3.67542202 3.08197691 2.66593347 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#5E431E\",transform:\"translate(656,537)\"})),_path795||(_path795=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 0.33 7.26 0.66 11 1 C11 1.66 11 2.32 11 3 C6.49646738 4.75747614 2.82360189 5.19294408 -2 5 C-2 4.67 -2 4.34 -2 4 C-0.35 3.67 1.3 3.34 3 3 C2.01 2.67 1.02 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#A98F64\",transform:\"translate(543,532)\"})),_path796||(_path796=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.75 1.75 0.75 1.75 1 4 C-0.9375 6.25 -0.9375 6.25 -3 8 C-3.66 7.67 -4.32 7.34 -5 7 C-5.625 4.9375 -5.625 4.9375 -6 3 C-5.195625 2.87625 -4.39125 2.7525 -3.5625 2.625 C-2.716875 2.41875 -1.87125 2.2125 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#5F5236\",transform:\"translate(297,528)\"})),_path797||(_path797=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.495 0.99 0.495 2 1 C2 1.66 2 2.32 2 3 C2.66 3 3.32 3 4 3 C4 3.99 4 4.98 4 6 C4.66 6 5.32 6 6 6 C6 7.65 6 9.3 6 11 C5.01 11 4.02 11 3 11 C3.33 9.68 3.66 8.36 4 7 C3.01 6.67 2.02 6.34 1 6 C0.67 4.02 0.34 2.04 0 0 Z \",fill:\"#3E321E\",transform:\"translate(687,518)\"})),_path798||(_path798=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 1.98 2 3.96 2 6 C1.67 5.34 1.34 4.68 1 4 C0.34 4 -0.32 4 -1 4 C-0.67 5.65 -0.34 7.3 0 9 C-1.65 8.67 -3.3 8.34 -5 8 C-3.63055898 5.05043472 -2.12169591 2.47531189 0 0 Z \",fill:\"#C9AC77\",transform:\"translate(680,508)\"})),_path799||(_path799=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.62490954 -0.02698189 3.24994633 -0.04638757 4.875 -0.0625 C5.77992188 -0.07410156 6.68484375 -0.08570313 7.6171875 -0.09765625 C10 0 10 0 12 1 C12 1.66 12 2.32 12 3 C14.475 3.99 14.475 3.99 17 5 C14 6 14 6 10.8125 4.5625 C9.884375 4.046875 8.95625 3.53125 8 3 C8 2.67 8 2.34 8 2 C5.36 1.67 2.72 1.34 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#84663B\",transform:\"translate(556,508)\"})),_path800||(_path800=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.33 0 0.66 0 1 C-6.32427599 2.35991738 -12.56025419 3.37679879 -19 4 C-17 1 -17 1 -14.5625 0.3125 C-9.70232229 -0.11383138 -4.87526268 -0.0780736 0 0 Z \",fill:\"#7A5F33\",transform:\"translate(411,508)\"})),_path801||(_path801=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C3.22107787 4.7885289 3.28107535 7.34653181 3.1875 10.125 C3.17396484 10.87910156 3.16042969 11.63320313 3.14648438 12.41015625 C3.11109985 14.27374127 3.05729167 16.13695978 3 18 C2.67 18 2.34 18 2 18 C2 13.71 2 9.42 2 5 C0.68 4.67 -0.64 4.34 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#C8AB7B\",transform:\"translate(456,427)\"})),_path802||(_path802=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0.99 8.58 1.98 13 3 C13 3.33 13 3.66 13 4 C7.72 4 2.44 4 -3 4 C-2.01 3.01 -1.02 2.02 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#291807\",transform:\"translate(395,373)\"})),_path803||(_path803=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 3.3 1 6.6 1 10 C-0.98 10 -2.96 10 -5 10 C-5.33 9.34 -5.66 8.68 -6 8 C-5.34 7.34 -4.68 6.68 -4 6 C-3.67 6.99 -3.34 7.98 -3 9 C-2.01 9 -1.02 9 0 9 C-0.99 7.35 -1.98 5.7 -3 4 C-2.02727325 2.64664105 -1.0260734 1.31337396 0 0 Z \",fill:\"#D3AF78\",transform:\"translate(561,336)\"})),_path804||(_path804=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.19360449 0.67097672 7.40334352 2.8558394 11 5 C10.67 5.99 10.34 6.98 10 8 C5.56983933 6.60766379 3.08449737 4.43701135 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#8D7851\",transform:\"translate(457,332)\"})),_path805||(_path805=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-1.77117187 1.96519531 -1.77117187 1.96519531 -3.578125 1.9296875 C-5.13541033 1.91092503 -6.69270252 1.89272534 -8.25 1.875 C-9.41595703 1.84986328 -9.41595703 1.84986328 -10.60546875 1.82421875 C-16.08306936 1.74031699 -16.08306936 1.74031699 -21 4 C-19.96875 2.05078125 -19.96875 2.05078125 -18 0 C-15.37097349 -0.48850155 -13.13885033 -0.73961747 -10.5 -0.8125 C-9.82324219 -0.85052734 -9.14648438 -0.88855469 -8.44921875 -0.92773438 C-5.31184981 -1.07315483 -3.00415622 -1.00138541 0 0 Z \",fill:\"#51432B\",transform:\"translate(453,334)\"})),_path806||(_path806=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 0.99 -0.66 1.98 -1 3 C-1.99 3 -2.98 3 -4 3 C-4 6.3 -4 9.6 -4 13 C-7 10 -7 10 -7.29296875 7.95703125 C-7.1953125 5.97135417 -7.09765625 3.98567708 -7 2 C-2.25 0 -2.25 0 0 0 Z \",fill:\"#2C2112\",transform:\"translate(561,296)\"})),_path807||(_path807=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.515625 0.2475 1.03125 0.495 1.5625 0.75 C0.5725 1.08 -0.4175 1.41 -1.4375 1.75 C-1.7675 2.41 -2.0975 3.07 -2.4375 3.75 C-1.7775 4.41 -1.1175 5.07 -0.4375 5.75 C-3.4075 5.75 -6.3775 5.75 -9.4375 5.75 C-9.4375 5.09 -9.4375 4.43 -9.4375 3.75 C-3.0375 -0.31153846 -3.0375 -0.31153846 0 0 Z \",fill:\"#917341\",transform:\"translate(571.4375,280.25)\"})),_path808||(_path808=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.1577506 3.47325181 3.06866652 6.36067448 3 10 C2.01 10.33 1.02 10.66 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#856737\",transform:\"translate(562,259)\"})),_path809||(_path809=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.36923077 5.41538462 0.36923077 5.41538462 -1.5 8.375 C-1.995 8.91125 -2.49 9.4475 -3 10 C-2.67 7.69 -2.34 5.38 -2 3 C-3.98 3 -5.96 3 -8 3 C-5.53387212 -0.1151089 -3.89156016 -0.31553191 0 0 Z \",fill:\"#8D744F\",transform:\"translate(733,242)\"})),_path810||(_path810=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-2.64 0.99 -5.28 1.98 -8 3 C-7.34 3.66 -6.68 4.32 -6 5 C-9.47325181 6.1577506 -12.36067448 6.06866652 -16 6 C-15.01 5.34 -14.02 4.68 -13 4 C-12.4225 3.505 -11.845 3.01 -11.25 2.5 C-7.93964276 0.29309518 -3.77096723 -1.88548361 0 0 Z \",fill:\"#75623D\",transform:\"translate(467,182)\"})),_path811||(_path811=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3 4 4 8 5 12 C2 11 2 11 0 8 C-0.25760279 5.30547479 -0.08900053 2.71451625 0 0 Z \",fill:\"#58401E\",transform:\"translate(537,600)\"})),_path812||(_path812=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4 1.65 4 3.3 4 5 C3.38125 5.12375 2.7625 5.2475 2.125 5.375 C-0.19120832 5.87197356 -0.19120832 5.87197356 -2 8 C-2 4.23312136 -1.76462683 3.08809695 0 0 Z \",fill:\"#382F1E\",transform:\"translate(438,608)\"})),_path813||(_path813=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.4375 0.375 2.4375 0.375 5 1 C6.60725635 4.21451269 6.05748185 7.43612536 6 11 C5.01 11.33 4.02 11.66 3 12 C3 8.37 3 4.74 3 1 C2.01 0.67 1.02 0.34 0 0 Z \",fill:\"#B29770\",transform:\"translate(541,599)\"})),_path814||(_path814=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 2.31 0 4.62 0 7 C-3.75 8.125 -3.75 8.125 -6 7 C-6 6.34 -6 5.68 -6 5 C-5.01 5 -4.02 5 -3 5 C-3 3.68 -3 2.36 -3 1 C-1 0 -1 0 0 0 Z \",fill:\"#C3A575\",transform:\"translate(344,574)\"})),_path815||(_path815=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-0.99 2 -1.98 2 -3 2 C-2.67 3.65 -2.34 5.3 -2 7 C-3.875 7.625 -3.875 7.625 -6 8 C-6.66 7.34 -7.32 6.68 -8 6 C-7.34 6 -6.68 6 -6 6 C-6 5.34 -6 4.68 -6 4 C-6.66 3.67 -7.32 3.34 -8 3 C-2.25 0 -2.25 0 0 0 Z \",fill:\"#AC8E5D\",transform:\"translate(550,552)\"})),_path816||(_path816=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-4.42140162 4.42140162 -10.98206508 5.37313178 -17 6 C-17 5.34 -17 4.68 -17 4 C-15.39125 3.566875 -15.39125 3.566875 -13.75 3.125 C-10.1977959 2.19994585 -10.1977959 2.19994585 -7.9375 0.875 C-5.25714205 -0.33548424 -2.90107504 -0.13186705 0 0 Z \",fill:\"#372915\",transform:\"translate(544,554)\"})),_path817||(_path817=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.4125 0.9075 2.825 1.815 3.25 2.75 C4.89050718 5.79665618 6.44718361 7.71126806 9 10 C5.49849196 9.70820766 4.21713533 9.21713533 1.6875 6.6875 C0 4 0 4 0 0 Z \",fill:\"#5A431D\",transform:\"translate(652,541)\"})),_path818||(_path818=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C-3.37931034 6.03448276 -3.37931034 6.03448276 -6.25 5.875 C-8 5 -8 5 -10 3 C-6.53510463 2.27054834 -3.53576478 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#BF9F6E\",transform:\"translate(572,544)\"})),_path819||(_path819=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.97631579 4.81578947 4.97631579 4.81578947 5.0625 9.125 C5.041875 10.07375 5.02125 11.0225 5 12 C2.75892504 9.11861791 0.66831106 6.25320657 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#8B775A\",transform:\"translate(438,542)\"})),_path820||(_path820=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0.99 5.28 1.98 8 3 C7.67 3.66 7.34 4.32 7 5 C5.68 4.67 4.36 4.34 3 4 C2.34 5.32 1.68 6.64 1 8 C0.01 8 -0.98 8 -2 8 C-1.2265625 7.13375 -1.2265625 7.13375 -0.4375 6.25 C0.2740625 5.13625 0.2740625 5.13625 1 4 C0.67 2.68 0.34 1.36 0 0 Z \",fill:\"#3B3125\",transform:\"translate(316,540)\"})),_path821||(_path821=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C-1.99481865 6.22797927 -1.99481865 6.22797927 -4 8 C-7.3125 8.375 -7.3125 8.375 -10 8 C-6.97727468 4.74475735 -3.74281699 2.38179263 0 0 Z \",fill:\"#3A2D1A\",transform:\"translate(588,536)\"})),_path822||(_path822=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.67 4.63 1.34 8.26 1 12 C0.01 12.33 -0.98 12.66 -2 13 C-2 10.40422333 -1.83531288 7.95203246 -1.5625 5.375 C-1.48128906 4.57835937 -1.40007812 3.78171875 -1.31640625 2.9609375 C-1 1 -1 1 0 0 Z \",fill:\"#4C3619\",transform:\"translate(273,503)\"})),_path823||(_path823=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.07894531 0.03480469 2.15789063 0.06960938 3.26953125 0.10546875 C4.35621094 0.13253906 5.44289063 0.15960938 6.5625 0.1875 C7.80966797 0.23970703 7.80966797 0.23970703 9.08203125 0.29296875 C8.09203125 0.62296875 7.10203125 0.95296875 6.08203125 1.29296875 C5.75203125 1.95296875 5.42203125 2.61296875 5.08203125 3.29296875 C1.45203125 3.29296875 -2.17796875 3.29296875 -5.91796875 3.29296875 C-2.91796875 0.29296875 -2.91796875 0.29296875 0 0 Z \",fill:\"#685A43\",transform:\"translate(783.91796875,417.70703125)\"})),_path824||(_path824=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.7834375 2.175625 1.7834375 2.175625 1.5625 3.375 C0.96546449 7.22256219 0.65164442 11.04361456 0.37890625 14.92578125 C0.25386719 15.61027344 0.12882812 16.29476563 0 17 C-0.66 17.33 -1.32 17.66 -2 18 C-1.98839844 17.32453125 -1.97679687 16.6490625 -1.96484375 15.953125 C-1.95582031 15.06109375 -1.94679688 14.1690625 -1.9375 13.25 C-1.92009766 11.92742187 -1.92009766 11.92742187 -1.90234375 10.578125 C-1.99173802 8.2181162 -2.33087179 6.25501476 -3 4 C-2.34 4 -1.68 4 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#2E210E\",transform:\"translate(504,360)\"})),_path825||(_path825=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.8725185 3.15987497 4.34846322 5.34113615 4 9 C3.39072482 11.01822402 2.73519522 13.02416285 2 15 C1.67 15 1.34 15 1 15 C0.67 10.05 0.34 5.1 0 0 Z \",fill:\"#241B0D\",transform:\"translate(562,332)\"})),_path826||(_path826=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.16874252 0.50603992 3.99967627 0.99983813 6 2 C5.67 3.65 5.34 5.3 5 7 C4.34 7 3.68 7 3 7 C3 6.34 3 5.68 3 5 C2.01 4.67 1.02 4.34 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#DBB77B\",transform:\"translate(553,328)\"})),_path827||(_path827=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0.495 2.97 0.495 6 1 C6 1.66 6 2.32 6 3 C1.545 4.485 1.545 4.485 -3 6 C-2.67 4.68 -2.34 3.36 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#2A1D10\",transform:\"translate(418,326)\"})),_path828||(_path828=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.4540625 0.0309375 1.4540625 0.0309375 2.9375 0.0625 C2.9375 0.7225 2.9375 1.3825 2.9375 2.0625 C-2.47426471 6.0625 -2.47426471 6.0625 -5.0625 6.0625 C-3.98897059 0.08140756 -3.98897059 0.08140756 0 0 Z \",fill:\"#886733\",transform:\"translate(496.0625,324.9375)\"})),_path829||(_path829=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.125 0.375 2.125 0.375 4 1 C3.67 1.99 3.34 2.98 3 4 C0.525 3.01 0.525 3.01 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z M0 4 C0.66 4.33 1.32 4.66 2 5 C2 5.66 2 6.32 2 7 C1.34 7 0.68 7 0 7 C0 7.66 0 8.32 0 9 C-1.32 8.34 -2.64 7.68 -4 7 C-2.68 6.01 -1.36 5.02 0 4 Z \",fill:\"#B8955C\",transform:\"translate(246,301)\"})),_path830||(_path830=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.79555331 2.53036888 4.4455386 4.78074764 6 9 C6 9.99 6 10.98 6 12 C5.34 12 4.68 12 4 12 C3.7525 11.4225 3.505 10.845 3.25 10.25 C1.83316683 7.6997003 0.12372463 5.98214299 -2 4 C-1.01 4.33 -0.02 4.66 1 5 C0.67 3.35 0.34 1.7 0 0 Z \",fill:\"#6C5939\",transform:\"translate(586,288)\"})),_path831||(_path831=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.33 0.99 4.66 1.98 5 3 C1.35206816 4.27253436 -2.1936543 5.32829194 -6 6 C-4 4 -2 2 0 0 Z \",fill:\"#A4824B\",transform:\"translate(557,286)\"})),_path832||(_path832=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.85486952 2.78230428 2.72462112 4.84363607 3.6875 8 C3.95949219 8.86625 4.23148437 9.7325 4.51171875 10.625 C5 13 5 13 4 16 C-1.05908096 7.14223195 -1.05908096 7.14223195 -0.8125 2.375 C-0.544375 1.59125 -0.27625 0.8075 0 0 Z \",fill:\"#8E7F60\",transform:\"translate(417,266)\"})),_path833||(_path833=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.3431213 0.25561323 4.67843403 0.59270772 7 1 C7.33 1.66 7.66 2.32 8 3 C6.35 4.32 4.7 5.64 3 7 C2.01 4.69 1.02 2.38 0 0 Z \",fill:\"#C6A87A\",transform:\"translate(491,257)\"})),_path834||(_path834=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.06058594 1.14339844 1.12117187 2.28679687 1.18359375 3.46484375 C1.26798428 4.95574305 1.35263302 6.44662775 1.4375 7.9375 C1.47681641 8.69224609 1.51613281 9.44699219 1.55664062 10.22460938 C1.44038024 13.91944187 1.44038024 13.91944187 3 17 C3.04080783 18.99958364 3.04254356 21.00045254 3 23 C0.67304318 19.50956477 -0.12649759 17.96265834 -0.09765625 13.8671875 C-0.09443359 13.06152344 -0.09121094 12.25585938 -0.08789062 11.42578125 C-0.07951172 10.58402344 -0.07113281 9.74226562 -0.0625 8.875 C-0.05798828 8.02550781 -0.05347656 7.17601562 -0.04882812 6.30078125 C-0.03702874 4.20049091 -0.01909306 2.1002367 0 0 Z \",fill:\"#8A744A\",transform:\"translate(563,230)\"})),_path835||(_path835=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 1.32 3.3 2.64 5 4 C4.67 4.66 4.34 5.32 4 6 C3.34 5.34 2.68 4.68 2 4 C1.34 5.32 0.68 6.64 0 8 C-0.66 8 -1.32 8 -2 8 C-2.33 6.02 -2.66 4.04 -3 2 C-2.34 2 -1.68 2 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#A78B62\",transform:\"translate(392,218)\"})),_path836||(_path836=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.598125 0.20625 1.19625 0.4125 1.8125 0.625 C1.173125 1.0375 0.53375 1.45 -0.125 1.875 C-2.39740931 3.80310487 -2.78946439 4.73924181 -3.1875 7.625 C-2.1975 7.955 -1.2075 8.285 -0.1875 8.625 C-1.8375 8.625 -3.4875 8.625 -5.1875 8.625 C-5.375 5.25 -5.375 5.25 -5.1875 1.625 C-2.1875 -0.375 -2.1875 -0.375 0 0 Z \",fill:\"#A3814D\",transform:\"translate(486.1875,160.375)\"})),_path837||(_path837=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.05399736 1.45792884 0.09279177 2.91642712 0.125 4.375 C0.14820313 5.18710937 0.17140625 5.99921875 0.1953125 6.8359375 C0 9 0 9 -2 11 C-3.60725635 7.78548731 -3.05748185 4.56387464 -3 1 C-1 0 -1 0 0 0 Z \",fill:\"#9C8964\",transform:\"translate(537,599)\"})),_path838||(_path838=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C6 0.66 6 1.32 6 2 C5.01 2.495 5.01 2.495 4 3 C4 3.66 4 4.32 4 5 C2.35 5.33 0.7 5.66 -1 6 C-0.67 4.02 -0.34 2.04 0 0 Z \",fill:\"#C1A473\",transform:\"translate(512,600)\"})),_path839||(_path839=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5.33 0.66 5.66 1.32 6 2 C5.21625 2.226875 4.4325 2.45375 3.625 2.6875 C0.78125 3.78125 0.78125 3.78125 -0.3125 6.625 C-0.6528125 7.800625 -0.6528125 7.800625 -1 9 C-1.66 8.67 -2.32 8.34 -3 8 C-1.125 2.25 -1.125 2.25 0 0 Z \",fill:\"#322615\",transform:\"translate(510,597)\"})),_path840||(_path840=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0.33 3.3 0.66 5 1 C4.67 1.66 4.34 2.32 4 3 C1.4375 3.625 1.4375 3.625 -1 4 C-1 4.66 -1 5.32 -1 6 C-2.32 6 -3.64 6 -5 6 C-4.67 4.68 -4.34 3.36 -4 2 C-2.68 2 -1.36 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#B59A6C\",transform:\"translate(619,581)\"})),_path841||(_path841=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.28788824 3.11016455 5.83735988 6.01618925 8 10 C6.35 10 4.7 10 3 10 C3 8.02 3 6.04 3 4 C2.01 4 1.02 4 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#312413\",transform:\"translate(342,502)\"})),_path842||(_path842=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.66 3.63 2.32 7.26 3 11 C-1 10 -1 10 -2.75 7.4375 C-3.1625 6.633125 -3.575 5.82875 -4 5 C-3.34 5 -2.68 5 -2 5 C-2 5.66 -2 6.32 -2 7 C-1.34 7 -0.68 7 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#C6A97A\",transform:\"translate(459,448)\"})),_path843||(_path843=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.0625 0.4375 2.0625 0.4375 4 1 C3.67 2.98 3.34 4.96 3 7 C2.01 7 1.02 7 0 7 C-0.38133299 5.0085944 -0.71325582 3.00720923 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#D7B57F\",transform:\"translate(184,449)\"})),_path844||(_path844=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 0.99 -0.66 1.98 -1 3 C-2.98 3.33 -4.96 3.66 -7 4 C-7 3.67 -7 3.34 -7 3 C-8.65 2.67 -10.3 2.34 -12 2 C-8.09971775 -0.60018816 -4.52565431 -0.15085514 0 0 Z \",fill:\"#8B7654\",transform:\"translate(632,369)\"})),_path845||(_path845=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-0.99 2 -1.98 2 -3 2 C-3 2.66 -3 3.32 -3 4 C-4.65 4 -6.3 4 -8 4 C-8 3.01 -8 2.02 -8 1 C-4.93251126 -0.86240388 -3.40254489 -1.2151946 0 0 Z \",fill:\"#C4A167\",transform:\"translate(572,368)\"})),_path846||(_path846=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.99 1.67 2.98 1.34 4 1 C6.33299825 0.96045766 8.66708189 0.95598268 11 1 C9.71034824 2.37562854 8.37310707 3.70766393 7 5 C6.34 5 5.68 5 5 5 C5 4.34 5 3.68 5 3 C3.02 3 1.04 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#3F301B\",transform:\"translate(401,323)\"})),_path847||(_path847=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.515625 0.309375 1.03125 0.61875 1.5625 0.9375 C4.66665423 2.29059287 7.65115007 2.61359424 11 3 C11 3.33 11 3.66 11 4 C8.36 4 5.72 4 3 4 C3 4.66 3 5.32 3 6 C0.13275314 5.42655063 -0.8614515 5.1385485 -3 3 C-2.01 2.67 -1.02 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#312414\",transform:\"translate(557,309)\"})),_path848||(_path848=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C3.32 2.66 4.64 3.32 6 4 C2.30823564 5.36732013 0.5364391 4.46632841 -3 3 C-5.70886941 2.83201738 -5.70886941 2.83201738 -8 3 C-8 2.34 -8 1.68 -8 1 C-5.36 1 -2.72 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#715D3D\",transform:\"translate(728,304)\"})),_path849||(_path849=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.26739717 1.63369858 3.71704704 4.70894675 5 8 C5.37308631 9.32276056 5.73046415 10.65232077 6 12 C4.2925002 10.71937515 2.62626404 9.38232443 1 8 C1 7.34 1 6.68 1 6 C0.01 5.67 -0.98 5.34 -2 5 C-1.34 4.67 -0.68 4.34 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#2F1F0C\",transform:\"translate(418,288)\"})),_path850||(_path850=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.6875 1.8125 3.6875 1.8125 5 4 C4.67 4.99 4.34 5.98 4 7 C2.02 6.01 0.04 5.02 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#CAA96F\",transform:\"translate(617,287)\"})),_path851||(_path851=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 2 0 2 -1.5 3.625 C-1.995 4.07875 -2.49 4.5325 -3 5 C-2.67 5.66 -2.34 6.32 -2 7 C-3.65 6.67 -5.3 6.34 -7 6 C-7.33 5.01 -7.66 4.02 -8 3 C-2.25 0 -2.25 0 0 0 Z \",fill:\"#2C200A\",transform:\"translate(586,278)\"})),_path852||(_path852=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.0825 0.61875 0.165 1.2375 0.25 1.875 C0.81258459 4.18437567 0.81258459 4.18437567 3.0625 5.25 C3.701875 5.4975 4.34125 5.745 5 6 C5 7.98 5 9.96 5 12 C4.34 11.67 3.68 11.34 3 11 C2.7525 10.236875 2.505 9.47375 2.25 8.6875 C0.59435584 5.12786505 -1.67195779 3.95341608 -5 2 C-4.34 1.67 -3.68 1.34 -3 1 C-2.01 1.33 -1.02 1.66 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#74582A\",transform:\"translate(256,268)\"})),_path853||(_path853=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.66 2.64 1.32 4 2 C4 3.65 4 5.3 4 7 C3.01 7.495 3.01 7.495 2 8 C-0.03144641 7.06553465 -2.03533587 6.06775224 -4 5 C-2.68 4.67 -1.36 4.34 0 4 C0 3.01 0 2.02 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#907343\",transform:\"translate(280,251)\"})),_path854||(_path854=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.05402274 2.10388569 1.09280256 4.20816714 1.125 6.3125 C1.14820313 7.48425781 1.17140625 8.65601563 1.1953125 9.86328125 C1 13 1 13 -1 16 C-2.55053541 11.34839376 -2.82489894 6.06224735 -1 1.5 C-0.67 1.005 -0.34 0.51 0 0 Z \",fill:\"#48391D\",transform:\"translate(556,200)\"})),_path855||(_path855=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C0.8553125 1.8971875 0.8553125 1.8971875 -0.3125 2.8125 C-2.3483575 4.46959332 -4.1978279 6.10297674 -6 8 C-6 7.01 -6 6.02 -6 5 C-7.32 5 -8.64 5 -10 5 C-10 4.34 -10 3.68 -10 3 C-9.01 3 -8.02 3 -7 3 C-6.67 2.34 -6.34 1.68 -6 1 C-6 1.66 -6 2.32 -6 3 C-2.75016865 1.91215032 -2.75016865 1.91215032 0 0 Z \",fill:\"#4A3C22\",transform:\"translate(491,131)\"})),_path856||(_path856=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C2.67 3.3 2.34 6.6 2 10 C1.34 10 0.68 10 0 10 C0 6.7 0 3.4 0 0 Z \",fill:\"#6E5532\",transform:\"translate(453,604)\"})),_path857||(_path857=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5 1.98 5 3.96 5 6 C2.69 5.34 0.38 4.68 -2 4 C-1.34 3.67 -0.68 3.34 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#B09260\",transform:\"translate(363,588)\"})),_path858||(_path858=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 1.485 0.99 1.485 2 3 C2.70125 4.010625 3.4025 5.02125 4.125 6.0625 C6 9 6 9 6 11 C5.01 11 4.02 11 3 11 C3 10.34 3 9.68 3 9 C2.34 9 1.68 9 1 9 C-0.4783226 6.04335481 -0.06032783 3.25770263 0 0 Z \",fill:\"#5A4321\",transform:\"translate(589,583)\"})),_path859||(_path859=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.86299506 2.86299506 2.99421225 4.65852284 3.0625 8.6875 C3.041875 9.780625 3.02125 10.87375 3 12 C-1.23830976 9.17446016 -0.97715348 6.87819112 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#94815B\",transform:\"translate(602,580)\"})),_path860||(_path860=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.99 2 1.98 2 3 C2.66 3.33 3.32 3.66 4 4 C0.375 7 0.375 7 -3 7 C-3 5.68 -3 4.36 -3 3 C-2.01 2.34 -1.02 1.68 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#B49268\",transform:\"translate(640,566)\"})),_path861||(_path861=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.99 1.485 -0.99 1.485 -2 3 C-3.9453125 3.29296875 -3.9453125 3.29296875 -6.125 3.1875 C-7.40375 3.125625 -8.6825 3.06375 -10 3 C-9.67 2.01 -9.34 1.02 -9 0 C-3.375 -1.125 -3.375 -1.125 0 0 Z \",fill:\"#C09D61\",transform:\"translate(527,563)\"})),_path862||(_path862=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 3 4 6 6 9 C5.01 9.33 4.02 9.66 3 10 C0.9375 7.8125 0.9375 7.8125 -1 5 C-0.75 2.1875 -0.75 2.1875 0 0 Z \",fill:\"#A18965\",transform:\"translate(651,542)\"})),_path863||(_path863=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.09570312 0.00902344 2.19140625 0.01804687 3.3203125 0.02734375 C4.16335938 0.03894531 5.00640625 0.05054688 5.875 0.0625 C2.72908067 2.86295623 0.807936 3.41511589 -3.375 3.25 C-4.26703125 3.22292969 -5.1590625 3.19585938 -6.078125 3.16796875 C-6.75359375 3.13316406 -7.4290625 3.09835937 -8.125 3.0625 C-8.125 2.4025 -8.125 1.7425 -8.125 1.0625 C-5.36047967 -0.31976016 -3.0788637 -0.03275387 0 0 Z \",fill:\"#30230A\",transform:\"translate(406.125,515.9375)\"})),_path864||(_path864=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.93423645 3.01031744 1.04449911 3.86650268 0 7 C0.66 7.33 1.32 7.66 2 8 C0.02 8.99 -1.96 9.98 -4 11 C-3.67 9.35 -3.34 7.7 -3 6 C-2.34 6 -1.68 6 -1 6 C-0.67 4.02 -0.34 2.04 0 0 Z \",fill:\"#AB936A\",transform:\"translate(625,450)\"})),_path865||(_path865=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.680625 0.78375 1.36125 1.5675 2.0625 2.375 C5.51308916 5.45850521 7.56566662 6.04357515 12 7 C12 7.33 12 7.66 12 8 C5.41906874 8.37250554 5.41906874 8.37250554 3.3125 6.5 C2.879375 6.005 2.44625 5.51 2 5 C0.68 5 -0.64 5 -2 5 C-1.34 3.35 -0.68 1.7 0 0 Z \",fill:\"#32240C\",transform:\"translate(482,375)\"})),_path866||(_path866=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3 0 3 -1.75 4.82421875 C-2.4925 5.43910156 -3.235 6.05398438 -4 6.6875 C-4.7425 7.31011719 -5.485 7.93273437 -6.25 8.57421875 C-6.8275 9.04472656 -7.405 9.51523437 -8 10 C-8.33 9.34 -8.66 8.68 -9 8 C-7.71034824 6.62437146 -6.37310707 5.29233607 -5 4 C-4.34 4 -3.68 4 -3 4 C-3 3.34 -3 2.68 -3 2 C-2.01 1.34 -1.02 0.68 0 0 Z \",fill:\"#D7B67E\",transform:\"translate(283,326)\"})),_path867||(_path867=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C0.01 4.33 -0.98 4.66 -2 5 C-2.71727778 6.64551962 -3.38325228 8.31422289 -4 10 C-4.66 10.66 -5.32 11.32 -6 12 C-5.5020163 8.26512223 -5.12508244 6.18762365 -3 3 C-2.34 3 -1.68 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#8B734B\",transform:\"translate(241,308)\"})),_path868||(_path868=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.79275866 3.11910856 2.34290718 5.67682428 2.625 9.25 C2.69976562 10.14203125 2.77453125 11.0340625 2.8515625 11.953125 C2.92503906 12.96632813 2.92503906 12.96632813 3 14 C0.73560813 11.73560813 0.48211484 10.62863112 -0.1875 7.5625 C-0.36667969 6.78003906 -0.54585938 5.99757813 -0.73046875 5.19140625 C-1 3 -1 3 0 0 Z \",fill:\"#B39F84\",transform:\"translate(410,258)\"})),_path869||(_path869=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 0.33 17 0.66 17 1 C12.38 1.33 7.76 1.66 3 2 C2.67 3.65 2.34 5.3 2 7 C0.5393715 4.35261084 0 3.10551666 0 0 Z \",fill:\"#B7A17D\",transform:\"translate(411,197)\"})),_path870||(_path870=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.33 4.29 2.66 8.58 3 13 C0 10 0 10 -0.29296875 7.51953125 C-0.25816406 6.62621094 -0.22335937 5.73289062 -0.1875 4.8125 C-0.16042969 3.91144531 -0.13335937 3.01039063 -0.10546875 2.08203125 C-0.07066406 1.39496094 -0.03585937 0.70789063 0 0 Z \",fill:\"#B29463\",transform:\"translate(458,603)\"})),_path871||(_path871=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.58237455 4.67266246 4.11073636 7.02023637 4 13 C3.67 13 3.34 13 3 13 C3 11.35 3 9.7 3 8 C2.01 8 1.02 8 0 8 C0 5.36 0 2.72 0 0 Z \",fill:\"#635136\",transform:\"translate(558,595)\"})),_path872||(_path872=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.598125 0.350625 1.19625 0.70125 1.8125 1.0625 C1.8125 3.3725 1.8125 5.6825 1.8125 8.0625 C1.1525 8.0625 0.4925 8.0625 -0.1875 8.0625 C-0.455625 7.11375 -0.72375 6.165 -1 5.1875 C-1.93736588 1.80982727 -1.93736588 1.80982727 -5.1875 0.0625 C-2.1875 -0.9375 -2.1875 -0.9375 0 0 Z \",fill:\"#A9916B\",transform:\"translate(621.1875,565.9375)\"})),_path873||(_path873=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C1.34 4.29 0.68 8.58 0 13 C-2.32536063 9.51195905 -2.33457898 8.09859246 -2 4 C-1 1.625 -1 1.625 0 0 Z \",fill:\"#3B301C\",transform:\"translate(314,554)\"})),_path874||(_path874=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4 0.99 4 1.98 4 3 C2.35 3.33 0.7 3.66 -1 4 C-1 4.66 -1 5.32 -1 6 C-1.99 5.67 -2.98 5.34 -4 5 C-3.67 4.01 -3.34 3.02 -3 2 C-2.01 2 -1.02 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#C49F65\",transform:\"translate(550,552)\"})),_path875||(_path875=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.3 1.65 6.6 3.3 10 5 C8.68 5.33 7.36 5.66 6 6 C5.67 5.34 5.34 4.68 5 4 C3.02 4.99 3.02 4.99 1 6 C-0.0625 4.125 -0.0625 4.125 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#291E0E\",transform:\"translate(387,544)\"})),_path876||(_path876=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.38601036 1.86731246 2.98586422 2.94463485 3.75 5.9375 C3.97409129 8.68261828 3.88936059 10.43073609 3 13 C2.01 12.67 1.02 12.34 0 12 C0.66 12 1.32 12 2 12 C0.74458443 9.48916886 -0.50063488 9.12874554 -3 8 C-1.35 8 0.3 8 2 8 C2 6.68 2 5.36 2 4 C1.34 4 0.68 4 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#8D7652\",transform:\"translate(684,514)\"})),_path877||(_path877=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.495 0.99 0.495 2 1 C2.22889676 2.99467179 2.45469744 4.98988838 2.6484375 6.98828125 C3.10290897 9.588868 4.19012898 11.11143894 6 13 C3 13 3 13 1.3125 11.5625 C-0.62888504 7.77217682 -0.24113824 4.17972943 0 0 Z \",fill:\"#493A25\",transform:\"translate(262,506)\"})),_path878||(_path878=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.99 2.97 3.98 5.94 5 9 C4.34 9 3.68 9 3 9 C1.7109375 7.46875 1.7109375 7.46875 0.375 5.5 C-0.07101562 4.8503125 -0.51703125 4.200625 -0.9765625 3.53125 C-1.31429688 3.0259375 -1.65203125 2.520625 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#987D52\",transform:\"translate(353,511)\"})),_path879||(_path879=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.875 1.75 4.875 1.75 6 4 C6.039992 5.99960012 6.04346799 8.00047242 6 10 C5.01 10 4.02 10 3 10 C3.061875 9.236875 3.12375 8.47375 3.1875 7.6875 C2.96666486 4.52219632 2.30301466 4.01513783 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#443619\",transform:\"translate(418,496)\"})),_path880||(_path880=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.455 0.99 4.455 0.99 9 2 C9 2.66 9 3.32 9 4 C4.545 4.495 4.545 4.495 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#2B2115\",transform:\"translate(271,495)\"})),_path881||(_path881=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.125 4.625 C2.08375 5.40875 2.0425 6.1925 2 7 C0.68 7.33 -0.64 7.66 -2 8 C-2.33 6.02 -2.66 4.04 -3 2 C-2.34 1.67 -1.68 1.34 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#DDBD87\",transform:\"translate(229,447)\"})),_path882||(_path882=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.1953125 4.1640625 C2.17210937 4.97617187 2.14890625 5.78828125 2.125 6.625 C2.10695313 7.44226563 2.08890625 8.25953125 2.0703125 9.1015625 C2.03550781 10.04128906 2.03550781 10.04128906 2 11 C0.68 9.68 -0.64 8.36 -2 7 C-1.34 4.69 -0.68 2.38 0 0 Z \",fill:\"#DAB987\",transform:\"translate(748,436)\"})),_path883||(_path883=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C2.01 2.495 2.01 2.495 1 3 C0.59270772 5.32156597 0.25561323 7.6568787 0 10 C-1.5625 8.8125 -1.5625 8.8125 -3 7 C-2.75546876 3.65807308 -2.39456443 2.39456443 0 0 Z \",fill:\"#DFBA83\",transform:\"translate(774,425)\"})),_path884||(_path884=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-5.29151818 2.84927902 -9.95448991 4.28788143 -16 4 C-11.71327571 -0.28672429 -5.76159905 -0.23516731 0 0 Z \",fill:\"#B69C70\",transform:\"translate(700,369)\"})),_path885||(_path885=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 2.64 1.66 5.28 2 8 C2.66 8 3.32 8 4 8 C4.33 9.32 4.66 10.64 5 12 C3 12 3 12 0.8125 10.5 C-1.25595969 7.64695215 -1.18226015 7.08965375 -0.75 3.75 C-0.5025 2.5125 -0.255 1.275 0 0 Z \",fill:\"#A48251\",transform:\"translate(379,344)\"})),_path886||(_path886=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.5 2.25 2.5 2.25 5 5 C5 6.32 5 7.64 5 9 C4.01 9 3.02 9 2 9 C1.34 7.35 0.68 5.7 0 4 C-0.66 4 -1.32 4 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#AC8B58\",transform:\"translate(556,336)\"})),_path887||(_path887=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.4375 1.1875 2.4375 1.1875 5 3 C5.8125 5.6875 5.8125 5.6875 6 8 C3.36 6.02 0.72 4.04 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#3F2B14\",transform:\"translate(550,331)\"})),_path888||(_path888=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.55737263 0.43820891 7.57653445 0.85041169 11 4 C8.69 4.33 6.38 4.66 4 5 C4 4.34 4 3.68 4 3 C2.68 3 1.36 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#C2A170\",transform:\"translate(469,326)\"})),_path889||(_path889=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.50769231 0.61538462 7.50769231 0.61538462 10 2.5625 C10.33 3.036875 10.66 3.51125 11 4 C8.61435923 3.42415568 6.33317216 2.77772405 4 2 C3.67 2.99 3.34 3.98 3 5 C1.5 3.625 1.5 3.625 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#C7A775\",transform:\"translate(549,326)\"})),_path890||(_path890=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 5.61 1 11.22 1 17 C0.01 17.33 -0.98 17.66 -2 18 C-1.34 12.06 -0.68 6.12 0 0 Z \",fill:\"#281E0D\",transform:\"translate(316,304)\"})),_path891||(_path891=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.0169313 2.65498232 1.13022151 3.69155375 0.00390625 6.359375 C-0.47175781 7.14828125 -0.94742188 7.9371875 -1.4375 8.75 C-2.14712891 9.94882812 -2.14712891 9.94882812 -2.87109375 11.171875 C-3.24363281 11.77515625 -3.61617187 12.3784375 -4 13 C-5 10 -5 10 -4.00390625 7.51953125 C-3.52824219 6.62621094 -3.05257812 5.73289062 -2.5625 4.8125 C-2.08941406 3.91144531 -1.61632812 3.01039063 -1.12890625 2.08203125 C-0.75636719 1.39496094 -0.38382813 0.70789063 0 0 Z \",fill:\"#281302\",transform:\"translate(544,280)\"})),_path892||(_path892=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C1.66 4 2.32 4 3 4 C3 6.31 3 8.62 3 11 C2.34 11 1.68 11 1 11 C0.63890458 9.35567294 0.28629924 7.7094792 -0.0625 6.0625 C-0.25972656 5.14597656 -0.45695312 4.22945313 -0.66015625 3.28515625 C-0.77230469 2.53105469 -0.88445312 1.77695312 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#876535\",transform:\"translate(401,260)\"})),_path893||(_path893=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.49361571 1.20381448 4.68143083 2.45428722 7 4 C6.67 4.66 6.34 5.32 6 6 C2.37 5.01 -1.26 4.02 -5 3 C-5 2.67 -5 2.34 -5 2 C-3.35 2 -1.7 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#7A6134\",transform:\"translate(240,260)\"})),_path894||(_path894=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.1953125 3.9453125 C2.13020833 5.96354167 2.06510417 7.98177083 2 10 C1.01 10.33 0.02 10.66 -1 11 C-1.14285714 3.57142857 -1.14285714 3.57142857 0 0 Z \",fill:\"#A48351\",transform:\"translate(595,240)\"})),_path895||(_path895=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.12115979 3.36347936 0.83325195 5.58366701 0 9 C-0.185625 9.928125 -0.37125 10.85625 -0.5625 11.8125 C-0.706875 12.534375 -0.85125 13.25625 -1 14 C-1.33 14 -1.66 14 -2 14 C-2.3690205 4.58997722 -2.3690205 4.58997722 0 0 Z \",fill:\"#AD9064\",transform:\"translate(566,224)\"})),_path896||(_path896=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.99 2.31 5.98 4.62 7 7 C4.69 6.67 2.38 6.34 0 6 C0.66 5.67 1.32 5.34 2 5 C2 4.01 2 3.02 2 2 C1.34 2 0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#352C22\",transform:\"translate(374,206)\"})),_path897||(_path897=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C3.65 2.33 5.3 2.66 7 3 C7.33 4.32 7.66 5.64 8 7 C7.01 7 6.02 7 5 7 C0 1.53488372 0 1.53488372 0 0 Z \",fill:\"#D4B990\",transform:\"translate(536,205)\"})),_path898||(_path898=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.76462683 3.08809695 4 4.23312136 4 8 C2.35 8 0.7 8 -1 8 C-0.67 5.36 -0.34 2.72 0 0 Z \",fill:\"#BFA170\",transform:\"translate(456,608)\"})),_path899||(_path899=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-0.98 3 -2.96 3 -5 3 C-5 4.65 -5 6.3 -5 8 C-5.99 8 -6.98 8 -8 8 C-7.67 6.02 -7.34 4.04 -7 2 C-4.69 1.34 -2.38 0.68 0 0 Z \",fill:\"#392F1F\",transform:\"translate(447,595)\"})),_path900||(_path900=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 2.64 3 5.28 3 8 C2.01 8 1.02 8 0 8 C0 5.36 0 2.72 0 0 Z \",fill:\"#674E2D\",transform:\"translate(344,574)\"})),_path901||(_path901=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 2.31 2 4.62 2 7 C1.01 7.33 0.02 7.66 -1 8 C-1.66 7.34 -2.32 6.68 -3 6 C-2.01 4.02 -1.02 2.04 0 0 Z \",fill:\"#98815D\",transform:\"translate(353,568)\"})),_path902||(_path902=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4 1.65 4 3.3 4 5 C2.35 5 0.7 5 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#BCA272\",transform:\"translate(345,568)\"})),_path903||(_path903=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C0.01 2.33 -0.98 2.66 -2 3 C-2.73323796 5.01508358 -2.73323796 5.01508358 -3 7 C-4.98 7 -6.96 7 -9 7 C-8.34 6.67 -7.68 6.34 -7 6 C-6.67 5.01 -6.34 4.02 -6 3 C-2.9375 1.3125 -2.9375 1.3125 0 0 Z \",fill:\"#BCA371\",transform:\"translate(634,553)\"})),_path904||(_path904=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.66 0.66 -1.32 1.32 -2 2 C-2 3.32 -2 4.64 -2 6 C-3.98 5.34 -5.96 4.68 -8 4 C-5.97675095 -0.48005146 -4.79569304 -1.43870791 0 0 Z \",fill:\"#957A4E\",transform:\"translate(542,524)\"})),_path905||(_path905=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.465 1.98 3.465 1.98 7 4 C6.34 5.98 5.68 7.96 5 10 C3.79371992 7.66785852 2.8345262 5.50357861 2 3 C1.34 2.67 0.68 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#745629\",transform:\"translate(428,503)\"})),_path906||(_path906=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.639375 0.165 1.27875 0.33 1.9375 0.5 C5.97586652 1.15932515 9.91807258 1.08003779 14 1 C14 1.33 14 1.66 14 2 C8.39 2.66 2.78 3.32 -3 4 C-2.01 2.68 -1.02 1.36 0 0 Z \",fill:\"#422E11\",transform:\"translate(550,506)\"})),_path907||(_path907=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C-0.78150459 6.65170644 -2.51851506 8.81981814 -7 11 C-5.22054913 6.95579349 -2.60470327 3.53921513 0 0 Z \",fill:\"#3B2C1A\",transform:\"translate(625,498)\"})),_path908||(_path908=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.42857143 -0.28571429 7.42857143 -0.28571429 11 2 C10.360625 2.12375 9.72125 2.2475 9.0625 2.375 C8.381875 2.58125 7.70125 2.7875 7 3 C6.67 3.66 6.34 4.32 6 5 C4.02 4.01 2.04 3.02 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#69522C\",transform:\"translate(405,501)\"})),_path909||(_path909=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 5.61 1.66 11.22 2 17 C1.67 16.01 1.34 15.02 1 14 C0.34 14 -0.32 14 -1 14 C-0.67 9.38 -0.34 4.76 0 0 Z \",fill:\"#E3BE87\",transform:\"translate(628,436)\"})),_path910||(_path910=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 0 7.26 0 11 0 C11 0.99 11 1.98 11 3 C7.37 2.67 3.74 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#706752\",transform:\"translate(511,419)\"})),_path911||(_path911=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.9375 0.8125 2.9375 0.8125 6 2 C6.33 2.99 6.66 3.98 7 5 C8.31647119 5.69937532 9.65022151 6.36729133 11 7 C11.33 7.66 11.66 8.32 12 9 C9.125 8.25 9.125 8.25 6 7 C4.875 5 4.875 5 4 3 C1.9664052 1.73195434 1.9664052 1.73195434 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#96815B\",transform:\"translate(277,371)\"})),_path912||(_path912=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C0.67 2.66 0.34 3.32 0 4 C1.65 4 3.3 4 5 4 C4.01 5.485 4.01 5.485 3 7 C-0.37462715 6.45276317 -2.08235 5.9451 -5 4 C-3.35 2.68 -1.7 1.36 0 0 Z \",fill:\"#826C47\",transform:\"translate(591,366)\"})),_path913||(_path913=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0 7.92 0 12 0 C11.67 0.66 11.34 1.32 11 2 C8.93359375 2.4140625 8.93359375 2.4140625 6.4375 2.625 C5.61121094 2.69976562 4.78492188 2.77453125 3.93359375 2.8515625 C2.97646484 2.92503906 2.97646484 2.92503906 2 3 C1.67 4.32 1.34 5.64 1 7 C0.67 4.69 0.34 2.38 0 0 Z \",fill:\"#382913\",transform:\"translate(510,357)\"})),_path914||(_path914=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.125 2.875 4.125 2.875 4 6 C3.34 6.66 2.68 7.32 2 8 C2 7.01 2 6.02 2 5 C1.34 5 0.68 5 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#C2A06B\",transform:\"translate(440,346)\"})),_path915||(_path915=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.66 2.64 1.32 4 2 C1.03 3.32 -1.94 4.64 -5 6 C-5.33 5.01 -5.66 4.02 -6 3 C-3.25 1.375 -3.25 1.375 0 0 Z \",fill:\"#614C27\",transform:\"translate(488,336)\"})),_path916||(_path916=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C4.0374763 1.22858114 6.08040303 1.41024278 8.125 1.5625 C9.76855469 1.68818359 9.76855469 1.68818359 11.4453125 1.81640625 C12.28835938 1.87699219 13.13140625 1.93757813 14 2 C14 2.33 14 2.66 14 3 C6.08 3.495 6.08 3.495 -2 4 C-2 3.01 -2 2.02 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#493C2A\",transform:\"translate(514,332)\"})),_path917||(_path917=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.81684226 1.55500981 6.19195732 4.03595495 9 7 C8.34 7.66 7.68 8.32 7 9 C5.82737096 7.88121617 4.66204862 6.75476949 3.5 5.625 C2.8503125 4.99851562 2.200625 4.37203125 1.53125 3.7265625 C0 2 0 2 0 0 Z \",fill:\"#746241\",transform:\"translate(447,317)\"})),_path918||(_path918=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C0.91253716 1.43861294 0.80434652 2.87597508 0.6875 4.3125 C0.62949219 5.11300781 0.57148438 5.91351563 0.51171875 6.73828125 C-0.08206694 9.36272334 -0.95780294 10.30820672 -3 12 C-2.88601335 10.37419034 -2.75844341 8.74932843 -2.625 7.125 C-2.55539062 6.22007812 -2.48578125 5.31515625 -2.4140625 4.3828125 C-2 2 -2 2 0 0 Z \",fill:\"#A98B58\",transform:\"translate(336,305)\"})),_path919||(_path919=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C4.15305957 3.85756507 5.39253254 6.55129785 5 11 C3.68 10.67 2.36 10.34 1 10 C1 9.34 1 8.68 1 8 C1.66 8 2.32 8 3 8 C2.01 5.36 1.02 2.72 0 0 Z \",fill:\"#2A2213\",transform:\"translate(589,292)\"})),_path920||(_path920=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.50435694 1.9363704 2.00333874 3.87414146 2.5 5.8125 C2.7784375 6.89144531 3.056875 7.97039062 3.34375 9.08203125 C4 12 4 12 4 15 C3.01 14.67 2.02 14.34 1 14 C0.67 9.38 0.34 4.76 0 0 Z \",fill:\"#70562C\",transform:\"translate(261,263)\"})),_path921||(_path921=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 3 2 3 1.6875 6.5625 C1 10 1 10 0 12 C-0.99 11.67 -1.98 11.34 -3 11 C-2.01 7.37 -1.02 3.74 0 0 Z \",fill:\"#D6B580\",transform:\"translate(492,241)\"})),_path922||(_path922=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-3.37097383 3.49821059 -5.20442119 4 -9 4 C-8.67 3.01 -8.34 2.02 -8 1 C-5.29120665 -0.35439668 -2.99066732 -0.06501451 0 0 Z \",fill:\"#B19766\",transform:\"translate(381,236)\"})),_path923||(_path923=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7 3.3 7 6.6 7 10 C5 8 5 8 4.625 5 C4.34069672 1.87885291 4.34069672 1.87885291 1.9375 0.625 C1.298125 0.41875 0.65875 0.2125 0 0 Z \",fill:\"#B9A073\",transform:\"translate(551,192)\"})),_path924||(_path924=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-4.5 4 -4.5 4 -9 4 C-8 1 -8 1 -6.1875 -0.25 C-3.66056586 -1.11637742 -2.47778006 -0.88492145 0 0 Z \",fill:\"#A28356\",transform:\"translate(500,162)\"})),_path925||(_path925=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0 8.58 0 13 0 C13 0.33 13 0.66 13 1 C10.69 1 8.38 1 6 1 C6 1.66 6 2.32 6 3 C3.03 2.505 3.03 2.505 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#9B773C\",transform:\"translate(454,566)\"})),_path926||(_path926=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5.33 0.99 5.66 1.98 6 3 C5.34 3 4.68 3 4 3 C4 3.66 4 4.32 4 5 C2.68 4.67 1.36 4.34 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#A6844E\",transform:\"translate(403,548)\"})),_path927||(_path927=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.5 0.3125 2.5 0.3125 5 1 C5.33 1.66 5.66 2.32 6 3 C5.030625 3.12375 4.06125 3.2475 3.0625 3.375 C2.051875 3.58125 1.04125 3.7875 0 4 C-0.33 4.66 -0.66 5.32 -1 6 C-1.66 6 -2.32 6 -3 6 C-1.125 1.125 -1.125 1.125 0 0 Z \",fill:\"#3A2F20\",transform:\"translate(635,546)\"})),_path928||(_path928=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.88637738 2.4800841 2.75877092 3.95910074 2.625 5.4375 C2.52058594 6.67306641 2.52058594 6.67306641 2.4140625 7.93359375 C2.27742187 8.61550781 2.14078125 9.29742188 2 10 C1.01 10.495 1.01 10.495 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#433624\",transform:\"translate(669,540)\"})),_path929||(_path929=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.99 0 1.98 0 3 C-0.66 3.66 -1.32 4.32 -2 5 C-3.32 5 -4.64 5 -6 5 C-6 5.66 -6 6.32 -6 7 C-7.32 6.67 -8.64 6.34 -10 6 C-6.7 4.02 -3.4 2.04 0 0 Z \",fill:\"#977F52\",transform:\"translate(578,536)\"})),_path930||(_path930=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C0.67 2.64 0.34 5.28 0 8 C1.65 8 3.3 8 5 8 C5 8.66 5 9.32 5 10 C2.69 10 0.38 10 -2 10 C-1.34 6.7 -0.68 3.4 0 0 Z \",fill:\"#CBAD83\",transform:\"translate(717,452)\"})),_path931||(_path931=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C2.32 2.67 3.64 2.34 5 2 C5 2.66 5 3.32 5 4 C3.35 4.33 1.7 4.66 0 5 C0 5.66 0 6.32 0 7 C-0.66 7 -1.32 7 -2 7 C-2 6.34 -2 5.68 -2 5 C-2.66 4.67 -3.32 4.34 -4 4 C-2.68 2.68 -1.36 1.36 0 0 Z \",fill:\"#967E5A\",transform:\"translate(184,438)\"})),_path932||(_path932=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.66 2 2.32 2 3 2 C3.66 3.98 4.32 5.96 5 8 C3.68 8.33 2.36 8.66 1 9 C0.67 6.03 0.34 3.06 0 0 Z \",fill:\"#22170B\",transform:\"translate(733,424)\"})),_path933||(_path933=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.9492568 0.55105909 7.34920174 1.38935371 11 3 C10.67 3.66 10.34 4.32 10 5 C9.01 4.67 8.02 4.34 7 4 C6.67 4.66 6.34 5.32 6 6 C3.97945196 4.35830472 1.97956942 2.69088222 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#917E60\",transform:\"translate(472,419)\"})),_path934||(_path934=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1 2 -1 2 -4.3125 3.1875 C-7.57562063 3.90649268 -8.99282882 4.20286847 -12 3 C-7.77050005 0.58314288 -4.87664009 -0.34833144 0 0 Z \",fill:\"#C7A975\",transform:\"translate(626,371)\"})),_path935||(_path935=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 1.98 3 3.96 3 6 C1.68 6.33 0.36 6.66 -1 7 C-0.67 4.69 -0.34 2.38 0 0 Z \",fill:\"#9F8453\",transform:\"translate(512,360)\"})),_path936||(_path936=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.6875 0.78125 4.6875 0.78125 9.375 1.5625 C10.674375 1.7790625 10.674375 1.7790625 12 2 C12.33 1.34 12.66 0.68 13 0 C13.33 1.32 13.66 2.64 14 4 C12.04020573 3.71831703 10.08217622 3.42433283 8.125 3.125 C6.48917969 2.88136719 6.48917969 2.88136719 4.8203125 2.6328125 C2 2 2 2 0 0 Z \",fill:\"#5D4C35\",transform:\"translate(688,346)\"})),_path937||(_path937=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C0.06421005 4.35981813 -0.93347808 6.69631264 -2 9 C-2.99 9 -3.98 9 -5 9 C-3.7508258 5.54074837 -2.32472205 2.85306797 0 0 Z \",fill:\"#9E845E\",transform:\"translate(271,335)\"})),_path938||(_path938=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16306443 3.54950034 0.92365049 6.55823948 0.5625 10.25 C0.40974609 11.86648438 0.40974609 11.86648438 0.25390625 13.515625 C0.17011719 14.33546875 0.08632813 15.1553125 0 16 C-0.33 16 -0.66 16 -1 16 C-1.22197585 13.89722877 -1.42713637 11.79267698 -1.625 9.6875 C-1.74101562 8.51574219 -1.85703125 7.34398437 -1.9765625 6.13671875 C-2 3 -2 3 0 0 Z \",fill:\"#866D44\",transform:\"translate(365,336)\"})),_path939||(_path939=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.495 0.99 0.495 2 1 C1.01 1.495 1.01 1.495 0 2 C0 1.34 0 0.68 0 0 Z M-1 2 C0.65 2 2.3 2 4 2 C3.67 3.65 3.34 5.3 3 7 C2.34 7 1.68 7 1 7 C1 6.34 1 5.68 1 5 C-0.32 5.33 -1.64 5.66 -3 6 C-2.34 4.68 -1.68 3.36 -1 2 Z \",fill:\"#E1B980\",transform:\"translate(423,330)\"})),_path940||(_path940=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.3 0.66 6.6 1.32 10 2 C9.67 2.99 9.34 3.98 9 5 C8.34 4.67 7.68 4.34 7 4 C5.45976004 3.93049459 3.91665012 3.91547643 2.375 3.9375 C1.55773437 3.94652344 0.74046875 3.95554687 -0.1015625 3.96484375 C-0.72804688 3.97644531 -1.35453125 3.98804688 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#89724E\",transform:\"translate(404,321)\"})),_path941||(_path941=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.36944102 2.94956528 -2.87830409 5.52468811 -5 8 C-5.66 8 -6.32 8 -7 8 C-4.18918919 0 -4.18918919 0 0 0 Z \",fill:\"#362717\",transform:\"translate(258,312)\"})),_path942||(_path942=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C2.99 2.33 3.98 2.66 5 3 C5 3.66 5 4.32 5 5 C6.32 5.33 7.64 5.66 9 6 C9 6.66 9 7.32 9 8 C5.64599451 7.40107045 3.50144503 6.32893158 1 4 C0.25 1.8125 0.25 1.8125 0 0 Z \",fill:\"#7D6237\",transform:\"translate(269,276)\"})),_path943||(_path943=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.64 1 5.28 1 8 C-0.32 7.67 -1.64 7.34 -3 7 C-3 5.35 -3 3.7 -3 2 C-2.34 2 -1.68 2 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#A3844E\",transform:\"translate(569,246)\"})),_path944||(_path944=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.556875 0.474375 1.11375 0.94875 1.6875 1.4375 C4.18346074 3.12395996 6.0446237 3.58953107 9 4 C9.33 2.68 9.66 1.36 10 0 C10.33 1.65 10.66 3.3 11 5 C7.7 5 4.4 5 1 5 C0.67 3.35 0.34 1.7 0 0 Z \",fill:\"#3D2E1C\",transform:\"translate(575,244)\"})),_path945||(_path945=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1 2 2 4 3 6 C2.34 6 1.68 6 1 6 C1 6.66 1 7.32 1 8 C-0.32 7.67 -1.64 7.34 -3 7 C-2.34 7 -1.68 7 -1 7 C-1.309375 5.824375 -1.309375 5.824375 -1.625 4.625 C-1.74875 3.75875 -1.8725 2.8925 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#9E8660\",transform:\"translate(484,612)\"})),_path946||(_path946=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C-1.45029042 4.30019361 -2.94554358 4.43132515 -7 4 C-7.66 3.01 -8.32 2.02 -9 1 C-7.700625 1.020625 -6.40125 1.04125 -5.0625 1.0625 C-3.70834367 1.08399454 -2.35243917 1.07148199 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#B39972\",transform:\"translate(432,612)\"})),_path947||(_path947=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.625 -0.125 6.625 -0.125 10 1 C10 1.66 10 2.32 10 3 C10.66 3.33 11.32 3.66 12 4 C11.34 4 10.68 4 10 4 C10 5.65 10 7.3 10 9 C9.67 9 9.34 9 9 9 C8.814375 8.05125 8.62875 7.1025 8.4375 6.125 C7.26599195 2.61628301 7.26599195 2.61628301 3.375 1.625 C2.26125 1.41875 1.1475 1.2125 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#5D4F35\",transform:\"translate(615,564)\"})),_path948||(_path948=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.375 0.3125 3.375 0.3125 7 1 C7.66 1.99 8.32 2.98 9 4 C8.67 4.99 8.34 5.98 8 7 C5.18060883 4.79020692 2.46941056 2.59937954 0 0 Z \",fill:\"#5E4F36\",transform:\"translate(345,561)\"})),_path949||(_path949=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C1.40312566 3.34249629 0.26396123 5.46436342 -2 8 C-2.66 8 -3.32 8 -4 8 C-4 7.01 -4 6.02 -4 5 C-3.34 5 -2.68 5 -2 5 C-1.34 3.35 -0.68 1.7 0 0 Z \",fill:\"#6F5631\",transform:\"translate(327,555)\"})),_path950||(_path950=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C2.67 3.32 2.34 4.64 2 6 C1.34 6 0.68 6 0 6 C-0.33 7.32 -0.66 8.64 -1 10 C-2.46726798 6.18510326 -1.43336419 3.70988378 0 0 Z \",fill:\"#6A5F47\",transform:\"translate(521,546)\"})),_path951||(_path951=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4 0.66 4 1.32 4 2 C5.32 2 6.64 2 8 2 C8.66 3.65 9.32 5.3 10 7 C7.33333333 5.66666667 4.66666667 4.33333333 2 3 C2 2.34 2 1.68 2 1 C1.34 0.67 0.68 0.34 0 0 Z \",fill:\"#897044\",transform:\"translate(382,540)\"})),_path952||(_path952=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.99 2.475 0.99 5 2 C5 2.66 5 3.32 5 4 C3.68 4 2.36 4 1 4 C0.67 4.66 0.34 5.32 0 6 C-0.99 5.01 -1.98 4.02 -3 3 C-2.01 2.01 -1.02 1.02 0 0 Z \",fill:\"#B09363\",transform:\"translate(655,537)\"})),_path953||(_path953=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.485 0.99 1.485 0.99 3 2 C3.25660094 5.07921132 3.39431504 7.21136993 2 10 C1.34 9.67 0.68 9.34 0 9 C0 6.03 0 3.06 0 0 Z \",fill:\"#9E8862\",transform:\"translate(312,536)\"})),_path954||(_path954=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0.33 5.28 0.66 8 1 C8 1.99 8 2.98 8 4 C4.7 3.67 1.4 3.34 -2 3 C-1.34 2.01 -0.68 1.02 0 0 Z \",fill:\"#937545\",transform:\"translate(411,530)\"})),_path955||(_path955=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C1.67 1.32 1.34 2.64 1 4 C-1.31 4.66 -3.62 5.32 -6 6 C-5.34 4.35 -4.68 2.7 -4 1 C-3.34 1 -2.68 1 -2 1 C-2 1.66 -2 2.32 -2 3 C-1.34 3 -0.68 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#CAA972\",transform:\"translate(609,513)\"})),_path956||(_path956=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.9375 0.3125 1.9375 0.3125 4 1 C4.33 1.99 4.66 2.98 5 4 C2.69 4.33 0.38 4.66 -2 5 C-1.34 3.35 -0.68 1.7 0 0 Z \",fill:\"#AA8449\",transform:\"translate(530,514)\"})),_path957||(_path957=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C0.22265625 3.7265625 0.22265625 3.7265625 -0.9375 5.625 C-1.618125 6.73875 -2.29875 7.8525 -3 9 C-3.66 9 -4.32 9 -5 9 C-4.5206753 4.68607774 -3.2542015 2.83430453 0 0 Z \",fill:\"#7A6641\",transform:\"translate(527,509)\"})),_path958||(_path958=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C2.49396008 2.16874252 2.00016187 3.99967627 1 6 C2.32 6 3.64 6 5 6 C5 6.66 5 7.32 5 8 C3.35 7.67 1.7 7.34 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#BDA478\",transform:\"translate(275,504)\"})),_path959||(_path959=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33872513 1.41538717 1.67074624 2.83237963 2 4.25 C2.185625 5.03890625 2.37125 5.8278125 2.5625 6.640625 C3 9 3 9 3 13 C0.75393573 11.22555028 0.04918998 10.41647515 -0.29296875 7.51953125 C-0.25816406 6.62621094 -0.22335937 5.73289062 -0.1875 4.8125 C-0.16042969 3.91144531 -0.13335938 3.01039063 -0.10546875 2.08203125 C-0.07066406 1.39496094 -0.03585937 0.70789063 0 0 Z \",fill:\"#272012\",transform:\"translate(684,504)\"})),_path960||(_path960=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.3125 1.5 -1.3125 1.5 -3 3 C-3.99 3 -4.98 3 -6 3 C-6 3.66 -6 4.32 -6 5 C-6.99 4.67 -7.98 4.34 -9 4 C-8.67 3.01 -8.34 2.02 -8 1 C-5.29120665 -0.35439668 -2.99066732 -0.06501451 0 0 Z \",fill:\"#765E34\",transform:\"translate(558,501)\"})),_path961||(_path961=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 0.66 3 1.32 3 2 C3.66 2.33 4.32 2.66 5 3 C4.34 3 3.68 3 3 3 C3 4.32 3 5.64 3 7 C1.68 6.67 0.36 6.34 -1 6 C-0.34 6 0.32 6 1 6 C0.67 4.02 0.34 2.04 0 0 Z \",fill:\"#775C2C\",transform:\"translate(423,500)\"})),_path962||(_path962=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C1.34 2.31 0.68 4.62 0 7 C-0.99 7 -1.98 7 -3 7 C-3.33 5.68 -3.66 4.36 -4 3 C-3.01 2.67 -2.02 2.34 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#C7AD80\",transform:\"translate(302,454)\"})),_path963||(_path963=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0.33 4.62 0.66 7 1 C7.625 2.875 7.625 2.875 8 5 C7.34 5.66 6.68 6.32 6 7 C6 5.35 6 3.7 6 2 C2.9254644 2.7763932 2.9254644 2.7763932 1 5 C0.67 3.35 0.34 1.7 0 0 Z \",fill:\"#B39A72\",transform:\"translate(144,421)\"})),_path964||(_path964=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.34 2.32 0.68 3.64 0 5 C-1.98 5 -3.96 5 -6 5 C-2.25 1.125 -2.25 1.125 0 0 Z \",fill:\"#937A51\",transform:\"translate(574,362)\"})),_path965||(_path965=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-1.62626404 3.38232443 -3.2925002 4.71937515 -5 6 C-5 5.34 -5 4.68 -5 4 C-6.65 4.33 -8.3 4.66 -10 5 C-8.10642065 1.21284131 -4.03029968 0 0 0 Z \",fill:\"#5B4724\",transform:\"translate(295,338)\"})),_path966||(_path966=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C1.66 3 2.32 3 3 3 C3 5.31 3 7.62 3 10 C2.01 10 1.02 10 0 10 C0 6.7 0 3.4 0 0 Z \",fill:\"#D5B281\",transform:\"translate(235,323)\"})),_path967||(_path967=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 1.65 3.96 3.3 6 5 C5.01 6.485 5.01 6.485 4 8 C2.35 6.02 0.7 4.04 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#37260C\",transform:\"translate(443,315)\"})),_path968||(_path968=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C2.32 2 3.64 2 5 2 C5 3.65 5 5.3 5 7 C3.68 6.67 2.36 6.34 1 6 C0.67 4.02 0.34 2.04 0 0 Z \",fill:\"#D0AA73\",transform:\"translate(630,309)\"})),_path969||(_path969=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.67 1.66 1.34 2.32 1 3 C1.66 3.33 2.32 3.66 3 4 C2.67 4.33 2.34 4.66 2 5 C1.76924918 6.34747084 1.58846937 7.70377565 1.4375 9.0625 C1.2209375 11.0115625 1.2209375 11.0115625 1 13 C0.67 13 0.34 13 0 13 C0 10.03 0 7.06 0 4 C-0.66 4 -1.32 4 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#7A6242\",transform:\"translate(371,237)\"})),_path970||(_path970=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.3125 0.1875 2.3125 0.1875 4 1 C0.67692308 4.93846154 0.67692308 4.93846154 -2.75 5.25 C-3.4925 5.1675 -4.235 5.085 -5 5 C-2.75 2.4375 -2.75 2.4375 0 0 Z \",fill:\"#BD975B\",transform:\"translate(488,160)\"})),_path971||(_path971=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.99 1.32 1.98 2 3 C1.125 6.6875 1.125 6.6875 0 10 C-0.33 10 -0.66 10 -1 10 C-2.25 3.375 -2.25 3.375 0 0 Z \",fill:\"#2E281B\",transform:\"translate(411,603)\"})),_path972||(_path972=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.25 6.625 1.25 6.625 -1 10 C-2.32 10 -3.64 10 -5 10 C-5 9.34 -5 8.68 -5 8 C-4.01 7.67 -3.02 7.34 -2 7 C-0.77030122 3.48809191 -0.77030122 3.48809191 0 0 Z \",fill:\"#B59B6E\",transform:\"translate(430,602)\"})),_path973||(_path973=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.2475 0.515625 0.495 1.03125 0.75 1.5625 C2.39581616 4.77184151 4.1976096 7.87585664 6 11 C2.18712958 9.55373881 0.67292823 7.69805188 -1 4 C-0.6875 1.6875 -0.6875 1.6875 0 0 Z \",fill:\"#4B3C26\",transform:\"translate(294,543)\"})),_path974||(_path974=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.66 2.64 1.32 4 2 C1.03 3.65 -1.94 5.3 -5 7 C-3.88820837 3.66462511 -2.52588702 2.36292656 0 0 Z \",fill:\"#1B0F05\",transform:\"translate(572,536)\"})),_path975||(_path975=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.7952131 1.49097658 5.61042731 3.75700849 8 7 C4.65980694 6.40353695 2.49529367 5.31705841 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#57472C\",transform:\"translate(276,530)\"})),_path976||(_path976=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0.33 5.28 0.66 8 1 C8.33 1.99 8.66 2.98 9 4 C4.545 3.01 4.545 3.01 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#543F1C\",transform:\"translate(674,527)\"})),_path977||(_path977=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.875 1.75 3.875 1.75 5 4 C-1.625 4.25 -1.625 4.25 -5 2 C-3.35 2 -1.7 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#8D7449\",transform:\"translate(434,517)\"})),_path978||(_path978=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.5654594 2.5654594 2.54046087 4.47686668 3 8 C-0.16115776 6.63016497 -0.9927092 6.0109362 -3 3 C-2.34 3 -1.68 3 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#7D6A47\",transform:\"translate(513,512)\"})),_path979||(_path979=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C2.99 2.33 3.98 2.66 5 3 C5.33 3.99 5.66 4.98 6 6 C5.34 6.66 4.68 7.32 4 8 C4 7.01 4 6.02 4 5 C2.68 4.67 1.36 4.34 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#946D2D\",transform:\"translate(426,503)\"})),_path980||(_path980=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C2.67 1.98 2.34 3.96 2 6 C2.66 6.33 3.32 6.66 4 7 C3.01 7 2.02 7 1 7 C1 6.01 1 5.02 1 4 C0.01 3.67 -0.98 3.34 -2 3 C-1.34 2.01 -0.68 1.02 0 0 Z \",fill:\"#775C2D\",transform:\"translate(537,500)\"})),_path981||(_path981=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0 7.92 0 12 0 C12 0.33 12 0.66 12 1 C9.69 1.33 7.38 1.66 5 2 C5.33 2.66 5.66 3.32 6 4 C4.02 3.34 2.04 2.68 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#32250F\",transform:\"translate(492,492)\"})),_path982||(_path982=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C1.625 5.625 1.625 5.625 1 9 C0.01 9 -0.98 9 -2 9 C-1.34 6.03 -0.68 3.06 0 0 Z \",fill:\"#6A604C\",transform:\"translate(332,453)\"})),_path983||(_path983=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C2.34 4.31 1.68 6.62 1 9 C0.01 9 -0.98 9 -2 9 C-1.34 6.03 -0.68 3.06 0 0 Z \",fill:\"#D6B789\",transform:\"translate(836,450)\"})),_path984||(_path984=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C4.16063604 4.25566547 3.76173392 7.6835078 3 12 C2.34 11.34 1.68 10.68 1 10 C1.0234375 7.8359375 1.0234375 7.8359375 1.375 5.375 C1.48585938 4.55773437 1.59671875 3.74046875 1.7109375 2.8984375 C1.80632813 2.27195312 1.90171875 1.64546875 2 1 C1.34 0.67 0.68 0.34 0 0 Z \",fill:\"#3D2F1C\",transform:\"translate(817,446)\"})),_path985||(_path985=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.99 0.495 -0.99 0.495 -2 1 C-1.34 1.66 -0.68 2.32 0 3 C-3.3 3 -6.6 3 -10 3 C-4.15384615 -1.38461538 -4.15384615 -1.38461538 0 0 Z \",fill:\"#584428\",transform:\"translate(600,383)\"})),_path986||(_path986=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C7.34 0.66 6.68 1.32 6 2 C5.01 2 4.02 2 3 2 C3 2.66 3 3.32 3 4 C1.35 3.67 -0.3 3.34 -2 3 C-1.34 2.67 -0.68 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#AB8D54\",transform:\"translate(368,377)\"})),_path987||(_path987=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.62418745 -0.08090971 3.24951745 -0.13914995 4.875 -0.1875 C5.77992188 -0.22230469 6.68484375 -0.25710938 7.6171875 -0.29296875 C8.79667969 -0.14794922 8.79667969 -0.14794922 10 0 C10.66 0.99 11.32 1.98 12 3 C10.56163249 2.88541307 9.12429034 2.75790884 7.6875 2.625 C6.88699219 2.55539062 6.08648437 2.48578125 5.26171875 2.4140625 C3 2 3 2 0 0 Z \",fill:\"#2A1D09\",transform:\"translate(432,374)\"})),_path988||(_path988=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.25 2.3125 1.25 2.3125 1 5 C-1.04424538 6.97610386 -2.1176825 8 -5 8 C-5 7.34 -5 6.68 -5 6 C-4.34 6 -3.68 6 -3 6 C-2.690625 5.195625 -2.38125 4.39125 -2.0625 3.5625 C-1 1 -1 1 0 0 Z \",fill:\"#947C51\",transform:\"translate(581,354)\"})),_path989||(_path989=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.093125 0.5775 -2.18625 1.155 -3.3125 1.75 C-6.29669132 3.44144447 -8.18944814 5.01791458 -10 8 C-9.67 5.69 -9.34 3.38 -9 1 C-2.25 -1.125 -2.25 -1.125 0 0 Z \",fill:\"#7C633D\",transform:\"translate(496,358)\"})),_path990||(_path990=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.6875 2.8125 1.6875 2.8125 2 6 C0.5625 7.875 0.5625 7.875 -1 9 C-1.99 8.67 -2.98 8.34 -4 8 C-3.67 7.34 -3.34 6.68 -3 6 C-2.34 6 -1.68 6 -1 6 C-0.67 4.02 -0.34 2.04 0 0 Z \",fill:\"#3E2F1D\",transform:\"translate(588,354)\"})),_path991||(_path991=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C4.57061311 2.64767793 4.57061311 2.64767793 7 3 C7 4.65 7 6.3 7 8 C6.34 7.01 5.68 6.02 5 5 C1.93443402 4.26656572 1.93443402 4.26656572 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#42341A\",transform:\"translate(513,344)\"})),_path992||(_path992=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.75 2 -1.75 2 -4 4 C-5.32 4 -6.64 4 -8 4 C-7.67 3.01 -7.34 2.02 -7 1 C-4.53721199 -0.231394 -2.7204945 -0.07159196 0 0 Z \",fill:\"#D2B07A\",transform:\"translate(294,336)\"})),_path993||(_path993=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.54625 1.5775 1.0925 2.155 0.625 2.75 C-0.84113516 4.7800333 -1.94857784 6.73539843 -3 9 C-3.66 8.67 -4.32 8.34 -5 8 C-4.45773019 4.20411134 -2.79872437 2.52788007 0 0 Z \",fill:\"#B5986B\",transform:\"translate(417,331)\"})),_path994||(_path994=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.495 1.98 0.495 4 1 C4 1.99 4 2.98 4 4 C3.34 4 2.68 4 2 4 C2 4.66 2 5.32 2 6 C2.66 6 3.32 6 4 6 C3.67 6.66 3.34 7.32 3 8 C1.68 6.68 0.36 5.36 -1 4 C-0.34 3.67 0.32 3.34 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#302617\",transform:\"translate(688,325)\"})),_path995||(_path995=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.2542015 2.83430453 4.5206753 4.68607774 5 9 C2.5 6.75 2.5 6.75 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#85734F\",transform:\"translate(425,296)\"})),_path996||(_path996=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.299375 0.7115625 1.299375 0.7115625 2.625 1.4375 C5.85387374 2.93234895 8.49033826 3.58218313 12 4 C12 4.33 12 4.66 12 5 C8.7 5 5.4 5 2 5 C1.34 3.35 0.68 1.7 0 0 Z \",fill:\"#886937\",transform:\"translate(274,272)\"})),_path997||(_path997=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 1.65 1.66 3.3 2 5 C2.99 5.33 3.98 5.66 5 6 C4.01 6.99 3.02 7.98 2 9 C0.4375 7.875 0.4375 7.875 -1 6 C-0.6875 2.8125 -0.6875 2.8125 0 0 Z \",fill:\"#97733B\",transform:\"translate(261,272)\"})),_path998||(_path998=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.433125 0.639375 0.86625 1.27875 1.3125 1.9375 C2.91239177 4.26746003 2.91239177 4.26746003 6 5 C5.01 5.99 4.02 6.98 3 8 C1.35 6.02 -0.3 4.04 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#927441\",transform:\"translate(237,252)\"})),_path999||(_path999=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.33 2.64 0.66 4 1 C3.01 1 2.02 1 1 1 C1.34786708 2.97536745 1.34786708 2.97536745 2 5 C2.66 5.33 3.32 5.66 4 6 C3.67 7.32 3.34 8.64 3 10 C0.64551835 7.44931155 0.01672076 6.28982642 -0.1875 2.75 C-0.125625 1.8425 -0.06375 0.935 0 0 Z \",fill:\"#917E5C\",transform:\"translate(374,212)\"})),_path1000||(_path1000=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.495 2.475 0.495 5 1 C5.33 2.32 5.66 3.64 6 5 C3 5 3 5 1.3125 3.625 C0 2 0 2 0 0 Z \",fill:\"#C6AB83\",transform:\"translate(386,215)\"})),_path1001||(_path1001=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-3.29230769 5.06153846 -3.29230769 5.06153846 -6.875 4.75 C-7.57625 4.5025 -8.2775 4.255 -9 4 C-9 3.34 -9 2.68 -9 2 C-6.94921875 1.77213542 -4.8984375 1.54427083 -2.84765625 1.31640625 C-0.98859771 1.18113386 -0.98859771 1.18113386 0 0 Z \",fill:\"#342B19\",transform:\"translate(433,615)\"})),_path1002||(_path1002=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.125 5.625 C2.08375 6.73875 2.0425 7.8525 2 9 C1.01 9.33 0.02 9.66 -1 10 C-0.67 6.7 -0.34 3.4 0 0 Z \",fill:\"#4E351B\",transform:\"translate(432,601)\"})),_path1003||(_path1003=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 3.3 1 6.6 1 10 C-0.32 10.33 -1.64 10.66 -3 11 C-2.67 9.68 -2.34 8.36 -2 7 C-1.34 7 -0.68 7 0 7 C-0.2784375 5.824375 -0.2784375 5.824375 -0.5625 4.625 C-1 2 -1 2 0 0 Z \",fill:\"#2B2113\",transform:\"translate(397,594)\"})),_path1004||(_path1004=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0.66 4.62 1.32 7 2 C7 2.66 7 3.32 7 4 C5.1875 4.625 5.1875 4.625 3 5 C2.01 4.34 1.02 3.68 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#CEAE73\",transform:\"translate(368,580)\"})),_path1005||(_path1005=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 1.32 2 2.64 2 4 C2.99 4.33 3.98 4.66 5 5 C5.33 5.99 5.66 6.98 6 8 C3.5625 7.1875 3.5625 7.1875 1 6 C0 3 0 3 0 0 Z \",fill:\"#3C301D\",transform:\"translate(328,574)\"})),_path1006||(_path1006=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.4096347 0.70180531 -2.82807641 1.38593958 -4.25 2.0625 C-5.03890625 2.44535156 -5.8278125 2.82820312 -6.640625 3.22265625 C-9.25993522 4.08564091 -10.44855176 3.93045933 -13 3 C-11.5903653 2.29819469 -10.17192359 1.61406042 -8.75 0.9375 C-7.96109375 0.55464844 -7.1721875 0.17179688 -6.359375 -0.22265625 C-3.74006478 -1.08564091 -2.55144824 -0.93045933 0 0 Z \",fill:\"#4F4028\",transform:\"translate(557,557)\"})),_path1007||(_path1007=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C1.66 3 2.32 3 3 3 C4.6875 4.8125 4.6875 4.8125 6 7 C5.67 7.99 5.34 8.98 5 10 C4.34 10 3.68 10 3 10 C0.96564469 6.27034861 0 4.33094958 0 0 Z \",fill:\"#6A532F\",transform:\"translate(478,546)\"})),_path1008||(_path1008=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C2.66 2 3.32 2 4 2 C4 2.66 4 3.32 4 4 C1.36 4.33 -1.28 4.66 -4 5 C-3.34 4.67 -2.68 4.34 -2 4 C-0.86649466 1.98330173 -0.86649466 1.98330173 0 0 Z \",fill:\"#372E22\",transform:\"translate(658,529)\"})),_path1009||(_path1009=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.66 3.96 1.32 6 2 C6 2.66 6 3.32 6 4 C7.32 4.33 8.64 4.66 10 5 C9.34 5.66 8.68 6.32 8 7 C6.66382648 6.02471263 5.3311249 5.04466681 4 4.0625 C3.2575 3.51722656 2.515 2.97195313 1.75 2.41015625 C1.1725 1.94480469 0.595 1.47945312 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#957B51\",transform:\"translate(362,524)\"})),_path1010||(_path1010=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 0.33 8 0.66 8 1 C6.02 1 4.04 1 2 1 C2.66 2.65 3.32 4.3 4 6 C2.68 5.34 1.36 4.68 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#564830\",transform:\"translate(272,524)\"})),_path1011||(_path1011=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.66 2.64 1.32 4 2 C3.34 2 2.68 2 2 2 C2 2.99 2 3.98 2 5 C-0.64 4.34 -3.28 3.68 -6 3 C-6 2.67 -6 2.34 -6 2 C-4.02 2 -2.04 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#342714\",transform:\"translate(486,500)\"})),_path1012||(_path1012=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.99 3.96 1.98 6 3 C6.33 2.01 6.66 1.02 7 0 C7.99 1.65 8.98 3.3 10 5 C4.5388601 4.64766839 4.5388601 4.64766839 2 4 C0.5 1.9375 0.5 1.9375 0 0 Z \",fill:\"#9E8B66\",transform:\"translate(812,456)\"})),_path1013||(_path1013=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.01898986 1.50949493 3.59960549 4.01655082 5 7 C5.33 7.66 5.66 8.32 6 9 C4.35 9 2.7 9 1 9 C0.67 8.34 0.34 7.68 0 7 C0.66 7 1.32 7 2 7 C1.34 4.69 0.68 2.38 0 0 Z \",fill:\"#9D8661\",transform:\"translate(460,452)\"})),_path1014||(_path1014=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.44216672 2.6598561 3.99504674 5.90288286 5 10 C3.68 10 2.36 10 1 10 C1.33 8.02 1.66 6.04 2 4 C1.34 4 0.68 4 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#B39A6C\",transform:\"translate(188,450)\"})),_path1015||(_path1015=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C1.7578125 4.1640625 1.7578125 4.1640625 1.125 6.625 C0.92132812 7.44226563 0.71765625 8.25953125 0.5078125 9.1015625 C0.34023438 9.72804688 0.17265625 10.35453125 0 11 C-0.33 11 -0.66 11 -1 11 C-1.33 7.7 -1.66 4.4 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#BEA06B\",transform:\"translate(836,446)\"})),_path1016||(_path1016=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.953125 0.6796875 1.953125 0.6796875 4 2 C4.609375 4.3828125 4.609375 4.3828125 4.75 7.125 C4.80671875 8.03507812 4.8634375 8.94515625 4.921875 9.8828125 C4.94765625 10.58148438 4.9734375 11.28015625 5 12 C2.65085508 9.65085508 2.26859643 8.04320554 1.375 4.875 C1.11460937 3.96492188 0.85421875 3.05484375 0.5859375 2.1171875 C0.39257812 1.41851562 0.19921875 0.71984375 0 0 Z \",fill:\"#9D875C\",transform:\"translate(346,436)\"})),_path1017||(_path1017=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.99 1.32 1.98 2 3 C1.34 4.32 0.68 5.64 0 7 C-1.32 7 -2.64 7 -4 7 C-4 6.34 -4 5.68 -4 5 C-3.34 5 -2.68 5 -2 5 C-1.34 3.35 -0.68 1.7 0 0 Z \",fill:\"#75684F\",transform:\"translate(438,433)\"})),_path1018||(_path1018=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C1.67 2.98 1.34 4.96 1 7 C0.34 6.67 -0.32 6.34 -1 6 C-1.66 6.99 -2.32 7.98 -3 9 C-3.26218749 5.85375007 -3.24754367 4.38162983 -1.5 1.6875 C-1.005 1.130625 -0.51 0.57375 0 0 Z \",fill:\"#DABB8B\",transform:\"translate(817,422)\"})),_path1019||(_path1019=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 1.65 2.64 3.3 4 5 C3.67 5.66 3.34 6.32 3 7 C1.35 6.67 -0.3 6.34 -2 6 C-2.33 6.66 -2.66 7.32 -3 8 C-3 7.01 -3 6.02 -3 5 C-2.34 4.67 -1.68 4.34 -1 4 C-0.34786708 1.97536745 -0.34786708 1.97536745 0 0 Z \",fill:\"#B99E74\",transform:\"translate(740,422)\"})),_path1020||(_path1020=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.67 2.65 2.34 4.3 2 6 C1.01 6.33 0.02 6.66 -1 7 C-0.67 4.69 -0.34 2.38 0 0 Z \",fill:\"#DBB981\",transform:\"translate(737,421)\"})),_path1021||(_path1021=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0.495 2.97 0.495 6 1 C5.01 1.33 4.02 1.66 3 2 C3.33 2.66 3.66 3.32 4 4 C4.04022391 6.3329866 4.04320247 8.66706666 4 11 C3.67 11 3.34 11 3 11 C2.67 8.03 2.34 5.06 2 2 C1.34 2 0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#A6906B\",transform:\"translate(790,419)\"})),_path1022||(_path1022=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.75 0.875 4.75 0.875 7 2 C7 2.66 7 3.32 7 4 C4.03 4 1.06 4 -2 4 C-1.01 3.34 -0.02 2.68 1 2 C0.67 1.34 0.34 0.68 0 0 Z \",fill:\"#423016\",transform:\"translate(365,382)\"})),_path1023||(_path1023=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.3 0 6.6 0 10 0 C7.41212273 2.58787727 5.57992139 2.62709152 2 3 C1.34 2.67 0.68 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#181004\",transform:\"translate(467,382)\"})),_path1024||(_path1024=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 0.9375 2 0.9375 4 3 C4.36475845 6.02534949 4.22893297 8.96663814 4 12 C1.90029019 8.0828943 1.00665438 4.31423304 0 0 Z \",fill:\"#54452C\",transform:\"translate(648,340)\"})),_path1025||(_path1025=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.556875 0.28875 1.11375 0.5775 1.6875 0.875 C4.08494645 2.0413253 6.51596939 3.0339881 9 4 C9 4.33 9 4.66 9 5 C3.5 5.36666667 3.5 5.36666667 1.125 3.625 C0 2 0 2 0 0 Z \",fill:\"#A69069\",transform:\"translate(538,340)\"})),_path1026||(_path1026=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C0.66 2.33 1.32 2.66 2 3 C1.34 3.66 0.68 4.32 0 5 C-0.99 5 -1.98 5 -3 5 C-3 4.01 -3 3.02 -3 2 C-3.66 1.67 -4.32 1.34 -5 1 C-3 0 -3 0 0 0 Z \",fill:\"#AF9369\",transform:\"translate(429,336)\"})),_path1027||(_path1027=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.81538462 2.46153846 3.81538462 2.46153846 4.75 5.1875 C4.8325 5.785625 4.915 6.38375 5 7 C4.01 7.495 4.01 7.495 3 8 C3 6.68 3 5.36 3 4 C1.35 4 -0.3 4 -2 4 C-2 3.01 -2 2.02 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#CCA774\",transform:\"translate(636,316)\"})),_path1028||(_path1028=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C2.74874616 3.75376152 1.4347596 4.24073289 -2 6 C-2.66 6 -3.32 6 -4 6 C-4 5.34 -4 4.68 -4 4 C-3.01 4 -2.02 4 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#B89D6F\",transform:\"translate(426,317)\"})),_path1029||(_path1029=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.375 -0.125 3.375 -0.125 7 0 C7.66 0.66 8.32 1.32 9 2 C6.69 2.33 4.38 2.66 2 3 C1.34 2.01 0.68 1.02 0 0 Z \",fill:\"#A18A61\",transform:\"translate(396,309)\"})),_path1030||(_path1030=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.33 0 0.66 0 1 C-0.94875 1.28875 -1.8975 1.5775 -2.875 1.875 C-6.05211578 2.76825109 -6.05211578 2.76825109 -8 5 C-8.99 4.67 -9.98 4.34 -11 4 C-7.65667474 -0.27945633 -5.29105716 -0.4070044 0 0 Z \",fill:\"#91753D\",transform:\"translate(676,278)\"})),_path1031||(_path1031=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.99 1.32 1.98 2 3 C0.35 4.65 -1.3 6.3 -3 8 C-3.33 7.01 -3.66 6.02 -4 5 C-2.0625 2.3125 -2.0625 2.3125 0 0 Z \",fill:\"#6A5831\",transform:\"translate(556,277)\"})),_path1032||(_path1032=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.15377564 2.62198774 3.40072174 4.64404172 4 8 C3.01 8 2.02 8 1 8 C-1 5 -1 5 -0.625 2.3125 C-0.41875 1.549375 -0.2125 0.78625 0 0 Z \",fill:\"#4A3720\",transform:\"translate(417,274)\"})),_path1033||(_path1033=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.86625 0.3403125 0.86625 0.3403125 1.75 0.6875 C1.42 2.0075 1.09 3.3275 0.75 4.6875 C0.42 4.0275 0.09 3.3675 -0.25 2.6875 C-1.24 3.0175 -2.23 3.3475 -3.25 3.6875 C-4.24 3.3575 -5.23 3.0275 -6.25 2.6875 C-2.80384615 -0.38942308 -2.80384615 -0.38942308 0 0 Z \",fill:\"#AF8B58\",transform:\"translate(729.25,244.3125)\"})),_path1034||(_path1034=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.33804688 0.17982422 1.33804688 0.17982422 2.703125 0.36328125 C3.37859375 0.47027344 4.0540625 0.57726562 4.75 0.6875 C4.75 1.0175 4.75 1.3475 4.75 1.6875 C-0.01307437 2.64011487 -4.4166528 2.77083357 -9.25 2.6875 C-6.03037108 -0.23875152 -4.27288159 -0.61844339 0 0 Z \",fill:\"#3A260B\",transform:\"translate(531.25,192.3125)\"})),_path1035||(_path1035=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 1.32 7.26 2.64 11 4 C11 4.33 11 4.66 11 5 C7.16774573 5.08912219 3.73437848 4.87867729 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#7D5F2F\",transform:\"translate(483,187)\"})),_path1036||(_path1036=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7 0.99 7 1.98 7 3 C4 4 4 4 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#251E16\",transform:\"translate(522,620)\"})),_path1037||(_path1037=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 2.64 2 5.28 2 8 C0.35 7.67 -1.3 7.34 -3 7 C-2.01 6.67 -1.02 6.34 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#B49E6F\",transform:\"translate(404,602)\"})),_path1038||(_path1038=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.495 2.475 0.495 5 1 C4.67 2.32 4.34 3.64 4 5 C3.01 5 2.02 5 1 5 C0.67 3.35 0.34 1.7 0 0 Z \",fill:\"#C1A477\",transform:\"translate(614,570)\"})),_path1039||(_path1039=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.144375 0.61875 4.28875 1.2375 4.4375 1.875 C4.93152225 4.03258322 4.93152225 4.03258322 6 6 C3.97954558 5.39816251 1.97888961 4.72693904 0 4 C-0.33 3.34 -0.66 2.68 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#352B1A\",transform:\"translate(364,568)\"})),_path1040||(_path1040=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0.33 3.3 0.66 5 1 C4.01 2.485 4.01 2.485 3 4 C0.69 3.34 -1.62 2.68 -4 2 C-3.34 1.67 -2.68 1.34 -2 1 C-1.34 1.33 -0.68 1.66 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#A38B5D\",transform:\"translate(647,562)\"})),_path1041||(_path1041=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 1.65 0 3.3 0 5 C-1.65 5 -3.3 5 -5 5 C-5.33 4.01 -5.66 3.02 -6 2 C-2.25 0 -2.25 0 0 0 Z \",fill:\"#C4A169\",transform:\"translate(544,556)\"})),_path1042||(_path1042=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C6 3.33333333 6 3.33333333 6 6 C3 6 3 6 1.3125 4.6875 C0 3 0 3 0 0 Z \",fill:\"#6C5733\",transform:\"translate(656,541)\"})),_path1043||(_path1043=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C1.38125 2.7425 0.7625 3.485 0.125 4.25 C-1.60437281 6.48801188 -2.86106661 8.43739987 -4 11 C-4.36630156 7.06225823 -4.30233203 5.43460229 -2 2.125 C-1.34 1.42375 -0.68 0.7225 0 0 Z \",fill:\"#B19C75\",transform:\"translate(300,536)\"})),_path1044||(_path1044=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C1.75023244 3.65316671 1.32901247 4.78065836 -2 7 C-1.125 1.125 -1.125 1.125 0 0 Z \",fill:\"#705C3A\",transform:\"translate(450,514)\"})),_path1045||(_path1045=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C1.71480435 2.86697492 0.42870746 4.97607712 -2 7 C-2.66 7 -3.32 7 -4 7 C-4 6.34 -4 5.68 -4 5 C-3.34 4.67 -2.68 4.34 -2 4 C-0.86649466 1.98330173 -0.86649466 1.98330173 0 0 Z \",fill:\"#CFA96B\",transform:\"translate(614,505)\"})),_path1046||(_path1046=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.495 1.98 0.495 4 1 C3.67 2.32 3.34 3.64 3 5 C1.68 4.67 0.36 4.34 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#B29256\",transform:\"translate(504,503)\"})),_path1047||(_path1047=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 0.66 3 1.32 3 2 C5.475 2.99 5.475 2.99 8 4 C7.67 4.66 7.34 5.32 7 6 C4.69 5.01 2.38 4.02 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#BC9455\",transform:\"translate(483,505)\"})),_path1048||(_path1048=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.00720923 0.28674418 4.0085944 0.61866701 6 1 C6 1.66 6 2.32 6 3 C4.35 3.33 2.7 3.66 1 4 C0.34 3.01 -0.32 2.02 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#BF9959\",transform:\"translate(496,499)\"})),_path1049||(_path1049=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.78375 0.04125 1.5675 0.0825 2.375 0.125 C1.09437515 1.8324998 -0.24267557 3.49873596 -1.625 5.125 C-2.285 5.125 -2.945 5.125 -3.625 5.125 C-3.955 4.135 -4.285 3.145 -4.625 2.125 C-2.625 0.125 -2.625 0.125 0 0 Z \",fill:\"#150C05\",transform:\"translate(476.625,454.875)\"})),_path1050||(_path1050=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0.33 3.3 0.66 5 1 C4.01 2.485 4.01 2.485 3 4 C2.34 4 1.68 4 1 4 C0.67 4.66 0.34 5.32 0 6 C-0.66 5.01 -1.32 4.02 -2 3 C-1.34 2.01 -0.68 1.02 0 0 Z \",fill:\"#CFB179\",transform:\"translate(833,443)\"})),_path1051||(_path1051=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.1519437 3.22791555 2.20086443 4.28400809 2 8 C1.01 8.495 1.01 8.495 0 9 C-0.66 8.67 -1.32 8.34 -2 8 C-1.34 5.36 -0.68 2.72 0 0 Z \",fill:\"#DFBD87\",transform:\"translate(225,436)\"})),_path1052||(_path1052=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C3.67 1.65 3.34 3.3 3 5 C2.01 5.33 1.02 5.66 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#E2B980\",transform:\"translate(246,421)\"})),_path1053||(_path1053=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.75 2 -1.75 2 -4 4 C-5.32 4 -6.64 4 -8 4 C-7.67 3.01 -7.34 2.02 -7 1 C-4.53721199 -0.231394 -2.7204945 -0.07159196 0 0 Z \",fill:\"#A08A6A\",transform:\"translate(466,420)\"})),_path1054||(_path1054=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C0.34 2 -0.32 2 -1 2 C-1 2.66 -1 3.32 -1 4 C-3.375 4.625 -3.375 4.625 -6 5 C-6.66 4.34 -7.32 3.68 -8 3 C-5.36 2.01 -2.72 1.02 0 0 Z \",fill:\"#C4A36E\",transform:\"translate(582,374)\"})),_path1055||(_path1055=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.99 2.33 2.98 2.66 4 3 C0.375 6 0.375 6 -3 6 C-2 4 -1 2 0 0 Z \",fill:\"#5D5037\",transform:\"translate(710,354)\"})),_path1056||(_path1056=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C2.98 3 4.96 3 7 3 C5 5 5 5 1.875 5.125 C0.451875 5.063125 0.451875 5.063125 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#8E7754\",transform:\"translate(265,344)\"})),_path1057||(_path1057=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.875 0.3125 2.875 0.3125 6 1 C6.66 1.99 7.32 2.98 8 4 C5.69 3.67 3.38 3.34 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#AF956F\",transform:\"translate(474,343)\"})),_path1058||(_path1058=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 1.32 0 2.64 0 4 C-3.3 3.34 -6.6 2.68 -10 2 C-10 1.67 -10 1.34 -10 1 C-6.56484998 0.37542727 -3.50935186 0 0 0 Z \",fill:\"#281C0E\",transform:\"translate(407,311)\"})),_path1059||(_path1059=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 0.66 3 1.32 3 2 C4.32 2.33 5.64 2.66 7 3 C6.34 4.32 5.68 5.64 5 7 C3.5 5.6875 3.5 5.6875 2 4 C2 3.01 2 2.02 2 1 C1.34 0.67 0.68 0.34 0 0 Z \",fill:\"#A28859\",transform:\"translate(706,309)\"})),_path1060||(_path1060=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3.57575896 -1.08840607 5.05295935 -3 8 C-3.33 7.01 -3.66 6.02 -4 5 C-3.67 4.34 -3.34 3.68 -3 3 C-3.66 2.67 -4.32 2.34 -5 2 C-3.35 1.34 -1.7 0.68 0 0 Z \",fill:\"#1E1003\",transform:\"translate(539,283)\"})),_path1061||(_path1061=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4 4.5 4 4.5 4 9 C3.34 9 2.68 9 2 9 C0.14223235 5.86501708 -0.20140476 3.62528568 0 0 Z \",fill:\"#A29070\",transform:\"translate(415,277)\"})),_path1062||(_path1062=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C2.67 2.66 2.34 3.32 2 4 C1.34 3.67 0.68 3.34 0 3 C-0.33 4.32 -0.66 5.64 -1 7 C-1.66 5.35 -2.32 3.7 -3 2 C-2.01 1.34 -1.02 0.68 0 0 Z \",fill:\"#826535\",transform:\"translate(266,278)\"})),_path1063||(_path1063=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.75 0.875 5.75 0.875 8 2 C8 2.66 8 3.32 8 4 C2.25 3.125 2.25 3.125 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#8F7141\",transform:\"translate(378,275)\"})),_path1064||(_path1064=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C3.65 2 5.3 2 7 2 C3.81237635 4.12508244 1.73487777 4.5020163 -2 5 C-2 4.34 -2 3.68 -2 3 C-1.34 3 -0.68 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#725A33\",transform:\"translate(723,260)\"})),_path1065||(_path1065=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.4375 0.375 2.4375 0.375 5 1 C5.33 1.66 5.66 2.32 6 3 C4.68 3 3.36 3 2 3 C2 4.98 2 6.96 2 9 C0 7 0 7 -0.125 3.375 C-0.08375 2.26125 -0.0425 1.1475 0 0 Z \",fill:\"#7E6945\",transform:\"translate(232,241)\"})),_path1066||(_path1066=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C-0.64 2.33 -3.28 2.66 -6 3 C-6.66 2.01 -7.32 1.02 -8 0 C-4.71303767 -0.79953138 -3.28976808 -1.09658936 0 0 Z \",fill:\"#5D4924\",transform:\"translate(440,190)\"})),_path1067||(_path1067=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-4.43076923 4.09230769 -4.43076923 4.09230769 -7.3125 3.625 C-7.869375 3.41875 -8.42625 3.2125 -9 3 C-5.55930376 0.70620251 -4.27709699 0 0 0 Z \",fill:\"#291707\",transform:\"translate(478,181)\"})),_path1068||(_path1068=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1 3 1 3 0 6 C-1.65 6 -3.3 6 -5 6 C-4.67 5.01 -4.34 4.02 -4 3 C-3.01 2.67 -2.02 2.34 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#B69C6E\",transform:\"translate(400,602)\"})),_path1069||(_path1069=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.31 1 4.62 1 7 C0.01 7.33 -0.98 7.66 -2 8 C-1.125 1.125 -1.125 1.125 0 0 Z \",fill:\"#6A542F\",transform:\"translate(428,602)\"})),_path1070||(_path1070=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3.37849614 5.54195365 2.9891703 6.0144396 0 10 C0 6.7 0 3.4 0 0 Z \",fill:\"#675235\",transform:\"translate(402,592)\"})),_path1071||(_path1071=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3.33 2.98 3.66 4.96 4 7 C3.34 7 2.68 7 2 7 C0.5393715 4.35261084 0 3.10551666 0 0 Z \",fill:\"#6C562E\",transform:\"translate(593,583)\"})),_path1072||(_path1072=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3 1.99 3 2.98 3 4 C3.99 4.33 4.98 4.66 6 5 C5.01 5.33 4.02 5.66 3 6 C1.68 4.68 0.36 3.36 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#453822\",transform:\"translate(341,555)\"})),_path1073||(_path1073=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.93065133 2.60582371 1.14917407 3.64198224 0.0625 6.25 C-0.4634375 7.11625 -0.4634375 7.11625 -1 8 C-1.33 7.34 -1.66 6.68 -2 6 C-2.66 6.66 -3.32 7.32 -4 8 C-3.40072174 4.64404172 -2.15377564 2.62198774 0 0 Z \",fill:\"#897351\",transform:\"translate(319,552)\"})),_path1074||(_path1074=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2.25 7.625 2.25 7.625 0 11 C-0.66 11 -1.32 11 -2 11 C-1.34 7.37 -0.68 3.74 0 0 Z \",fill:\"#A28A66\",transform:\"translate(321,545)\"})),_path1075||(_path1075=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0.66 5.28 1.32 8 2 C7.67 2.99 7.34 3.98 7 5 C2.25 3.125 2.25 3.125 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#897455\",transform:\"translate(400,529)\"})),_path1076||(_path1076=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C1.72485508 3.55028983 0.59658703 3.93081711 -2 5 C-2.99 5 -3.98 5 -5 5 C-5 4.34 -5 3.68 -5 3 C-4.01 3 -3.02 3 -2 3 C-2 2.34 -2 1.68 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#70542B\",transform:\"translate(481,517)\"})),_path1077||(_path1077=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1 2 1 2 0.1875 4.5625 C-1 7 -1 7 -3 8 C-3.75 6.25 -3.75 6.25 -4 4 C-2.0625 1.75 -2.0625 1.75 0 0 Z \",fill:\"#AE905E\",transform:\"translate(603,515)\"})),_path1078||(_path1078=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-0.83430453 4.2542015 -2.68607774 5.5206753 -7 6 C-2.25 1.125 -2.25 1.125 0 0 Z \",fill:\"#785A2D\",transform:\"translate(470,508)\"})),_path1079||(_path1079=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C-0.1312477 4.92238988 -1.59289861 6.99408218 -4 9 C-4.66 9 -5.32 9 -6 9 C-4.47291037 5.56404834 -2.40072955 2.88087546 0 0 Z \",fill:\"#89744F\",transform:\"translate(618,497)\"})),_path1080||(_path1080=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.27875 0.103125 2.5575 0.20625 3.875 0.3125 C4.95394531 0.39951172 4.95394531 0.39951172 6.0546875 0.48828125 C8 1 8 1 10 4 C7.25 4.25 7.25 4.25 4 4 C1.625 2 1.625 2 0 0 Z \",fill:\"#2E2212\",transform:\"translate(463,457)\"})),_path1081||(_path1081=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3 1.66 3 2.32 3 3 C3.66 3 4.32 3 5 3 C5 4.32 5 5.64 5 7 C4.34 7 3.68 7 3 7 C3 6.34 3 5.68 3 5 C2.34 5 1.68 5 1 5 C0.67 3.35 0.34 1.7 0 0 Z \",fill:\"#E2BE84\",transform:\"translate(454,448)\"})),_path1082||(_path1082=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C4.67 1.98 4.34 3.96 4 6 C2.62437146 4.71034824 1.29233607 3.37310707 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#C7A97E\",transform:\"translate(177,443)\"})),_path1083||(_path1083=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.495 2.475 0.495 5 1 C5 1.66 5 2.32 5 3 C6.32 3.33 7.64 3.66 9 4 C6 5 6 5 2.8125 3.5625 C1.884375 3.046875 0.95625 2.53125 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#896834\",transform:\"translate(462,383)\"})),_path1084||(_path1084=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 0.66 7.26 1.32 11 2 C11 2.33 11 2.66 11 3 C7.75 3.75 7.75 3.75 4 4 C1.5625 2.0625 1.5625 2.0625 0 0 Z \",fill:\"#846A3A\",transform:\"translate(437,376)\"})),_path1085||(_path1085=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.598125 0.350625 1.19625 0.70125 1.8125 1.0625 C1.8125 1.7225 1.8125 2.3825 1.8125 3.0625 C-0.1675 3.0625 -2.1475 3.0625 -4.1875 3.0625 C-4.5175 2.0725 -4.8475 1.0825 -5.1875 0.0625 C-2.1875 -0.9375 -2.1875 -0.9375 0 0 Z \",fill:\"#B6925F\",transform:\"translate(558.1875,372.9375)\"})),_path1086||(_path1086=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 1.98 1 3.96 1 6 C-0.32 6 -1.64 6 -3 6 C-2.42655063 3.13275314 -2.1385485 2.1385485 0 0 Z \",fill:\"#C3A16D\",transform:\"translate(602,354)\"})),_path1087||(_path1087=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-2.31 2 -4.62 2 -7 2 C-7 1.34 -7 0.68 -7 0 C-4.3333581 -1.33332095 -2.83319697 -0.67102033 0 0 Z \",fill:\"#050102\",transform:\"translate(519,349)\"})),_path1088||(_path1088=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.66 3.96 1.32 6 2 C5.01 3.485 5.01 3.485 4 5 C2.02 4.01 0.04 3.02 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#423118\",transform:\"translate(474,339)\"})),_path1089||(_path1089=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.4375 0.8125 3.4375 0.8125 7 2 C7.33 2.99 7.66 3.98 8 5 C2.25 3.375 2.25 3.375 0 0 Z \",fill:\"#CAA878\",transform:\"translate(540,337)\"})),_path1090||(_path1090=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.35595828 0.59927826 5.37801226 1.84622436 8 4 C6.25 4.6875 6.25 4.6875 4 5 C1.75 3.6875 1.75 3.6875 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#8A7859\",transform:\"translate(464,331)\"})),_path1091||(_path1091=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.99 2.475 0.99 5 2 C5 2.99 5 3.98 5 5 C2.03824877 4.38722388 0.61941217 3.74627478 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#4B432D\",transform:\"translate(560,322)\"})),_path1092||(_path1092=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0.495 2.97 0.495 6 1 C5.67 2.32 5.34 3.64 5 5 C3.0625 4.1875 3.0625 4.1875 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#AE8C59\",transform:\"translate(455,317)\"})),_path1093||(_path1093=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 1.625 2 1.625 4 4 C4.25 7.25 4.25 7.25 4 10 C3.67 10 3.34 10 3 10 C3 8.35 3 6.7 3 5 C1.68 4.34 0.36 3.68 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#897149\",transform:\"translate(369,306)\"})),_path1094||(_path1094=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.495 1.98 0.495 4 1 C4 2.65 4 4.3 4 6 C3.67 5.01 3.34 4.02 3 3 C2.01 3 1.02 3 0 3 C-0.33 3.66 -0.66 4.32 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#997845\",transform:\"translate(654,301)\"})),_path1095||(_path1095=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 1.65 3.3 3.3 5 5 C4.34 6.32 3.68 7.64 3 9 C0 3.375 0 3.375 0 0 Z \",fill:\"#423016\",transform:\"translate(424,299)\"})),_path1096||(_path1096=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.33 2.64 0.66 4 1 C4.33 3.31 4.66 5.62 5 8 C2.20127563 5.47211993 0.54226981 3.79588866 0 0 Z \",fill:\"#765C37\",transform:\"translate(436,297)\"})),_path1097||(_path1097=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.99 1.32 1.98 2 3 C0.515 5.475 0.515 5.475 -1 8 C-1.66 7.67 -2.32 7.34 -3 7 C-1.125 2.25 -1.125 2.25 0 0 Z \",fill:\"#361E07\",transform:\"translate(538,291)\"})),_path1098||(_path1098=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.26185454 2.26185454 3.03921617 3.96983561 4 7 C3.67 7.99 3.34 8.98 3 10 C-1.06153846 4.58461538 -1.06153846 4.58461538 -0.75 1.625 C-0.5025 1.08875 -0.255 0.5525 0 0 Z \",fill:\"#837255\",transform:\"translate(422,280)\"})),_path1099||(_path1099=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3.185625 2.11375 3.185625 2.11375 3.375 3.25 C3.95486701 5.80141485 4.73708739 7.7267573 6 10 C5.34 10 4.68 10 4 10 C0 3.375 0 3.375 0 0 Z \",fill:\"#322413\",transform:\"translate(371,267)\"})),_path1100||(_path1100=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.485 0.99 1.485 0.99 3 2 C4.65549531 2.38499891 6.3222433 2.72793135 8 3 C8 3.99 8 4.98 8 6 C4.65750371 5.40312566 2.53563658 4.26396123 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#654D27\",transform:\"translate(370,258)\"})),_path1101||(_path1101=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2 2.98 2 4.96 2 7 C1.01 7.495 1.01 7.495 0 8 C0 7.01 0 6.02 0 5 C-0.66 4.67 -1.32 4.34 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#917546\",transform:\"translate(252,251)\"})),_path1102||(_path1102=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C2.67 3.63 2.34 7.26 2 11 C1.67 11 1.34 11 1 11 C0.67 7.37 0.34 3.74 0 0 Z \",fill:\"#5D4B32\",transform:\"translate(408,245)\"})),_path1103||(_path1103=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2 1.66 2 2.32 2 3 C1.34 3 0.68 3 0 3 C-0.33 3.66 -0.66 4.32 -1 5 C-1.99 5 -2.98 5 -4 5 C-3.6875 3.0625 -3.6875 3.0625 -3 1 C-2.01 0.67 -1.02 0.34 0 0 Z \",fill:\"#B08D57\",transform:\"translate(385,241)\"})),_path1104||(_path1104=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.63808594 0.19335938 -1.27617188 0.38671875 -1.93359375 0.5859375 C-3.17302734 0.97652344 -3.17302734 0.97652344 -4.4375 1.375 C-5.67306641 1.75785156 -5.67306641 1.75785156 -6.93359375 2.1484375 C-9.17798016 2.80882227 -9.17798016 2.80882227 -10 5 C-10 3.68 -10 2.36 -10 1 C-8.71073008 0.63720544 -7.41846728 0.28503302 -6.125 -0.0625 C-5.40570312 -0.25972656 -4.68640625 -0.45695313 -3.9453125 -0.66015625 C-2 -1 -2 -1 0 0 Z \",fill:\"#B89C6E\",transform:\"translate(588,237)\"})),_path1105||(_path1105=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 1.375 2 1.375 4 3 C4 3.66 4 4.32 4 5 C3.34 5 2.68 5 2 5 C1.67 5.99 1.34 6.98 1 8 C0.26919734 6.02253397 -0.39421747 4.01927511 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#D1AE7A\",transform:\"translate(393,221)\"})),_path1106||(_path1106=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.99 0 1.98 0 3 C-2 4.6875 -2 4.6875 -4 6 C-4.99 5.34 -5.98 4.68 -7 4 C-4.61426621 2.10786631 -2.92824652 0.97608217 0 0 Z \",fill:\"#A79577\",transform:\"translate(583,210)\"})),_path1107||(_path1107=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-2.35968744 2.09749995 -3.54616994 2.96905704 -6.75 3.1875 C-7.86375 3.0946875 -7.86375 3.0946875 -9 3 C-5.83583464 -0.30799106 -4.50236011 -1.35070803 0 0 Z \",fill:\"#736753\",transform:\"translate(590,208)\"})),_path1108||(_path1108=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0.33 5.28 0.66 8 1 C8 1.66 8 2.32 8 3 C5.03 2.67 2.06 2.34 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#200F01\",transform:\"translate(480,179)\"})),_path1109||(_path1109=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3 2.65 3 4.3 3 6 C2.01 6 1.02 6 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#685732\",transform:\"translate(542,602)\"})),_path1110||(_path1110=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7 1.32 7 2.64 7 4 C3.73045798 3.43628586 2.17424117 2.50037734 0 0 Z \",fill:\"#6D5B41\",transform:\"translate(413,592)\"})),_path1111||(_path1111=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.16874252 0.50603992 3.99967627 0.99983813 6 2 C6 2.66 6 3.32 6 4 C3.03 3.505 3.03 3.505 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#AE986F\",transform:\"translate(396,587)\"})),_path1112||(_path1112=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-2.625 5.875 -2.625 5.875 -6 7 C-4.77065985 3.31197956 -3.06140622 2.27643027 0 0 Z \",fill:\"#4B3E2A\",transform:\"translate(640,572)\"})),_path1113||(_path1113=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0.495 2.97 0.495 6 1 C6.33 1.99 6.66 2.98 7 4 C4.69 3.34 2.38 2.68 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#5A441E\",transform:\"translate(640,560)\"})),_path1114||(_path1114=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.99 1.98 0.99 4 2 C4 2.66 4 3.32 4 4 C3.34 4 2.68 4 2 4 C2 4.66 2 5.32 2 6 C1.34 6 0.68 6 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#BBA175\",transform:\"translate(322,546)\"})),_path1115||(_path1115=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C1.66 3 2.32 3 3 3 C3.33 2.01 3.66 1.02 4 0 C3.67 1.65 3.34 3.3 3 5 C2.34 5 1.68 5 1 5 C0.67 5.66 0.34 6.32 0 7 C-1.04449911 3.86650268 -0.93423645 3.01031744 0 0 Z \",fill:\"#A5885F\",transform:\"translate(297,543)\"})),_path1116||(_path1116=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.33 0 0.66 0 1 C-1.98567708 1.48828125 -3.97135417 1.9765625 -5.95703125 2.46484375 C-7.65683202 2.91010705 -9.33301954 3.44433985 -11 4 C-11 3.01 -11 2.02 -11 1 C-7.32589215 -0.17571451 -3.83070817 -0.07366746 0 0 Z \",fill:\"#CAA97C\",transform:\"translate(541,536)\"})),_path1117||(_path1117=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.125 0.375 3.125 0.375 6 1 C5.67 1.99 5.34 2.98 5 4 C2.69 3.34 0.38 2.68 -2 2 C-1.34 1.34 -0.68 0.68 0 0 Z \",fill:\"#9B8762\",transform:\"translate(674,529)\"})),_path1118||(_path1118=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.35953094 2.35953094 2.49141413 3.77895617 3 7 C0.525 6.01 0.525 6.01 -2 5 C-2 4.01 -2 3.02 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#9F8252\",transform:\"translate(493,523)\"})),_path1119||(_path1119=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0.99 2.64 1.98 4 3 C3.67 4.32 3.34 5.64 3 7 C2.01 6.67 1.02 6.34 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#826741\",transform:\"translate(573,514)\"})),_path1120||(_path1120=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C1.625 5.125 1.625 5.125 1 8 C0.34 7.67 -0.32 7.34 -1 7 C-1 6.01 -1 5.02 -1 4 C-1.99 4.495 -1.99 4.495 -3 5 C-2.625 3.0625 -2.625 3.0625 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#31281B\",transform:\"translate(285,509)\"})),_path1121||(_path1121=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C1.35 2.65 -0.3 4.3 -2 6 C-2.33 5.01 -2.66 4.02 -3 3 C-2.01 2.01 -1.02 1.02 0 0 Z \",fill:\"#4A3C22\",transform:\"translate(542,496)\"})),_path1122||(_path1122=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.144375 0.61875 0.28875 1.2375 0.4375 1.875 C0.93152225 4.03258322 0.93152225 4.03258322 2 6 C0.02 5.34 -1.96 4.68 -4 4 C-4 3.34 -4 2.68 -4 2 C-2.68 1.34 -1.36 0.68 0 0 Z \",fill:\"#3C2C16\",transform:\"translate(150,435)\"})),_path1123||(_path1123=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.36923077 5.53846154 1.36923077 5.53846154 -0.5 7.875 C-1.2425 8.431875 -1.2425 8.431875 -2 9 C-2.33 7.35 -2.66 5.7 -3 4 C-2.34 4 -1.68 4 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#B09668\",transform:\"translate(152,426)\"})),_path1124||(_path1124=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.09350689 3.4019487 2.17942163 6.05272412 2 10 C1.67 8.68 1.34 7.36 1 6 C0.34 6 -0.32 6 -1 6 C-1.042721 4.33388095 -1.04063832 2.66617115 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#766342\",transform:\"translate(314,420)\"})),_path1125||(_path1125=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 1.32 2.64 2.64 4 4 C3.67 4.99 3.34 5.98 3 7 C2.01 6.67 1.02 6.34 0 6 C-0.38218767 4.34385343 -0.71395102 2.67542976 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#B49363\",transform:\"translate(365,359)\"})),_path1126||(_path1126=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.33 2.64 2.66 5.28 3 8 C2.01 7.67 1.02 7.34 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#A3885E\",transform:\"translate(651,352)\"})),_path1127||(_path1127=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.97 1 5.94 1 9 C0.34 9 -0.32 9 -1 9 C-1.625 6.1875 -1.625 6.1875 -2 3 C-1.34 2.01 -0.68 1.02 0 0 Z \",fill:\"#D3AE73\",transform:\"translate(649,348)\"})),_path1128||(_path1128=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.125 4.625 C2.08375 5.40875 2.0425 6.1925 2 7 C0.68 7 -0.64 7 -2 7 C-1.67 6.01 -1.34 5.02 -1 4 C-0.65772583 2.66893378 -0.32248257 1.33599921 0 0 Z \",fill:\"#D0AE78\",transform:\"translate(647,340)\"})),_path1129||(_path1129=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.9375 0.5625 1.9375 0.5625 4 2 C4.75 5.625 4.75 5.625 5 9 C1.9083091 6.47043472 1.09068668 3.77545388 0 0 Z \",fill:\"#806B47\",transform:\"translate(352,324)\"})),_path1130||(_path1130=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C6.34 0.66 5.68 1.32 5 2 C5.33 2.66 5.66 3.32 6 4 C4.02 3.34 2.04 2.68 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#876C43\",transform:\"translate(550,323)\"})),_path1131||(_path1131=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C1.1875 3 1.1875 3 -1 5 C-1.99 5 -2.98 5 -4 5 C-3 2 -3 2 0 0 Z \",fill:\"#241603\",transform:\"translate(508,320)\"})),_path1132||(_path1132=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4 0.66 4 1.32 4 2 C4.66 2.33 5.32 2.66 6 3 C6.33 3.99 6.66 4.98 7 6 C6.01 5.67 5.02 5.34 4 5 C4 4.34 4 3.68 4 3 C2.68 2.67 1.36 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#AA8F62\",transform:\"translate(534,317)\"})),_path1133||(_path1133=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5.33 0.99 5.66 1.98 6 3 C4.02 3.33 2.04 3.66 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#2E1E0E\",transform:\"translate(408,315)\"})),_path1134||(_path1134=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1 2 1 2 0.25 4.5625 C-1 7 -1 7 -4 8 C-3.40072174 4.64404172 -2.15377564 2.62198774 0 0 Z \",fill:\"#7E6844\",transform:\"translate(338,296)\"})),_path1135||(_path1135=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.98120464 3.05263664 0.98120464 4.94736336 0 8 C-0.66 7.34 -1.32 6.68 -2 6 C-1.44444444 1.44444444 -1.44444444 1.44444444 0 0 Z \",fill:\"#8E744A\",transform:\"translate(681,293)\"})),_path1136||(_path1136=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.375 0.3125 2.375 0.3125 5 1 C5.66 1.99 6.32 2.98 7 4 C4.83125748 3.49396008 3.00032373 3.00016187 1 2 C0.01 3.485 0.01 3.485 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#A2814E\",transform:\"translate(277,290)\"})),_path1137||(_path1137=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 1.98 3 3.96 3 6 C2.01 5.67 1.02 5.34 0 5 C-0.33 4.01 -0.66 3.02 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#CCA76D\",transform:\"translate(608,278)\"})),_path1138||(_path1138=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 2.62113708 -0.31292445 4.50935112 -1 7 C-2.65 7.33 -4.3 7.66 -6 8 C-4.02 5.36 -2.04 2.72 0 0 Z \",fill:\"#392814\",transform:\"translate(562,274)\"})),_path1139||(_path1139=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.66 1.32 -1.32 2.64 -2 4 C-3.98 4 -5.96 4 -8 4 C-5.57415142 1.34311822 -3.76063134 0 0 0 Z \",fill:\"#795D2E\",transform:\"translate(694,271)\"})),_path1140||(_path1140=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.35953094 2.35953094 2.49141413 3.77895617 3 7 C1.68 7.33 0.36 7.66 -1 8 C-0.67 5.36 -0.34 2.72 0 0 Z \",fill:\"#795B2B\",transform:\"translate(270,264)\"})),_path1141||(_path1141=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.67542976 0.28604898 3.34385343 0.61781233 5 1 C5 1.66 5 2.32 5 3 C4.01 3 3.02 3 2 3 C1.67 3.99 1.34 4.98 1 6 C1 4.68 1 3.36 1 2 C0.34 1.67 -0.32 1.34 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#3E301B\",transform:\"translate(467,189)\"})),_path1142||(_path1142=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 2.64 3 5.28 3 8 C0.4345406 5.4345406 0.45953913 3.52313332 0 0 Z \",fill:\"#866630\",transform:\"translate(478,125)\"})));}const ForwardRef=/*#__PURE__*/React.forwardRef(SvgLogo);export default __webpack_public_path__+\"static/media/logo.4e9bf9f04a1376ca8a1e743e19de5b88.svg\";export{ForwardRef as ReactComponent};","import React from 'react';\r\nimport { HashRouter as Router, Route, Routes, Link } from 'react-router-dom';\r\n\r\nimport Home from '../components/Home';\r\nimport About from \"../components/About\";\r\n\r\nimport { ROUTELIST } from \"./routes\";\r\nimport { Flex } from 'antd';\r\nimport logo from \"../media/logo.svg\";\r\nimport \"./router.css\";\r\n\r\n\r\nfunction RouteHandler() {\r\n\r\n\r\n    return (\r\n        <Router>\r\n\r\n            <div className='link-container'>\r\n                <img src={logo} className='logo' alt='logo'></img>\r\n\r\n                {ROUTELIST.map((r, i) => (\r\n\r\n                    <Link key={i} to={r.path} className='link-item'>{r.name}</Link>\r\n                ))}\r\n            </div>\r\n            <div className='page'>\r\n                <Routes>\r\n\r\n                    {ROUTELIST.map((r, i) => (\r\n                        <Route key={i} path={r.path} element={r.element}></Route>\r\n                    ))}\r\n\r\n\r\n\r\n                </Routes>\r\n            </div>\r\n\r\n\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RouteHandler;","import React from 'react';\r\nimport RouteHandler from './router/router';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <RouteHandler/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"names":["aa","require","ca","p","a","b","c","arguments","length","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","Object","prototype","hasOwnProperty","ka","la","ma","v","d","e","f","g","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","Error","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","l","h","k","displayName","includes","name","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Mg","join","Ng","Og","index","Pg","Qg","props","Rg","implementation","Sg","Tg","q","r","y","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","defaultProps","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","console","error","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","exports","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","module","__self","__source","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","toArray","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","leafPrototypes","getProto","getPrototypeOf","obj","__esModule","ns","def","getOwnPropertyNames","definition","o","prop","toStringTag","Action","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","_ref","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","fn","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","every","i","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","useResolvedPath","_temp2","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState","_future","v7_partialHydration","initialized","errorIndex","findIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","alreadyWarned","getChildren","hookName","ctx","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","__reactRouterVersion","startTransitionImpl","ReactDOM","HashRouter","historyRef","querySelector","getAttribute","setStateImpl","v7_startTransition","newState","isBrowser","ABSOLUTE_URL_REGEX","Link","_ref7","absoluteHref","reloadDocument","preventScrollReset","unstable_viewTransition","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","Home","_jsxs","_jsx","className","About","pdfFile","download","Careers","Contact","ROUTELIST","logo","alt","RouteHandler","getElementById","App"],"sourceRoot":""}